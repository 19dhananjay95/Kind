module.exports = (function() {
    function word_to_u16(w) {
        var u = 0;
        for (var i = 0; i < 16; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u16_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 16; ++i) {
            w = {
                _: (u >>> (16 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u16_to_bits(x) {
        var s = '';
        for (var i = 0; i < 16; ++i) {
            s = (x & 1 ? '1' : '0') + s;
            x = x >>> 1;
        }
        return s;
    };

    function word_to_u32(w) {
        var u = 0;
        for (var i = 0; i < 32; ++i) {
            u = u | (w._ === 'Word.i' ? 1 << i : 0);
            w = w.pred;
        };
        return u;
    };

    function u32_to_word(u) {
        var w = {
            _: 'Word.e'
        };
        for (var i = 0; i < 32; ++i) {
            w = {
                _: (u >>> (32 - i - 1)) & 1 ? 'Word.i' : 'Word.o',
                pred: w
            };
        };
        return w;
    };

    function u32_for(state, from, til, func) {
        for (var i = from; i < til; ++i) {
            state = func(i)(state);
        }
        return state;
    };
    var bitsmap_new = {
        _: 'BitsMap.new'
    };
    var bitsmap_tie = function(val, lft, rgt) {
        return {
            _: 'BitsMap.tip',
            val,
            lft,
            rgt
        };
    }
    var maybe_none = {
        _: 'Maybe.none'
    };
    var maybe_some = function(value) {
        return {
            _: 'Maybe.some',
            value
        };
    }
    var bitsmap_get = function(bits, map) {
        for (var i = bits.length - 1; i >= 0; --i) {
            if (map._ !== 'BitsMap.new') {
                map = bits[i] === '0' ? map.lft : map.rgt;
            }
        }
        return map._ === 'BitsMap.new' ? maybe_none : map.val;
    }
    var bitsmap_set = function(bits, val, map, mode) {
        var res = {
            value: map
        };
        var key = 'value';
        var obj = res;
        for (var i = bits.length - 1; i >= 0; --i) {
            var map = obj[key];
            if (map._ === 'BitsMap.new') {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: maybe_none,
                    lft: bitsmap_new,
                    rgt: bitsmap_new
                };
            } else {
                obj[key] = {
                    _: 'BitsMap.tie',
                    val: map.val,
                    lft: map.lft,
                    rgt: map.rgt
                };
            }
            obj = obj[key];
            key = bits[i] === '0' ? 'lft' : 'rgt';
        }
        var map = obj[key];
        if (map._ === 'BitsMap.new') {
            var x = mode === 'del' ? maybe_none : {
                _: 'Maybe.some',
                value: val
            };
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: bitsmap_new,
                rgt: bitsmap_new
            };
        } else {
            var x = mode === 'set' ? {
                _: 'Maybe.some',
                value: val
            } : mode === 'del' ? maybe_none : map.val;
            obj[key] = {
                _: 'BitsMap.tie',
                val: x,
                lft: map.lft,
                rgt: map.rgt
            };
        }
        return res.value;
    };
    var list_for = list => nil => cons => {
        while (list._ !== 'List.nil') {
            nil = cons(list.head)(nil);
            list = list.tail;
        }
        return nil;
    };
    var list_length = list => {
        var len = 0;
        while (list._ === 'List.cons') {
            len += 1;
            list = list.tail;
        };
        return BigInt(len);
    };
    var nat_to_bits = n => {
        return n === 0n ? '' : n.toString(2);
    };
    var kind_name_to_bits = name => {
        const TABLE = {
            'A': '000000',
            'B': '100000',
            'C': '010000',
            'D': '110000',
            'E': '001000',
            'F': '101000',
            'G': '011000',
            'H': '111000',
            'I': '000100',
            'J': '100100',
            'K': '010100',
            'L': '110100',
            'M': '001100',
            'N': '101100',
            'O': '011100',
            'P': '111100',
            'Q': '000010',
            'R': '100010',
            'S': '010010',
            'T': '110010',
            'U': '001010',
            'V': '101010',
            'W': '011010',
            'X': '111010',
            'Y': '000110',
            'Z': '100110',
            'a': '010110',
            'b': '110110',
            'c': '001110',
            'd': '101110',
            'e': '011110',
            'f': '111110',
            'g': '000001',
            'h': '100001',
            'i': '010001',
            'j': '110001',
            'k': '001001',
            'l': '101001',
            'm': '011001',
            'n': '111001',
            'o': '000101',
            'p': '100101',
            'q': '010101',
            'r': '110101',
            's': '001101',
            't': '101101',
            'u': '011101',
            'v': '111101',
            'w': '000011',
            'x': '100011',
            'y': '010011',
            'z': '110011',
            '0': '001011',
            '1': '101011',
            '2': '011011',
            '3': '111011',
            '4': '000111',
            '5': '100111',
            '6': '010111',
            '7': '110111',
            '8': '001111',
            '9': '101111',
            '.': '011111',
            '_': '111111',
        }
        var a = '';
        for (var i = name.length - 1; i >= 0; --i) {
            a += TABLE[name[i]];
        }
        return a;
    };
    const inst_unit = x => x(null);
    const elim_unit = (x => {
        var $1 = (() => c0 => {
            var self = x;
            switch ("unit") {
                case 'unit':
                    var $0 = c0;
                    return $0;
            };
        })();
        return $1;
    });
    const inst_bool = x => x(true)(false);
    const elim_bool = (x => {
        var $4 = (() => c0 => c1 => {
            var self = x;
            if (self) {
                var $2 = c0;
                return $2;
            } else {
                var $3 = c1;
                return $3;
            };
        })();
        return $4;
    });
    const inst_nat = x => x(0n)(x0 => 1n + x0);
    const elim_nat = (x => {
        var $8 = (() => c0 => c1 => {
            var self = x;
            if (self === 0n) {
                var $5 = c0;
                return $5;
            } else {
                var $6 = (self - 1n);
                var $7 = c1($6);
                return $7;
            };
        })();
        return $8;
    });
    const inst_bits = x => x('')(x0 => x0 + '0')(x0 => x0 + '1');
    const elim_bits = (x => {
        var $14 = (() => c0 => c1 => c2 => {
            var self = x;
            switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                case 'o':
                    var $9 = self.slice(0, -1);
                    var $10 = c1($9);
                    return $10;
                case 'i':
                    var $11 = self.slice(0, -1);
                    var $12 = c2($11);
                    return $12;
                case 'e':
                    var $13 = c0;
                    return $13;
            };
        })();
        return $14;
    });
    const inst_u16 = x => x(x0 => word_to_u16(x0));
    const elim_u16 = (x => {
        var $17 = (() => c0 => {
            var self = x;
            switch ('u16') {
                case 'u16':
                    var $15 = u16_to_word(self);
                    var $16 = c0($15);
                    return $16;
            };
        })();
        return $17;
    });
    const inst_u32 = x => x(x0 => word_to_u32(x0));
    const elim_u32 = (x => {
        var $20 = (() => c0 => {
            var self = x;
            switch ('u32') {
                case 'u32':
                    var $18 = u32_to_word(self);
                    var $19 = c0($18);
                    return $19;
            };
        })();
        return $20;
    });
    const inst_string = x => x('')(x0 => x1 => (String.fromCharCode(x0) + x1));
    const elim_string = (x => {
        var $25 = (() => c0 => c1 => {
            var self = x;
            if (self.length === 0) {
                var $21 = c0;
                return $21;
            } else {
                var $22 = self.charCodeAt(0);
                var $23 = self.slice(1);
                var $24 = c1($22)($23);
                return $24;
            };
        })();
        return $25;
    });
    var run = (p) => {
        if (typeof window === 'undefined') {
            var rl = eval("require('readline')").createInterface({
                input: process.stdin,
                output: process.stdout,
                terminal: false
            });
            var fs = eval("require('fs')");
            var pc = eval("process");
            var ht = eval("require('http')");
            var hs = eval("require('https')");
        } else {
            var rl = {
                question: (x, f) => f(''),
                close: () => {}
            };
            var fs = {
                readFileSync: () => ''
            };
            var pc = {
                exit: () => {},
                argv: []
            };
            var ht = null;
            var hs = null;
        };
        return run_io({
            rl,
            fs,
            pc,
            ht,
            hs
        }, p).then((x) => {
            rl.close();
            return x;
        }).catch((e) => {
            rl.close();
            throw e;
        });
    };
    var set_file = (lib, param) => {
        var path = '';
        for (var i = 0; i < param.length && param[i] !== '='; ++i) {
            path += param[i];
        };
        var data = param.slice(i + 1);
        lib.fs.mkdirSync(path.split('/').slice(0, -1).join('/'), {
            recursive: true
        });
        lib.fs.writeFileSync(path, data);
        return '';
    };
    var del_file = (lib, param) => {
        try {
            lib.fs.unlinkSync(param);
            return '';
        } catch (e) {
            if (e.message.indexOf('EPERM') !== -1) {
                lib.fs.rmdirSync(param);
                return '';
            } else {
                throw e;
            }
        }
    };
    var get_file = (lib, param) => {
        return lib.fs.readFileSync(param, 'utf8');
    }
    var get_dir = (lib, param) => {
        return lib.fs.readdirSync(param).join(';');
    };
    var get_file_mtime = (lib, param) => {
        return String(lib.fs.statSync(param).mtime.getTime());
    };
    var request = (lib, param) => {
        if (typeof fetch === 'undefined') {
            return new Promise((res, err) => {
                (/^https/.test(param) ? lib.hs : lib.ht).get(param, r => {
                    let data = '';
                    r.on('data', chunk => {
                        data += chunk;
                    });
                    r.on('end', () => res(data));
                }).on('error', e => res(''));
            });
        } else {
            return fetch(param).then(res => res.text()).catch(e => '');
        }
    }
    var file_error = e => {
        if (e.message.indexOf('NOENT') !== -1) {
            return '';
        } else {
            throw e;
        }
    };
    var io_action = {
        print: async (lib, param) => {
            console.log(param);
            return '';
        },
        put_string: async (lib, param) => {
            process.stdout.write(param);
            return '';
        },
        get_file: async (lib, param) => {
            try {
                return get_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        set_file: async (lib, param) => {
            try {
                return set_file(lib, param)
            } catch (e) {
                return file_error(e);
            }
        },
        del_file: async (lib, param) => {
            try {
                return del_file(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_dir: async (lib, param) => {
            try {
                return get_dir(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_file_mtime: async (lib, param) => {
            try {
                return get_file_mtime(lib, param);
            } catch (e) {
                return file_error(e);
            }
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        exit: async (lib, param) => {
            lib.pc.exit();
            return '';
        },
        request: async (lib, param) => {
            return request(lib, param);
        },
        get_time: async (lib, param) => {
            return String(Date.now());
        },
        get_line: async (lib, param) => {
            return await new Promise((res, err) => {
                lib.rl.question(param, (line) => res(line));
            });
        },
        get_args: async (lib, param) => {
            return lib.pc.argv[2] || '';
        },
    };
    var run_io = async (lib, io, depth = 0) => {
        switch (io._) {
            case 'IO.end':
                return Promise.resolve(io.value);
            case 'IO.ask':
                var action = io_action[io.query];
                var answer = await action(lib, io.param);
                return await run_io(lib, io.then(answer), depth + 1);
        }
    };

    function IO$(_A$1) {
        var $26 = null;
        return $26;
    };
    const IO = x0 => IO$(x0);

    function IO$ask$(_query$2, _param$3, _then$4) {
        var $27 = ({
            _: 'IO.ask',
            'query': _query$2,
            'param': _param$3,
            'then': _then$4
        });
        return $27;
    };
    const IO$ask = x0 => x1 => x2 => IO$ask$(x0, x1, x2);

    function IO$bind$(_a$3, _f$4) {
        var self = _a$3;
        switch (self._) {
            case 'IO.end':
                var $29 = self.value;
                var $30 = _f$4($29);
                var $28 = $30;
                break;
            case 'IO.ask':
                var $31 = self.query;
                var $32 = self.param;
                var $33 = self.then;
                var $34 = IO$ask$($31, $32, (_x$8 => {
                    var $35 = IO$bind$($33(_x$8), _f$4);
                    return $35;
                }));
                var $28 = $34;
                break;
        };
        return $28;
    };
    const IO$bind = x0 => x1 => IO$bind$(x0, x1);

    function IO$end$(_value$2) {
        var $36 = ({
            _: 'IO.end',
            'value': _value$2
        });
        return $36;
    };
    const IO$end = x0 => IO$end$(x0);

    function IO$monad$(_new$2) {
        var $37 = _new$2(IO$bind)(IO$end);
        return $37;
    };
    const IO$monad = x0 => IO$monad$(x0);

    function Maybe$(_A$1) {
        var $38 = null;
        return $38;
    };
    const Maybe = x0 => Maybe$(x0);

    function BitsMap$(_A$1) {
        var $39 = null;
        return $39;
    };
    const BitsMap = x0 => BitsMap$(x0);
    const Maybe$none = ({
        _: 'Maybe.none'
    });
    const BitsMap$get = a0 => a1 => (bitsmap_get(a0, a1));
    const Bits$e = '';
    const Bits$o = a0 => (a0 + '0');
    const Bits$i = a0 => (a0 + '1');
    const Bool$true = true;
    const Bool$false = false;

    function Cmp$as_ltn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $41 = Bool$true;
                var $40 = $41;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $42 = Bool$false;
                var $40 = $42;
                break;
        };
        return $40;
    };
    const Cmp$as_ltn = x0 => Cmp$as_ltn$(x0);
    const Cmp$ltn = ({
        _: 'Cmp.ltn'
    });
    const Cmp$gtn = ({
        _: 'Cmp.gtn'
    });

    function Word$cmp$go$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $44 = self.pred;
                var $45 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $47 = self.pred;
                            var $48 = (_a$pred$10 => {
                                var $49 = Word$cmp$go$(_a$pred$10, $47, _c$4);
                                return $49;
                            });
                            var $46 = $48;
                            break;
                        case 'Word.i':
                            var $50 = self.pred;
                            var $51 = (_a$pred$10 => {
                                var $52 = Word$cmp$go$(_a$pred$10, $50, Cmp$ltn);
                                return $52;
                            });
                            var $46 = $51;
                            break;
                        case 'Word.e':
                            var $53 = (_a$pred$8 => {
                                var $54 = _c$4;
                                return $54;
                            });
                            var $46 = $53;
                            break;
                    };
                    var $46 = $46($44);
                    return $46;
                });
                var $43 = $45;
                break;
            case 'Word.i':
                var $55 = self.pred;
                var $56 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $58 = self.pred;
                            var $59 = (_a$pred$10 => {
                                var $60 = Word$cmp$go$(_a$pred$10, $58, Cmp$gtn);
                                return $60;
                            });
                            var $57 = $59;
                            break;
                        case 'Word.i':
                            var $61 = self.pred;
                            var $62 = (_a$pred$10 => {
                                var $63 = Word$cmp$go$(_a$pred$10, $61, _c$4);
                                return $63;
                            });
                            var $57 = $62;
                            break;
                        case 'Word.e':
                            var $64 = (_a$pred$8 => {
                                var $65 = _c$4;
                                return $65;
                            });
                            var $57 = $64;
                            break;
                    };
                    var $57 = $57($55);
                    return $57;
                });
                var $43 = $56;
                break;
            case 'Word.e':
                var $66 = (_b$5 => {
                    var $67 = _c$4;
                    return $67;
                });
                var $43 = $66;
                break;
        };
        var $43 = $43(_b$3);
        return $43;
    };
    const Word$cmp$go = x0 => x1 => x2 => Word$cmp$go$(x0, x1, x2);
    const Cmp$eql = ({
        _: 'Cmp.eql'
    });

    function Word$cmp$(_a$2, _b$3) {
        var $68 = Word$cmp$go$(_a$2, _b$3, Cmp$eql);
        return $68;
    };
    const Word$cmp = x0 => x1 => Word$cmp$(x0, x1);

    function Word$ltn$(_a$2, _b$3) {
        var $69 = Cmp$as_ltn$(Word$cmp$(_a$2, _b$3));
        return $69;
    };
    const Word$ltn = x0 => x1 => Word$ltn$(x0, x1);

    function Nat$succ$(_pred$1) {
        var $70 = 1n + _pred$1;
        return $70;
    };
    const Nat$succ = x0 => Nat$succ$(x0);
    const Nat$zero = 0n;
    const U16$ltn = a0 => a1 => (a0 < a1);

    function U16$new$(_value$1) {
        var $71 = word_to_u16(_value$1);
        return $71;
    };
    const U16$new = x0 => U16$new$(x0);

    function Nat$apply$(_n$2, _f$3, _x$4) {
        var Nat$apply$ = (_n$2, _f$3, _x$4) => ({
            ctr: 'TCO',
            arg: [_n$2, _f$3, _x$4]
        });
        var Nat$apply = _n$2 => _f$3 => _x$4 => Nat$apply$(_n$2, _f$3, _x$4);
        var arg = [_n$2, _f$3, _x$4];
        while (true) {
            let [_n$2, _f$3, _x$4] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $72 = _x$4;
                    return $72;
                } else {
                    var $73 = (self - 1n);
                    var $74 = Nat$apply$($73, _f$3, _f$3(_x$4));
                    return $74;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$apply = x0 => x1 => x2 => Nat$apply$(x0, x1, x2);

    function Word$(_size$1) {
        var $75 = null;
        return $75;
    };
    const Word = x0 => Word$(x0);
    const Word$e = ({
        _: 'Word.e'
    });

    function Word$i$(_pred$2) {
        var $76 = ({
            _: 'Word.i',
            'pred': _pred$2
        });
        return $76;
    };
    const Word$i = x0 => Word$i$(x0);

    function Word$o$(_pred$2) {
        var $77 = ({
            _: 'Word.o',
            'pred': _pred$2
        });
        return $77;
    };
    const Word$o = x0 => Word$o$(x0);

    function Word$inc$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $79 = self.pred;
                var $80 = Word$i$($79);
                var $78 = $80;
                break;
            case 'Word.i':
                var $81 = self.pred;
                var $82 = Word$o$(Word$inc$($81));
                var $78 = $82;
                break;
            case 'Word.e':
                var $83 = Word$e;
                var $78 = $83;
                break;
        };
        return $78;
    };
    const Word$inc = x0 => Word$inc$(x0);

    function Word$zero$(_size$1) {
        var self = _size$1;
        if (self === 0n) {
            var $85 = Word$e;
            var $84 = $85;
        } else {
            var $86 = (self - 1n);
            var $87 = Word$o$(Word$zero$($86));
            var $84 = $87;
        };
        return $84;
    };
    const Word$zero = x0 => Word$zero$(x0);

    function Nat$to_word$(_size$1, _n$2) {
        var $88 = Nat$apply$(_n$2, Word$inc, Word$zero$(_size$1));
        return $88;
    };
    const Nat$to_word = x0 => x1 => Nat$to_word$(x0, x1);
    const Nat$to_u16 = a0 => (Number(a0) & 0xFFFF);
    const Kind$Name$to_bits = a0 => (kind_name_to_bits(a0));

    function Kind$Map$get$(_name$2, _map$3) {
        var $89 = (bitsmap_get((kind_name_to_bits(_name$2)), _map$3));
        return $89;
    };
    const Kind$Map$get = x0 => x1 => Kind$Map$get$(x0, x1);

    function Maybe$default$(_m$2, _a$3) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $91 = self.value;
                var $92 = $91;
                var $90 = $92;
                break;
            case 'Maybe.none':
                var $93 = _a$3;
                var $90 = $93;
                break;
        };
        return $90;
    };
    const Maybe$default = x0 => x1 => Maybe$default$(x0, x1);

    function Parser$State$new$(_err$1, _nam$2, _ini$3, _idx$4, _str$5) {
        var $94 = ({
            _: 'Parser.State.new',
            'err': _err$1,
            'nam': _nam$2,
            'ini': _ini$3,
            'idx': _idx$4,
            'str': _str$5
        });
        return $94;
    };
    const Parser$State$new = x0 => x1 => x2 => x3 => x4 => Parser$State$new$(x0, x1, x2, x3, x4);

    function Maybe$some$(_value$2) {
        var $95 = ({
            _: 'Maybe.some',
            'value': _value$2
        });
        return $95;
    };
    const Maybe$some = x0 => Maybe$some$(x0);

    function Parser$run$(_parser$2, _code$3) {
        var self = _parser$2(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$3));
        switch (self._) {
            case 'Parser.Reply.value':
                var $97 = self.val;
                var $98 = Maybe$some$($97);
                var $96 = $98;
                break;
            case 'Parser.Reply.error':
                var $99 = Maybe$none;
                var $96 = $99;
                break;
        };
        return $96;
    };
    const Parser$run = x0 => x1 => Parser$run$(x0, x1);

    function Parser$Reply$(_V$1) {
        var $100 = null;
        return $100;
    };
    const Parser$Reply = x0 => Parser$Reply$(x0);

    function List$(_A$1) {
        var $101 = null;
        return $101;
    };
    const List = x0 => List$(x0);

    function Parser$Reply$error$(_err$2) {
        var $102 = ({
            _: 'Parser.Reply.error',
            'err': _err$2
        });
        return $102;
    };
    const Parser$Reply$error = x0 => Parser$Reply$error$(x0);
    const Nat$gtn = a0 => a1 => (a0 > a1);

    function Parser$Error$combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Parser.Error.new':
                var $104 = self.idx;
                var self = _b$2;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $106 = self.idx;
                        var self = ($104 > $106);
                        if (self) {
                            var $108 = _a$1;
                            var $107 = $108;
                        } else {
                            var $109 = _b$2;
                            var $107 = $109;
                        };
                        var $105 = $107;
                        break;
                };
                var $103 = $105;
                break;
        };
        return $103;
    };
    const Parser$Error$combine = x0 => x1 => Parser$Error$combine$(x0, x1);

    function Parser$Error$maybe_combine$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Maybe.some':
                var $111 = self.value;
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $113 = self.value;
                        var $114 = Maybe$some$(Parser$Error$combine$($111, $113));
                        var $112 = $114;
                        break;
                    case 'Maybe.none':
                        var $115 = _a$1;
                        var $112 = $115;
                        break;
                };
                var $110 = $112;
                break;
            case 'Maybe.none':
                var self = _b$2;
                switch (self._) {
                    case 'Maybe.none':
                        var $117 = Maybe$none;
                        var $116 = $117;
                        break;
                    case 'Maybe.some':
                        var $118 = _b$2;
                        var $116 = $118;
                        break;
                };
                var $110 = $116;
                break;
        };
        return $110;
    };
    const Parser$Error$maybe_combine = x0 => x1 => Parser$Error$maybe_combine$(x0, x1);

    function Parser$Reply$value$(_pst$2, _val$3) {
        var $119 = ({
            _: 'Parser.Reply.value',
            'pst': _pst$2,
            'val': _val$3
        });
        return $119;
    };
    const Parser$Reply$value = x0 => x1 => Parser$Reply$value$(x0, x1);
    const List$nil = ({
        _: 'List.nil'
    });

    function List$cons$(_head$2, _tail$3) {
        var $120 = ({
            _: 'List.cons',
            'head': _head$2,
            'tail': _tail$3
        });
        return $120;
    };
    const List$cons = x0 => x1 => List$cons$(x0, x1);

    function Parser$many$go$(_parse$2, _values$3, _pst$4) {
        var Parser$many$go$ = (_parse$2, _values$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_parse$2, _values$3, _pst$4]
        });
        var Parser$many$go = _parse$2 => _values$3 => _pst$4 => Parser$many$go$(_parse$2, _values$3, _pst$4);
        var arg = [_parse$2, _values$3, _pst$4];
        while (true) {
            let [_parse$2, _values$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var self = _parse$2(_pst$4);
                        switch (self._) {
                            case 'Parser.Reply.value':
                                var $122 = self.pst;
                                var $123 = self.val;
                                var $124 = Parser$many$go$(_parse$2, (_xs$12 => {
                                    var $125 = _values$3(List$cons$($123, _xs$12));
                                    return $125;
                                }), $122);
                                var $121 = $124;
                                break;
                            case 'Parser.Reply.error':
                                var $126 = Parser$Reply$value$(_pst$4, _values$3(List$nil));
                                var $121 = $126;
                                break;
                        };
                        return $121;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$many$go = x0 => x1 => x2 => Parser$many$go$(x0, x1, x2);

    function Parser$many$(_parser$2) {
        var $127 = Parser$many$go(_parser$2)((_x$3 => {
            var $128 = _x$3;
            return $128;
        }));
        return $127;
    };
    const Parser$many = x0 => Parser$many$(x0);

    function Parser$many1$(_parser$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $130 = self.err;
                var _reply$9 = _parser$2(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $132 = self.err;
                        var self = $130;
                        switch (self._) {
                            case 'Maybe.some':
                                var $134 = self.value;
                                var $135 = Parser$Reply$error$(Parser$Error$combine$($134, $132));
                                var $133 = $135;
                                break;
                            case 'Maybe.none':
                                var $136 = Parser$Reply$error$($132);
                                var $133 = $136;
                                break;
                        };
                        var $131 = $133;
                        break;
                    case 'Parser.Reply.value':
                        var $137 = self.pst;
                        var $138 = self.val;
                        var self = $137;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $140 = self.err;
                                var $141 = self.nam;
                                var $142 = self.ini;
                                var $143 = self.idx;
                                var $144 = self.str;
                                var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($130, $140), $141, $142, $143, $144);
                                var self = _reply$pst$17;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $146 = self.err;
                                        var _reply$23 = Parser$many$(_parser$2)(_reply$pst$17);
                                        var self = _reply$23;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $148 = self.err;
                                                var self = $146;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $150 = self.value;
                                                        var $151 = Parser$Reply$error$(Parser$Error$combine$($150, $148));
                                                        var $149 = $151;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $152 = Parser$Reply$error$($148);
                                                        var $149 = $152;
                                                        break;
                                                };
                                                var $147 = $149;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $153 = self.pst;
                                                var $154 = self.val;
                                                var self = $153;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $156 = self.err;
                                                        var $157 = self.nam;
                                                        var $158 = self.ini;
                                                        var $159 = self.idx;
                                                        var $160 = self.str;
                                                        var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($146, $156), $157, $158, $159, $160);
                                                        var $161 = Parser$Reply$value$(_reply$pst$31, List$cons$($138, $154));
                                                        var $155 = $161;
                                                        break;
                                                };
                                                var $147 = $155;
                                                break;
                                        };
                                        var $145 = $147;
                                        break;
                                };
                                var $139 = $145;
                                break;
                        };
                        var $131 = $139;
                        break;
                };
                var $129 = $131;
                break;
        };
        return $129;
    };
    const Parser$many1 = x0 => x1 => Parser$many1$(x0, x1);

    function Parser$Error$new$(_nam$1, _ini$2, _idx$3, _msg$4) {
        var $162 = ({
            _: 'Parser.Error.new',
            'nam': _nam$1,
            'ini': _ini$2,
            'idx': _idx$3,
            'msg': _msg$4
        });
        return $162;
    };
    const Parser$Error$new = x0 => x1 => x2 => x3 => Parser$Error$new$(x0, x1, x2, x3);

    function Parser$Reply$fail$(_nam$2, _ini$3, _idx$4, _msg$5) {
        var $163 = Parser$Reply$error$(Parser$Error$new$(_nam$2, _ini$3, _idx$4, _msg$5));
        return $163;
    };
    const Parser$Reply$fail = x0 => x1 => x2 => x3 => Parser$Reply$fail$(x0, x1, x2, x3);

    function Cmp$as_eql$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.gtn':
                var $165 = Bool$false;
                var $164 = $165;
                break;
            case 'Cmp.eql':
                var $166 = Bool$true;
                var $164 = $166;
                break;
        };
        return $164;
    };
    const Cmp$as_eql = x0 => Cmp$as_eql$(x0);

    function Word$eql$(_a$2, _b$3) {
        var $167 = Cmp$as_eql$(Word$cmp$(_a$2, _b$3));
        return $167;
    };
    const Word$eql = x0 => x1 => Word$eql$(x0, x1);
    const U16$eql = a0 => a1 => (a0 === a1);

    function Parser$digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $169 = self.err;
                var $170 = self.nam;
                var $171 = self.ini;
                var $172 = self.idx;
                var $173 = self.str;
                var self = $173;
                if (self.length === 0) {
                    var $175 = Parser$Reply$fail$($170, $171, $172, "Not a digit.");
                    var $174 = $175;
                } else {
                    var $176 = self.charCodeAt(0);
                    var $177 = self.slice(1);
                    var _pst$9 = Parser$State$new$($169, $170, $171, Nat$succ$($172), $177);
                    var self = ($176 === 48);
                    if (self) {
                        var $179 = Parser$Reply$value$(_pst$9, 0n);
                        var $178 = $179;
                    } else {
                        var self = ($176 === 49);
                        if (self) {
                            var $181 = Parser$Reply$value$(_pst$9, 1n);
                            var $180 = $181;
                        } else {
                            var self = ($176 === 50);
                            if (self) {
                                var $183 = Parser$Reply$value$(_pst$9, 2n);
                                var $182 = $183;
                            } else {
                                var self = ($176 === 51);
                                if (self) {
                                    var $185 = Parser$Reply$value$(_pst$9, 3n);
                                    var $184 = $185;
                                } else {
                                    var self = ($176 === 52);
                                    if (self) {
                                        var $187 = Parser$Reply$value$(_pst$9, 4n);
                                        var $186 = $187;
                                    } else {
                                        var self = ($176 === 53);
                                        if (self) {
                                            var $189 = Parser$Reply$value$(_pst$9, 5n);
                                            var $188 = $189;
                                        } else {
                                            var self = ($176 === 54);
                                            if (self) {
                                                var $191 = Parser$Reply$value$(_pst$9, 6n);
                                                var $190 = $191;
                                            } else {
                                                var self = ($176 === 55);
                                                if (self) {
                                                    var $193 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $192 = $193;
                                                } else {
                                                    var self = ($176 === 56);
                                                    if (self) {
                                                        var $195 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $194 = $195;
                                                    } else {
                                                        var self = ($176 === 57);
                                                        if (self) {
                                                            var $197 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $196 = $197;
                                                        } else {
                                                            var $198 = Parser$Reply$fail$($170, $171, $172, "Not a digit.");
                                                            var $196 = $198;
                                                        };
                                                        var $194 = $196;
                                                    };
                                                    var $192 = $194;
                                                };
                                                var $190 = $192;
                                            };
                                            var $188 = $190;
                                        };
                                        var $186 = $188;
                                    };
                                    var $184 = $186;
                                };
                                var $182 = $184;
                            };
                            var $180 = $182;
                        };
                        var $178 = $180;
                    };
                    var $174 = $178;
                };
                var $168 = $174;
                break;
        };
        return $168;
    };
    const Parser$digit = x0 => Parser$digit$(x0);
    const Nat$add = a0 => a1 => (a0 + a1);
    const Nat$mul = a0 => a1 => (a0 * a1);

    function Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4) {
        var Nat$from_base$go$ = (_b$1, _ds$2, _p$3, _res$4) => ({
            ctr: 'TCO',
            arg: [_b$1, _ds$2, _p$3, _res$4]
        });
        var Nat$from_base$go = _b$1 => _ds$2 => _p$3 => _res$4 => Nat$from_base$go$(_b$1, _ds$2, _p$3, _res$4);
        var arg = [_b$1, _ds$2, _p$3, _res$4];
        while (true) {
            let [_b$1, _ds$2, _p$3, _res$4] = arg;
            var R = (() => {
                var self = _ds$2;
                switch (self._) {
                    case 'List.cons':
                        var $199 = self.head;
                        var $200 = self.tail;
                        var $201 = Nat$from_base$go$(_b$1, $200, (_b$1 * _p$3), (($199 * _p$3) + _res$4));
                        return $201;
                    case 'List.nil':
                        var $202 = _res$4;
                        return $202;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$from_base$go = x0 => x1 => x2 => x3 => Nat$from_base$go$(x0, x1, x2, x3);

    function List$reverse$go$(_xs$2, _res$3) {
        var List$reverse$go$ = (_xs$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _res$3]
        });
        var List$reverse$go = _xs$2 => _res$3 => List$reverse$go$(_xs$2, _res$3);
        var arg = [_xs$2, _res$3];
        while (true) {
            let [_xs$2, _res$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $203 = self.head;
                        var $204 = self.tail;
                        var $205 = List$reverse$go$($204, List$cons$($203, _res$3));
                        return $205;
                    case 'List.nil':
                        var $206 = _res$3;
                        return $206;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$reverse$go = x0 => x1 => List$reverse$go$(x0, x1);

    function List$reverse$(_xs$2) {
        var $207 = List$reverse$go$(_xs$2, List$nil);
        return $207;
    };
    const List$reverse = x0 => List$reverse$(x0);

    function Nat$from_base$(_base$1, _ds$2) {
        var $208 = Nat$from_base$go$(_base$1, List$reverse$(_ds$2), 1n, 0n);
        return $208;
    };
    const Nat$from_base = x0 => x1 => Nat$from_base$(x0, x1);

    function Parser$nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $210 = self.err;
                var _reply$7 = Parser$many1$(Parser$digit, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $212 = self.err;
                        var self = $210;
                        switch (self._) {
                            case 'Maybe.some':
                                var $214 = self.value;
                                var $215 = Parser$Reply$error$(Parser$Error$combine$($214, $212));
                                var $213 = $215;
                                break;
                            case 'Maybe.none':
                                var $216 = Parser$Reply$error$($212);
                                var $213 = $216;
                                break;
                        };
                        var $211 = $213;
                        break;
                    case 'Parser.Reply.value':
                        var $217 = self.pst;
                        var $218 = self.val;
                        var self = $217;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $220 = self.err;
                                var $221 = self.nam;
                                var $222 = self.ini;
                                var $223 = self.idx;
                                var $224 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($210, $220), $221, $222, $223, $224);
                                var $225 = Parser$Reply$value$(_reply$pst$15, Nat$from_base$(10n, $218));
                                var $219 = $225;
                                break;
                        };
                        var $211 = $219;
                        break;
                };
                var $209 = $211;
                break;
        };
        return $209;
    };
    const Parser$nat = x0 => Parser$nat$(x0);
    const Nat$read = a0 => (BigInt(a0));
    const IO$get_time = IO$ask$("get_time", "", (_time$1 => {
        var $226 = IO$end$((BigInt(_time$1)));
        return $226;
    }));

    function Kind$Synth$load$cached$is_loop$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $228 = self.value;
                var self = $228;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $230 = self.stat;
                        var self = $230;
                        switch (self._) {
                            case 'Kind.Status.done':
                                var $232 = self.cached;
                                var $233 = $232;
                                var $231 = $233;
                                break;
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $234 = Bool$false;
                                var $231 = $234;
                                break;
                        };
                        var $229 = $231;
                        break;
                };
                var $227 = $229;
                break;
            case 'Maybe.none':
                var $235 = Bool$false;
                var $227 = $235;
                break;
        };
        return $227;
    };
    const Kind$Synth$load$cached$is_loop = x0 => x1 => Kind$Synth$load$cached$is_loop$(x0, x1);

    function IO$get_file$(_name$1) {
        var $236 = IO$ask$("get_file", _name$1, (_file$2 => {
            var $237 = IO$end$(_file$2);
            return $237;
        }));
        return $236;
    };
    const IO$get_file = x0 => IO$get_file$(x0);
    const String$nil = '';

    function String$cons$(_head$1, _tail$2) {
        var $238 = (String.fromCharCode(_head$1) + _tail$2);
        return $238;
    };
    const String$cons = x0 => x1 => String$cons$(x0, x1);

    function String$map$(_f$1, _as$2) {
        var self = _as$2;
        if (self.length === 0) {
            var $240 = String$nil;
            var $239 = $240;
        } else {
            var $241 = self.charCodeAt(0);
            var $242 = self.slice(1);
            var $243 = String$cons$(_f$1($241), String$map$(_f$1, $242));
            var $239 = $243;
        };
        return $239;
    };
    const String$map = x0 => x1 => String$map$(x0, x1);
    const Bool$and = a0 => a1 => (a0 && a1);

    function Cmp$as_gte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
                var $245 = Bool$false;
                var $244 = $245;
                break;
            case 'Cmp.eql':
            case 'Cmp.gtn':
                var $246 = Bool$true;
                var $244 = $246;
                break;
        };
        return $244;
    };
    const Cmp$as_gte = x0 => Cmp$as_gte$(x0);

    function Word$gte$(_a$2, _b$3) {
        var $247 = Cmp$as_gte$(Word$cmp$(_a$2, _b$3));
        return $247;
    };
    const Word$gte = x0 => x1 => Word$gte$(x0, x1);
    const U16$gte = a0 => a1 => (a0 >= a1);

    function Cmp$as_lte$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $249 = Bool$true;
                var $248 = $249;
                break;
            case 'Cmp.gtn':
                var $250 = Bool$false;
                var $248 = $250;
                break;
        };
        return $248;
    };
    const Cmp$as_lte = x0 => Cmp$as_lte$(x0);

    function Word$lte$(_a$2, _b$3) {
        var $251 = Cmp$as_lte$(Word$cmp$(_a$2, _b$3));
        return $251;
    };
    const Word$lte = x0 => x1 => Word$lte$(x0, x1);
    const U16$lte = a0 => a1 => (a0 <= a1);

    function Word$adder$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $253 = self.pred;
                var $254 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $256 = self.pred;
                            var $257 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $259 = Word$i$(Word$adder$(_a$pred$10, $256, Bool$false));
                                    var $258 = $259;
                                } else {
                                    var $260 = Word$o$(Word$adder$(_a$pred$10, $256, Bool$false));
                                    var $258 = $260;
                                };
                                return $258;
                            });
                            var $255 = $257;
                            break;
                        case 'Word.i':
                            var $261 = self.pred;
                            var $262 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $264 = Word$o$(Word$adder$(_a$pred$10, $261, Bool$true));
                                    var $263 = $264;
                                } else {
                                    var $265 = Word$i$(Word$adder$(_a$pred$10, $261, Bool$false));
                                    var $263 = $265;
                                };
                                return $263;
                            });
                            var $255 = $262;
                            break;
                        case 'Word.e':
                            var $266 = (_a$pred$8 => {
                                var $267 = Word$e;
                                return $267;
                            });
                            var $255 = $266;
                            break;
                    };
                    var $255 = $255($253);
                    return $255;
                });
                var $252 = $254;
                break;
            case 'Word.i':
                var $268 = self.pred;
                var $269 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $271 = self.pred;
                            var $272 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $274 = Word$o$(Word$adder$(_a$pred$10, $271, Bool$true));
                                    var $273 = $274;
                                } else {
                                    var $275 = Word$i$(Word$adder$(_a$pred$10, $271, Bool$false));
                                    var $273 = $275;
                                };
                                return $273;
                            });
                            var $270 = $272;
                            break;
                        case 'Word.i':
                            var $276 = self.pred;
                            var $277 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $279 = Word$i$(Word$adder$(_a$pred$10, $276, Bool$true));
                                    var $278 = $279;
                                } else {
                                    var $280 = Word$o$(Word$adder$(_a$pred$10, $276, Bool$true));
                                    var $278 = $280;
                                };
                                return $278;
                            });
                            var $270 = $277;
                            break;
                        case 'Word.e':
                            var $281 = (_a$pred$8 => {
                                var $282 = Word$e;
                                return $282;
                            });
                            var $270 = $281;
                            break;
                    };
                    var $270 = $270($268);
                    return $270;
                });
                var $252 = $269;
                break;
            case 'Word.e':
                var $283 = (_b$5 => {
                    var $284 = Word$e;
                    return $284;
                });
                var $252 = $283;
                break;
        };
        var $252 = $252(_b$3);
        return $252;
    };
    const Word$adder = x0 => x1 => x2 => Word$adder$(x0, x1, x2);

    function Word$add$(_a$2, _b$3) {
        var $285 = Word$adder$(_a$2, _b$3, Bool$false);
        return $285;
    };
    const Word$add = x0 => x1 => Word$add$(x0, x1);
    const U16$add = a0 => a1 => ((a0 + a1) & 0xFFFF);

    function Char$to_lower$(_char$1) {
        var self = ((_char$1 >= 65) && (_char$1 <= 90));
        if (self) {
            var $287 = ((_char$1 + 32) & 0xFFFF);
            var $286 = $287;
        } else {
            var $288 = _char$1;
            var $286 = $288;
        };
        return $286;
    };
    const Char$to_lower = x0 => Char$to_lower$(x0);

    function String$to_lower$(_str$1) {
        var $289 = String$map$(Char$to_lower, _str$1);
        return $289;
    };
    const String$to_lower = x0 => String$to_lower$(x0);
    const String$concat = a0 => a1 => (a0 + a1);
    const Bool$not = a0 => (!a0);

    function String$is_empty$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $291 = Bool$true;
            var $290 = $291;
        } else {
            var $292 = self.charCodeAt(0);
            var $293 = self.slice(1);
            var $294 = Bool$false;
            var $290 = $294;
        };
        return $290;
    };
    const String$is_empty = x0 => String$is_empty$(x0);

    function IO$get_file_mtime$(_name$1) {
        var $295 = IO$ask$("get_file_mtime", _name$1, (_file$2 => {
            var $296 = IO$end$(_file$2);
            return $296;
        }));
        return $295;
    };
    const IO$get_file_mtime = x0 => IO$get_file_mtime$(x0);
    const String$eql = a0 => a1 => (a0 === a1);

    function Pair$new$(_fst$3, _snd$4) {
        var $297 = ({
            _: 'Pair.new',
            'fst': _fst$3,
            'snd': _snd$4
        });
        return $297;
    };
    const Pair$new = x0 => x1 => Pair$new$(x0, x1);

    function Maybe$bind$(_m$3, _f$4) {
        var self = _m$3;
        switch (self._) {
            case 'Maybe.some':
                var $299 = self.value;
                var $300 = _f$4($299);
                var $298 = $300;
                break;
            case 'Maybe.none':
                var $301 = Maybe$none;
                var $298 = $301;
                break;
        };
        return $298;
    };
    const Maybe$bind = x0 => x1 => Maybe$bind$(x0, x1);

    function Maybe$monad$(_new$2) {
        var $302 = _new$2(Maybe$bind)(Maybe$some);
        return $302;
    };
    const Maybe$monad = x0 => Maybe$monad$(x0);

    function Pair$(_A$1, _B$2) {
        var $303 = null;
        return $303;
    };
    const Pair = x0 => x1 => Pair$(x0, x1);
    const Unit$new = null;
    const Bool$or = a0 => a1 => (a0 || a1);

    function Kind$Core$read$spaces$(_code$1) {
        var Kind$Core$read$spaces$ = (_code$1) => ({
            ctr: 'TCO',
            arg: [_code$1]
        });
        var Kind$Core$read$spaces = _code$1 => Kind$Core$read$spaces$(_code$1);
        var arg = [_code$1];
        while (true) {
            let [_code$1] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $304 = Pair$new$(_code$1, Unit$new);
                    return $304;
                } else {
                    var $305 = self.charCodeAt(0);
                    var $306 = self.slice(1);
                    var _is_space$4 = (($305 === 32) || (($305 === 10) || (($305 === 13) || (($305 === 9) || (($305 === 11) || (($305 === 12) || Bool$false))))));
                    var self = _is_space$4;
                    if (self) {
                        var $308 = Kind$Core$read$spaces$($306);
                        var $307 = $308;
                    } else {
                        var $309 = Pair$new$(_code$1, Unit$new);
                        var $307 = $309;
                    };
                    return $307;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$spaces = x0 => Kind$Core$read$spaces$(x0);

    function Kind$Term$ref$(_name$1) {
        var $310 = ({
            _: 'Kind.Term.ref',
            'name': _name$1
        });
        return $310;
    };
    const Kind$Term$ref = x0 => Kind$Term$ref$(x0);

    function Char$eql$(_a$1, _b$2) {
        var $311 = (_a$1 === _b$2);
        return $311;
    };
    const Char$eql = x0 => x1 => Char$eql$(x0, x1);
    const Kind$Term$typ = ({
        _: 'Kind.Term.typ'
    });

    function Kind$Core$read$is_name$(_chr$1) {
        var $312 = (((_chr$1 >= 46) && (_chr$1 <= 47)) || (((_chr$1 >= 48) && (_chr$1 < 58)) || (((_chr$1 >= 65) && (_chr$1 < 91)) || (((_chr$1 >= 95) && (_chr$1 < 96)) || (((_chr$1 >= 97) && (_chr$1 < 123)) || Bool$false)))));
        return $312;
    };
    const Kind$Core$read$is_name = x0 => Kind$Core$read$is_name$(x0);

    function Kind$Core$read$name$(_code$1) {
        var self = _code$1;
        if (self.length === 0) {
            var $314 = Pair$new$(_code$1, "");
            var $313 = $314;
        } else {
            var $315 = self.charCodeAt(0);
            var $316 = self.slice(1);
            var self = Kind$Core$read$is_name$($315);
            if (self) {
                var self = Kind$Core$read$name$($316);
                switch (self._) {
                    case 'Pair.new':
                        var $319 = self.fst;
                        var $320 = self.snd;
                        var $321 = Pair$new$($319, String$cons$($315, $320));
                        var $318 = $321;
                        break;
                };
                var $317 = $318;
            } else {
                var $322 = Pair$new$(_code$1, "");
                var $317 = $322;
            };
            var $313 = $317;
        };
        return $313;
    };
    const Kind$Core$read$name = x0 => Kind$Core$read$name$(x0);

    function Kind$Core$read$char$(_code$1, _chr$2) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $324 = self.fst;
                var self = $324;
                if (self.length === 0) {
                    var $326 = Pair$new$("", Unit$new);
                    var $325 = $326;
                } else {
                    var $327 = self.charCodeAt(0);
                    var $328 = self.slice(1);
                    var self = ($327 === _chr$2);
                    if (self) {
                        var $330 = Pair$new$($328, Unit$new);
                        var $329 = $330;
                    } else {
                        var $331 = Pair$new$("", Unit$new);
                        var $329 = $331;
                    };
                    var $325 = $329;
                };
                var $323 = $325;
                break;
        };
        return $323;
    };
    const Kind$Core$read$char = x0 => x1 => Kind$Core$read$char$(x0, x1);

    function Kind$Term$all$(_eras$1, _self$2, _name$3, _xtyp$4, _body$5) {
        var $332 = ({
            _: 'Kind.Term.all',
            'eras': _eras$1,
            'self': _self$2,
            'name': _name$3,
            'xtyp': _xtyp$4,
            'body': _body$5
        });
        return $332;
    };
    const Kind$Term$all = x0 => x1 => x2 => x3 => x4 => Kind$Term$all$(x0, x1, x2, x3, x4);

    function Kind$Term$lam$(_name$1, _body$2) {
        var $333 = ({
            _: 'Kind.Term.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $333;
    };
    const Kind$Term$lam = x0 => x1 => Kind$Term$lam$(x0, x1);

    function Kind$Term$app$(_func$1, _argm$2) {
        var $334 = ({
            _: 'Kind.Term.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $334;
    };
    const Kind$Term$app = x0 => x1 => Kind$Term$app$(x0, x1);

    function Kind$Term$let$(_name$1, _expr$2, _body$3) {
        var $335 = ({
            _: 'Kind.Term.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $335;
    };
    const Kind$Term$let = x0 => x1 => x2 => Kind$Term$let$(x0, x1, x2);

    function Kind$Term$def$(_name$1, _expr$2, _body$3) {
        var $336 = ({
            _: 'Kind.Term.def',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $336;
    };
    const Kind$Term$def = x0 => x1 => x2 => Kind$Term$def$(x0, x1, x2);

    function Kind$Term$ann$(_done$1, _term$2, _type$3) {
        var $337 = ({
            _: 'Kind.Term.ann',
            'done': _done$1,
            'term': _term$2,
            'type': _type$3
        });
        return $337;
    };
    const Kind$Term$ann = x0 => x1 => x2 => Kind$Term$ann$(x0, x1, x2);

    function String$starts_with$(_xs$1, _match$2) {
        var String$starts_with$ = (_xs$1, _match$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _match$2]
        });
        var String$starts_with = _xs$1 => _match$2 => String$starts_with$(_xs$1, _match$2);
        var arg = [_xs$1, _match$2];
        while (true) {
            let [_xs$1, _match$2] = arg;
            var R = (() => {
                var self = _match$2;
                if (self.length === 0) {
                    var $338 = Bool$true;
                    return $338;
                } else {
                    var $339 = self.charCodeAt(0);
                    var $340 = self.slice(1);
                    var self = _xs$1;
                    if (self.length === 0) {
                        var $342 = Bool$false;
                        var $341 = $342;
                    } else {
                        var $343 = self.charCodeAt(0);
                        var $344 = self.slice(1);
                        var self = Char$eql$($339, $343);
                        if (self) {
                            var $346 = String$starts_with$($344, $340);
                            var $345 = $346;
                        } else {
                            var $347 = Bool$false;
                            var $345 = $347;
                        };
                        var $341 = $345;
                    };
                    return $341;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$starts_with = x0 => x1 => String$starts_with$(x0, x1);

    function String$drop$(_n$1, _xs$2) {
        var String$drop$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var String$drop = _n$1 => _xs$2 => String$drop$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $348 = _xs$2;
                    return $348;
                } else {
                    var $349 = (self - 1n);
                    var self = _xs$2;
                    if (self.length === 0) {
                        var $351 = String$nil;
                        var $350 = $351;
                    } else {
                        var $352 = self.charCodeAt(0);
                        var $353 = self.slice(1);
                        var $354 = String$drop$($349, $353);
                        var $350 = $354;
                    };
                    return $350;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$drop = x0 => x1 => String$drop$(x0, x1);

    function Char$is_hex$(_chr$1) {
        var $355 = (((_chr$1 >= 48) && (_chr$1 <= 57)) || (((_chr$1 >= 97) && (_chr$1 <= 102)) || (((_chr$1 >= 65) && (_chr$1 <= 70)) || Bool$false)));
        return $355;
    };
    const Char$is_hex = x0 => Char$is_hex$(x0);

    function Word$shift_left$one$go$(_word$2, _prev$3) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $357 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $359 = Word$i$(Word$shift_left$one$go$($357, Bool$false));
                    var $358 = $359;
                } else {
                    var $360 = Word$o$(Word$shift_left$one$go$($357, Bool$false));
                    var $358 = $360;
                };
                var $356 = $358;
                break;
            case 'Word.i':
                var $361 = self.pred;
                var self = _prev$3;
                if (self) {
                    var $363 = Word$i$(Word$shift_left$one$go$($361, Bool$true));
                    var $362 = $363;
                } else {
                    var $364 = Word$o$(Word$shift_left$one$go$($361, Bool$true));
                    var $362 = $364;
                };
                var $356 = $362;
                break;
            case 'Word.e':
                var $365 = Word$e;
                var $356 = $365;
                break;
        };
        return $356;
    };
    const Word$shift_left$one$go = x0 => x1 => Word$shift_left$one$go$(x0, x1);

    function Word$shift_left$one$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $367 = self.pred;
                var $368 = Word$o$(Word$shift_left$one$go$($367, Bool$false));
                var $366 = $368;
                break;
            case 'Word.i':
                var $369 = self.pred;
                var $370 = Word$o$(Word$shift_left$one$go$($369, Bool$true));
                var $366 = $370;
                break;
            case 'Word.e':
                var $371 = Word$e;
                var $366 = $371;
                break;
        };
        return $366;
    };
    const Word$shift_left$one = x0 => Word$shift_left$one$(x0);

    function Word$shift_left$(_n$2, _value$3) {
        var Word$shift_left$ = (_n$2, _value$3) => ({
            ctr: 'TCO',
            arg: [_n$2, _value$3]
        });
        var Word$shift_left = _n$2 => _value$3 => Word$shift_left$(_n$2, _value$3);
        var arg = [_n$2, _value$3];
        while (true) {
            let [_n$2, _value$3] = arg;
            var R = (() => {
                var self = _n$2;
                if (self === 0n) {
                    var $372 = _value$3;
                    return $372;
                } else {
                    var $373 = (self - 1n);
                    var $374 = Word$shift_left$($373, Word$shift_left$one$(_value$3));
                    return $374;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$shift_left = x0 => x1 => Word$shift_left$(x0, x1);

    function Word$mul$go$(_a$3, _b$4, _acc$5) {
        var Word$mul$go$ = (_a$3, _b$4, _acc$5) => ({
            ctr: 'TCO',
            arg: [_a$3, _b$4, _acc$5]
        });
        var Word$mul$go = _a$3 => _b$4 => _acc$5 => Word$mul$go$(_a$3, _b$4, _acc$5);
        var arg = [_a$3, _b$4, _acc$5];
        while (true) {
            let [_a$3, _b$4, _acc$5] = arg;
            var R = (() => {
                var self = _a$3;
                switch (self._) {
                    case 'Word.o':
                        var $375 = self.pred;
                        var $376 = Word$mul$go$($375, Word$shift_left$(1n, _b$4), _acc$5);
                        return $376;
                    case 'Word.i':
                        var $377 = self.pred;
                        var $378 = Word$mul$go$($377, Word$shift_left$(1n, _b$4), Word$add$(_b$4, _acc$5));
                        return $378;
                    case 'Word.e':
                        var $379 = _acc$5;
                        return $379;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Word$mul$go = x0 => x1 => x2 => Word$mul$go$(x0, x1, x2);

    function Word$to_zero$(_word$2) {
        var self = _word$2;
        switch (self._) {
            case 'Word.o':
                var $381 = self.pred;
                var $382 = Word$o$(Word$to_zero$($381));
                var $380 = $382;
                break;
            case 'Word.i':
                var $383 = self.pred;
                var $384 = Word$o$(Word$to_zero$($383));
                var $380 = $384;
                break;
            case 'Word.e':
                var $385 = Word$e;
                var $380 = $385;
                break;
        };
        return $380;
    };
    const Word$to_zero = x0 => Word$to_zero$(x0);

    function Word$mul$(_a$2, _b$3) {
        var $386 = Word$mul$go$(_a$2, _b$3, Word$to_zero$(_a$2));
        return $386;
    };
    const Word$mul = x0 => x1 => Word$mul$(x0, x1);
    const U16$mul = a0 => a1 => ((a0 * a1) & 0xFFFF);
    const U16$inc = a0 => ((a0 + 1) & 0xFFFF);

    function Word$subber$(_a$2, _b$3, _c$4) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $388 = self.pred;
                var $389 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $391 = self.pred;
                            var $392 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $394 = Word$i$(Word$subber$(_a$pred$10, $391, Bool$true));
                                    var $393 = $394;
                                } else {
                                    var $395 = Word$o$(Word$subber$(_a$pred$10, $391, Bool$false));
                                    var $393 = $395;
                                };
                                return $393;
                            });
                            var $390 = $392;
                            break;
                        case 'Word.i':
                            var $396 = self.pred;
                            var $397 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $399 = Word$o$(Word$subber$(_a$pred$10, $396, Bool$true));
                                    var $398 = $399;
                                } else {
                                    var $400 = Word$i$(Word$subber$(_a$pred$10, $396, Bool$true));
                                    var $398 = $400;
                                };
                                return $398;
                            });
                            var $390 = $397;
                            break;
                        case 'Word.e':
                            var $401 = (_a$pred$8 => {
                                var $402 = Word$e;
                                return $402;
                            });
                            var $390 = $401;
                            break;
                    };
                    var $390 = $390($388);
                    return $390;
                });
                var $387 = $389;
                break;
            case 'Word.i':
                var $403 = self.pred;
                var $404 = (_b$7 => {
                    var self = _b$7;
                    switch (self._) {
                        case 'Word.o':
                            var $406 = self.pred;
                            var $407 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $409 = Word$o$(Word$subber$(_a$pred$10, $406, Bool$false));
                                    var $408 = $409;
                                } else {
                                    var $410 = Word$i$(Word$subber$(_a$pred$10, $406, Bool$false));
                                    var $408 = $410;
                                };
                                return $408;
                            });
                            var $405 = $407;
                            break;
                        case 'Word.i':
                            var $411 = self.pred;
                            var $412 = (_a$pred$10 => {
                                var self = _c$4;
                                if (self) {
                                    var $414 = Word$i$(Word$subber$(_a$pred$10, $411, Bool$true));
                                    var $413 = $414;
                                } else {
                                    var $415 = Word$o$(Word$subber$(_a$pred$10, $411, Bool$false));
                                    var $413 = $415;
                                };
                                return $413;
                            });
                            var $405 = $412;
                            break;
                        case 'Word.e':
                            var $416 = (_a$pred$8 => {
                                var $417 = Word$e;
                                return $417;
                            });
                            var $405 = $416;
                            break;
                    };
                    var $405 = $405($403);
                    return $405;
                });
                var $387 = $404;
                break;
            case 'Word.e':
                var $418 = (_b$5 => {
                    var $419 = Word$e;
                    return $419;
                });
                var $387 = $418;
                break;
        };
        var $387 = $387(_b$3);
        return $387;
    };
    const Word$subber = x0 => x1 => x2 => Word$subber$(x0, x1, x2);

    function Word$sub$(_a$2, _b$3) {
        var $420 = Word$subber$(_a$2, _b$3, Bool$false);
        return $420;
    };
    const Word$sub = x0 => x1 => Word$sub$(x0, x1);
    const U16$sub = a0 => a1 => ((a0 - a1) & 0xFFFF);
    const U16$zero = U16$new$(Word$zero$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$succ$(Nat$zero))))))))))))))))));

    function Char$hex_value16$(_chr$1) {
        var self = ((_chr$1 >= 48) && (_chr$1 <= 57));
        if (self) {
            var $422 = ((_chr$1 - 48) & 0xFFFF);
            var $421 = $422;
        } else {
            var self = ((_chr$1 >= 97) && (_chr$1 <= 102));
            if (self) {
                var $424 = (_x0$2 => {
                    var $425 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                    return $425;
                })(((_chr$1 - 97) & 0xFFFF));
                var $423 = $424;
            } else {
                var self = ((_chr$1 >= 65) && (_chr$1 <= 70));
                if (self) {
                    var $427 = (_x0$2 => {
                        var $428 = ((((((((((((((((((((_x0$2 + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF) + 1) & 0xFFFF);
                        return $428;
                    })(((_chr$1 - 65) & 0xFFFF));
                    var $426 = $427;
                } else {
                    var $429 = U16$zero;
                    var $426 = $429;
                };
                var $423 = $426;
            };
            var $421 = $423;
        };
        return $421;
    };
    const Char$hex_value16 = x0 => Char$hex_value16$(x0);

    function Kind$Core$read$u16$(_code$1, _u16$2) {
        var Kind$Core$read$u16$ = (_code$1, _u16$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _u16$2]
        });
        var Kind$Core$read$u16 = _code$1 => _u16$2 => Kind$Core$read$u16$(_code$1, _u16$2);
        var arg = [_code$1, _u16$2];
        while (true) {
            let [_code$1, _u16$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $430 = Pair$new$(_code$1, _u16$2);
                    return $430;
                } else {
                    var $431 = self.charCodeAt(0);
                    var $432 = self.slice(1);
                    var self = Char$is_hex$($431);
                    if (self) {
                        var _u16$5 = ((((_u16$2 * 16) & 0xFFFF) + Char$hex_value16$($431)) & 0xFFFF);
                        var $434 = Kind$Core$read$u16$($432, _u16$5);
                        var $433 = $434;
                    } else {
                        var $435 = Pair$new$(_code$1, _u16$2);
                        var $433 = $435;
                    };
                    return $433;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$u16 = x0 => x1 => Kind$Core$read$u16$(x0, x1);

    function Kind$Core$read$chrx$(_code$1) {
        var self = String$starts_with$(_code$1, "\\u{");
        if (self) {
            var _code$2 = String$drop$(3n, _code$1);
            var self = Kind$Core$read$u16$(_code$2, 0);
            switch (self._) {
                case 'Pair.new':
                    var $438 = self.fst;
                    var $439 = self.snd;
                    var self = String$starts_with$($438, "}");
                    if (self) {
                        var $441 = Pair$new$(String$drop$(1n, $438), $439);
                        var $440 = $441;
                    } else {
                        var $442 = Pair$new$("", 63);
                        var $440 = $442;
                    };
                    var $437 = $440;
                    break;
            };
            var $436 = $437;
        } else {
            var self = String$starts_with$(_code$1, "\\\'");
            if (self) {
                var $444 = Pair$new$(String$drop$(2n, _code$1), 39);
                var $443 = $444;
            } else {
                var self = String$starts_with$(_code$1, "\\\"");
                if (self) {
                    var $446 = Pair$new$(String$drop$(2n, _code$1), 34);
                    var $445 = $446;
                } else {
                    var self = String$starts_with$(_code$1, "\\\\");
                    if (self) {
                        var $448 = Pair$new$(String$drop$(2n, _code$1), 92);
                        var $447 = $448;
                    } else {
                        var self = _code$1;
                        if (self.length === 0) {
                            var $450 = Pair$new$("", 63);
                            var $449 = $450;
                        } else {
                            var $451 = self.charCodeAt(0);
                            var $452 = self.slice(1);
                            var $453 = Pair$new$($452, $451);
                            var $449 = $453;
                        };
                        var $447 = $449;
                    };
                    var $445 = $447;
                };
                var $443 = $445;
            };
            var $436 = $443;
        };
        return $436;
    };
    const Kind$Core$read$chrx = x0 => Kind$Core$read$chrx$(x0);

    function Kind$Term$chr$(_chrx$1) {
        var $454 = ({
            _: 'Kind.Term.chr',
            'chrx': _chrx$1
        });
        return $454;
    };
    const Kind$Term$chr = x0 => Kind$Term$chr$(x0);

    function Kind$Core$read$strx$(_code$1) {
        var self = String$starts_with$(_code$1, "\"");
        if (self) {
            var $456 = Pair$new$(_code$1, "");
            var $455 = $456;
        } else {
            var self = Kind$Core$read$chrx$(_code$1);
            switch (self._) {
                case 'Pair.new':
                    var $458 = self.fst;
                    var $459 = self.snd;
                    var self = Kind$Core$read$strx$($458);
                    switch (self._) {
                        case 'Pair.new':
                            var $461 = self.fst;
                            var $462 = self.snd;
                            var $463 = Pair$new$($461, String$cons$($459, $462));
                            var $460 = $463;
                            break;
                    };
                    var $457 = $460;
                    break;
            };
            var $455 = $457;
        };
        return $455;
    };
    const Kind$Core$read$strx = x0 => Kind$Core$read$strx$(x0);

    function Kind$Term$str$(_strx$1) {
        var $464 = ({
            _: 'Kind.Term.str',
            'strx': _strx$1
        });
        return $464;
    };
    const Kind$Term$str = x0 => Kind$Term$str$(x0);

    function Char$dec_value$(_chr$1) {
        var self = (_chr$1 === 48);
        if (self) {
            var $466 = 0n;
            var $465 = $466;
        } else {
            var self = (_chr$1 === 49);
            if (self) {
                var $468 = 1n;
                var $467 = $468;
            } else {
                var self = (_chr$1 === 50);
                if (self) {
                    var $470 = 2n;
                    var $469 = $470;
                } else {
                    var self = (_chr$1 === 51);
                    if (self) {
                        var $472 = 3n;
                        var $471 = $472;
                    } else {
                        var self = (_chr$1 === 52);
                        if (self) {
                            var $474 = 4n;
                            var $473 = $474;
                        } else {
                            var self = (_chr$1 === 53);
                            if (self) {
                                var $476 = 5n;
                                var $475 = $476;
                            } else {
                                var self = (_chr$1 === 54);
                                if (self) {
                                    var $478 = 6n;
                                    var $477 = $478;
                                } else {
                                    var self = (_chr$1 === 55);
                                    if (self) {
                                        var $480 = 7n;
                                        var $479 = $480;
                                    } else {
                                        var self = (_chr$1 === 56);
                                        if (self) {
                                            var $482 = 8n;
                                            var $481 = $482;
                                        } else {
                                            var self = (_chr$1 === 57);
                                            if (self) {
                                                var $484 = 9n;
                                                var $483 = $484;
                                            } else {
                                                var $485 = 0n;
                                                var $483 = $485;
                                            };
                                            var $481 = $483;
                                        };
                                        var $479 = $481;
                                    };
                                    var $477 = $479;
                                };
                                var $475 = $477;
                            };
                            var $473 = $475;
                        };
                        var $471 = $473;
                    };
                    var $469 = $471;
                };
                var $467 = $469;
            };
            var $465 = $467;
        };
        return $465;
    };
    const Char$dec_value = x0 => Char$dec_value$(x0);

    function Kind$Core$read$natx$(_code$1, _nat$2) {
        var Kind$Core$read$natx$ = (_code$1, _nat$2) => ({
            ctr: 'TCO',
            arg: [_code$1, _nat$2]
        });
        var Kind$Core$read$natx = _code$1 => _nat$2 => Kind$Core$read$natx$(_code$1, _nat$2);
        var arg = [_code$1, _nat$2];
        while (true) {
            let [_code$1, _nat$2] = arg;
            var R = (() => {
                var self = _code$1;
                if (self.length === 0) {
                    var $486 = Pair$new$(_code$1, _nat$2);
                    return $486;
                } else {
                    var $487 = self.charCodeAt(0);
                    var $488 = self.slice(1);
                    var self = Char$is_hex$($487);
                    if (self) {
                        var _nat$5 = ((_nat$2 * 10n) + Char$dec_value$($487));
                        var $490 = Kind$Core$read$natx$($488, _nat$5);
                        var $489 = $490;
                    } else {
                        var $491 = Pair$new$(_code$1, _nat$2);
                        var $489 = $491;
                    };
                    return $489;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$natx = x0 => x1 => Kind$Core$read$natx$(x0, x1);

    function Kind$Term$nat$(_natx$1) {
        var $492 = ({
            _: 'Kind.Term.nat',
            'natx': _natx$1
        });
        return $492;
    };
    const Kind$Term$nat = x0 => Kind$Term$nat$(x0);

    function Pair$fst$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $494 = self.fst;
                var $495 = $494;
                var $493 = $495;
                break;
        };
        return $493;
    };
    const Pair$fst = x0 => Pair$fst$(x0);
    const Nat$eql = a0 => a1 => (a0 === a1);

    function Nat$pred$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $497 = Nat$zero;
            var $496 = $497;
        } else {
            var $498 = (self - 1n);
            var $499 = $498;
            var $496 = $499;
        };
        return $496;
    };
    const Nat$pred = x0 => Nat$pred$(x0);

    function Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5) {
        var Kind$Core$read$find$ = (_list$2, _cond$3, _indx$4, _skip$5) => ({
            ctr: 'TCO',
            arg: [_list$2, _cond$3, _indx$4, _skip$5]
        });
        var Kind$Core$read$find = _list$2 => _cond$3 => _indx$4 => _skip$5 => Kind$Core$read$find$(_list$2, _cond$3, _indx$4, _skip$5);
        var arg = [_list$2, _cond$3, _indx$4, _skip$5];
        while (true) {
            let [_list$2, _cond$3, _indx$4, _skip$5] = arg;
            var R = (() => {
                var self = _list$2;
                switch (self._) {
                    case 'List.cons':
                        var $500 = self.head;
                        var $501 = self.tail;
                        var self = _cond$3($500)(_indx$4);
                        if (self) {
                            var self = (_skip$5 === 0n);
                            if (self) {
                                var $504 = Maybe$some$(Pair$new$($500, _indx$4));
                                var $503 = $504;
                            } else {
                                var $505 = Kind$Core$read$find$($501, _cond$3, Nat$succ$(_indx$4), Nat$pred$(_skip$5));
                                var $503 = $505;
                            };
                            var $502 = $503;
                        } else {
                            var $506 = Kind$Core$read$find$($501, _cond$3, Nat$succ$(_indx$4), _skip$5);
                            var $502 = $506;
                        };
                        return $502;
                    case 'List.nil':
                        var $507 = Maybe$none;
                        return $507;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$read$find = x0 => x1 => x2 => x3 => Kind$Core$read$find$(x0, x1, x2, x3);

    function Pair$snd$(_pair$3) {
        var self = _pair$3;
        switch (self._) {
            case 'Pair.new':
                var $509 = self.snd;
                var $510 = $509;
                var $508 = $510;
                break;
        };
        return $508;
    };
    const Pair$snd = x0 => Pair$snd$(x0);

    function Kind$Core$read$term$(_code$1) {
        var self = Kind$Core$read$spaces$(_code$1);
        switch (self._) {
            case 'Pair.new':
                var $512 = self.fst;
                var self = $512;
                if (self.length === 0) {
                    var $514 = Pair$new$("", (_ctx$4 => {
                        var $515 = Kind$Term$ref$("error");
                        return $515;
                    }));
                    var $513 = $514;
                } else {
                    var $516 = self.charCodeAt(0);
                    var $517 = self.slice(1);
                    var _head$6 = $516;
                    var _code$7 = $517;
                    var self = Char$eql$(_head$6, 42);
                    if (self) {
                        var $519 = Pair$new$(_code$7, (_ctx$8 => {
                            var $520 = Kind$Term$typ;
                            return $520;
                        }));
                        var $518 = $519;
                    } else {
                        var self = (_head$6 === 64);
                        if (self) {
                            var self = Kind$Core$read$name$(_code$7);
                            switch (self._) {
                                case 'Pair.new':
                                    var $523 = self.fst;
                                    var $524 = self.snd;
                                    var self = Kind$Core$read$char$($523, 40);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $526 = self.fst;
                                            var self = Kind$Core$read$name$($526);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $528 = self.fst;
                                                    var $529 = self.snd;
                                                    var self = Kind$Core$read$char$($528, 58);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $531 = self.fst;
                                                            var self = Kind$Core$read$term$($531);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $533 = self.fst;
                                                                    var $534 = self.snd;
                                                                    var self = Kind$Core$read$char$($533, 41);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $536 = self.fst;
                                                                            var self = Kind$Core$read$term$($536);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $538 = self.fst;
                                                                                    var $539 = self.snd;
                                                                                    var $540 = Pair$new$($538, (_ctx$22 => {
                                                                                        var $541 = Kind$Term$all$(Bool$false, $524, $529, $534(_ctx$22), (_s$23 => _x$24 => {
                                                                                            var $542 = $539(List$cons$(Pair$new$($529, _x$24), List$cons$(Pair$new$($524, _s$23), _ctx$22)));
                                                                                            return $542;
                                                                                        }));
                                                                                        return $541;
                                                                                    }));
                                                                                    var $537 = $540;
                                                                                    break;
                                                                            };
                                                                            var $535 = $537;
                                                                            break;
                                                                    };
                                                                    var $532 = $535;
                                                                    break;
                                                            };
                                                            var $530 = $532;
                                                            break;
                                                    };
                                                    var $527 = $530;
                                                    break;
                                            };
                                            var $525 = $527;
                                            break;
                                    };
                                    var $522 = $525;
                                    break;
                            };
                            var $521 = $522;
                        } else {
                            var self = (_head$6 === 37);
                            if (self) {
                                var self = Kind$Core$read$name$(_code$7);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $545 = self.fst;
                                        var $546 = self.snd;
                                        var self = Kind$Core$read$char$($545, 40);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $548 = self.fst;
                                                var self = Kind$Core$read$name$($548);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $550 = self.fst;
                                                        var $551 = self.snd;
                                                        var self = Kind$Core$read$char$($550, 58);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $553 = self.fst;
                                                                var self = Kind$Core$read$term$($553);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $555 = self.fst;
                                                                        var $556 = self.snd;
                                                                        var self = Kind$Core$read$char$($555, 41);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $558 = self.fst;
                                                                                var self = Kind$Core$read$term$($558);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $560 = self.fst;
                                                                                        var $561 = self.snd;
                                                                                        var $562 = Pair$new$($560, (_ctx$22 => {
                                                                                            var $563 = Kind$Term$all$(Bool$true, $546, $551, $556(_ctx$22), (_s$23 => _x$24 => {
                                                                                                var $564 = $561(List$cons$(Pair$new$($551, _x$24), List$cons$(Pair$new$($546, _s$23), _ctx$22)));
                                                                                                return $564;
                                                                                            }));
                                                                                            return $563;
                                                                                        }));
                                                                                        var $559 = $562;
                                                                                        break;
                                                                                };
                                                                                var $557 = $559;
                                                                                break;
                                                                        };
                                                                        var $554 = $557;
                                                                        break;
                                                                };
                                                                var $552 = $554;
                                                                break;
                                                        };
                                                        var $549 = $552;
                                                        break;
                                                };
                                                var $547 = $549;
                                                break;
                                        };
                                        var $544 = $547;
                                        break;
                                };
                                var $543 = $544;
                            } else {
                                var self = (_head$6 === 35);
                                if (self) {
                                    var self = Kind$Core$read$name$(_code$7);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $567 = self.fst;
                                            var $568 = self.snd;
                                            var self = Kind$Core$read$term$($567);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $570 = self.fst;
                                                    var $571 = self.snd;
                                                    var $572 = Pair$new$($570, (_ctx$12 => {
                                                        var $573 = Kind$Term$lam$($568, (_x$13 => {
                                                            var $574 = $571(List$cons$(Pair$new$($568, _x$13), _ctx$12));
                                                            return $574;
                                                        }));
                                                        return $573;
                                                    }));
                                                    var $569 = $572;
                                                    break;
                                            };
                                            var $566 = $569;
                                            break;
                                    };
                                    var $565 = $566;
                                } else {
                                    var self = (_head$6 === 40);
                                    if (self) {
                                        var self = Kind$Core$read$term$(_code$7);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $577 = self.fst;
                                                var $578 = self.snd;
                                                var self = Kind$Core$read$term$($577);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $580 = self.fst;
                                                        var $581 = self.snd;
                                                        var self = Kind$Core$read$char$($580, 41);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $583 = self.fst;
                                                                var $584 = Pair$new$($583, (_ctx$14 => {
                                                                    var $585 = Kind$Term$app$($578(_ctx$14), $581(_ctx$14));
                                                                    return $585;
                                                                }));
                                                                var $582 = $584;
                                                                break;
                                                        };
                                                        var $579 = $582;
                                                        break;
                                                };
                                                var $576 = $579;
                                                break;
                                        };
                                        var $575 = $576;
                                    } else {
                                        var self = (_head$6 === 33);
                                        if (self) {
                                            var self = Kind$Core$read$name$(_code$7);
                                            switch (self._) {
                                                case 'Pair.new':
                                                    var $588 = self.fst;
                                                    var $589 = self.snd;
                                                    var self = Kind$Core$read$char$($588, 61);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $591 = self.fst;
                                                            var self = Kind$Core$read$term$($591);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $593 = self.fst;
                                                                    var $594 = self.snd;
                                                                    var self = Kind$Core$read$char$($593, 59);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $596 = self.fst;
                                                                            var self = Kind$Core$read$term$($596);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $598 = self.fst;
                                                                                    var $599 = self.snd;
                                                                                    var $600 = Pair$new$($598, (_ctx$18 => {
                                                                                        var $601 = Kind$Term$let$($589, $594(_ctx$18), (_x$19 => {
                                                                                            var $602 = $599(List$cons$(Pair$new$($589, _x$19), _ctx$18));
                                                                                            return $602;
                                                                                        }));
                                                                                        return $601;
                                                                                    }));
                                                                                    var $597 = $600;
                                                                                    break;
                                                                            };
                                                                            var $595 = $597;
                                                                            break;
                                                                    };
                                                                    var $592 = $595;
                                                                    break;
                                                            };
                                                            var $590 = $592;
                                                            break;
                                                    };
                                                    var $587 = $590;
                                                    break;
                                            };
                                            var $586 = $587;
                                        } else {
                                            var self = (_head$6 === 36);
                                            if (self) {
                                                var self = Kind$Core$read$name$(_code$7);
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $605 = self.fst;
                                                        var $606 = self.snd;
                                                        var self = Kind$Core$read$char$($605, 61);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $608 = self.fst;
                                                                var self = Kind$Core$read$term$($608);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $610 = self.fst;
                                                                        var $611 = self.snd;
                                                                        var self = Kind$Core$read$char$($610, 59);
                                                                        switch (self._) {
                                                                            case 'Pair.new':
                                                                                var $613 = self.fst;
                                                                                var self = Kind$Core$read$term$($613);
                                                                                switch (self._) {
                                                                                    case 'Pair.new':
                                                                                        var $615 = self.fst;
                                                                                        var $616 = self.snd;
                                                                                        var $617 = Pair$new$($615, (_ctx$18 => {
                                                                                            var $618 = Kind$Term$def$($606, $611(_ctx$18), (_x$19 => {
                                                                                                var $619 = $616(List$cons$(Pair$new$($606, _x$19), _ctx$18));
                                                                                                return $619;
                                                                                            }));
                                                                                            return $618;
                                                                                        }));
                                                                                        var $614 = $617;
                                                                                        break;
                                                                                };
                                                                                var $612 = $614;
                                                                                break;
                                                                        };
                                                                        var $609 = $612;
                                                                        break;
                                                                };
                                                                var $607 = $609;
                                                                break;
                                                        };
                                                        var $604 = $607;
                                                        break;
                                                };
                                                var $603 = $604;
                                            } else {
                                                var self = (_head$6 === 123);
                                                if (self) {
                                                    var self = Kind$Core$read$term$(_code$7);
                                                    switch (self._) {
                                                        case 'Pair.new':
                                                            var $622 = self.fst;
                                                            var $623 = self.snd;
                                                            var self = Kind$Core$read$char$($622, 58);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $625 = self.fst;
                                                                    var self = Kind$Core$read$term$($625);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $627 = self.fst;
                                                                            var $628 = self.snd;
                                                                            var self = Kind$Core$read$char$($627, 125);
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $630 = self.fst;
                                                                                    var $631 = Pair$new$($630, (_ctx$16 => {
                                                                                        var $632 = Kind$Term$ann$(Bool$false, $623(_ctx$16), $628(_ctx$16));
                                                                                        return $632;
                                                                                    }));
                                                                                    var $629 = $631;
                                                                                    break;
                                                                            };
                                                                            var $626 = $629;
                                                                            break;
                                                                    };
                                                                    var $624 = $626;
                                                                    break;
                                                            };
                                                            var $621 = $624;
                                                            break;
                                                    };
                                                    var $620 = $621;
                                                } else {
                                                    var self = (_head$6 === 39);
                                                    if (self) {
                                                        var self = Kind$Core$read$chrx$(_code$7);
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $635 = self.fst;
                                                                var $636 = self.snd;
                                                                var self = Kind$Core$read$char$($635, 39);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $638 = self.fst;
                                                                        var $639 = Pair$new$($638, (_ctx$12 => {
                                                                            var $640 = Kind$Term$chr$($636);
                                                                            return $640;
                                                                        }));
                                                                        var $637 = $639;
                                                                        break;
                                                                };
                                                                var $634 = $637;
                                                                break;
                                                        };
                                                        var $633 = $634;
                                                    } else {
                                                        var self = (_head$6 === 34);
                                                        if (self) {
                                                            var self = Kind$Core$read$strx$(_code$7);
                                                            switch (self._) {
                                                                case 'Pair.new':
                                                                    var $643 = self.fst;
                                                                    var $644 = self.snd;
                                                                    var self = Kind$Core$read$char$($643, 34);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $646 = self.fst;
                                                                            var $647 = Pair$new$($646, (_ctx$12 => {
                                                                                var $648 = Kind$Term$str$($644);
                                                                                return $648;
                                                                            }));
                                                                            var $645 = $647;
                                                                            break;
                                                                    };
                                                                    var $642 = $645;
                                                                    break;
                                                            };
                                                            var $641 = $642;
                                                        } else {
                                                            var self = (_head$6 === 43);
                                                            if (self) {
                                                                var self = Kind$Core$read$natx$(_code$7, 0n);
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $651 = self.fst;
                                                                        var $652 = self.snd;
                                                                        var $653 = Pair$new$($651, (_ctx$10 => {
                                                                            var $654 = Kind$Term$nat$($652);
                                                                            return $654;
                                                                        }));
                                                                        var $650 = $653;
                                                                        break;
                                                                };
                                                                var $649 = $650;
                                                            } else {
                                                                var self = Kind$Core$read$is_name$(_head$6);
                                                                if (self) {
                                                                    var self = Kind$Core$read$name$(_code$7);
                                                                    switch (self._) {
                                                                        case 'Pair.new':
                                                                            var $657 = self.fst;
                                                                            var $658 = self.snd;
                                                                            var _name$10 = String$cons$(_head$6, $658);
                                                                            var self = $657;
                                                                            if (self.length === 0) {
                                                                                var $660 = Pair$new$("", 0n);
                                                                                var self = $660;
                                                                            } else {
                                                                                var $661 = self.charCodeAt(0);
                                                                                var $662 = self.slice(1);
                                                                                var self = ($661 === 94);
                                                                                if (self) {
                                                                                    var $664 = Kind$Core$read$natx$($662, 0n);
                                                                                    var $663 = $664;
                                                                                } else {
                                                                                    var $665 = Pair$new$($657, 0n);
                                                                                    var $663 = $665;
                                                                                };
                                                                                var self = $663;
                                                                            };
                                                                            switch (self._) {
                                                                                case 'Pair.new':
                                                                                    var $666 = self.fst;
                                                                                    var $667 = self.snd;
                                                                                    var $668 = Pair$new$($666, (_ctx$13 => {
                                                                                        var _got$14 = Kind$Core$read$find$(_ctx$13, (_x$14 => _i$15 => {
                                                                                            var $670 = (Pair$fst$(_x$14) === _name$10);
                                                                                            return $670;
                                                                                        }), 0n, $667);
                                                                                        var self = _got$14;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $671 = self.value;
                                                                                                var $672 = Pair$snd$(Pair$fst$($671));
                                                                                                var $669 = $672;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $673 = Kind$Term$ref$(_name$10);
                                                                                                var $669 = $673;
                                                                                                break;
                                                                                        };
                                                                                        return $669;
                                                                                    }));
                                                                                    var $659 = $668;
                                                                                    break;
                                                                            };
                                                                            var $656 = $659;
                                                                            break;
                                                                    };
                                                                    var $655 = $656;
                                                                } else {
                                                                    var $674 = Pair$new$("", (_ctx$8 => {
                                                                        var $675 = Kind$Term$ref$("error");
                                                                        return $675;
                                                                    }));
                                                                    var $655 = $674;
                                                                };
                                                                var $649 = $655;
                                                            };
                                                            var $641 = $649;
                                                        };
                                                        var $633 = $641;
                                                    };
                                                    var $620 = $633;
                                                };
                                                var $603 = $620;
                                            };
                                            var $586 = $603;
                                        };
                                        var $575 = $586;
                                    };
                                    var $565 = $575;
                                };
                                var $543 = $565;
                            };
                            var $521 = $543;
                        };
                        var $518 = $521;
                    };
                    var $513 = $518;
                };
                var $511 = $513;
                break;
        };
        return $511;
    };
    const Kind$Core$read$term = x0 => Kind$Core$read$term$(x0);

    function Kind$Core$read$(_code$1) {
        var self = Kind$Core$read$term$((_code$1 + ";"));
        switch (self._) {
            case 'Pair.new':
                var $677 = self.fst;
                var $678 = self.snd;
                var self = $677;
                if (self.length === 0) {
                    var $680 = Maybe$none;
                    var $679 = $680;
                } else {
                    var $681 = self.charCodeAt(0);
                    var $682 = self.slice(1);
                    var $683 = Maybe$some$($678(List$nil));
                    var $679 = $683;
                };
                var $676 = $679;
                break;
        };
        return $676;
    };
    const Kind$Core$read = x0 => Kind$Core$read$(x0);

    function Bool$read$(_code$1) {
        var self = (_code$1 === "Bool.true");
        if (self) {
            var $685 = Maybe$some$(Bool$true);
            var $684 = $685;
        } else {
            var self = (_code$1 === "Bool.false");
            if (self) {
                var $687 = Maybe$some$(Bool$false);
                var $686 = $687;
            } else {
                var $688 = Maybe$none;
                var $686 = $688;
            };
            var $684 = $686;
        };
        return $684;
    };
    const Bool$read = x0 => Bool$read$(x0);

    function Kind$Status$done$(_cached$1) {
        var $689 = ({
            _: 'Kind.Status.done',
            'cached': _cached$1
        });
        return $689;
    };
    const Kind$Status$done = x0 => Kind$Status$done$(x0);

    function Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _stat$9) {
        var $690 = ({
            _: 'Kind.Def.new',
            'file': _file$1,
            'code': _code$2,
            'orig': _orig$3,
            'name': _name$4,
            'term': _term$5,
            'type': _type$6,
            'isct': _isct$7,
            'arit': _arit$8,
            'stat': _stat$9
        });
        return $690;
    };
    const Kind$Def$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Def$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Synth$load$cached$def$(_name$1) {
        var $691 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $692 = _m$bind$2;
            return $692;
        }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".file")))))((_cache_file$2 => {
            var self = (!String$is_empty$(_cache_file$2));
            if (self) {
                var $694 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $695 = _m$bind$3;
                    return $695;
                }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".time")))))((_cache_time$3 => {
                    var $696 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $697 = _m$bind$4;
                        return $697;
                    }))(IO$get_file_mtime$(_cache_file$2))((_cache_file_time$4 => {
                        var self = (_cache_time$3 === _cache_file_time$4);
                        if (self) {
                            var $699 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $700 = _m$bind$5;
                                return $700;
                            }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".term")))))((_cache_term$5 => {
                                var $701 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $702 = _m$bind$6;
                                    return $702;
                                }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".type")))))((_cache_type$6 => {
                                    var $703 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $704 = _m$bind$7;
                                        return $704;
                                    }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".isct")))))((_cache_isct$7 => {
                                        var $705 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $706 = _m$bind$8;
                                            return $706;
                                        }))(IO$get_file$(String$to_lower$((".cache/" + (_name$1 + ".arit")))))((_cache_arit$8 => {
                                            var $707 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $708 = _m$pure$10;
                                                return $708;
                                            }))((() => {
                                                var _file$9 = _cache_file$2;
                                                var _code$10 = "<cached>";
                                                var _orig$11 = Pair$new$(0n, 0n);
                                                var $709 = Maybe$monad$((_m$bind$12 => _m$pure$13 => {
                                                    var $710 = _m$bind$12;
                                                    return $710;
                                                }))(Kind$Core$read$(_cache_term$5))((_term$12 => {
                                                    var $711 = Maybe$monad$((_m$bind$13 => _m$pure$14 => {
                                                        var $712 = _m$bind$13;
                                                        return $712;
                                                    }))(Kind$Core$read$(_cache_type$6))((_type$13 => {
                                                        var $713 = Maybe$monad$((_m$bind$14 => _m$pure$15 => {
                                                            var $714 = _m$bind$14;
                                                            return $714;
                                                        }))(Bool$read$(_cache_isct$7))((_isct$14 => {
                                                            var $715 = Maybe$monad$((_m$bind$15 => _m$pure$16 => {
                                                                var $716 = _m$bind$15;
                                                                return $716;
                                                            }))(Maybe$some$((BigInt(_cache_arit$8))))((_arit$15 => {
                                                                var _stat$16 = Kind$Status$done$(Bool$true);
                                                                var $717 = Maybe$monad$((_m$bind$17 => _m$pure$18 => {
                                                                    var $718 = _m$pure$18;
                                                                    return $718;
                                                                }))(Kind$Def$new$(_file$9, _code$10, _orig$11, _name$1, _term$12, _type$13, _isct$14, _arit$15, _stat$16));
                                                                return $717;
                                                            }));
                                                            return $715;
                                                        }));
                                                        return $713;
                                                    }));
                                                    return $711;
                                                }));
                                                return $709;
                                            })());
                                            return $707;
                                        }));
                                        return $705;
                                    }));
                                    return $703;
                                }));
                                return $701;
                            }));
                            var $698 = $699;
                        } else {
                            var $719 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                var $720 = _m$pure$6;
                                return $720;
                            }))(Maybe$none);
                            var $698 = $719;
                        };
                        return $698;
                    }));
                    return $696;
                }));
                var $693 = $694;
            } else {
                var $721 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $722 = _m$pure$4;
                    return $722;
                }))(Maybe$none);
                var $693 = $721;
            };
            return $693;
        }));
        return $691;
    };
    const Kind$Synth$load$cached$def = x0 => Kind$Synth$load$cached$def$(x0);

    function BitsMap$tie$(_val$2, _lft$3, _rgt$4) {
        var $723 = ({
            _: 'BitsMap.tie',
            'val': _val$2,
            'lft': _lft$3,
            'rgt': _rgt$4
        });
        return $723;
    };
    const BitsMap$tie = x0 => x1 => x2 => BitsMap$tie$(x0, x1, x2);
    const BitsMap$new = ({
        _: 'BitsMap.new'
    });
    const BitsMap$set = a0 => a1 => a2 => (bitsmap_set(a0, a1, a2, 'set'));

    function Kind$Map$set$(_name$2, _val$3, _map$4) {
        var $724 = (bitsmap_set((kind_name_to_bits(_name$2)), _val$3, _map$4, 'set'));
        return $724;
    };
    const Kind$Map$set = x0 => x1 => x2 => Kind$Map$set$(x0, x1, x2);
    const Kind$Map$new = BitsMap$new;
    const Kind$Map = null;

    function Kind$Core$dependencies$go$(_term$1, _deps$2) {
        var _nil$3 = Kind$Term$typ;
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $726 = self.name;
                var $727 = Kind$Map$set$($726, Unit$new, _deps$2);
                var $725 = $727;
                break;
            case 'Kind.Term.all':
                var $728 = self.xtyp;
                var $729 = self.body;
                var _deps$9 = Kind$Core$dependencies$go$($728, _deps$2);
                var _deps$10 = Kind$Core$dependencies$go$($729(_nil$3)(_nil$3), _deps$9);
                var $730 = _deps$10;
                var $725 = $730;
                break;
            case 'Kind.Term.lam':
                var $731 = self.body;
                var _deps$6 = Kind$Core$dependencies$go$($731(_nil$3), _deps$2);
                var $732 = _deps$6;
                var $725 = $732;
                break;
            case 'Kind.Term.app':
                var $733 = self.func;
                var $734 = self.argm;
                var _deps$6 = Kind$Core$dependencies$go$($733, _deps$2);
                var _deps$7 = Kind$Core$dependencies$go$($734, _deps$6);
                var $735 = _deps$7;
                var $725 = $735;
                break;
            case 'Kind.Term.let':
                var $736 = self.expr;
                var $737 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($736, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($737(_nil$3), _deps$7);
                var $738 = _deps$8;
                var $725 = $738;
                break;
            case 'Kind.Term.def':
                var $739 = self.expr;
                var $740 = self.body;
                var _deps$7 = Kind$Core$dependencies$go$($739, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($740(_nil$3), _deps$7);
                var $741 = _deps$8;
                var $725 = $741;
                break;
            case 'Kind.Term.ann':
                var $742 = self.term;
                var $743 = self.type;
                var _deps$7 = Kind$Core$dependencies$go$($742, _deps$2);
                var _deps$8 = Kind$Core$dependencies$go$($743, _deps$7);
                var $744 = _deps$8;
                var $725 = $744;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $745 = _deps$2;
                var $725 = $745;
                break;
        };
        return $725;
    };
    const Kind$Core$dependencies$go = x0 => x1 => Kind$Core$dependencies$go$(x0, x1);

    function List$mapped$(_as$2, _f$4) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $747 = self.head;
                var $748 = self.tail;
                var $749 = List$cons$(_f$4($747), List$mapped$($748, _f$4));
                var $746 = $749;
                break;
            case 'List.nil':
                var $750 = List$nil;
                var $746 = $750;
                break;
        };
        return $746;
    };
    const List$mapped = x0 => x1 => List$mapped$(x0, x1);

    function Bits$reverse$tco$(_a$1, _r$2) {
        var Bits$reverse$tco$ = (_a$1, _r$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _r$2]
        });
        var Bits$reverse$tco = _a$1 => _r$2 => Bits$reverse$tco$(_a$1, _r$2);
        var arg = [_a$1, _r$2];
        while (true) {
            let [_a$1, _r$2] = arg;
            var R = (() => {
                var self = _a$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $751 = self.slice(0, -1);
                        var $752 = Bits$reverse$tco$($751, (_r$2 + '0'));
                        return $752;
                    case 'i':
                        var $753 = self.slice(0, -1);
                        var $754 = Bits$reverse$tco$($753, (_r$2 + '1'));
                        return $754;
                    case 'e':
                        var $755 = _r$2;
                        return $755;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Bits$reverse$tco = x0 => x1 => Bits$reverse$tco$(x0, x1);

    function Bits$reverse$(_a$1) {
        var $756 = Bits$reverse$tco$(_a$1, Bits$e);
        return $756;
    };
    const Bits$reverse = x0 => Bits$reverse$(x0);

    function BitsMap$to_list$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $758 = self.val;
                var $759 = self.lft;
                var $760 = self.rgt;
                var self = $758;
                switch (self._) {
                    case 'Maybe.some':
                        var $762 = self.value;
                        var $763 = List$cons$(Pair$new$(Bits$reverse$(_key$3), $762), _list$4);
                        var _list0$8 = $763;
                        break;
                    case 'Maybe.none':
                        var $764 = _list$4;
                        var _list0$8 = $764;
                        break;
                };
                var _list1$9 = BitsMap$to_list$go$($759, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$to_list$go$($760, (_key$3 + '1'), _list1$9);
                var $761 = _list2$10;
                var $757 = $761;
                break;
            case 'BitsMap.new':
                var $765 = _list$4;
                var $757 = $765;
                break;
        };
        return $757;
    };
    const BitsMap$to_list$go = x0 => x1 => x2 => BitsMap$to_list$go$(x0, x1, x2);

    function Kind$Name$from_bits$(_bs$1) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $767 = self.slice(0, -1);
                var _bs$3 = $767;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $769 = self.slice(0, -1);
                        var _bs$5 = $769;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $771 = self.slice(0, -1);
                                var _bs$7 = $771;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $773 = self.slice(0, -1);
                                        var _bs$9 = $773;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $775 = self.slice(0, -1);
                                                var _bs$11 = $775;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $777 = self.slice(0, -1);
                                                        var _bs$13 = $777;
                                                        var $778 = String$cons$(65, Kind$Name$from_bits$(_bs$13));
                                                        var $776 = $778;
                                                        break;
                                                    case 'i':
                                                        var $779 = self.slice(0, -1);
                                                        var _bs$13 = $779;
                                                        var $780 = String$cons$(66, Kind$Name$from_bits$(_bs$13));
                                                        var $776 = $780;
                                                        break;
                                                    case 'e':
                                                        var $781 = String$nil;
                                                        var $776 = $781;
                                                        break;
                                                };
                                                var $774 = $776;
                                                break;
                                            case 'i':
                                                var $782 = self.slice(0, -1);
                                                var _bs$11 = $782;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $784 = self.slice(0, -1);
                                                        var _bs$13 = $784;
                                                        var $785 = String$cons$(67, Kind$Name$from_bits$(_bs$13));
                                                        var $783 = $785;
                                                        break;
                                                    case 'i':
                                                        var $786 = self.slice(0, -1);
                                                        var _bs$13 = $786;
                                                        var $787 = String$cons$(68, Kind$Name$from_bits$(_bs$13));
                                                        var $783 = $787;
                                                        break;
                                                    case 'e':
                                                        var $788 = String$nil;
                                                        var $783 = $788;
                                                        break;
                                                };
                                                var $774 = $783;
                                                break;
                                            case 'e':
                                                var $789 = String$nil;
                                                var $774 = $789;
                                                break;
                                        };
                                        var $772 = $774;
                                        break;
                                    case 'i':
                                        var $790 = self.slice(0, -1);
                                        var _bs$9 = $790;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $792 = self.slice(0, -1);
                                                var _bs$11 = $792;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $794 = self.slice(0, -1);
                                                        var _bs$13 = $794;
                                                        var $795 = String$cons$(69, Kind$Name$from_bits$(_bs$13));
                                                        var $793 = $795;
                                                        break;
                                                    case 'i':
                                                        var $796 = self.slice(0, -1);
                                                        var _bs$13 = $796;
                                                        var $797 = String$cons$(70, Kind$Name$from_bits$(_bs$13));
                                                        var $793 = $797;
                                                        break;
                                                    case 'e':
                                                        var $798 = String$nil;
                                                        var $793 = $798;
                                                        break;
                                                };
                                                var $791 = $793;
                                                break;
                                            case 'i':
                                                var $799 = self.slice(0, -1);
                                                var _bs$11 = $799;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $801 = self.slice(0, -1);
                                                        var _bs$13 = $801;
                                                        var $802 = String$cons$(71, Kind$Name$from_bits$(_bs$13));
                                                        var $800 = $802;
                                                        break;
                                                    case 'i':
                                                        var $803 = self.slice(0, -1);
                                                        var _bs$13 = $803;
                                                        var $804 = String$cons$(72, Kind$Name$from_bits$(_bs$13));
                                                        var $800 = $804;
                                                        break;
                                                    case 'e':
                                                        var $805 = String$nil;
                                                        var $800 = $805;
                                                        break;
                                                };
                                                var $791 = $800;
                                                break;
                                            case 'e':
                                                var $806 = String$nil;
                                                var $791 = $806;
                                                break;
                                        };
                                        var $772 = $791;
                                        break;
                                    case 'e':
                                        var $807 = String$nil;
                                        var $772 = $807;
                                        break;
                                };
                                var $770 = $772;
                                break;
                            case 'i':
                                var $808 = self.slice(0, -1);
                                var _bs$7 = $808;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $810 = self.slice(0, -1);
                                        var _bs$9 = $810;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $812 = self.slice(0, -1);
                                                var _bs$11 = $812;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $814 = self.slice(0, -1);
                                                        var _bs$13 = $814;
                                                        var $815 = String$cons$(73, Kind$Name$from_bits$(_bs$13));
                                                        var $813 = $815;
                                                        break;
                                                    case 'i':
                                                        var $816 = self.slice(0, -1);
                                                        var _bs$13 = $816;
                                                        var $817 = String$cons$(74, Kind$Name$from_bits$(_bs$13));
                                                        var $813 = $817;
                                                        break;
                                                    case 'e':
                                                        var $818 = String$nil;
                                                        var $813 = $818;
                                                        break;
                                                };
                                                var $811 = $813;
                                                break;
                                            case 'i':
                                                var $819 = self.slice(0, -1);
                                                var _bs$11 = $819;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $821 = self.slice(0, -1);
                                                        var _bs$13 = $821;
                                                        var $822 = String$cons$(75, Kind$Name$from_bits$(_bs$13));
                                                        var $820 = $822;
                                                        break;
                                                    case 'i':
                                                        var $823 = self.slice(0, -1);
                                                        var _bs$13 = $823;
                                                        var $824 = String$cons$(76, Kind$Name$from_bits$(_bs$13));
                                                        var $820 = $824;
                                                        break;
                                                    case 'e':
                                                        var $825 = String$nil;
                                                        var $820 = $825;
                                                        break;
                                                };
                                                var $811 = $820;
                                                break;
                                            case 'e':
                                                var $826 = String$nil;
                                                var $811 = $826;
                                                break;
                                        };
                                        var $809 = $811;
                                        break;
                                    case 'i':
                                        var $827 = self.slice(0, -1);
                                        var _bs$9 = $827;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $829 = self.slice(0, -1);
                                                var _bs$11 = $829;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $831 = self.slice(0, -1);
                                                        var _bs$13 = $831;
                                                        var $832 = String$cons$(77, Kind$Name$from_bits$(_bs$13));
                                                        var $830 = $832;
                                                        break;
                                                    case 'i':
                                                        var $833 = self.slice(0, -1);
                                                        var _bs$13 = $833;
                                                        var $834 = String$cons$(78, Kind$Name$from_bits$(_bs$13));
                                                        var $830 = $834;
                                                        break;
                                                    case 'e':
                                                        var $835 = String$nil;
                                                        var $830 = $835;
                                                        break;
                                                };
                                                var $828 = $830;
                                                break;
                                            case 'i':
                                                var $836 = self.slice(0, -1);
                                                var _bs$11 = $836;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $838 = self.slice(0, -1);
                                                        var _bs$13 = $838;
                                                        var $839 = String$cons$(79, Kind$Name$from_bits$(_bs$13));
                                                        var $837 = $839;
                                                        break;
                                                    case 'i':
                                                        var $840 = self.slice(0, -1);
                                                        var _bs$13 = $840;
                                                        var $841 = String$cons$(80, Kind$Name$from_bits$(_bs$13));
                                                        var $837 = $841;
                                                        break;
                                                    case 'e':
                                                        var $842 = String$nil;
                                                        var $837 = $842;
                                                        break;
                                                };
                                                var $828 = $837;
                                                break;
                                            case 'e':
                                                var $843 = String$nil;
                                                var $828 = $843;
                                                break;
                                        };
                                        var $809 = $828;
                                        break;
                                    case 'e':
                                        var $844 = String$nil;
                                        var $809 = $844;
                                        break;
                                };
                                var $770 = $809;
                                break;
                            case 'e':
                                var $845 = String$nil;
                                var $770 = $845;
                                break;
                        };
                        var $768 = $770;
                        break;
                    case 'i':
                        var $846 = self.slice(0, -1);
                        var _bs$5 = $846;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $848 = self.slice(0, -1);
                                var _bs$7 = $848;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $850 = self.slice(0, -1);
                                        var _bs$9 = $850;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $852 = self.slice(0, -1);
                                                var _bs$11 = $852;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $854 = self.slice(0, -1);
                                                        var _bs$13 = $854;
                                                        var $855 = String$cons$(81, Kind$Name$from_bits$(_bs$13));
                                                        var $853 = $855;
                                                        break;
                                                    case 'i':
                                                        var $856 = self.slice(0, -1);
                                                        var _bs$13 = $856;
                                                        var $857 = String$cons$(82, Kind$Name$from_bits$(_bs$13));
                                                        var $853 = $857;
                                                        break;
                                                    case 'e':
                                                        var $858 = String$nil;
                                                        var $853 = $858;
                                                        break;
                                                };
                                                var $851 = $853;
                                                break;
                                            case 'i':
                                                var $859 = self.slice(0, -1);
                                                var _bs$11 = $859;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $861 = self.slice(0, -1);
                                                        var _bs$13 = $861;
                                                        var $862 = String$cons$(83, Kind$Name$from_bits$(_bs$13));
                                                        var $860 = $862;
                                                        break;
                                                    case 'i':
                                                        var $863 = self.slice(0, -1);
                                                        var _bs$13 = $863;
                                                        var $864 = String$cons$(84, Kind$Name$from_bits$(_bs$13));
                                                        var $860 = $864;
                                                        break;
                                                    case 'e':
                                                        var $865 = String$nil;
                                                        var $860 = $865;
                                                        break;
                                                };
                                                var $851 = $860;
                                                break;
                                            case 'e':
                                                var $866 = String$nil;
                                                var $851 = $866;
                                                break;
                                        };
                                        var $849 = $851;
                                        break;
                                    case 'i':
                                        var $867 = self.slice(0, -1);
                                        var _bs$9 = $867;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $869 = self.slice(0, -1);
                                                var _bs$11 = $869;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $871 = self.slice(0, -1);
                                                        var _bs$13 = $871;
                                                        var $872 = String$cons$(85, Kind$Name$from_bits$(_bs$13));
                                                        var $870 = $872;
                                                        break;
                                                    case 'i':
                                                        var $873 = self.slice(0, -1);
                                                        var _bs$13 = $873;
                                                        var $874 = String$cons$(86, Kind$Name$from_bits$(_bs$13));
                                                        var $870 = $874;
                                                        break;
                                                    case 'e':
                                                        var $875 = String$nil;
                                                        var $870 = $875;
                                                        break;
                                                };
                                                var $868 = $870;
                                                break;
                                            case 'i':
                                                var $876 = self.slice(0, -1);
                                                var _bs$11 = $876;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $878 = self.slice(0, -1);
                                                        var _bs$13 = $878;
                                                        var $879 = String$cons$(87, Kind$Name$from_bits$(_bs$13));
                                                        var $877 = $879;
                                                        break;
                                                    case 'i':
                                                        var $880 = self.slice(0, -1);
                                                        var _bs$13 = $880;
                                                        var $881 = String$cons$(88, Kind$Name$from_bits$(_bs$13));
                                                        var $877 = $881;
                                                        break;
                                                    case 'e':
                                                        var $882 = String$nil;
                                                        var $877 = $882;
                                                        break;
                                                };
                                                var $868 = $877;
                                                break;
                                            case 'e':
                                                var $883 = String$nil;
                                                var $868 = $883;
                                                break;
                                        };
                                        var $849 = $868;
                                        break;
                                    case 'e':
                                        var $884 = String$nil;
                                        var $849 = $884;
                                        break;
                                };
                                var $847 = $849;
                                break;
                            case 'i':
                                var $885 = self.slice(0, -1);
                                var _bs$7 = $885;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $887 = self.slice(0, -1);
                                        var _bs$9 = $887;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $889 = self.slice(0, -1);
                                                var _bs$11 = $889;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $891 = self.slice(0, -1);
                                                        var _bs$13 = $891;
                                                        var $892 = String$cons$(89, Kind$Name$from_bits$(_bs$13));
                                                        var $890 = $892;
                                                        break;
                                                    case 'i':
                                                        var $893 = self.slice(0, -1);
                                                        var _bs$13 = $893;
                                                        var $894 = String$cons$(90, Kind$Name$from_bits$(_bs$13));
                                                        var $890 = $894;
                                                        break;
                                                    case 'e':
                                                        var $895 = String$nil;
                                                        var $890 = $895;
                                                        break;
                                                };
                                                var $888 = $890;
                                                break;
                                            case 'i':
                                                var $896 = self.slice(0, -1);
                                                var _bs$11 = $896;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $898 = self.slice(0, -1);
                                                        var _bs$13 = $898;
                                                        var $899 = String$cons$(97, Kind$Name$from_bits$(_bs$13));
                                                        var $897 = $899;
                                                        break;
                                                    case 'i':
                                                        var $900 = self.slice(0, -1);
                                                        var _bs$13 = $900;
                                                        var $901 = String$cons$(98, Kind$Name$from_bits$(_bs$13));
                                                        var $897 = $901;
                                                        break;
                                                    case 'e':
                                                        var $902 = String$nil;
                                                        var $897 = $902;
                                                        break;
                                                };
                                                var $888 = $897;
                                                break;
                                            case 'e':
                                                var $903 = String$nil;
                                                var $888 = $903;
                                                break;
                                        };
                                        var $886 = $888;
                                        break;
                                    case 'i':
                                        var $904 = self.slice(0, -1);
                                        var _bs$9 = $904;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $906 = self.slice(0, -1);
                                                var _bs$11 = $906;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $908 = self.slice(0, -1);
                                                        var _bs$13 = $908;
                                                        var $909 = String$cons$(99, Kind$Name$from_bits$(_bs$13));
                                                        var $907 = $909;
                                                        break;
                                                    case 'i':
                                                        var $910 = self.slice(0, -1);
                                                        var _bs$13 = $910;
                                                        var $911 = String$cons$(100, Kind$Name$from_bits$(_bs$13));
                                                        var $907 = $911;
                                                        break;
                                                    case 'e':
                                                        var $912 = String$nil;
                                                        var $907 = $912;
                                                        break;
                                                };
                                                var $905 = $907;
                                                break;
                                            case 'i':
                                                var $913 = self.slice(0, -1);
                                                var _bs$11 = $913;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $915 = self.slice(0, -1);
                                                        var _bs$13 = $915;
                                                        var $916 = String$cons$(101, Kind$Name$from_bits$(_bs$13));
                                                        var $914 = $916;
                                                        break;
                                                    case 'i':
                                                        var $917 = self.slice(0, -1);
                                                        var _bs$13 = $917;
                                                        var $918 = String$cons$(102, Kind$Name$from_bits$(_bs$13));
                                                        var $914 = $918;
                                                        break;
                                                    case 'e':
                                                        var $919 = String$nil;
                                                        var $914 = $919;
                                                        break;
                                                };
                                                var $905 = $914;
                                                break;
                                            case 'e':
                                                var $920 = String$nil;
                                                var $905 = $920;
                                                break;
                                        };
                                        var $886 = $905;
                                        break;
                                    case 'e':
                                        var $921 = String$nil;
                                        var $886 = $921;
                                        break;
                                };
                                var $847 = $886;
                                break;
                            case 'e':
                                var $922 = String$nil;
                                var $847 = $922;
                                break;
                        };
                        var $768 = $847;
                        break;
                    case 'e':
                        var $923 = String$nil;
                        var $768 = $923;
                        break;
                };
                var $766 = $768;
                break;
            case 'i':
                var $924 = self.slice(0, -1);
                var _bs$3 = $924;
                var self = _bs$3;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $926 = self.slice(0, -1);
                        var _bs$5 = $926;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $928 = self.slice(0, -1);
                                var _bs$7 = $928;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $930 = self.slice(0, -1);
                                        var _bs$9 = $930;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $932 = self.slice(0, -1);
                                                var _bs$11 = $932;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $934 = self.slice(0, -1);
                                                        var _bs$13 = $934;
                                                        var $935 = String$cons$(103, Kind$Name$from_bits$(_bs$13));
                                                        var $933 = $935;
                                                        break;
                                                    case 'i':
                                                        var $936 = self.slice(0, -1);
                                                        var _bs$13 = $936;
                                                        var $937 = String$cons$(104, Kind$Name$from_bits$(_bs$13));
                                                        var $933 = $937;
                                                        break;
                                                    case 'e':
                                                        var $938 = String$nil;
                                                        var $933 = $938;
                                                        break;
                                                };
                                                var $931 = $933;
                                                break;
                                            case 'i':
                                                var $939 = self.slice(0, -1);
                                                var _bs$11 = $939;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $941 = self.slice(0, -1);
                                                        var _bs$13 = $941;
                                                        var $942 = String$cons$(105, Kind$Name$from_bits$(_bs$13));
                                                        var $940 = $942;
                                                        break;
                                                    case 'i':
                                                        var $943 = self.slice(0, -1);
                                                        var _bs$13 = $943;
                                                        var $944 = String$cons$(106, Kind$Name$from_bits$(_bs$13));
                                                        var $940 = $944;
                                                        break;
                                                    case 'e':
                                                        var $945 = String$nil;
                                                        var $940 = $945;
                                                        break;
                                                };
                                                var $931 = $940;
                                                break;
                                            case 'e':
                                                var $946 = String$nil;
                                                var $931 = $946;
                                                break;
                                        };
                                        var $929 = $931;
                                        break;
                                    case 'i':
                                        var $947 = self.slice(0, -1);
                                        var _bs$9 = $947;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $949 = self.slice(0, -1);
                                                var _bs$11 = $949;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $951 = self.slice(0, -1);
                                                        var _bs$13 = $951;
                                                        var $952 = String$cons$(107, Kind$Name$from_bits$(_bs$13));
                                                        var $950 = $952;
                                                        break;
                                                    case 'i':
                                                        var $953 = self.slice(0, -1);
                                                        var _bs$13 = $953;
                                                        var $954 = String$cons$(108, Kind$Name$from_bits$(_bs$13));
                                                        var $950 = $954;
                                                        break;
                                                    case 'e':
                                                        var $955 = String$nil;
                                                        var $950 = $955;
                                                        break;
                                                };
                                                var $948 = $950;
                                                break;
                                            case 'i':
                                                var $956 = self.slice(0, -1);
                                                var _bs$11 = $956;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $958 = self.slice(0, -1);
                                                        var _bs$13 = $958;
                                                        var $959 = String$cons$(109, Kind$Name$from_bits$(_bs$13));
                                                        var $957 = $959;
                                                        break;
                                                    case 'i':
                                                        var $960 = self.slice(0, -1);
                                                        var _bs$13 = $960;
                                                        var $961 = String$cons$(110, Kind$Name$from_bits$(_bs$13));
                                                        var $957 = $961;
                                                        break;
                                                    case 'e':
                                                        var $962 = String$nil;
                                                        var $957 = $962;
                                                        break;
                                                };
                                                var $948 = $957;
                                                break;
                                            case 'e':
                                                var $963 = String$nil;
                                                var $948 = $963;
                                                break;
                                        };
                                        var $929 = $948;
                                        break;
                                    case 'e':
                                        var $964 = String$nil;
                                        var $929 = $964;
                                        break;
                                };
                                var $927 = $929;
                                break;
                            case 'i':
                                var $965 = self.slice(0, -1);
                                var _bs$7 = $965;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $967 = self.slice(0, -1);
                                        var _bs$9 = $967;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $969 = self.slice(0, -1);
                                                var _bs$11 = $969;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $971 = self.slice(0, -1);
                                                        var _bs$13 = $971;
                                                        var $972 = String$cons$(111, Kind$Name$from_bits$(_bs$13));
                                                        var $970 = $972;
                                                        break;
                                                    case 'i':
                                                        var $973 = self.slice(0, -1);
                                                        var _bs$13 = $973;
                                                        var $974 = String$cons$(112, Kind$Name$from_bits$(_bs$13));
                                                        var $970 = $974;
                                                        break;
                                                    case 'e':
                                                        var $975 = String$nil;
                                                        var $970 = $975;
                                                        break;
                                                };
                                                var $968 = $970;
                                                break;
                                            case 'i':
                                                var $976 = self.slice(0, -1);
                                                var _bs$11 = $976;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $978 = self.slice(0, -1);
                                                        var _bs$13 = $978;
                                                        var $979 = String$cons$(113, Kind$Name$from_bits$(_bs$13));
                                                        var $977 = $979;
                                                        break;
                                                    case 'i':
                                                        var $980 = self.slice(0, -1);
                                                        var _bs$13 = $980;
                                                        var $981 = String$cons$(114, Kind$Name$from_bits$(_bs$13));
                                                        var $977 = $981;
                                                        break;
                                                    case 'e':
                                                        var $982 = String$nil;
                                                        var $977 = $982;
                                                        break;
                                                };
                                                var $968 = $977;
                                                break;
                                            case 'e':
                                                var $983 = String$nil;
                                                var $968 = $983;
                                                break;
                                        };
                                        var $966 = $968;
                                        break;
                                    case 'i':
                                        var $984 = self.slice(0, -1);
                                        var _bs$9 = $984;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $986 = self.slice(0, -1);
                                                var _bs$11 = $986;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $988 = self.slice(0, -1);
                                                        var _bs$13 = $988;
                                                        var $989 = String$cons$(115, Kind$Name$from_bits$(_bs$13));
                                                        var $987 = $989;
                                                        break;
                                                    case 'i':
                                                        var $990 = self.slice(0, -1);
                                                        var _bs$13 = $990;
                                                        var $991 = String$cons$(116, Kind$Name$from_bits$(_bs$13));
                                                        var $987 = $991;
                                                        break;
                                                    case 'e':
                                                        var $992 = String$nil;
                                                        var $987 = $992;
                                                        break;
                                                };
                                                var $985 = $987;
                                                break;
                                            case 'i':
                                                var $993 = self.slice(0, -1);
                                                var _bs$11 = $993;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $995 = self.slice(0, -1);
                                                        var _bs$13 = $995;
                                                        var $996 = String$cons$(117, Kind$Name$from_bits$(_bs$13));
                                                        var $994 = $996;
                                                        break;
                                                    case 'i':
                                                        var $997 = self.slice(0, -1);
                                                        var _bs$13 = $997;
                                                        var $998 = String$cons$(118, Kind$Name$from_bits$(_bs$13));
                                                        var $994 = $998;
                                                        break;
                                                    case 'e':
                                                        var $999 = String$nil;
                                                        var $994 = $999;
                                                        break;
                                                };
                                                var $985 = $994;
                                                break;
                                            case 'e':
                                                var $1000 = String$nil;
                                                var $985 = $1000;
                                                break;
                                        };
                                        var $966 = $985;
                                        break;
                                    case 'e':
                                        var $1001 = String$nil;
                                        var $966 = $1001;
                                        break;
                                };
                                var $927 = $966;
                                break;
                            case 'e':
                                var $1002 = String$nil;
                                var $927 = $1002;
                                break;
                        };
                        var $925 = $927;
                        break;
                    case 'i':
                        var $1003 = self.slice(0, -1);
                        var _bs$5 = $1003;
                        var self = _bs$5;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $1005 = self.slice(0, -1);
                                var _bs$7 = $1005;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1007 = self.slice(0, -1);
                                        var _bs$9 = $1007;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1009 = self.slice(0, -1);
                                                var _bs$11 = $1009;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1011 = self.slice(0, -1);
                                                        var _bs$13 = $1011;
                                                        var $1012 = String$cons$(119, Kind$Name$from_bits$(_bs$13));
                                                        var $1010 = $1012;
                                                        break;
                                                    case 'i':
                                                        var $1013 = self.slice(0, -1);
                                                        var _bs$13 = $1013;
                                                        var $1014 = String$cons$(120, Kind$Name$from_bits$(_bs$13));
                                                        var $1010 = $1014;
                                                        break;
                                                    case 'e':
                                                        var $1015 = String$nil;
                                                        var $1010 = $1015;
                                                        break;
                                                };
                                                var $1008 = $1010;
                                                break;
                                            case 'i':
                                                var $1016 = self.slice(0, -1);
                                                var _bs$11 = $1016;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1018 = self.slice(0, -1);
                                                        var _bs$13 = $1018;
                                                        var $1019 = String$cons$(121, Kind$Name$from_bits$(_bs$13));
                                                        var $1017 = $1019;
                                                        break;
                                                    case 'i':
                                                        var $1020 = self.slice(0, -1);
                                                        var _bs$13 = $1020;
                                                        var $1021 = String$cons$(122, Kind$Name$from_bits$(_bs$13));
                                                        var $1017 = $1021;
                                                        break;
                                                    case 'e':
                                                        var $1022 = String$nil;
                                                        var $1017 = $1022;
                                                        break;
                                                };
                                                var $1008 = $1017;
                                                break;
                                            case 'e':
                                                var $1023 = String$nil;
                                                var $1008 = $1023;
                                                break;
                                        };
                                        var $1006 = $1008;
                                        break;
                                    case 'i':
                                        var $1024 = self.slice(0, -1);
                                        var _bs$9 = $1024;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1026 = self.slice(0, -1);
                                                var _bs$11 = $1026;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1028 = self.slice(0, -1);
                                                        var _bs$13 = $1028;
                                                        var $1029 = String$cons$(48, Kind$Name$from_bits$(_bs$13));
                                                        var $1027 = $1029;
                                                        break;
                                                    case 'i':
                                                        var $1030 = self.slice(0, -1);
                                                        var _bs$13 = $1030;
                                                        var $1031 = String$cons$(49, Kind$Name$from_bits$(_bs$13));
                                                        var $1027 = $1031;
                                                        break;
                                                    case 'e':
                                                        var $1032 = String$nil;
                                                        var $1027 = $1032;
                                                        break;
                                                };
                                                var $1025 = $1027;
                                                break;
                                            case 'i':
                                                var $1033 = self.slice(0, -1);
                                                var _bs$11 = $1033;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1035 = self.slice(0, -1);
                                                        var _bs$13 = $1035;
                                                        var $1036 = String$cons$(50, Kind$Name$from_bits$(_bs$13));
                                                        var $1034 = $1036;
                                                        break;
                                                    case 'i':
                                                        var $1037 = self.slice(0, -1);
                                                        var _bs$13 = $1037;
                                                        var $1038 = String$cons$(51, Kind$Name$from_bits$(_bs$13));
                                                        var $1034 = $1038;
                                                        break;
                                                    case 'e':
                                                        var $1039 = String$nil;
                                                        var $1034 = $1039;
                                                        break;
                                                };
                                                var $1025 = $1034;
                                                break;
                                            case 'e':
                                                var $1040 = String$nil;
                                                var $1025 = $1040;
                                                break;
                                        };
                                        var $1006 = $1025;
                                        break;
                                    case 'e':
                                        var $1041 = String$nil;
                                        var $1006 = $1041;
                                        break;
                                };
                                var $1004 = $1006;
                                break;
                            case 'i':
                                var $1042 = self.slice(0, -1);
                                var _bs$7 = $1042;
                                var self = _bs$7;
                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                    case 'o':
                                        var $1044 = self.slice(0, -1);
                                        var _bs$9 = $1044;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1046 = self.slice(0, -1);
                                                var _bs$11 = $1046;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1048 = self.slice(0, -1);
                                                        var _bs$13 = $1048;
                                                        var $1049 = String$cons$(52, Kind$Name$from_bits$(_bs$13));
                                                        var $1047 = $1049;
                                                        break;
                                                    case 'i':
                                                        var $1050 = self.slice(0, -1);
                                                        var _bs$13 = $1050;
                                                        var $1051 = String$cons$(53, Kind$Name$from_bits$(_bs$13));
                                                        var $1047 = $1051;
                                                        break;
                                                    case 'e':
                                                        var $1052 = String$nil;
                                                        var $1047 = $1052;
                                                        break;
                                                };
                                                var $1045 = $1047;
                                                break;
                                            case 'i':
                                                var $1053 = self.slice(0, -1);
                                                var _bs$11 = $1053;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1055 = self.slice(0, -1);
                                                        var _bs$13 = $1055;
                                                        var $1056 = String$cons$(54, Kind$Name$from_bits$(_bs$13));
                                                        var $1054 = $1056;
                                                        break;
                                                    case 'i':
                                                        var $1057 = self.slice(0, -1);
                                                        var _bs$13 = $1057;
                                                        var $1058 = String$cons$(55, Kind$Name$from_bits$(_bs$13));
                                                        var $1054 = $1058;
                                                        break;
                                                    case 'e':
                                                        var $1059 = String$nil;
                                                        var $1054 = $1059;
                                                        break;
                                                };
                                                var $1045 = $1054;
                                                break;
                                            case 'e':
                                                var $1060 = String$nil;
                                                var $1045 = $1060;
                                                break;
                                        };
                                        var $1043 = $1045;
                                        break;
                                    case 'i':
                                        var $1061 = self.slice(0, -1);
                                        var _bs$9 = $1061;
                                        var self = _bs$9;
                                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                            case 'o':
                                                var $1063 = self.slice(0, -1);
                                                var _bs$11 = $1063;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1065 = self.slice(0, -1);
                                                        var _bs$13 = $1065;
                                                        var $1066 = String$cons$(56, Kind$Name$from_bits$(_bs$13));
                                                        var $1064 = $1066;
                                                        break;
                                                    case 'i':
                                                        var $1067 = self.slice(0, -1);
                                                        var _bs$13 = $1067;
                                                        var $1068 = String$cons$(57, Kind$Name$from_bits$(_bs$13));
                                                        var $1064 = $1068;
                                                        break;
                                                    case 'e':
                                                        var $1069 = String$nil;
                                                        var $1064 = $1069;
                                                        break;
                                                };
                                                var $1062 = $1064;
                                                break;
                                            case 'i':
                                                var $1070 = self.slice(0, -1);
                                                var _bs$11 = $1070;
                                                var self = _bs$11;
                                                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                                                    case 'o':
                                                        var $1072 = self.slice(0, -1);
                                                        var _bs$13 = $1072;
                                                        var $1073 = String$cons$(46, Kind$Name$from_bits$(_bs$13));
                                                        var $1071 = $1073;
                                                        break;
                                                    case 'i':
                                                        var $1074 = self.slice(0, -1);
                                                        var _bs$13 = $1074;
                                                        var $1075 = String$cons$(95, Kind$Name$from_bits$(_bs$13));
                                                        var $1071 = $1075;
                                                        break;
                                                    case 'e':
                                                        var $1076 = String$nil;
                                                        var $1071 = $1076;
                                                        break;
                                                };
                                                var $1062 = $1071;
                                                break;
                                            case 'e':
                                                var $1077 = String$nil;
                                                var $1062 = $1077;
                                                break;
                                        };
                                        var $1043 = $1062;
                                        break;
                                    case 'e':
                                        var $1078 = String$nil;
                                        var $1043 = $1078;
                                        break;
                                };
                                var $1004 = $1043;
                                break;
                            case 'e':
                                var $1079 = String$nil;
                                var $1004 = $1079;
                                break;
                        };
                        var $925 = $1004;
                        break;
                    case 'e':
                        var $1080 = String$nil;
                        var $925 = $1080;
                        break;
                };
                var $766 = $925;
                break;
            case 'e':
                var $1081 = String$nil;
                var $766 = $1081;
                break;
        };
        return $766;
    };
    const Kind$Name$from_bits = x0 => Kind$Name$from_bits$(x0);

    function Kind$Map$to_list$(_xs$2) {
        var _kvs$3 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        var $1082 = List$mapped$(_kvs$3, (_kv$4 => {
            var self = _kv$4;
            switch (self._) {
                case 'Pair.new':
                    var $1084 = self.fst;
                    var $1085 = self.snd;
                    var $1086 = Pair$new$(Kind$Name$from_bits$($1084), $1085);
                    var $1083 = $1086;
                    break;
            };
            return $1083;
        }));
        return $1082;
    };
    const Kind$Map$to_list = x0 => Kind$Map$to_list$(x0);

    function Kind$Map$keys$(_xs$2) {
        var $1087 = List$mapped$(Kind$Map$to_list$(_xs$2), Pair$fst);
        return $1087;
    };
    const Kind$Map$keys = x0 => Kind$Map$keys$(x0);

    function Kind$Synth$load$cached$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $1089 = self.head;
                var $1090 = self.tail;
                var self = Kind$Synth$load$cached$is_loop$($1089, _defs$2);
                if (self) {
                    var $1092 = Kind$Synth$load$cached$($1090, _defs$2);
                    var $1091 = $1092;
                } else {
                    var _name$5 = $1089;
                    var $1093 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $1094 = _m$bind$6;
                        return $1094;
                    }))(Kind$Synth$load$cached$def$(_name$5))((_defn$6 => {
                        var self = _defn$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1096 = self.value;
                                var self = $1096;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $1098 = self.term;
                                        var $1099 = self.type;
                                        var _defs$17 = Kind$Map$set$(_name$5, $1096, _defs$2);
                                        var _deps$18 = Kind$Map$new;
                                        var _deps$19 = Kind$Core$dependencies$go$($1098, _deps$18);
                                        var _deps$20 = Kind$Core$dependencies$go$($1099, _deps$19);
                                        var _deps$21 = Kind$Map$keys$(_deps$20);
                                        var $1100 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                            var $1101 = _m$bind$22;
                                            return $1101;
                                        }))(Kind$Synth$load$cached$(_deps$21, _defs$17))((_defs$22 => {
                                            var self = _defs$22;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $1103 = self.value;
                                                    var $1104 = Kind$Synth$load$cached$($1090, $1103);
                                                    var $1102 = $1104;
                                                    break;
                                                case 'Maybe.none':
                                                    var $1105 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                                        var $1106 = _m$pure$24;
                                                        return $1106;
                                                    }))(Maybe$none);
                                                    var $1102 = $1105;
                                                    break;
                                            };
                                            return $1102;
                                        }));
                                        var $1097 = $1100;
                                        break;
                                };
                                var $1095 = $1097;
                                break;
                            case 'Maybe.none':
                                var $1107 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                    var $1108 = _m$pure$8;
                                    return $1108;
                                }))(Maybe$none);
                                var $1095 = $1107;
                                break;
                        };
                        return $1095;
                    }));
                    var $1091 = $1093;
                };
                var $1088 = $1091;
                break;
            case 'List.nil':
                var $1109 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1110 = _m$pure$4;
                    return $1110;
                }))(Maybe$some$(_defs$2));
                var $1088 = $1109;
                break;
        };
        return $1088;
    };
    const Kind$Synth$load$cached = x0 => x1 => Kind$Synth$load$cached$(x0, x1);

    function IO$request$(_url$1) {
        var $1111 = IO$ask$("request", _url$1, (_text$2 => {
            var $1112 = IO$end$(_text$2);
            return $1112;
        }));
        return $1111;
    };
    const IO$request = x0 => IO$request$(x0);

    function Kind$Synth$get_kind_code$(_file$1) {
        var $1113 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $1114 = _m$bind$2;
            return $1114;
        }))(IO$get_file$(_file$1))((_code$2 => {
            var self = (_code$2 === "");
            if (self) {
                var $1116 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1117 = _m$bind$3;
                    return $1117;
                }))(IO$request$(("http://uwu.tech:7172/" + _file$1)))((_code$3 => {
                    var $1118 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $1119 = _m$pure$5;
                        return $1119;
                    }))(_code$3);
                    return $1118;
                }));
                var $1115 = $1116;
            } else {
                var $1120 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $1121 = _m$pure$4;
                    return $1121;
                }))(_code$2);
                var $1115 = $1120;
            };
            return $1115;
        }));
        return $1113;
    };
    const Kind$Synth$get_kind_code = x0 => Kind$Synth$get_kind_code$(x0);

    function Parser$is_eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1123 = self.str;
                var self = $1123;
                if (self.length === 0) {
                    var $1125 = Parser$Reply$value$(_pst$1, Bool$true);
                    var $1124 = $1125;
                } else {
                    var $1126 = self.charCodeAt(0);
                    var $1127 = self.slice(1);
                    var $1128 = Parser$Reply$value$(_pst$1, Bool$false);
                    var $1124 = $1128;
                };
                var $1122 = $1124;
                break;
        };
        return $1122;
    };
    const Parser$is_eof = x0 => Parser$is_eof$(x0);

    function Parser$(_V$1) {
        var $1129 = null;
        return $1129;
    };
    const Parser = x0 => Parser$(x0);

    function Parser$choice$(_pars$2, _pst$3) {
        var Parser$choice$ = (_pars$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_pars$2, _pst$3]
        });
        var Parser$choice = _pars$2 => _pst$3 => Parser$choice$(_pars$2, _pst$3);
        var arg = [_pars$2, _pst$3];
        while (true) {
            let [_pars$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1130 = self.err;
                        var $1131 = self.nam;
                        var $1132 = self.ini;
                        var $1133 = self.idx;
                        var $1134 = self.str;
                        var self = _pars$2;
                        switch (self._) {
                            case 'List.cons':
                                var $1136 = self.head;
                                var $1137 = self.tail;
                                var _parsed$11 = $1136(_pst$3);
                                var self = _parsed$11;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1139 = self.err;
                                        var _cur_err$13 = Maybe$some$($1139);
                                        var _far_err$14 = Parser$Error$maybe_combine$($1130, _cur_err$13);
                                        var _new_pst$15 = Parser$State$new$(_far_err$14, $1131, $1132, $1133, $1134);
                                        var $1140 = Parser$choice$($1137, _new_pst$15);
                                        var $1138 = $1140;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1141 = self.pst;
                                        var $1142 = self.val;
                                        var $1143 = Parser$Reply$value$($1141, $1142);
                                        var $1138 = $1143;
                                        break;
                                };
                                var $1135 = $1138;
                                break;
                            case 'List.nil':
                                var self = $1130;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $1145 = self.value;
                                        var $1146 = Parser$Reply$error$($1145);
                                        var $1144 = $1146;
                                        break;
                                    case 'Maybe.none':
                                        var $1147 = Parser$Reply$fail$($1131, $1132, $1133, "No parse.");
                                        var $1144 = $1147;
                                        break;
                                };
                                var $1135 = $1144;
                                break;
                        };
                        return $1135;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$choice = x0 => x1 => Parser$choice$(x0, x1);

    function Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4) {
        var Parser$text$go$ = (_ini_idx$1, _ini_txt$2, _text$3, _pst$4) => ({
            ctr: 'TCO',
            arg: [_ini_idx$1, _ini_txt$2, _text$3, _pst$4]
        });
        var Parser$text$go = _ini_idx$1 => _ini_txt$2 => _text$3 => _pst$4 => Parser$text$go$(_ini_idx$1, _ini_txt$2, _text$3, _pst$4);
        var arg = [_ini_idx$1, _ini_txt$2, _text$3, _pst$4];
        while (true) {
            let [_ini_idx$1, _ini_txt$2, _text$3, _pst$4] = arg;
            var R = (() => {
                var self = _pst$4;
                switch (self._) {
                    case 'Parser.State.new':
                        var $1148 = self.err;
                        var $1149 = self.nam;
                        var $1150 = self.ini;
                        var $1151 = self.idx;
                        var $1152 = self.str;
                        var self = _text$3;
                        if (self.length === 0) {
                            var $1154 = Parser$Reply$value$(_pst$4, Unit$new);
                            var $1153 = $1154;
                        } else {
                            var $1155 = self.charCodeAt(0);
                            var $1156 = self.slice(1);
                            var self = $1152;
                            if (self.length === 0) {
                                var _error_msg$12 = ("Expected \'" + (_ini_txt$2 + "\', found end of file."));
                                var $1158 = Parser$Reply$fail$($1149, $1150, _ini_idx$1, _error_msg$12);
                                var $1157 = $1158;
                            } else {
                                var $1159 = self.charCodeAt(0);
                                var $1160 = self.slice(1);
                                var self = ($1155 === $1159);
                                if (self) {
                                    var _pst$14 = Parser$State$new$($1148, $1149, $1150, Nat$succ$($1151), $1160);
                                    var $1162 = Parser$text$go$(_ini_idx$1, _ini_txt$2, $1156, _pst$14);
                                    var $1161 = $1162;
                                } else {
                                    var _chr$14 = String$cons$($1159, String$nil);
                                    var _err$15 = ("Expected \'" + (_ini_txt$2 + ("\', found \'" + (_chr$14 + "\'."))));
                                    var $1163 = Parser$Reply$fail$($1149, $1150, _ini_idx$1, _err$15);
                                    var $1161 = $1163;
                                };
                                var $1157 = $1161;
                            };
                            var $1153 = $1157;
                        };
                        return $1153;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$text$go = x0 => x1 => x2 => x3 => Parser$text$go$(x0, x1, x2, x3);

    function Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1165 = self.idx;
                var self = Parser$text$go$($1165, _text$1, _text$1, _pst$2);
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1167 = self.err;
                        var $1168 = Parser$Reply$error$($1167);
                        var $1166 = $1168;
                        break;
                    case 'Parser.Reply.value':
                        var $1169 = self.pst;
                        var $1170 = self.val;
                        var $1171 = Parser$Reply$value$($1169, $1170);
                        var $1166 = $1171;
                        break;
                };
                var $1164 = $1166;
                break;
        };
        return $1164;
    };
    const Parser$text = x0 => x1 => Parser$text$(x0, x1);

    function Parser$eof$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1173 = self.nam;
                var $1174 = self.ini;
                var $1175 = self.idx;
                var $1176 = self.str;
                var self = $1176;
                if (self.length === 0) {
                    var $1178 = Parser$Reply$value$(_pst$1, Unit$new);
                    var $1177 = $1178;
                } else {
                    var $1179 = self.charCodeAt(0);
                    var $1180 = self.slice(1);
                    var $1181 = Parser$Reply$fail$($1173, $1174, $1175, "Expected end-of-file.");
                    var $1177 = $1181;
                };
                var $1172 = $1177;
                break;
        };
        return $1172;
    };
    const Parser$eof = x0 => Parser$eof$(x0);

    function Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5) {
        var Parser$until$go$ = (_until$2, _parse$3, _values$4, _pst$5) => ({
            ctr: 'TCO',
            arg: [_until$2, _parse$3, _values$4, _pst$5]
        });
        var Parser$until$go = _until$2 => _parse$3 => _values$4 => _pst$5 => Parser$until$go$(_until$2, _parse$3, _values$4, _pst$5);
        var arg = [_until$2, _parse$3, _values$4, _pst$5];
        while (true) {
            let [_until$2, _parse$3, _values$4, _pst$5] = arg;
            var R = (() => {
                var _until_reply$6 = _until$2(_pst$5);
                var self = _until_reply$6;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1183 = self.err;
                        var _reply$8 = _parse$3(_pst$5);
                        var self = _reply$8;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $1185 = self.err;
                                var $1186 = Parser$Reply$error$(Parser$Error$combine$($1185, $1183));
                                var $1184 = $1186;
                                break;
                            case 'Parser.Reply.value':
                                var $1187 = self.pst;
                                var $1188 = self.val;
                                var $1189 = Parser$until$go$(_until$2, _parse$3, List$cons$($1188, _values$4), $1187);
                                var $1184 = $1189;
                                break;
                        };
                        var $1182 = $1184;
                        break;
                    case 'Parser.Reply.value':
                        var $1190 = self.pst;
                        var $1191 = Parser$Reply$value$($1190, List$reverse$(_values$4));
                        var $1182 = $1191;
                        break;
                };
                return $1182;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Parser$until$go = x0 => x1 => x2 => x3 => Parser$until$go$(x0, x1, x2, x3);

    function Parser$until$(_until$2, _parse$3) {
        var $1192 = Parser$until$go(_until$2)(_parse$3)(List$nil);
        return $1192;
    };
    const Parser$until = x0 => x1 => Parser$until$(x0, x1);

    function Parser$one$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1194 = self.err;
                var $1195 = self.nam;
                var $1196 = self.ini;
                var $1197 = self.idx;
                var $1198 = self.str;
                var self = $1198;
                if (self.length === 0) {
                    var $1200 = Parser$Reply$fail$($1195, $1196, $1197, "Unexpected end of file.");
                    var $1199 = $1200;
                } else {
                    var $1201 = self.charCodeAt(0);
                    var $1202 = self.slice(1);
                    var _pst$9 = Parser$State$new$($1194, $1195, $1196, Nat$succ$($1197), $1202);
                    var $1203 = Parser$Reply$value$(_pst$9, $1201);
                    var $1199 = $1203;
                };
                var $1193 = $1199;
                break;
        };
        return $1193;
    };
    const Parser$one = x0 => Parser$one$(x0);

    function Kind$Parser$comment$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1205 = self.err;
                var _reply$7 = Parser$text$("//", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1207 = self.err;
                        var self = $1205;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1209 = self.value;
                                var $1210 = Parser$Reply$error$(Parser$Error$combine$($1209, $1207));
                                var $1208 = $1210;
                                break;
                            case 'Maybe.none':
                                var $1211 = Parser$Reply$error$($1207);
                                var $1208 = $1211;
                                break;
                        };
                        var $1206 = $1208;
                        break;
                    case 'Parser.Reply.value':
                        var $1212 = self.pst;
                        var self = $1212;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1214 = self.err;
                                var $1215 = self.nam;
                                var $1216 = self.ini;
                                var $1217 = self.idx;
                                var $1218 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1205, $1214), $1215, $1216, $1217, $1218);
                                var _end$16 = Parser$choice(List$cons$(Parser$text("\u{a}"), List$cons$(Parser$eof, List$nil)));
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1220 = self.err;
                                        var _reply$22 = Parser$until$(_end$16, Parser$one)(_reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1222 = self.err;
                                                var self = $1220;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1224 = self.value;
                                                        var $1225 = Parser$Reply$error$(Parser$Error$combine$($1224, $1222));
                                                        var $1223 = $1225;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1226 = Parser$Reply$error$($1222);
                                                        var $1223 = $1226;
                                                        break;
                                                };
                                                var $1221 = $1223;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1227 = self.pst;
                                                var self = $1227;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1229 = self.err;
                                                        var $1230 = self.nam;
                                                        var $1231 = self.ini;
                                                        var $1232 = self.idx;
                                                        var $1233 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($1220, $1229), $1230, $1231, $1232, $1233);
                                                        var $1234 = Parser$Reply$value$(_reply$pst$30, Unit$new);
                                                        var $1228 = $1234;
                                                        break;
                                                };
                                                var $1221 = $1228;
                                                break;
                                        };
                                        var $1219 = $1221;
                                        break;
                                };
                                var $1213 = $1219;
                                break;
                        };
                        var $1206 = $1213;
                        break;
                };
                var $1204 = $1206;
                break;
        };
        return $1204;
    };
    const Kind$Parser$comment = x0 => Kind$Parser$comment$(x0);
    const Kind$Parser$spaces = Parser$many$(Parser$choice(List$cons$(Parser$text(" "), List$cons$(Parser$text("\u{9}"), List$cons$(Parser$text("\u{a}"), List$cons$(Kind$Parser$comment, List$nil))))));

    function Parser$get_idx$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1236 = self.idx;
                var $1237 = Parser$Reply$value$(_pst$1, $1236);
                var $1235 = $1237;
                break;
        };
        return $1235;
    };
    const Parser$get_idx = x0 => Parser$get_idx$(x0);

    function U16$btw$(_a$1, _b$2, _c$3) {
        var $1238 = ((_a$1 <= _b$2) && (_b$2 <= _c$3));
        return $1238;
    };
    const U16$btw = x0 => x1 => x2 => U16$btw$(x0, x1, x2);

    function Kind$Name$is_letter$(_chr$1) {
        var self = U16$btw$(65, _chr$1, 90);
        if (self) {
            var $1240 = Bool$true;
            var $1239 = $1240;
        } else {
            var self = U16$btw$(97, _chr$1, 122);
            if (self) {
                var $1242 = Bool$true;
                var $1241 = $1242;
            } else {
                var self = U16$btw$(48, _chr$1, 57);
                if (self) {
                    var $1244 = Bool$true;
                    var $1243 = $1244;
                } else {
                    var self = (46 === _chr$1);
                    if (self) {
                        var $1246 = Bool$true;
                        var $1245 = $1246;
                    } else {
                        var self = (95 === _chr$1);
                        if (self) {
                            var $1248 = Bool$true;
                            var $1247 = $1248;
                        } else {
                            var self = (94 === _chr$1);
                            if (self) {
                                var $1250 = Bool$true;
                                var $1249 = $1250;
                            } else {
                                var $1251 = Bool$false;
                                var $1249 = $1251;
                            };
                            var $1247 = $1249;
                        };
                        var $1245 = $1247;
                    };
                    var $1243 = $1245;
                };
                var $1241 = $1243;
            };
            var $1239 = $1241;
        };
        return $1239;
    };
    const Kind$Name$is_letter = x0 => Kind$Name$is_letter$(x0);

    function Kind$Parser$letter$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1253 = self.err;
                var $1254 = self.nam;
                var $1255 = self.ini;
                var $1256 = self.idx;
                var $1257 = self.str;
                var self = $1257;
                if (self.length === 0) {
                    var $1259 = Parser$Reply$fail$($1254, $1255, $1256, "Unexpected eof.");
                    var $1258 = $1259;
                } else {
                    var $1260 = self.charCodeAt(0);
                    var $1261 = self.slice(1);
                    var self = Kind$Name$is_letter$($1260);
                    if (self) {
                        var _pst$9 = Parser$State$new$($1253, $1254, $1255, Nat$succ$($1256), $1261);
                        var $1263 = Parser$Reply$value$(_pst$9, $1260);
                        var $1262 = $1263;
                    } else {
                        var $1264 = Parser$Reply$fail$($1254, $1255, $1256, "Expected name.");
                        var $1262 = $1264;
                    };
                    var $1258 = $1262;
                };
                var $1252 = $1258;
                break;
        };
        return $1252;
    };
    const Kind$Parser$letter = x0 => Kind$Parser$letter$(x0);

    function List$fold$(_list$2, _nil$4, _cons$5) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $1266 = self.head;
                var $1267 = self.tail;
                var $1268 = _cons$5($1266)(List$fold$($1267, _nil$4, _cons$5));
                var $1265 = $1268;
                break;
            case 'List.nil':
                var $1269 = _nil$4;
                var $1265 = $1269;
                break;
        };
        return $1265;
    };
    const List$fold = x0 => x1 => x2 => List$fold$(x0, x1, x2);

    function Parser$fail$(_error$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var $1271 = self.nam;
                var $1272 = self.ini;
                var $1273 = self.idx;
                var $1274 = Parser$Reply$fail$($1271, $1272, $1273, _error$2);
                var $1270 = $1274;
                break;
        };
        return $1270;
    };
    const Parser$fail = x0 => x1 => Parser$fail$(x0, x1);

    function String$head$(_xs$1) {
        var self = _xs$1;
        if (self.length === 0) {
            var $1276 = Maybe$none;
            var $1275 = $1276;
        } else {
            var $1277 = self.charCodeAt(0);
            var $1278 = self.slice(1);
            var $1279 = Maybe$some$($1277);
            var $1275 = $1279;
        };
        return $1275;
    };
    const String$head = x0 => String$head$(x0);

    function Kind$Parser$name1$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1281 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1283 = self.err;
                        var self = $1281;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1285 = self.value;
                                var $1286 = Parser$Reply$error$(Parser$Error$combine$($1285, $1283));
                                var $1284 = $1286;
                                break;
                            case 'Maybe.none':
                                var $1287 = Parser$Reply$error$($1283);
                                var $1284 = $1287;
                                break;
                        };
                        var $1282 = $1284;
                        break;
                    case 'Parser.Reply.value':
                        var $1288 = self.pst;
                        var self = $1288;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1290 = self.err;
                                var $1291 = self.nam;
                                var $1292 = self.ini;
                                var $1293 = self.idx;
                                var $1294 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1281, $1290), $1291, $1292, $1293, $1294);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1296 = self.err;
                                        var _reply$21 = Parser$many1$(Kind$Parser$letter, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1298 = self.err;
                                                var self = $1296;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1300 = self.value;
                                                        var $1301 = Parser$Reply$error$(Parser$Error$combine$($1300, $1298));
                                                        var $1299 = $1301;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1302 = Parser$Reply$error$($1298);
                                                        var $1299 = $1302;
                                                        break;
                                                };
                                                var $1297 = $1299;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1303 = self.pst;
                                                var $1304 = self.val;
                                                var self = $1303;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1306 = self.err;
                                                        var $1307 = self.nam;
                                                        var $1308 = self.ini;
                                                        var $1309 = self.idx;
                                                        var $1310 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1296, $1306), $1307, $1308, $1309, $1310);
                                                        var _name$30 = List$fold$($1304, String$nil, String$cons);
                                                        var _reserved$31 = Parser$fail("Reserved keyword.");
                                                        var _numeric$32 = Parser$fail("Name can\'t start with number or sign.");
                                                        var self = (_name$30 === "case");
                                                        if (self) {
                                                            var $1312 = _reserved$31;
                                                            var $1311 = $1312;
                                                        } else {
                                                            var self = (_name$30 === "do");
                                                            if (self) {
                                                                var $1314 = _reserved$31;
                                                                var $1313 = $1314;
                                                            } else {
                                                                var self = (_name$30 === "if");
                                                                if (self) {
                                                                    var $1316 = _reserved$31;
                                                                    var $1315 = $1316;
                                                                } else {
                                                                    var self = (_name$30 === "with");
                                                                    if (self) {
                                                                        var $1318 = _reserved$31;
                                                                        var $1317 = $1318;
                                                                    } else {
                                                                        var self = (_name$30 === "for");
                                                                        if (self) {
                                                                            var $1320 = _reserved$31;
                                                                            var $1319 = $1320;
                                                                        } else {
                                                                            var self = (_name$30 === "else");
                                                                            if (self) {
                                                                                var $1322 = _reserved$31;
                                                                                var $1321 = $1322;
                                                                            } else {
                                                                                var self = (_name$30 === "switch");
                                                                                if (self) {
                                                                                    var $1324 = _reserved$31;
                                                                                    var $1323 = $1324;
                                                                                } else {
                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 43);
                                                                                    if (self) {
                                                                                        var $1326 = _numeric$32;
                                                                                        var $1325 = $1326;
                                                                                    } else {
                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 45);
                                                                                        if (self) {
                                                                                            var $1328 = _numeric$32;
                                                                                            var $1327 = $1328;
                                                                                        } else {
                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 48);
                                                                                            if (self) {
                                                                                                var $1330 = _numeric$32;
                                                                                                var $1329 = $1330;
                                                                                            } else {
                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 49);
                                                                                                if (self) {
                                                                                                    var $1332 = _numeric$32;
                                                                                                    var $1331 = $1332;
                                                                                                } else {
                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 50);
                                                                                                    if (self) {
                                                                                                        var $1334 = _numeric$32;
                                                                                                        var $1333 = $1334;
                                                                                                    } else {
                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 51);
                                                                                                        if (self) {
                                                                                                            var $1336 = _numeric$32;
                                                                                                            var $1335 = $1336;
                                                                                                        } else {
                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 52);
                                                                                                            if (self) {
                                                                                                                var $1338 = _numeric$32;
                                                                                                                var $1337 = $1338;
                                                                                                            } else {
                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 53);
                                                                                                                if (self) {
                                                                                                                    var $1340 = _numeric$32;
                                                                                                                    var $1339 = $1340;
                                                                                                                } else {
                                                                                                                    var self = (Maybe$default$(String$head$(_name$30), 120) === 54);
                                                                                                                    if (self) {
                                                                                                                        var $1342 = _numeric$32;
                                                                                                                        var $1341 = $1342;
                                                                                                                    } else {
                                                                                                                        var self = (Maybe$default$(String$head$(_name$30), 120) === 55);
                                                                                                                        if (self) {
                                                                                                                            var $1344 = _numeric$32;
                                                                                                                            var $1343 = $1344;
                                                                                                                        } else {
                                                                                                                            var self = (Maybe$default$(String$head$(_name$30), 120) === 56);
                                                                                                                            if (self) {
                                                                                                                                var $1346 = _numeric$32;
                                                                                                                                var $1345 = $1346;
                                                                                                                            } else {
                                                                                                                                var self = (Maybe$default$(String$head$(_name$30), 120) === 57);
                                                                                                                                if (self) {
                                                                                                                                    var $1348 = _numeric$32;
                                                                                                                                    var $1347 = $1348;
                                                                                                                                } else {
                                                                                                                                    var $1349 = (_pst$33 => {
                                                                                                                                        var $1350 = Parser$Reply$value$(_pst$33, _name$30);
                                                                                                                                        return $1350;
                                                                                                                                    });
                                                                                                                                    var $1347 = $1349;
                                                                                                                                };
                                                                                                                                var $1345 = $1347;
                                                                                                                            };
                                                                                                                            var $1343 = $1345;
                                                                                                                        };
                                                                                                                        var $1341 = $1343;
                                                                                                                    };
                                                                                                                    var $1339 = $1341;
                                                                                                                };
                                                                                                                var $1337 = $1339;
                                                                                                            };
                                                                                                            var $1335 = $1337;
                                                                                                        };
                                                                                                        var $1333 = $1335;
                                                                                                    };
                                                                                                    var $1331 = $1333;
                                                                                                };
                                                                                                var $1329 = $1331;
                                                                                            };
                                                                                            var $1327 = $1329;
                                                                                        };
                                                                                        var $1325 = $1327;
                                                                                    };
                                                                                    var $1323 = $1325;
                                                                                };
                                                                                var $1321 = $1323;
                                                                            };
                                                                            var $1319 = $1321;
                                                                        };
                                                                        var $1317 = $1319;
                                                                    };
                                                                    var $1315 = $1317;
                                                                };
                                                                var $1313 = $1315;
                                                            };
                                                            var $1311 = $1313;
                                                        };
                                                        var $1311 = $1311(_reply$pst$29);
                                                        var $1305 = $1311;
                                                        break;
                                                };
                                                var $1297 = $1305;
                                                break;
                                        };
                                        var $1295 = $1297;
                                        break;
                                };
                                var $1289 = $1295;
                                break;
                        };
                        var $1282 = $1289;
                        break;
                };
                var $1280 = $1282;
                break;
        };
        return $1280;
    };
    const Kind$Parser$name1 = x0 => Kind$Parser$name1$(x0);

    function Parser$until1$(_cond$2, _parser$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $1352 = self.err;
                var _reply$10 = _parser$3(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1354 = self.err;
                        var self = $1352;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1356 = self.value;
                                var $1357 = Parser$Reply$error$(Parser$Error$combine$($1356, $1354));
                                var $1355 = $1357;
                                break;
                            case 'Maybe.none':
                                var $1358 = Parser$Reply$error$($1354);
                                var $1355 = $1358;
                                break;
                        };
                        var $1353 = $1355;
                        break;
                    case 'Parser.Reply.value':
                        var $1359 = self.pst;
                        var $1360 = self.val;
                        var self = $1359;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1362 = self.err;
                                var $1363 = self.nam;
                                var $1364 = self.ini;
                                var $1365 = self.idx;
                                var $1366 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($1352, $1362), $1363, $1364, $1365, $1366);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1368 = self.err;
                                        var _reply$24 = Parser$until$(_cond$2, _parser$3)(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1370 = self.err;
                                                var self = $1368;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1372 = self.value;
                                                        var $1373 = Parser$Reply$error$(Parser$Error$combine$($1372, $1370));
                                                        var $1371 = $1373;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1374 = Parser$Reply$error$($1370);
                                                        var $1371 = $1374;
                                                        break;
                                                };
                                                var $1369 = $1371;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1375 = self.pst;
                                                var $1376 = self.val;
                                                var self = $1375;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1378 = self.err;
                                                        var $1379 = self.nam;
                                                        var $1380 = self.ini;
                                                        var $1381 = self.idx;
                                                        var $1382 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($1368, $1378), $1379, $1380, $1381, $1382);
                                                        var $1383 = Parser$Reply$value$(_reply$pst$32, List$cons$($1360, $1376));
                                                        var $1377 = $1383;
                                                        break;
                                                };
                                                var $1369 = $1377;
                                                break;
                                        };
                                        var $1367 = $1369;
                                        break;
                                };
                                var $1361 = $1367;
                                break;
                        };
                        var $1353 = $1361;
                        break;
                };
                var $1351 = $1353;
                break;
        };
        return $1351;
    };
    const Parser$until1 = x0 => x1 => x2 => Parser$until1$(x0, x1, x2);

    function Parser$wrap1$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1385 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1387 = self.err;
                        var self = $1385;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1389 = self.value;
                                var $1390 = Parser$Reply$error$(Parser$Error$combine$($1389, $1387));
                                var $1388 = $1390;
                                break;
                            case 'Maybe.none':
                                var $1391 = Parser$Reply$error$($1387);
                                var $1388 = $1391;
                                break;
                        };
                        var $1386 = $1388;
                        break;
                    case 'Parser.Reply.value':
                        var $1392 = self.pst;
                        var self = $1392;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1394 = self.err;
                                var $1395 = self.nam;
                                var $1396 = self.ini;
                                var $1397 = self.idx;
                                var $1398 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1385, $1394), $1395, $1396, $1397, $1398);
                                var $1399 = Parser$until1$(_close$4, _parse$3, _reply$pst$19);
                                var $1393 = $1399;
                                break;
                        };
                        var $1386 = $1393;
                        break;
                };
                var $1384 = $1386;
                break;
        };
        return $1384;
    };
    const Parser$wrap1 = x0 => x1 => x2 => x3 => Parser$wrap1$(x0, x1, x2, x3);

    function Kind$Parser$text$(_text$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $1401 = self.err;
                var _reply$8 = Kind$Parser$spaces(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1403 = self.err;
                        var self = $1401;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1405 = self.value;
                                var $1406 = Parser$Reply$error$(Parser$Error$combine$($1405, $1403));
                                var $1404 = $1406;
                                break;
                            case 'Maybe.none':
                                var $1407 = Parser$Reply$error$($1403);
                                var $1404 = $1407;
                                break;
                        };
                        var $1402 = $1404;
                        break;
                    case 'Parser.Reply.value':
                        var $1408 = self.pst;
                        var self = $1408;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1410 = self.err;
                                var $1411 = self.nam;
                                var $1412 = self.ini;
                                var $1413 = self.idx;
                                var $1414 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1401, $1410), $1411, $1412, $1413, $1414);
                                var $1415 = Parser$text$(_text$1, _reply$pst$16);
                                var $1409 = $1415;
                                break;
                        };
                        var $1402 = $1409;
                        break;
                };
                var $1400 = $1402;
                break;
        };
        return $1400;
    };
    const Kind$Parser$text = x0 => x1 => Kind$Parser$text$(x0, x1);

    function Parser$maybe$(_parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var self = _parse$2(_pst$3);
                switch (self._) {
                    case 'Parser.Reply.value':
                        var $1418 = self.pst;
                        var $1419 = self.val;
                        var $1420 = Parser$Reply$value$($1418, Maybe$some$($1419));
                        var $1417 = $1420;
                        break;
                    case 'Parser.Reply.error':
                        var $1421 = Parser$Reply$value$(_pst$3, Maybe$none);
                        var $1417 = $1421;
                        break;
                };
                var $1416 = $1417;
                break;
        };
        return $1416;
    };
    const Parser$maybe = x0 => x1 => Parser$maybe$(x0, x1);

    function Kind$Parser$items1$(_ini$2, _parser$3, _end$4) {
        var $1422 = Parser$wrap1(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1424 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1426 = self.err;
                            var self = $1424;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1428 = self.value;
                                    var $1429 = Parser$Reply$error$(Parser$Error$combine$($1428, $1426));
                                    var $1427 = $1429;
                                    break;
                                case 'Maybe.none':
                                    var $1430 = Parser$Reply$error$($1426);
                                    var $1427 = $1430;
                                    break;
                            };
                            var $1425 = $1427;
                            break;
                        case 'Parser.Reply.value':
                            var $1431 = self.pst;
                            var self = $1431;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1433 = self.err;
                                    var $1434 = self.nam;
                                    var $1435 = self.ini;
                                    var $1436 = self.idx;
                                    var $1437 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1424, $1433), $1434, $1435, $1436, $1437);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1439 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1441 = self.err;
                                                    var self = $1439;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1443 = self.value;
                                                            var $1444 = Parser$Reply$error$(Parser$Error$combine$($1443, $1441));
                                                            var $1442 = $1444;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1445 = Parser$Reply$error$($1441);
                                                            var $1442 = $1445;
                                                            break;
                                                    };
                                                    var $1440 = $1442;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1446 = self.pst;
                                                    var $1447 = self.val;
                                                    var self = $1446;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1449 = self.err;
                                                            var $1450 = self.nam;
                                                            var $1451 = self.ini;
                                                            var $1452 = self.idx;
                                                            var $1453 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1439, $1449), $1450, $1451, $1452, $1453);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1455 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1457 = self.err;
                                                                            var self = $1455;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $1459 = self.value;
                                                                                    var $1460 = Parser$Reply$error$(Parser$Error$combine$($1459, $1457));
                                                                                    var $1458 = $1460;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $1461 = Parser$Reply$error$($1457);
                                                                                    var $1458 = $1461;
                                                                                    break;
                                                                            };
                                                                            var $1456 = $1458;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $1462 = self.pst;
                                                                            var self = $1462;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $1464 = self.err;
                                                                                    var $1465 = self.nam;
                                                                                    var $1466 = self.ini;
                                                                                    var $1467 = self.idx;
                                                                                    var $1468 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1455, $1464), $1465, $1466, $1467, $1468);
                                                                                    var $1469 = Parser$Reply$value$(_reply$pst$47, $1447);
                                                                                    var $1463 = $1469;
                                                                                    break;
                                                                            };
                                                                            var $1456 = $1463;
                                                                            break;
                                                                    };
                                                                    var $1454 = $1456;
                                                                    break;
                                                            };
                                                            var $1448 = $1454;
                                                            break;
                                                    };
                                                    var $1440 = $1448;
                                                    break;
                                            };
                                            var $1438 = $1440;
                                            break;
                                    };
                                    var $1432 = $1438;
                                    break;
                            };
                            var $1425 = $1432;
                            break;
                    };
                    var $1423 = $1425;
                    break;
            };
            return $1423;
        }))(Kind$Parser$text(_end$4));
        return $1422;
    };
    const Kind$Parser$items1 = x0 => x1 => x2 => Kind$Parser$items1$(x0, x1, x2);

    function Kind$Parser$name$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1471 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1473 = self.err;
                        var self = $1471;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1475 = self.value;
                                var $1476 = Parser$Reply$error$(Parser$Error$combine$($1475, $1473));
                                var $1474 = $1476;
                                break;
                            case 'Maybe.none':
                                var $1477 = Parser$Reply$error$($1473);
                                var $1474 = $1477;
                                break;
                        };
                        var $1472 = $1474;
                        break;
                    case 'Parser.Reply.value':
                        var $1478 = self.pst;
                        var self = $1478;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1480 = self.err;
                                var $1481 = self.nam;
                                var $1482 = self.ini;
                                var $1483 = self.idx;
                                var $1484 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1471, $1480), $1481, $1482, $1483, $1484);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1486 = self.err;
                                        var _reply$21 = Parser$many$(Kind$Parser$letter)(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1488 = self.err;
                                                var self = $1486;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1490 = self.value;
                                                        var $1491 = Parser$Reply$error$(Parser$Error$combine$($1490, $1488));
                                                        var $1489 = $1491;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1492 = Parser$Reply$error$($1488);
                                                        var $1489 = $1492;
                                                        break;
                                                };
                                                var $1487 = $1489;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1493 = self.pst;
                                                var $1494 = self.val;
                                                var self = $1493;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1496 = self.err;
                                                        var $1497 = self.nam;
                                                        var $1498 = self.ini;
                                                        var $1499 = self.idx;
                                                        var $1500 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1486, $1496), $1497, $1498, $1499, $1500);
                                                        var $1501 = Parser$Reply$value$(_reply$pst$29, List$fold$($1494, String$nil, String$cons));
                                                        var $1495 = $1501;
                                                        break;
                                                };
                                                var $1487 = $1495;
                                                break;
                                        };
                                        var $1485 = $1487;
                                        break;
                                };
                                var $1479 = $1485;
                                break;
                        };
                        var $1472 = $1479;
                        break;
                };
                var $1470 = $1472;
                break;
        };
        return $1470;
    };
    const Kind$Parser$name = x0 => Kind$Parser$name$(x0);

    function Kind$Term$ori$(_orig$1, _expr$2) {
        var $1502 = ({
            _: 'Kind.Term.ori',
            'orig': _orig$1,
            'expr': _expr$2
        });
        return $1502;
    };
    const Kind$Term$ori = x0 => x1 => Kind$Term$ori$(x0, x1);

    function Kind$Parser$block$(_name$1, _parse$2, _pst$3) {
        var self = _pst$3;
        switch (self._) {
            case 'Parser.State.new':
                var _reply$9 = Kind$Parser$spaces(_pst$3);
                var self = _reply$9;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1505 = self.err;
                        var $1506 = Parser$Reply$error$($1505);
                        var $1504 = $1506;
                        break;
                    case 'Parser.Reply.value':
                        var $1507 = self.pst;
                        var _pst$12 = $1507;
                        var self = _pst$12;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1509 = self.err;
                                var $1510 = self.nam;
                                var $1511 = self.ini;
                                var $1512 = self.idx;
                                var $1513 = self.str;
                                var _reply$18 = _parse$2(Parser$State$new$($1509, _name$1, $1512, $1512, $1513));
                                var self = _reply$18;
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $1515 = self.err;
                                        var $1516 = Parser$Reply$error$($1515);
                                        var $1514 = $1516;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $1517 = self.pst;
                                        var $1518 = self.val;
                                        var self = $1517;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $1520 = self.err;
                                                var $1521 = self.idx;
                                                var $1522 = self.str;
                                                var _new_pst$26 = Parser$State$new$($1520, $1510, $1511, $1521, $1522);
                                                var $1523 = Parser$Reply$value$(_new_pst$26, Kind$Term$ori$(Pair$new$($1512, $1521), $1518));
                                                var $1519 = $1523;
                                                break;
                                        };
                                        var $1514 = $1519;
                                        break;
                                };
                                var $1508 = $1514;
                                break;
                        };
                        var $1504 = $1508;
                        break;
                };
                var $1503 = $1504;
                break;
        };
        return $1503;
    };
    const Kind$Parser$block = x0 => x1 => x2 => Kind$Parser$block$(x0, x1, x2);

    function Kind$Parser$dom$prop$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1525 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1527 = self.err;
                        var self = $1525;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1529 = self.value;
                                var $1530 = Parser$Reply$error$(Parser$Error$combine$($1529, $1527));
                                var $1528 = $1530;
                                break;
                            case 'Maybe.none':
                                var $1531 = Parser$Reply$error$($1527);
                                var $1528 = $1531;
                                break;
                        };
                        var $1526 = $1528;
                        break;
                    case 'Parser.Reply.value':
                        var $1532 = self.pst;
                        var $1533 = self.val;
                        var self = $1532;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1535 = self.err;
                                var $1536 = self.nam;
                                var $1537 = self.ini;
                                var $1538 = self.idx;
                                var $1539 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1525, $1535), $1536, $1537, $1538, $1539);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1541 = self.err;
                                        var _reply$21 = Kind$Parser$text$("=", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1543 = self.err;
                                                var self = $1541;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1545 = self.value;
                                                        var $1546 = Parser$Reply$error$(Parser$Error$combine$($1545, $1543));
                                                        var $1544 = $1546;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1547 = Parser$Reply$error$($1543);
                                                        var $1544 = $1547;
                                                        break;
                                                };
                                                var $1542 = $1544;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1548 = self.pst;
                                                var self = $1548;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1550 = self.err;
                                                        var $1551 = self.nam;
                                                        var $1552 = self.ini;
                                                        var $1553 = self.idx;
                                                        var $1554 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1541, $1550), $1551, $1552, $1553, $1554);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1556 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1558 = self.err;
                                                                        var self = $1556;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1560 = self.value;
                                                                                var $1561 = Parser$Reply$error$(Parser$Error$combine$($1560, $1558));
                                                                                var $1559 = $1561;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1562 = Parser$Reply$error$($1558);
                                                                                var $1559 = $1562;
                                                                                break;
                                                                        };
                                                                        var $1557 = $1559;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1563 = self.pst;
                                                                        var $1564 = self.val;
                                                                        var self = $1563;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1566 = self.err;
                                                                                var $1567 = self.nam;
                                                                                var $1568 = self.ini;
                                                                                var $1569 = self.idx;
                                                                                var $1570 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1556, $1566), $1567, $1568, $1569, $1570);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1572 = self.err;
                                                                                        var _reply$49 = Kind$Parser$spaces(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1574 = self.err;
                                                                                                var self = $1572;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1576 = self.value;
                                                                                                        var $1577 = Parser$Reply$error$(Parser$Error$combine$($1576, $1574));
                                                                                                        var $1575 = $1577;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1578 = Parser$Reply$error$($1574);
                                                                                                        var $1575 = $1578;
                                                                                                        break;
                                                                                                };
                                                                                                var $1573 = $1575;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1579 = self.pst;
                                                                                                var self = $1579;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1581 = self.err;
                                                                                                        var $1582 = self.nam;
                                                                                                        var $1583 = self.ini;
                                                                                                        var $1584 = self.idx;
                                                                                                        var $1585 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1572, $1581), $1582, $1583, $1584, $1585);
                                                                                                        var $1586 = Parser$Reply$value$(_reply$pst$57, Pair$new$($1533, $1564));
                                                                                                        var $1580 = $1586;
                                                                                                        break;
                                                                                                };
                                                                                                var $1573 = $1580;
                                                                                                break;
                                                                                        };
                                                                                        var $1571 = $1573;
                                                                                        break;
                                                                                };
                                                                                var $1565 = $1571;
                                                                                break;
                                                                        };
                                                                        var $1557 = $1565;
                                                                        break;
                                                                };
                                                                var $1555 = $1557;
                                                                break;
                                                        };
                                                        var $1549 = $1555;
                                                        break;
                                                };
                                                var $1542 = $1549;
                                                break;
                                        };
                                        var $1540 = $1542;
                                        break;
                                };
                                var $1534 = $1540;
                                break;
                        };
                        var $1526 = $1534;
                        break;
                };
                var $1524 = $1526;
                break;
        };
        return $1524;
    };
    const Kind$Parser$dom$prop = x0 => Kind$Parser$dom$prop$(x0);

    function Kind$Term$hol$(_path$1) {
        var $1587 = ({
            _: 'Kind.Term.hol',
            'path': _path$1
        });
        return $1587;
    };
    const Kind$Term$hol = x0 => Kind$Term$hol$(x0);

    function Kind$Parser$dom$gen_prop$go$(_values$1, _result$2) {
        var Kind$Parser$dom$gen_prop$go$ = (_values$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_values$1, _result$2]
        });
        var Kind$Parser$dom$gen_prop$go = _values$1 => _result$2 => Kind$Parser$dom$gen_prop$go$(_values$1, _result$2);
        var arg = [_values$1, _result$2];
        while (true) {
            let [_values$1, _result$2] = arg;
            var R = (() => {
                var self = _values$1;
                switch (self._) {
                    case 'List.cons':
                        var $1588 = self.head;
                        var $1589 = self.tail;
                        var self = $1588;
                        switch (self._) {
                            case 'Pair.new':
                                var $1591 = self.fst;
                                var $1592 = self.snd;
                                var self = ($1591 === "style");
                                if (self) {
                                    var $1594 = Kind$Parser$dom$gen_prop$go$($1589, Pair$new$((() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1595 = self.fst;
                                                var $1596 = $1595;
                                                return $1596;
                                        };
                                    })(), $1592));
                                    var $1593 = $1594;
                                } else {
                                    var _pair$7 = Kind$Term$ref$("Pair.new");
                                    var _pair$8 = Kind$Term$app$(_pair$7, Kind$Term$hol$(Bits$e));
                                    var _pair$9 = Kind$Term$app$(_pair$8, Kind$Term$hol$(Bits$e));
                                    var _pair$10 = Kind$Term$app$(_pair$9, Kind$Term$str$($1591));
                                    var _pair$11 = Kind$Term$app$(_pair$10, $1592);
                                    var _term$12 = Kind$Term$ref$("List.cons");
                                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                                    var _term$14 = Kind$Term$app$(_term$13, _pair$11);
                                    var _term$15 = Kind$Term$app$(_term$14, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1598 = self.fst;
                                                var $1599 = $1598;
                                                return $1599;
                                        };
                                    })());
                                    var $1597 = Kind$Parser$dom$gen_prop$go$($1589, Pair$new$(_term$15, (() => {
                                        var self = _result$2;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $1600 = self.snd;
                                                var $1601 = $1600;
                                                return $1601;
                                        };
                                    })()));
                                    var $1593 = $1597;
                                };
                                var $1590 = $1593;
                                break;
                        };
                        return $1590;
                    case 'List.nil':
                        var $1602 = _result$2;
                        return $1602;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$dom$gen_prop$go = x0 => x1 => Kind$Parser$dom$gen_prop$go$(x0, x1);

    function Kind$Parser$dom$gen_prop$(_values$1) {
        var _empty_list$2 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
        var _empty_map$3 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
        var self = Kind$Parser$dom$gen_prop$go$(_values$1, Pair$new$(_empty_list$2, _empty_map$3));
        switch (self._) {
            case 'Pair.new':
                var $1604 = self.fst;
                var $1605 = self.snd;
                var _term_prop$6 = Kind$Term$ref$("Map.from_list");
                var _term_prop$7 = Kind$Term$app$(_term_prop$6, Kind$Term$hol$(Bits$e));
                var _term_prop$8 = Kind$Term$app$(_term_prop$7, $1604);
                var $1606 = Pair$new$(_term_prop$8, $1605);
                var $1603 = $1606;
                break;
        };
        return $1603;
    };
    const Kind$Parser$dom$gen_prop = x0 => Kind$Parser$dom$gen_prop$(x0);
    const Kind$Parser$dom$for = Kind$Parser$block("for_dom")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1608 = self.err;
                var _reply$7 = Kind$Parser$text$("for ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1610 = self.err;
                        var self = $1608;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1612 = self.value;
                                var $1613 = Parser$Reply$error$(Parser$Error$combine$($1612, $1610));
                                var $1611 = $1613;
                                break;
                            case 'Maybe.none':
                                var $1614 = Parser$Reply$error$($1610);
                                var $1611 = $1614;
                                break;
                        };
                        var $1609 = $1611;
                        break;
                    case 'Parser.Reply.value':
                        var $1615 = self.pst;
                        var self = $1615;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1617 = self.err;
                                var $1618 = self.nam;
                                var $1619 = self.ini;
                                var $1620 = self.idx;
                                var $1621 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1608, $1617), $1618, $1619, $1620, $1621);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1623 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1625 = self.err;
                                                var self = $1623;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1627 = self.value;
                                                        var $1628 = Parser$Reply$error$(Parser$Error$combine$($1627, $1625));
                                                        var $1626 = $1628;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1629 = Parser$Reply$error$($1625);
                                                        var $1626 = $1629;
                                                        break;
                                                };
                                                var $1624 = $1626;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1630 = self.pst;
                                                var $1631 = self.val;
                                                var self = $1630;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1633 = self.err;
                                                        var $1634 = self.nam;
                                                        var $1635 = self.ini;
                                                        var $1636 = self.idx;
                                                        var $1637 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1623, $1633), $1634, $1635, $1636, $1637);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1639 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1641 = self.err;
                                                                        var self = $1639;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1643 = self.value;
                                                                                var $1644 = Parser$Reply$error$(Parser$Error$combine$($1643, $1641));
                                                                                var $1642 = $1644;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1645 = Parser$Reply$error$($1641);
                                                                                var $1642 = $1645;
                                                                                break;
                                                                        };
                                                                        var $1640 = $1642;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1646 = self.pst;
                                                                        var self = $1646;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1648 = self.err;
                                                                                var $1649 = self.nam;
                                                                                var $1650 = self.ini;
                                                                                var $1651 = self.idx;
                                                                                var $1652 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1639, $1648), $1649, $1650, $1651, $1652);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1654 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1656 = self.err;
                                                                                                var self = $1654;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1658 = self.value;
                                                                                                        var $1659 = Parser$Reply$error$(Parser$Error$combine$($1658, $1656));
                                                                                                        var $1657 = $1659;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1660 = Parser$Reply$error$($1656);
                                                                                                        var $1657 = $1660;
                                                                                                        break;
                                                                                                };
                                                                                                var $1655 = $1657;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1661 = self.pst;
                                                                                                var $1662 = self.val;
                                                                                                var self = $1661;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1664 = self.err;
                                                                                                        var $1665 = self.nam;
                                                                                                        var $1666 = self.ini;
                                                                                                        var $1667 = self.idx;
                                                                                                        var $1668 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1654, $1664), $1665, $1666, $1667, $1668);
                                                                                                        var _empty_list$58 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                                                                                                        var _list_cons$59 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                                                                                                        var _empty_map$60 = Kind$Term$app$(Kind$Term$ref$("Map.new"), Kind$Term$hol$(Bits$e));
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1670 = self.err;
                                                                                                                var _reply$66 = Kind$Parser$text$(":", _reply$pst$57);
                                                                                                                var self = _reply$66;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1672 = self.err;
                                                                                                                        var self = $1670;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1674 = self.value;
                                                                                                                                var $1675 = Parser$Reply$error$(Parser$Error$combine$($1674, $1672));
                                                                                                                                var $1673 = $1675;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1676 = Parser$Reply$error$($1672);
                                                                                                                                var $1673 = $1676;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1671 = $1673;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1677 = self.pst;
                                                                                                                        var self = $1677;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1679 = self.err;
                                                                                                                                var $1680 = self.nam;
                                                                                                                                var $1681 = self.ini;
                                                                                                                                var $1682 = self.idx;
                                                                                                                                var $1683 = self.str;
                                                                                                                                var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($1670, $1679), $1680, $1681, $1682, $1683);
                                                                                                                                var self = _reply$pst$74;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1685 = self.err;
                                                                                                                                        var _reply$80 = Kind$Parser$term(_reply$pst$74);
                                                                                                                                        var self = _reply$80;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1687 = self.err;
                                                                                                                                                var self = $1685;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1689 = self.value;
                                                                                                                                                        var $1690 = Parser$Reply$error$(Parser$Error$combine$($1689, $1687));
                                                                                                                                                        var $1688 = $1690;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1691 = Parser$Reply$error$($1687);
                                                                                                                                                        var $1688 = $1691;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1686 = $1688;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1692 = self.pst;
                                                                                                                                                var $1693 = self.val;
                                                                                                                                                var self = $1692;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1695 = self.err;
                                                                                                                                                        var $1696 = self.nam;
                                                                                                                                                        var $1697 = self.ini;
                                                                                                                                                        var $1698 = self.idx;
                                                                                                                                                        var $1699 = self.str;
                                                                                                                                                        var _reply$pst$88 = Parser$State$new$(Parser$Error$maybe_combine$($1685, $1695), $1696, $1697, $1698, $1699);
                                                                                                                                                        var _term$89 = Kind$Term$ref$("List.fold");
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, $1662);
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _term$93 = Kind$Term$app$(_term$92, _empty_list$58);
                                                                                                                                                        var _lamb$94 = Kind$Term$lam$($1631, (_i$94 => {
                                                                                                                                                            var $1701 = Kind$Term$lam$("placeholder", (_b$95 => {
                                                                                                                                                                var $1702 = Kind$Term$app$(Kind$Term$app$(_list_cons$59, $1693), _b$95);
                                                                                                                                                                return $1702;
                                                                                                                                                            }));
                                                                                                                                                            return $1701;
                                                                                                                                                        }));
                                                                                                                                                        var _term$95 = Kind$Term$app$(_term$93, _lamb$94);
                                                                                                                                                        var _display_content$96 = Kind$Term$app$(Kind$Term$ref$("Map.set"), Kind$Term$hol$(Bits$e));
                                                                                                                                                        var _display_content$97 = Kind$Term$app$(_display_content$96, Kind$Term$str$("display"));
                                                                                                                                                        var _display_content$98 = Kind$Term$app$(_display_content$97, Kind$Term$str$("contents"));
                                                                                                                                                        var _display_content$99 = Kind$Term$app$(_display_content$98, _empty_map$60);
                                                                                                                                                        var _root$100 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _root$101 = Kind$Term$app$(_root$100, Kind$Term$str$("div"));
                                                                                                                                                        var _root$102 = Kind$Term$app$(_root$101, _empty_map$60);
                                                                                                                                                        var _root$103 = Kind$Term$app$(_root$102, _display_content$99);
                                                                                                                                                        var _root$104 = Kind$Term$app$(_root$103, _term$95);
                                                                                                                                                        var $1700 = Parser$Reply$value$(_reply$pst$88, _root$104);
                                                                                                                                                        var $1694 = $1700;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1686 = $1694;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1684 = $1686;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1678 = $1684;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1671 = $1678;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1669 = $1671;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1663 = $1669;
                                                                                                        break;
                                                                                                };
                                                                                                var $1655 = $1663;
                                                                                                break;
                                                                                        };
                                                                                        var $1653 = $1655;
                                                                                        break;
                                                                                };
                                                                                var $1647 = $1653;
                                                                                break;
                                                                        };
                                                                        var $1640 = $1647;
                                                                        break;
                                                                };
                                                                var $1638 = $1640;
                                                                break;
                                                        };
                                                        var $1632 = $1638;
                                                        break;
                                                };
                                                var $1624 = $1632;
                                                break;
                                        };
                                        var $1622 = $1624;
                                        break;
                                };
                                var $1616 = $1622;
                                break;
                        };
                        var $1609 = $1616;
                        break;
                };
                var $1607 = $1609;
                break;
        };
        return $1607;
    }));
    const Kind$Parser$dom$dynamic = Kind$Parser$block("DOM_dynamic")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1704 = self.err;
                var _reply$7 = Kind$Parser$text$("{", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1706 = self.err;
                        var self = $1704;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1708 = self.value;
                                var $1709 = Parser$Reply$error$(Parser$Error$combine$($1708, $1706));
                                var $1707 = $1709;
                                break;
                            case 'Maybe.none':
                                var $1710 = Parser$Reply$error$($1706);
                                var $1707 = $1710;
                                break;
                        };
                        var $1705 = $1707;
                        break;
                    case 'Parser.Reply.value':
                        var $1711 = self.pst;
                        var self = $1711;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1713 = self.err;
                                var $1714 = self.nam;
                                var $1715 = self.ini;
                                var $1716 = self.idx;
                                var $1717 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1704, $1713), $1714, $1715, $1716, $1717);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1719 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Kind$Parser$term, List$nil), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1721 = self.err;
                                                var self = $1719;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1723 = self.value;
                                                        var $1724 = Parser$Reply$error$(Parser$Error$combine$($1723, $1721));
                                                        var $1722 = $1724;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1725 = Parser$Reply$error$($1721);
                                                        var $1722 = $1725;
                                                        break;
                                                };
                                                var $1720 = $1722;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1726 = self.pst;
                                                var $1727 = self.val;
                                                var self = $1726;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1729 = self.err;
                                                        var $1730 = self.nam;
                                                        var $1731 = self.ini;
                                                        var $1732 = self.idx;
                                                        var $1733 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1719, $1729), $1730, $1731, $1732, $1733);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1735 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("}", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1737 = self.err;
                                                                        var self = $1735;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1739 = self.value;
                                                                                var $1740 = Parser$Reply$error$(Parser$Error$combine$($1739, $1737));
                                                                                var $1738 = $1740;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1741 = Parser$Reply$error$($1737);
                                                                                var $1738 = $1741;
                                                                                break;
                                                                        };
                                                                        var $1736 = $1738;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1742 = self.pst;
                                                                        var self = $1742;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1744 = self.err;
                                                                                var $1745 = self.nam;
                                                                                var $1746 = self.ini;
                                                                                var $1747 = self.idx;
                                                                                var $1748 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1735, $1744), $1745, $1746, $1747, $1748);
                                                                                var $1749 = Parser$Reply$value$(_reply$pst$43, $1727);
                                                                                var $1743 = $1749;
                                                                                break;
                                                                        };
                                                                        var $1736 = $1743;
                                                                        break;
                                                                };
                                                                var $1734 = $1736;
                                                                break;
                                                        };
                                                        var $1728 = $1734;
                                                        break;
                                                };
                                                var $1720 = $1728;
                                                break;
                                        };
                                        var $1718 = $1720;
                                        break;
                                };
                                var $1712 = $1718;
                                break;
                        };
                        var $1705 = $1712;
                        break;
                };
                var $1703 = $1705;
                break;
        };
        return $1703;
    }));
    const Kind$Parser$dom$text = Kind$Parser$block("DOM_text")((() => {
        var _term$1 = Kind$Term$ref$("DOM.text");
        var $1750 = (_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $1752 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1754 = self.err;
                            var self = $1752;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1756 = self.value;
                                    var $1757 = Parser$Reply$error$(Parser$Error$combine$($1756, $1754));
                                    var $1755 = $1757;
                                    break;
                                case 'Maybe.none':
                                    var $1758 = Parser$Reply$error$($1754);
                                    var $1755 = $1758;
                                    break;
                            };
                            var $1753 = $1755;
                            break;
                        case 'Parser.Reply.value':
                            var $1759 = self.pst;
                            var $1760 = self.val;
                            var self = $1759;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1762 = self.err;
                                    var $1763 = self.nam;
                                    var $1764 = self.ini;
                                    var $1765 = self.idx;
                                    var $1766 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($1752, $1762), $1763, $1764, $1765, $1766);
                                    var _term$17 = Kind$Term$app$(_term$1, $1760);
                                    var $1767 = Parser$Reply$value$(_reply$pst$16, _term$17);
                                    var $1761 = $1767;
                                    break;
                            };
                            var $1753 = $1761;
                            break;
                    };
                    var $1751 = $1753;
                    break;
            };
            return $1751;
        });
        return $1750;
    })());
    const Kind$Parser$dom$leaf = Kind$Parser$block("DOM_leaf")(Parser$choice(List$cons$(Kind$Parser$dom$for, List$cons$(Kind$Parser$dom$dynamic, List$cons$(Kind$Parser$dom$text, List$nil)))));

    function Kind$Parser$dom$transform_children$(_a$1) {
        var self = _a$1;
        switch (self._) {
            case 'List.cons':
                var $1769 = self.head;
                var $1770 = self.tail;
                var _term$4 = Kind$Term$app$(Kind$Term$ref$("List.cons"), Kind$Term$hol$(Bits$e));
                var _term$5 = Kind$Term$app$(_term$4, $1769);
                var _term$6 = Kind$Term$app$(_term$5, Kind$Parser$dom$transform_children$($1770));
                var $1771 = _term$6;
                var $1768 = $1771;
                break;
            case 'List.nil':
                var $1772 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                var $1768 = $1772;
                break;
        };
        return $1768;
    };
    const Kind$Parser$dom$transform_children = x0 => Kind$Parser$dom$transform_children$(x0);
    const Kind$Parser$dom$node = Kind$Parser$block("DOM.node")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1774 = self.err;
                var _reply$7 = Kind$Parser$text$("<", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1776 = self.err;
                        var self = $1774;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1778 = self.value;
                                var $1779 = Parser$Reply$error$(Parser$Error$combine$($1778, $1776));
                                var $1777 = $1779;
                                break;
                            case 'Maybe.none':
                                var $1780 = Parser$Reply$error$($1776);
                                var $1777 = $1780;
                                break;
                        };
                        var $1775 = $1777;
                        break;
                    case 'Parser.Reply.value':
                        var $1781 = self.pst;
                        var self = $1781;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1783 = self.err;
                                var $1784 = self.nam;
                                var $1785 = self.ini;
                                var $1786 = self.idx;
                                var $1787 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1774, $1783), $1784, $1785, $1786, $1787);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1789 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1791 = self.err;
                                                var self = $1789;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1793 = self.value;
                                                        var $1794 = Parser$Reply$error$(Parser$Error$combine$($1793, $1791));
                                                        var $1792 = $1794;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1795 = Parser$Reply$error$($1791);
                                                        var $1792 = $1795;
                                                        break;
                                                };
                                                var $1790 = $1792;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1796 = self.pst;
                                                var $1797 = self.val;
                                                var self = $1796;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1799 = self.err;
                                                        var $1800 = self.nam;
                                                        var $1801 = self.ini;
                                                        var $1802 = self.idx;
                                                        var $1803 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1789, $1799), $1800, $1801, $1802, $1803);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1805 = self.err;
                                                                var _reply$35 = Kind$Parser$spaces(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1807 = self.err;
                                                                        var self = $1805;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1809 = self.value;
                                                                                var $1810 = Parser$Reply$error$(Parser$Error$combine$($1809, $1807));
                                                                                var $1808 = $1810;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1811 = Parser$Reply$error$($1807);
                                                                                var $1808 = $1811;
                                                                                break;
                                                                        };
                                                                        var $1806 = $1808;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1812 = self.pst;
                                                                        var self = $1812;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1814 = self.err;
                                                                                var $1815 = self.nam;
                                                                                var $1816 = self.ini;
                                                                                var $1817 = self.idx;
                                                                                var $1818 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1805, $1814), $1815, $1816, $1817, $1818);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1820 = self.err;
                                                                                        var _reply$49 = Parser$until$(Kind$Parser$text(">"), Kind$Parser$dom$prop)(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1822 = self.err;
                                                                                                var self = $1820;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1824 = self.value;
                                                                                                        var $1825 = Parser$Reply$error$(Parser$Error$combine$($1824, $1822));
                                                                                                        var $1823 = $1825;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1826 = Parser$Reply$error$($1822);
                                                                                                        var $1823 = $1826;
                                                                                                        break;
                                                                                                };
                                                                                                var $1821 = $1823;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1827 = self.pst;
                                                                                                var $1828 = self.val;
                                                                                                var self = $1827;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1830 = self.err;
                                                                                                        var $1831 = self.nam;
                                                                                                        var $1832 = self.ini;
                                                                                                        var $1833 = self.idx;
                                                                                                        var $1834 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1820, $1830), $1831, $1832, $1833, $1834);
                                                                                                        var _props$58 = Kind$Parser$dom$gen_prop$($1828);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $1836 = self.err;
                                                                                                                var _reply$64 = Parser$many$(Parser$choice(List$cons$(Kind$Parser$dom$node, List$cons$(Kind$Parser$dom$leaf, List$nil))))(_reply$pst$57);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $1838 = self.err;
                                                                                                                        var self = $1836;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $1840 = self.value;
                                                                                                                                var $1841 = Parser$Reply$error$(Parser$Error$combine$($1840, $1838));
                                                                                                                                var $1839 = $1841;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $1842 = Parser$Reply$error$($1838);
                                                                                                                                var $1839 = $1842;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1837 = $1839;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $1843 = self.pst;
                                                                                                                        var $1844 = self.val;
                                                                                                                        var self = $1843;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $1846 = self.err;
                                                                                                                                var $1847 = self.nam;
                                                                                                                                var $1848 = self.ini;
                                                                                                                                var $1849 = self.idx;
                                                                                                                                var $1850 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($1836, $1846), $1847, $1848, $1849, $1850);
                                                                                                                                var _children$73 = Kind$Parser$dom$transform_children$($1844);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $1852 = self.err;
                                                                                                                                        var _reply$79 = Kind$Parser$text$(("</" + ($1797 + ">")), _reply$pst$72);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $1854 = self.err;
                                                                                                                                                var self = $1852;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $1856 = self.value;
                                                                                                                                                        var $1857 = Parser$Reply$error$(Parser$Error$combine$($1856, $1854));
                                                                                                                                                        var $1855 = $1857;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $1858 = Parser$Reply$error$($1854);
                                                                                                                                                        var $1855 = $1858;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1853 = $1855;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $1859 = self.pst;
                                                                                                                                                var self = $1859;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $1861 = self.err;
                                                                                                                                                        var $1862 = self.nam;
                                                                                                                                                        var $1863 = self.ini;
                                                                                                                                                        var $1864 = self.idx;
                                                                                                                                                        var $1865 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($1852, $1861), $1862, $1863, $1864, $1865);
                                                                                                                                                        var _term$88 = Kind$Term$ref$("DOM.node");
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, Kind$Term$str$($1797));
                                                                                                                                                        var _term$90 = Kind$Term$app$(_term$89, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $1867 = self.fst;
                                                                                                                                                                    var $1868 = $1867;
                                                                                                                                                                    return $1868;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$91 = Kind$Term$app$(_term$90, (() => {
                                                                                                                                                            var self = _props$58;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Pair.new':
                                                                                                                                                                    var $1869 = self.snd;
                                                                                                                                                                    var $1870 = $1869;
                                                                                                                                                                    return $1870;
                                                                                                                                                            };
                                                                                                                                                        })());
                                                                                                                                                        var _term$92 = Kind$Term$app$(_term$91, _children$73);
                                                                                                                                                        var $1866 = Parser$Reply$value$(_reply$pst$87, _term$92);
                                                                                                                                                        var $1860 = $1866;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $1853 = $1860;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $1851 = $1853;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $1845 = $1851;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $1837 = $1845;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $1835 = $1837;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $1829 = $1835;
                                                                                                        break;
                                                                                                };
                                                                                                var $1821 = $1829;
                                                                                                break;
                                                                                        };
                                                                                        var $1819 = $1821;
                                                                                        break;
                                                                                };
                                                                                var $1813 = $1819;
                                                                                break;
                                                                        };
                                                                        var $1806 = $1813;
                                                                        break;
                                                                };
                                                                var $1804 = $1806;
                                                                break;
                                                        };
                                                        var $1798 = $1804;
                                                        break;
                                                };
                                                var $1790 = $1798;
                                                break;
                                        };
                                        var $1788 = $1790;
                                        break;
                                };
                                var $1782 = $1788;
                                break;
                        };
                        var $1775 = $1782;
                        break;
                };
                var $1773 = $1775;
                break;
        };
        return $1773;
    }));
    const Kind$Parser$dom = Kind$Parser$dom$node;
    const Kind$Parser$forall = Kind$Parser$block("forall")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $1872 = self.err;
                var _reply$7 = Kind$Parser$name$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1874 = self.err;
                        var self = $1872;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1876 = self.value;
                                var $1877 = Parser$Reply$error$(Parser$Error$combine$($1876, $1874));
                                var $1875 = $1877;
                                break;
                            case 'Maybe.none':
                                var $1878 = Parser$Reply$error$($1874);
                                var $1875 = $1878;
                                break;
                        };
                        var $1873 = $1875;
                        break;
                    case 'Parser.Reply.value':
                        var $1879 = self.pst;
                        var $1880 = self.val;
                        var self = $1879;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1882 = self.err;
                                var $1883 = self.nam;
                                var $1884 = self.ini;
                                var $1885 = self.idx;
                                var $1886 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($1872, $1882), $1883, $1884, $1885, $1886);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $1888 = self.err;
                                        var _reply$21 = Kind$Parser$binder$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $1890 = self.err;
                                                var self = $1888;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $1892 = self.value;
                                                        var $1893 = Parser$Reply$error$(Parser$Error$combine$($1892, $1890));
                                                        var $1891 = $1893;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $1894 = Parser$Reply$error$($1890);
                                                        var $1891 = $1894;
                                                        break;
                                                };
                                                var $1889 = $1891;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $1895 = self.pst;
                                                var $1896 = self.val;
                                                var self = $1895;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $1898 = self.err;
                                                        var $1899 = self.nam;
                                                        var $1900 = self.ini;
                                                        var $1901 = self.idx;
                                                        var $1902 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($1888, $1898), $1899, $1900, $1901, $1902);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $1904 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$text("->"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $1906 = self.err;
                                                                        var self = $1904;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $1908 = self.value;
                                                                                var $1909 = Parser$Reply$error$(Parser$Error$combine$($1908, $1906));
                                                                                var $1907 = $1909;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $1910 = Parser$Reply$error$($1906);
                                                                                var $1907 = $1910;
                                                                                break;
                                                                        };
                                                                        var $1905 = $1907;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $1911 = self.pst;
                                                                        var self = $1911;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $1913 = self.err;
                                                                                var $1914 = self.nam;
                                                                                var $1915 = self.ini;
                                                                                var $1916 = self.idx;
                                                                                var $1917 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($1904, $1913), $1914, $1915, $1916, $1917);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $1919 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $1921 = self.err;
                                                                                                var self = $1919;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $1923 = self.value;
                                                                                                        var $1924 = Parser$Reply$error$(Parser$Error$combine$($1923, $1921));
                                                                                                        var $1922 = $1924;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $1925 = Parser$Reply$error$($1921);
                                                                                                        var $1922 = $1925;
                                                                                                        break;
                                                                                                };
                                                                                                var $1920 = $1922;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $1926 = self.pst;
                                                                                                var $1927 = self.val;
                                                                                                var self = $1926;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $1929 = self.err;
                                                                                                        var $1930 = self.nam;
                                                                                                        var $1931 = self.ini;
                                                                                                        var $1932 = self.idx;
                                                                                                        var $1933 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($1919, $1929), $1930, $1931, $1932, $1933);
                                                                                                        var _term$58 = List$fold$($1896, $1927, (_x$58 => _t$59 => {
                                                                                                            var self = _x$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Binder.new':
                                                                                                                    var $1936 = self.eras;
                                                                                                                    var $1937 = self.name;
                                                                                                                    var $1938 = self.term;
                                                                                                                    var $1939 = Kind$Term$all$($1936, "", $1937, $1938, (_s$63 => _x$64 => {
                                                                                                                        var $1940 = _t$59;
                                                                                                                        return $1940;
                                                                                                                    }));
                                                                                                                    var $1935 = $1939;
                                                                                                                    break;
                                                                                                            };
                                                                                                            return $1935;
                                                                                                        }));
                                                                                                        var $1934 = Parser$Reply$value$(_reply$pst$57, (() => {
                                                                                                            var self = _term$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Kind.Term.all':
                                                                                                                    var $1941 = self.eras;
                                                                                                                    var $1942 = self.name;
                                                                                                                    var $1943 = self.xtyp;
                                                                                                                    var $1944 = self.body;
                                                                                                                    var $1945 = Kind$Term$all$($1941, $1880, $1942, $1943, $1944);
                                                                                                                    return $1945;
                                                                                                                case 'Kind.Term.var':
                                                                                                                case 'Kind.Term.ref':
                                                                                                                case 'Kind.Term.typ':
                                                                                                                case 'Kind.Term.lam':
                                                                                                                case 'Kind.Term.app':
                                                                                                                case 'Kind.Term.let':
                                                                                                                case 'Kind.Term.def':
                                                                                                                case 'Kind.Term.ann':
                                                                                                                case 'Kind.Term.gol':
                                                                                                                case 'Kind.Term.hol':
                                                                                                                case 'Kind.Term.nat':
                                                                                                                case 'Kind.Term.chr':
                                                                                                                case 'Kind.Term.str':
                                                                                                                case 'Kind.Term.num':
                                                                                                                case 'Kind.Term.cse':
                                                                                                                case 'Kind.Term.new':
                                                                                                                case 'Kind.Term.get':
                                                                                                                case 'Kind.Term.set':
                                                                                                                case 'Kind.Term.ope':
                                                                                                                case 'Kind.Term.ori':
                                                                                                                    var $1946 = _term$58;
                                                                                                                    return $1946;
                                                                                                            };
                                                                                                        })());
                                                                                                        var $1928 = $1934;
                                                                                                        break;
                                                                                                };
                                                                                                var $1920 = $1928;
                                                                                                break;
                                                                                        };
                                                                                        var $1918 = $1920;
                                                                                        break;
                                                                                };
                                                                                var $1912 = $1918;
                                                                                break;
                                                                        };
                                                                        var $1905 = $1912;
                                                                        break;
                                                                };
                                                                var $1903 = $1905;
                                                                break;
                                                        };
                                                        var $1897 = $1903;
                                                        break;
                                                };
                                                var $1889 = $1897;
                                                break;
                                        };
                                        var $1887 = $1889;
                                        break;
                                };
                                var $1881 = $1887;
                                break;
                        };
                        var $1873 = $1881;
                        break;
                };
                var $1871 = $1873;
                break;
        };
        return $1871;
    }));

    function Parser$wrap$(_opens$2, _parse$3, _close$4, _pst$5) {
        var self = _pst$5;
        switch (self._) {
            case 'Parser.State.new':
                var $1948 = self.err;
                var _reply$11 = _opens$2(_pst$5);
                var self = _reply$11;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $1950 = self.err;
                        var self = $1948;
                        switch (self._) {
                            case 'Maybe.some':
                                var $1952 = self.value;
                                var $1953 = Parser$Reply$error$(Parser$Error$combine$($1952, $1950));
                                var $1951 = $1953;
                                break;
                            case 'Maybe.none':
                                var $1954 = Parser$Reply$error$($1950);
                                var $1951 = $1954;
                                break;
                        };
                        var $1949 = $1951;
                        break;
                    case 'Parser.Reply.value':
                        var $1955 = self.pst;
                        var self = $1955;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $1957 = self.err;
                                var $1958 = self.nam;
                                var $1959 = self.ini;
                                var $1960 = self.idx;
                                var $1961 = self.str;
                                var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1948, $1957), $1958, $1959, $1960, $1961);
                                var $1962 = Parser$until$(_close$4, _parse$3)(_reply$pst$19);
                                var $1956 = $1962;
                                break;
                        };
                        var $1949 = $1956;
                        break;
                };
                var $1947 = $1949;
                break;
        };
        return $1947;
    };
    const Parser$wrap = x0 => x1 => x2 => x3 => Parser$wrap$(x0, x1, x2, x3);

    function Kind$Parser$items$(_ini$2, _parser$3, _end$4) {
        var $1963 = Parser$wrap(Kind$Parser$text(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $1965 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $1967 = self.err;
                            var self = $1965;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $1969 = self.value;
                                    var $1970 = Parser$Reply$error$(Parser$Error$combine$($1969, $1967));
                                    var $1968 = $1970;
                                    break;
                                case 'Maybe.none':
                                    var $1971 = Parser$Reply$error$($1967);
                                    var $1968 = $1971;
                                    break;
                            };
                            var $1966 = $1968;
                            break;
                        case 'Parser.Reply.value':
                            var $1972 = self.pst;
                            var self = $1972;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $1974 = self.err;
                                    var $1975 = self.nam;
                                    var $1976 = self.ini;
                                    var $1977 = self.idx;
                                    var $1978 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($1965, $1974), $1975, $1976, $1977, $1978);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $1980 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $1982 = self.err;
                                                    var self = $1980;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $1984 = self.value;
                                                            var $1985 = Parser$Reply$error$(Parser$Error$combine$($1984, $1982));
                                                            var $1983 = $1985;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $1986 = Parser$Reply$error$($1982);
                                                            var $1983 = $1986;
                                                            break;
                                                    };
                                                    var $1981 = $1983;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $1987 = self.pst;
                                                    var $1988 = self.val;
                                                    var self = $1987;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $1990 = self.err;
                                                            var $1991 = self.nam;
                                                            var $1992 = self.ini;
                                                            var $1993 = self.idx;
                                                            var $1994 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($1980, $1990), $1991, $1992, $1993, $1994);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $1996 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $1998 = self.err;
                                                                            var self = $1996;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2000 = self.value;
                                                                                    var $2001 = Parser$Reply$error$(Parser$Error$combine$($2000, $1998));
                                                                                    var $1999 = $2001;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2002 = Parser$Reply$error$($1998);
                                                                                    var $1999 = $2002;
                                                                                    break;
                                                                            };
                                                                            var $1997 = $1999;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2003 = self.pst;
                                                                            var self = $2003;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2005 = self.err;
                                                                                    var $2006 = self.nam;
                                                                                    var $2007 = self.ini;
                                                                                    var $2008 = self.idx;
                                                                                    var $2009 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($1996, $2005), $2006, $2007, $2008, $2009);
                                                                                    var $2010 = Parser$Reply$value$(_reply$pst$47, $1988);
                                                                                    var $2004 = $2010;
                                                                                    break;
                                                                            };
                                                                            var $1997 = $2004;
                                                                            break;
                                                                    };
                                                                    var $1995 = $1997;
                                                                    break;
                                                            };
                                                            var $1989 = $1995;
                                                            break;
                                                    };
                                                    var $1981 = $1989;
                                                    break;
                                            };
                                            var $1979 = $1981;
                                            break;
                                    };
                                    var $1973 = $1979;
                                    break;
                            };
                            var $1966 = $1973;
                            break;
                    };
                    var $1964 = $1966;
                    break;
            };
            return $1964;
        }))(Kind$Parser$text(_end$4));
        return $1963;
    };
    const Kind$Parser$items = x0 => x1 => x2 => Kind$Parser$items$(x0, x1, x2);

    function Kind$Parser$lambda$make$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $2012 = self.head;
                var $2013 = self.tail;
                var $2014 = Kind$Term$lam$($2012, (_x$5 => {
                    var $2015 = Kind$Parser$lambda$make$($2013, _body$2);
                    return $2015;
                }));
                var $2011 = $2014;
                break;
            case 'List.nil':
                var $2016 = _body$2;
                var $2011 = $2016;
                break;
        };
        return $2011;
    };
    const Kind$Parser$lambda$make = x0 => x1 => Kind$Parser$lambda$make$(x0, x1);

    function Kind$Parser$lambda$make$start$(_names$1, _body$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.nil':
                var $2018 = Kind$Term$lam$("", (_x$3 => {
                    var $2019 = _body$2;
                    return $2019;
                }));
                var $2017 = $2018;
                break;
            case 'List.cons':
                var $2020 = Kind$Parser$lambda$make$(_names$1, _body$2);
                var $2017 = $2020;
                break;
        };
        return $2017;
    };
    const Kind$Parser$lambda$make$start = x0 => x1 => Kind$Parser$lambda$make$start$(x0, x1);
    const Kind$Parser$lambda = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2022 = self.err;
                var _reply$7 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2024 = self.err;
                        var self = $2022;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2026 = self.value;
                                var $2027 = Parser$Reply$error$(Parser$Error$combine$($2026, $2024));
                                var $2025 = $2027;
                                break;
                            case 'Maybe.none':
                                var $2028 = Parser$Reply$error$($2024);
                                var $2025 = $2028;
                                break;
                        };
                        var $2023 = $2025;
                        break;
                    case 'Parser.Reply.value':
                        var $2029 = self.pst;
                        var $2030 = self.val;
                        var self = $2029;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2032 = self.err;
                                var $2033 = self.nam;
                                var $2034 = self.ini;
                                var $2035 = self.idx;
                                var $2036 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2022, $2032), $2033, $2034, $2035, $2036);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2038 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2040 = self.err;
                                                var self = $2038;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2042 = self.value;
                                                        var $2043 = Parser$Reply$error$(Parser$Error$combine$($2042, $2040));
                                                        var $2041 = $2043;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2044 = Parser$Reply$error$($2040);
                                                        var $2041 = $2044;
                                                        break;
                                                };
                                                var $2039 = $2041;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2045 = self.pst;
                                                var $2046 = self.val;
                                                var self = $2045;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2048 = self.err;
                                                        var $2049 = self.nam;
                                                        var $2050 = self.ini;
                                                        var $2051 = self.idx;
                                                        var $2052 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2038, $2048), $2049, $2050, $2051, $2052);
                                                        var $2053 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2030, $2046));
                                                        var $2047 = $2053;
                                                        break;
                                                };
                                                var $2039 = $2047;
                                                break;
                                        };
                                        var $2037 = $2039;
                                        break;
                                };
                                var $2031 = $2037;
                                break;
                        };
                        var $2023 = $2031;
                        break;
                };
                var $2021 = $2023;
                break;
        };
        return $2021;
    }));
    const Kind$Parser$lambda$erased = Kind$Parser$block("lambda")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2055 = self.err;
                var _reply$7 = Kind$Parser$items$("<", Kind$Parser$name1, ">")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2057 = self.err;
                        var self = $2055;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2059 = self.value;
                                var $2060 = Parser$Reply$error$(Parser$Error$combine$($2059, $2057));
                                var $2058 = $2060;
                                break;
                            case 'Maybe.none':
                                var $2061 = Parser$Reply$error$($2057);
                                var $2058 = $2061;
                                break;
                        };
                        var $2056 = $2058;
                        break;
                    case 'Parser.Reply.value':
                        var $2062 = self.pst;
                        var $2063 = self.val;
                        var self = $2062;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2065 = self.err;
                                var $2066 = self.nam;
                                var $2067 = self.ini;
                                var $2068 = self.idx;
                                var $2069 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2055, $2065), $2066, $2067, $2068, $2069);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2071 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2073 = self.err;
                                                var self = $2071;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2075 = self.value;
                                                        var $2076 = Parser$Reply$error$(Parser$Error$combine$($2075, $2073));
                                                        var $2074 = $2076;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2077 = Parser$Reply$error$($2073);
                                                        var $2074 = $2077;
                                                        break;
                                                };
                                                var $2072 = $2074;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2078 = self.pst;
                                                var $2079 = self.val;
                                                var self = $2078;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2081 = self.err;
                                                        var $2082 = self.nam;
                                                        var $2083 = self.ini;
                                                        var $2084 = self.idx;
                                                        var $2085 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2071, $2081), $2082, $2083, $2084, $2085);
                                                        var $2086 = Parser$Reply$value$(_reply$pst$29, Kind$Parser$lambda$make$start$($2063, $2079));
                                                        var $2080 = $2086;
                                                        break;
                                                };
                                                var $2072 = $2080;
                                                break;
                                        };
                                        var $2070 = $2072;
                                        break;
                                };
                                var $2064 = $2070;
                                break;
                        };
                        var $2056 = $2064;
                        break;
                };
                var $2054 = $2056;
                break;
        };
        return $2054;
    }));
    const Kind$Parser$parenthesis = Kind$Parser$block("parenthesis")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $2088 = self.err;
                var _reply$7 = Kind$Parser$text$("(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $2090 = self.err;
                        var self = $2088;
                        switch (self._) {
                            case 'Maybe.some':
                                var $2092 = self.value;
                                var $2093 = Parser$Reply$error$(Parser$Error$combine$($2092, $2090));
                                var $2091 = $2093;
                                break;
                            case 'Maybe.none':
                                var $2094 = Parser$Reply$error$($2090);
                                var $2091 = $2094;
                                break;
                        };
                        var $2089 = $2091;
                        break;
                    case 'Parser.Reply.value':
                        var $2095 = self.pst;
                        var self = $2095;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $2097 = self.err;
                                var $2098 = self.nam;
                                var $2099 = self.ini;
                                var $2100 = self.idx;
                                var $2101 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($2088, $2097), $2098, $2099, $2100, $2101);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $2103 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $2105 = self.err;
                                                var self = $2103;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $2107 = self.value;
                                                        var $2108 = Parser$Reply$error$(Parser$Error$combine$($2107, $2105));
                                                        var $2106 = $2108;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $2109 = Parser$Reply$error$($2105);
                                                        var $2106 = $2109;
                                                        break;
                                                };
                                                var $2104 = $2106;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $2110 = self.pst;
                                                var $2111 = self.val;
                                                var self = $2110;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $2113 = self.err;
                                                        var $2114 = self.nam;
                                                        var $2115 = self.ini;
                                                        var $2116 = self.idx;
                                                        var $2117 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($2103, $2113), $2114, $2115, $2116, $2117);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $2119 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $2121 = self.err;
                                                                        var self = $2119;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $2123 = self.value;
                                                                                var $2124 = Parser$Reply$error$(Parser$Error$combine$($2123, $2121));
                                                                                var $2122 = $2124;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $2125 = Parser$Reply$error$($2121);
                                                                                var $2122 = $2125;
                                                                                break;
                                                                        };
                                                                        var $2120 = $2122;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $2126 = self.pst;
                                                                        var self = $2126;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $2128 = self.err;
                                                                                var $2129 = self.nam;
                                                                                var $2130 = self.ini;
                                                                                var $2131 = self.idx;
                                                                                var $2132 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($2119, $2128), $2129, $2130, $2131, $2132);
                                                                                var $2133 = Parser$Reply$value$(_reply$pst$43, $2111);
                                                                                var $2127 = $2133;
                                                                                break;
                                                                        };
                                                                        var $2120 = $2127;
                                                                        break;
                                                                };
                                                                var $2118 = $2120;
                                                                break;
                                                        };
                                                        var $2112 = $2118;
                                                        break;
                                                };
                                                var $2104 = $2112;
                                                break;
                                        };
                                        var $2102 = $2104;
                                        break;
                                };
                                var $2096 = $2102;
                                break;
                        };
                        var $2089 = $2096;
                        break;
                };
                var $2087 = $2089;
                break;
        };
        return $2087;
    }));

    function Kind$Parser$letforrange$u32$(_body$1) {
        var $2134 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2136 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2138 = self.err;
                            var self = $2136;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2140 = self.value;
                                    var $2141 = Parser$Reply$error$(Parser$Error$combine$($2140, $2138));
                                    var $2139 = $2141;
                                    break;
                                case 'Maybe.none':
                                    var $2142 = Parser$Reply$error$($2138);
                                    var $2139 = $2142;
                                    break;
                            };
                            var $2137 = $2139;
                            break;
                        case 'Parser.Reply.value':
                            var $2143 = self.pst;
                            var self = $2143;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2145 = self.err;
                                    var $2146 = self.nam;
                                    var $2147 = self.ini;
                                    var $2148 = self.idx;
                                    var $2149 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2136, $2145), $2146, $2147, $2148, $2149);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2151 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2153 = self.err;
                                                    var self = $2151;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2155 = self.value;
                                                            var $2156 = Parser$Reply$error$(Parser$Error$combine$($2155, $2153));
                                                            var $2154 = $2156;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2157 = Parser$Reply$error$($2153);
                                                            var $2154 = $2157;
                                                            break;
                                                    };
                                                    var $2152 = $2154;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2158 = self.pst;
                                                    var $2159 = self.val;
                                                    var self = $2158;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2161 = self.err;
                                                            var $2162 = self.nam;
                                                            var $2163 = self.ini;
                                                            var $2164 = self.idx;
                                                            var $2165 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2151, $2161), $2162, $2163, $2164, $2165);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2167 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2169 = self.err;
                                                                            var self = $2167;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2171 = self.value;
                                                                                    var $2172 = Parser$Reply$error$(Parser$Error$combine$($2171, $2169));
                                                                                    var $2170 = $2172;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2173 = Parser$Reply$error$($2169);
                                                                                    var $2170 = $2173;
                                                                                    break;
                                                                            };
                                                                            var $2168 = $2170;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2174 = self.pst;
                                                                            var self = $2174;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2176 = self.err;
                                                                                    var $2177 = self.nam;
                                                                                    var $2178 = self.ini;
                                                                                    var $2179 = self.idx;
                                                                                    var $2180 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2167, $2176), $2177, $2178, $2179, $2180);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2182 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2184 = self.err;
                                                                                                    var self = $2182;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2186 = self.value;
                                                                                                            var $2187 = Parser$Reply$error$(Parser$Error$combine$($2186, $2184));
                                                                                                            var $2185 = $2187;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2188 = Parser$Reply$error$($2184);
                                                                                                            var $2185 = $2188;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2183 = $2185;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2189 = self.pst;
                                                                                                    var self = $2189;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2191 = self.err;
                                                                                                            var $2192 = self.nam;
                                                                                                            var $2193 = self.ini;
                                                                                                            var $2194 = self.idx;
                                                                                                            var $2195 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2182, $2191), $2192, $2193, $2194, $2195);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2197 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2199 = self.err;
                                                                                                                            var self = $2197;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2201 = self.value;
                                                                                                                                    var $2202 = Parser$Reply$error$(Parser$Error$combine$($2201, $2199));
                                                                                                                                    var $2200 = $2202;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2203 = Parser$Reply$error$($2199);
                                                                                                                                    var $2200 = $2203;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2198 = $2200;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2204 = self.pst;
                                                                                                                            var $2205 = self.val;
                                                                                                                            var self = $2204;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2207 = self.err;
                                                                                                                                    var $2208 = self.nam;
                                                                                                                                    var $2209 = self.ini;
                                                                                                                                    var $2210 = self.idx;
                                                                                                                                    var $2211 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2197, $2207), $2208, $2209, $2210, $2211);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2213 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$(":", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2215 = self.err;
                                                                                                                                                    var self = $2213;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2217 = self.value;
                                                                                                                                                            var $2218 = Parser$Reply$error$(Parser$Error$combine$($2217, $2215));
                                                                                                                                                            var $2216 = $2218;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2219 = Parser$Reply$error$($2215);
                                                                                                                                                            var $2216 = $2219;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2214 = $2216;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2220 = self.pst;
                                                                                                                                                    var self = $2220;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2222 = self.err;
                                                                                                                                                            var $2223 = self.nam;
                                                                                                                                                            var $2224 = self.ini;
                                                                                                                                                            var $2225 = self.idx;
                                                                                                                                                            var $2226 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2213, $2222), $2223, $2224, $2225, $2226);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2228 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("U32", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2230 = self.err;
                                                                                                                                                                            var self = $2228;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2232 = self.value;
                                                                                                                                                                                    var $2233 = Parser$Reply$error$(Parser$Error$combine$($2232, $2230));
                                                                                                                                                                                    var $2231 = $2233;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2234 = Parser$Reply$error$($2230);
                                                                                                                                                                                    var $2231 = $2234;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2229 = $2231;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2235 = self.pst;
                                                                                                                                                                            var self = $2235;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2237 = self.err;
                                                                                                                                                                                    var $2238 = self.nam;
                                                                                                                                                                                    var $2239 = self.ini;
                                                                                                                                                                                    var $2240 = self.idx;
                                                                                                                                                                                    var $2241 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2228, $2237), $2238, $2239, $2240, $2241);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2243 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("from", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2245 = self.err;
                                                                                                                                                                                                    var self = $2243;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2247 = self.value;
                                                                                                                                                                                                            var $2248 = Parser$Reply$error$(Parser$Error$combine$($2247, $2245));
                                                                                                                                                                                                            var $2246 = $2248;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2249 = Parser$Reply$error$($2245);
                                                                                                                                                                                                            var $2246 = $2249;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2244 = $2246;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2250 = self.pst;
                                                                                                                                                                                                    var self = $2250;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2252 = self.err;
                                                                                                                                                                                                            var $2253 = self.nam;
                                                                                                                                                                                                            var $2254 = self.ini;
                                                                                                                                                                                                            var $2255 = self.idx;
                                                                                                                                                                                                            var $2256 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2243, $2252), $2253, $2254, $2255, $2256);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2258 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2260 = self.err;
                                                                                                                                                                                                                            var self = $2258;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2262 = self.value;
                                                                                                                                                                                                                                    var $2263 = Parser$Reply$error$(Parser$Error$combine$($2262, $2260));
                                                                                                                                                                                                                                    var $2261 = $2263;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2264 = Parser$Reply$error$($2260);
                                                                                                                                                                                                                                    var $2261 = $2264;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2259 = $2261;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2265 = self.pst;
                                                                                                                                                                                                                            var $2266 = self.val;
                                                                                                                                                                                                                            var self = $2265;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2268 = self.err;
                                                                                                                                                                                                                                    var $2269 = self.nam;
                                                                                                                                                                                                                                    var $2270 = self.ini;
                                                                                                                                                                                                                                    var $2271 = self.idx;
                                                                                                                                                                                                                                    var $2272 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2258, $2268), $2269, $2270, $2271, $2272);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2274 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$("to", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2276 = self.err;
                                                                                                                                                                                                                                                    var self = $2274;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2278 = self.value;
                                                                                                                                                                                                                                                            var $2279 = Parser$Reply$error$(Parser$Error$combine$($2278, $2276));
                                                                                                                                                                                                                                                            var $2277 = $2279;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2280 = Parser$Reply$error$($2276);
                                                                                                                                                                                                                                                            var $2277 = $2280;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2275 = $2277;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2281 = self.pst;
                                                                                                                                                                                                                                                    var self = $2281;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2283 = self.err;
                                                                                                                                                                                                                                                            var $2284 = self.nam;
                                                                                                                                                                                                                                                            var $2285 = self.ini;
                                                                                                                                                                                                                                                            var $2286 = self.idx;
                                                                                                                                                                                                                                                            var $2287 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2274, $2283), $2284, $2285, $2286, $2287);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2289 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2291 = self.err;
                                                                                                                                                                                                                                                                            var self = $2289;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2293 = self.value;
                                                                                                                                                                                                                                                                                    var $2294 = Parser$Reply$error$(Parser$Error$combine$($2293, $2291));
                                                                                                                                                                                                                                                                                    var $2292 = $2294;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2295 = Parser$Reply$error$($2291);
                                                                                                                                                                                                                                                                                    var $2292 = $2295;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2290 = $2292;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2296 = self.pst;
                                                                                                                                                                                                                                                                            var $2297 = self.val;
                                                                                                                                                                                                                                                                            var self = $2296;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2299 = self.err;
                                                                                                                                                                                                                                                                                    var $2300 = self.nam;
                                                                                                                                                                                                                                                                                    var $2301 = self.ini;
                                                                                                                                                                                                                                                                                    var $2302 = self.idx;
                                                                                                                                                                                                                                                                                    var $2303 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2289, $2299), $2300, $2301, $2302, $2303);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2305 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Kind$Parser$text$(":", _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2307 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2305;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2309 = self.value;
                                                                                                                                                                                                                                                                                                            var $2310 = Parser$Reply$error$(Parser$Error$combine$($2309, $2307));
                                                                                                                                                                                                                                                                                                            var $2308 = $2310;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2311 = Parser$Reply$error$($2307);
                                                                                                                                                                                                                                                                                                            var $2308 = $2311;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2306 = $2308;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2312 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2312;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2314 = self.err;
                                                                                                                                                                                                                                                                                                            var $2315 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2316 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2317 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2318 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2305, $2314), $2315, $2316, $2317, $2318);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2320 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = Kind$Parser$term(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2322 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2320;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2324 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2325 = Parser$Reply$error$(Parser$Error$combine$($2324, $2322));
                                                                                                                                                                                                                                                                                                                                    var $2323 = $2325;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2326 = Parser$Reply$error$($2322);
                                                                                                                                                                                                                                                                                                                                    var $2323 = $2326;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2321 = $2323;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2327 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2328 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2327;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2330 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2331 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2332 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2333 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2334 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2320, $2330), $2331, $2332, $2333, $2334);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$184;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2336 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$190 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$184);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$190;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2338 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2336;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2340 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2341 = Parser$Reply$error$(Parser$Error$combine$($2340, $2338));
                                                                                                                                                                                                                                                                                                                                                            var $2339 = $2341;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2342 = Parser$Reply$error$($2338);
                                                                                                                                                                                                                                                                                                                                                            var $2339 = $2342;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2337 = $2339;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2343 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var self = $2343;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2345 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2346 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2347 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2348 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2349 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$198 = Parser$State$new$(Parser$Error$maybe_combine$($2336, $2345), $2346, $2347, $2348, $2349);
                                                                                                                                                                                                                                                                                                                                                            var self = _reply$pst$198;
                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                    var $2351 = self.err;
                                                                                                                                                                                                                                                                                                                                                                    var _reply$204 = _body$1(Unit$new)(_reply$pst$198);
                                                                                                                                                                                                                                                                                                                                                                    var self = _reply$204;
                                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                                            var $2353 = self.err;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2351;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                                                    var $2355 = self.value;
                                                                                                                                                                                                                                                                                                                                                                                    var $2356 = Parser$Reply$error$(Parser$Error$combine$($2355, $2353));
                                                                                                                                                                                                                                                                                                                                                                                    var $2354 = $2356;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                                                    var $2357 = Parser$Reply$error$($2353);
                                                                                                                                                                                                                                                                                                                                                                                    var $2354 = $2357;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2352 = $2354;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                                            var $2358 = self.pst;
                                                                                                                                                                                                                                                                                                                                                                            var $2359 = self.val;
                                                                                                                                                                                                                                                                                                                                                                            var self = $2358;
                                                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                                                    var $2361 = self.err;
                                                                                                                                                                                                                                                                                                                                                                                    var $2362 = self.nam;
                                                                                                                                                                                                                                                                                                                                                                                    var $2363 = self.ini;
                                                                                                                                                                                                                                                                                                                                                                                    var $2364 = self.idx;
                                                                                                                                                                                                                                                                                                                                                                                    var $2365 = self.str;
                                                                                                                                                                                                                                                                                                                                                                                    var _reply$pst$212 = Parser$State$new$(Parser$Error$maybe_combine$($2351, $2361), $2362, $2363, $2364, $2365);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$213 = Kind$Term$ref$("U32.for");
                                                                                                                                                                                                                                                                                                                                                                                    var _term$214 = Kind$Term$app$(_term$213, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$215 = Kind$Term$app$(_term$214, Kind$Term$ref$($2159));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$216 = Kind$Term$app$(_term$215, $2266);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$217 = Kind$Term$app$(_term$216, $2297);
                                                                                                                                                                                                                                                                                                                                                                                    var _lamb$218 = Kind$Term$lam$($2205, (_e$218 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2367 = Kind$Term$lam$($2159, (_s$219 => {
                                                                                                                                                                                                                                                                                                                                                                                            var $2368 = $2328;
                                                                                                                                                                                                                                                                                                                                                                                            return $2368;
                                                                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                                                                        return $2367;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var _term$219 = Kind$Term$app$(_term$217, _lamb$218);
                                                                                                                                                                                                                                                                                                                                                                                    var _term$220 = Kind$Term$let$($2159, _term$219, (_x$220 => {
                                                                                                                                                                                                                                                                                                                                                                                        var $2369 = $2359;
                                                                                                                                                                                                                                                                                                                                                                                        return $2369;
                                                                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                                                                    var $2366 = Parser$Reply$value$(_reply$pst$212, _term$220);
                                                                                                                                                                                                                                                                                                                                                                                    var $2360 = $2366;
                                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                                            var $2352 = $2360;
                                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                                    var $2350 = $2352;
                                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                                            var $2344 = $2350;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2337 = $2344;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2335 = $2337;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2329 = $2335;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2321 = $2329;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2319 = $2321;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2313 = $2319;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2306 = $2313;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2304 = $2306;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2298 = $2304;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2290 = $2298;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2288 = $2290;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2282 = $2288;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2275 = $2282;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2273 = $2275;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2267 = $2273;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2259 = $2267;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2257 = $2259;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2251 = $2257;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2244 = $2251;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2242 = $2244;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2236 = $2242;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2229 = $2236;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2227 = $2229;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2221 = $2227;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2214 = $2221;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2212 = $2214;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2206 = $2212;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2198 = $2206;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2196 = $2198;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2190 = $2196;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2183 = $2190;
                                                                                                    break;
                                                                                            };
                                                                                            var $2181 = $2183;
                                                                                            break;
                                                                                    };
                                                                                    var $2175 = $2181;
                                                                                    break;
                                                                            };
                                                                            var $2168 = $2175;
                                                                            break;
                                                                    };
                                                                    var $2166 = $2168;
                                                                    break;
                                                            };
                                                            var $2160 = $2166;
                                                            break;
                                                    };
                                                    var $2152 = $2160;
                                                    break;
                                            };
                                            var $2150 = $2152;
                                            break;
                                    };
                                    var $2144 = $2150;
                                    break;
                            };
                            var $2137 = $2144;
                            break;
                    };
                    var $2135 = $2137;
                    break;
            };
            return $2135;
        }));
        return $2134;
    };
    const Kind$Parser$letforrange$u32 = x0 => Kind$Parser$letforrange$u32$(x0);

    function Kind$Parser$letforrange$u32$with$(_body$1) {
        var $2370 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2372 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2374 = self.err;
                            var self = $2372;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2376 = self.value;
                                    var $2377 = Parser$Reply$error$(Parser$Error$combine$($2376, $2374));
                                    var $2375 = $2377;
                                    break;
                                case 'Maybe.none':
                                    var $2378 = Parser$Reply$error$($2374);
                                    var $2375 = $2378;
                                    break;
                            };
                            var $2373 = $2375;
                            break;
                        case 'Parser.Reply.value':
                            var $2379 = self.pst;
                            var self = $2379;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2381 = self.err;
                                    var $2382 = self.nam;
                                    var $2383 = self.ini;
                                    var $2384 = self.idx;
                                    var $2385 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2372, $2381), $2382, $2383, $2384, $2385);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2387 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2389 = self.err;
                                                    var self = $2387;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2391 = self.value;
                                                            var $2392 = Parser$Reply$error$(Parser$Error$combine$($2391, $2389));
                                                            var $2390 = $2392;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2393 = Parser$Reply$error$($2389);
                                                            var $2390 = $2393;
                                                            break;
                                                    };
                                                    var $2388 = $2390;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2394 = self.pst;
                                                    var $2395 = self.val;
                                                    var self = $2394;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2397 = self.err;
                                                            var $2398 = self.nam;
                                                            var $2399 = self.ini;
                                                            var $2400 = self.idx;
                                                            var $2401 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2387, $2397), $2398, $2399, $2400, $2401);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2403 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(":", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2405 = self.err;
                                                                            var self = $2403;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2407 = self.value;
                                                                                    var $2408 = Parser$Reply$error$(Parser$Error$combine$($2407, $2405));
                                                                                    var $2406 = $2408;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2409 = Parser$Reply$error$($2405);
                                                                                    var $2406 = $2409;
                                                                                    break;
                                                                            };
                                                                            var $2404 = $2406;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2410 = self.pst;
                                                                            var self = $2410;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2412 = self.err;
                                                                                    var $2413 = self.nam;
                                                                                    var $2414 = self.ini;
                                                                                    var $2415 = self.idx;
                                                                                    var $2416 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2403, $2412), $2413, $2414, $2415, $2416);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2418 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("U32", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2420 = self.err;
                                                                                                    var self = $2418;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2422 = self.value;
                                                                                                            var $2423 = Parser$Reply$error$(Parser$Error$combine$($2422, $2420));
                                                                                                            var $2421 = $2423;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2424 = Parser$Reply$error$($2420);
                                                                                                            var $2421 = $2424;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2419 = $2421;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2425 = self.pst;
                                                                                                    var self = $2425;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2427 = self.err;
                                                                                                            var $2428 = self.nam;
                                                                                                            var $2429 = self.ini;
                                                                                                            var $2430 = self.idx;
                                                                                                            var $2431 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2418, $2427), $2428, $2429, $2430, $2431);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2433 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("from", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2435 = self.err;
                                                                                                                            var self = $2433;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2437 = self.value;
                                                                                                                                    var $2438 = Parser$Reply$error$(Parser$Error$combine$($2437, $2435));
                                                                                                                                    var $2436 = $2438;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2439 = Parser$Reply$error$($2435);
                                                                                                                                    var $2436 = $2439;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2434 = $2436;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2440 = self.pst;
                                                                                                                            var self = $2440;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2442 = self.err;
                                                                                                                                    var $2443 = self.nam;
                                                                                                                                    var $2444 = self.ini;
                                                                                                                                    var $2445 = self.idx;
                                                                                                                                    var $2446 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2433, $2442), $2443, $2444, $2445, $2446);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2448 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2450 = self.err;
                                                                                                                                                    var self = $2448;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2452 = self.value;
                                                                                                                                                            var $2453 = Parser$Reply$error$(Parser$Error$combine$($2452, $2450));
                                                                                                                                                            var $2451 = $2453;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2454 = Parser$Reply$error$($2450);
                                                                                                                                                            var $2451 = $2454;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2449 = $2451;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2455 = self.pst;
                                                                                                                                                    var $2456 = self.val;
                                                                                                                                                    var self = $2455;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2458 = self.err;
                                                                                                                                                            var $2459 = self.nam;
                                                                                                                                                            var $2460 = self.ini;
                                                                                                                                                            var $2461 = self.idx;
                                                                                                                                                            var $2462 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2448, $2458), $2459, $2460, $2461, $2462);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2464 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("to", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2466 = self.err;
                                                                                                                                                                            var self = $2464;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2468 = self.value;
                                                                                                                                                                                    var $2469 = Parser$Reply$error$(Parser$Error$combine$($2468, $2466));
                                                                                                                                                                                    var $2467 = $2469;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2470 = Parser$Reply$error$($2466);
                                                                                                                                                                                    var $2467 = $2470;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2465 = $2467;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2471 = self.pst;
                                                                                                                                                                            var self = $2471;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2473 = self.err;
                                                                                                                                                                                    var $2474 = self.nam;
                                                                                                                                                                                    var $2475 = self.ini;
                                                                                                                                                                                    var $2476 = self.idx;
                                                                                                                                                                                    var $2477 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2464, $2473), $2474, $2475, $2476, $2477);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2479 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2481 = self.err;
                                                                                                                                                                                                    var self = $2479;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2483 = self.value;
                                                                                                                                                                                                            var $2484 = Parser$Reply$error$(Parser$Error$combine$($2483, $2481));
                                                                                                                                                                                                            var $2482 = $2484;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2485 = Parser$Reply$error$($2481);
                                                                                                                                                                                                            var $2482 = $2485;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2480 = $2482;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2486 = self.pst;
                                                                                                                                                                                                    var $2487 = self.val;
                                                                                                                                                                                                    var self = $2486;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2489 = self.err;
                                                                                                                                                                                                            var $2490 = self.nam;
                                                                                                                                                                                                            var $2491 = self.ini;
                                                                                                                                                                                                            var $2492 = self.idx;
                                                                                                                                                                                                            var $2493 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2479, $2489), $2490, $2491, $2492, $2493);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2495 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$text$("with ", _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2497 = self.err;
                                                                                                                                                                                                                            var self = $2495;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2499 = self.value;
                                                                                                                                                                                                                                    var $2500 = Parser$Reply$error$(Parser$Error$combine$($2499, $2497));
                                                                                                                                                                                                                                    var $2498 = $2500;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2501 = Parser$Reply$error$($2497);
                                                                                                                                                                                                                                    var $2498 = $2501;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2496 = $2498;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2502 = self.pst;
                                                                                                                                                                                                                            var self = $2502;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2504 = self.err;
                                                                                                                                                                                                                                    var $2505 = self.nam;
                                                                                                                                                                                                                                    var $2506 = self.ini;
                                                                                                                                                                                                                                    var $2507 = self.idx;
                                                                                                                                                                                                                                    var $2508 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2495, $2504), $2505, $2506, $2507, $2508);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2510 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$name1$(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2512 = self.err;
                                                                                                                                                                                                                                                    var self = $2510;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2514 = self.value;
                                                                                                                                                                                                                                                            var $2515 = Parser$Reply$error$(Parser$Error$combine$($2514, $2512));
                                                                                                                                                                                                                                                            var $2513 = $2515;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2516 = Parser$Reply$error$($2512);
                                                                                                                                                                                                                                                            var $2513 = $2516;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2511 = $2513;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2517 = self.pst;
                                                                                                                                                                                                                                                    var $2518 = self.val;
                                                                                                                                                                                                                                                    var self = $2517;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2520 = self.err;
                                                                                                                                                                                                                                                            var $2521 = self.nam;
                                                                                                                                                                                                                                                            var $2522 = self.ini;
                                                                                                                                                                                                                                                            var $2523 = self.idx;
                                                                                                                                                                                                                                                            var $2524 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2510, $2520), $2521, $2522, $2523, $2524);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2526 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$text$(":", _reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2528 = self.err;
                                                                                                                                                                                                                                                                            var self = $2526;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2530 = self.value;
                                                                                                                                                                                                                                                                                    var $2531 = Parser$Reply$error$(Parser$Error$combine$($2530, $2528));
                                                                                                                                                                                                                                                                                    var $2529 = $2531;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2532 = Parser$Reply$error$($2528);
                                                                                                                                                                                                                                                                                    var $2529 = $2532;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2527 = $2529;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2533 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2533;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2535 = self.err;
                                                                                                                                                                                                                                                                                    var $2536 = self.nam;
                                                                                                                                                                                                                                                                                    var $2537 = self.ini;
                                                                                                                                                                                                                                                                                    var $2538 = self.idx;
                                                                                                                                                                                                                                                                                    var $2539 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2526, $2535), $2536, $2537, $2538, $2539);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2541 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Kind$Parser$term(_reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2543 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2541;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2545 = self.value;
                                                                                                                                                                                                                                                                                                            var $2546 = Parser$Reply$error$(Parser$Error$combine$($2545, $2543));
                                                                                                                                                                                                                                                                                                            var $2544 = $2546;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2547 = Parser$Reply$error$($2543);
                                                                                                                                                                                                                                                                                                            var $2544 = $2547;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2542 = $2544;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2548 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2549 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2548;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2551 = self.err;
                                                                                                                                                                                                                                                                                                            var $2552 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2553 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2554 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2555 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2541, $2551), $2552, $2553, $2554, $2555);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2557 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2559 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2557;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2561 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2562 = Parser$Reply$error$(Parser$Error$combine$($2561, $2559));
                                                                                                                                                                                                                                                                                                                                    var $2560 = $2562;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2563 = Parser$Reply$error$($2559);
                                                                                                                                                                                                                                                                                                                                    var $2560 = $2563;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2558 = $2560;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2564 = self.pst;
                                                                                                                                                                                                                                                                                                                            var self = $2564;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2566 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2567 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2568 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2569 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2570 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2557, $2566), $2567, $2568, $2569, $2570);
                                                                                                                                                                                                                                                                                                                                    var self = _reply$pst$184;
                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                            var $2572 = self.err;
                                                                                                                                                                                                                                                                                                                                            var _reply$190 = _body$1(Unit$new)(_reply$pst$184);
                                                                                                                                                                                                                                                                                                                                            var self = _reply$190;
                                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                                                    var $2574 = self.err;
                                                                                                                                                                                                                                                                                                                                                    var self = $2572;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                                            var $2576 = self.value;
                                                                                                                                                                                                                                                                                                                                                            var $2577 = Parser$Reply$error$(Parser$Error$combine$($2576, $2574));
                                                                                                                                                                                                                                                                                                                                                            var $2575 = $2577;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                                            var $2578 = Parser$Reply$error$($2574);
                                                                                                                                                                                                                                                                                                                                                            var $2575 = $2578;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2573 = $2575;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                                                    var $2579 = self.pst;
                                                                                                                                                                                                                                                                                                                                                    var $2580 = self.val;
                                                                                                                                                                                                                                                                                                                                                    var self = $2579;
                                                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                                            var $2582 = self.err;
                                                                                                                                                                                                                                                                                                                                                            var $2583 = self.nam;
                                                                                                                                                                                                                                                                                                                                                            var $2584 = self.ini;
                                                                                                                                                                                                                                                                                                                                                            var $2585 = self.idx;
                                                                                                                                                                                                                                                                                                                                                            var $2586 = self.str;
                                                                                                                                                                                                                                                                                                                                                            var _reply$pst$198 = Parser$State$new$(Parser$Error$maybe_combine$($2572, $2582), $2583, $2584, $2585, $2586);
                                                                                                                                                                                                                                                                                                                                                            var _term$199 = Kind$Term$ref$("U32.for");
                                                                                                                                                                                                                                                                                                                                                            var _term$200 = Kind$Term$app$(_term$199, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                                            var _term$201 = Kind$Term$app$(_term$200, Kind$Term$ref$($2518));
                                                                                                                                                                                                                                                                                                                                                            var _term$202 = Kind$Term$app$(_term$201, $2456);
                                                                                                                                                                                                                                                                                                                                                            var _term$203 = Kind$Term$app$(_term$202, $2487);
                                                                                                                                                                                                                                                                                                                                                            var _lamb$204 = Kind$Term$lam$($2395, (_e$204 => {
                                                                                                                                                                                                                                                                                                                                                                var $2588 = Kind$Term$lam$($2518, (_s$205 => {
                                                                                                                                                                                                                                                                                                                                                                    var $2589 = $2549;
                                                                                                                                                                                                                                                                                                                                                                    return $2589;
                                                                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                                                                return $2588;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var _term$205 = Kind$Term$app$(_term$203, _lamb$204);
                                                                                                                                                                                                                                                                                                                                                            var _term$206 = Kind$Term$let$($2518, _term$205, (_x$206 => {
                                                                                                                                                                                                                                                                                                                                                                var $2590 = $2580;
                                                                                                                                                                                                                                                                                                                                                                return $2590;
                                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                                            var $2587 = Parser$Reply$value$(_reply$pst$198, _term$206);
                                                                                                                                                                                                                                                                                                                                                            var $2581 = $2587;
                                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                                    var $2573 = $2581;
                                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                                            var $2571 = $2573;
                                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                                    var $2565 = $2571;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2558 = $2565;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2556 = $2558;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2550 = $2556;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2542 = $2550;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2540 = $2542;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2534 = $2540;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2527 = $2534;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2525 = $2527;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2519 = $2525;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2511 = $2519;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2509 = $2511;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2503 = $2509;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2496 = $2503;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2494 = $2496;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2488 = $2494;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2480 = $2488;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2478 = $2480;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2472 = $2478;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2465 = $2472;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2463 = $2465;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2457 = $2463;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2449 = $2457;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2447 = $2449;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2441 = $2447;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2434 = $2441;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2432 = $2434;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2426 = $2432;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2419 = $2426;
                                                                                                    break;
                                                                                            };
                                                                                            var $2417 = $2419;
                                                                                            break;
                                                                                    };
                                                                                    var $2411 = $2417;
                                                                                    break;
                                                                            };
                                                                            var $2404 = $2411;
                                                                            break;
                                                                    };
                                                                    var $2402 = $2404;
                                                                    break;
                                                            };
                                                            var $2396 = $2402;
                                                            break;
                                                    };
                                                    var $2388 = $2396;
                                                    break;
                                            };
                                            var $2386 = $2388;
                                            break;
                                    };
                                    var $2380 = $2386;
                                    break;
                            };
                            var $2373 = $2380;
                            break;
                    };
                    var $2371 = $2373;
                    break;
            };
            return $2371;
        }));
        return $2370;
    };
    const Kind$Parser$letforrange$u32$with = x0 => Kind$Parser$letforrange$u32$with$(x0);

    function Kind$Parser$letforrange$nat$(_body$1) {
        var $2591 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2593 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2595 = self.err;
                            var self = $2593;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2597 = self.value;
                                    var $2598 = Parser$Reply$error$(Parser$Error$combine$($2597, $2595));
                                    var $2596 = $2598;
                                    break;
                                case 'Maybe.none':
                                    var $2599 = Parser$Reply$error$($2595);
                                    var $2596 = $2599;
                                    break;
                            };
                            var $2594 = $2596;
                            break;
                        case 'Parser.Reply.value':
                            var $2600 = self.pst;
                            var self = $2600;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2602 = self.err;
                                    var $2603 = self.nam;
                                    var $2604 = self.ini;
                                    var $2605 = self.idx;
                                    var $2606 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2593, $2602), $2603, $2604, $2605, $2606);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2608 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2610 = self.err;
                                                    var self = $2608;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2612 = self.value;
                                                            var $2613 = Parser$Reply$error$(Parser$Error$combine$($2612, $2610));
                                                            var $2611 = $2613;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2614 = Parser$Reply$error$($2610);
                                                            var $2611 = $2614;
                                                            break;
                                                    };
                                                    var $2609 = $2611;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2615 = self.pst;
                                                    var $2616 = self.val;
                                                    var self = $2615;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2618 = self.err;
                                                            var $2619 = self.nam;
                                                            var $2620 = self.ini;
                                                            var $2621 = self.idx;
                                                            var $2622 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2608, $2618), $2619, $2620, $2621, $2622);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2624 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2626 = self.err;
                                                                            var self = $2624;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2628 = self.value;
                                                                                    var $2629 = Parser$Reply$error$(Parser$Error$combine$($2628, $2626));
                                                                                    var $2627 = $2629;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2630 = Parser$Reply$error$($2626);
                                                                                    var $2627 = $2630;
                                                                                    break;
                                                                            };
                                                                            var $2625 = $2627;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2631 = self.pst;
                                                                            var self = $2631;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2633 = self.err;
                                                                                    var $2634 = self.nam;
                                                                                    var $2635 = self.ini;
                                                                                    var $2636 = self.idx;
                                                                                    var $2637 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2624, $2633), $2634, $2635, $2636, $2637);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2639 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2641 = self.err;
                                                                                                    var self = $2639;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2643 = self.value;
                                                                                                            var $2644 = Parser$Reply$error$(Parser$Error$combine$($2643, $2641));
                                                                                                            var $2642 = $2644;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2645 = Parser$Reply$error$($2641);
                                                                                                            var $2642 = $2645;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2640 = $2642;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2646 = self.pst;
                                                                                                    var self = $2646;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2648 = self.err;
                                                                                                            var $2649 = self.nam;
                                                                                                            var $2650 = self.ini;
                                                                                                            var $2651 = self.idx;
                                                                                                            var $2652 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2639, $2648), $2649, $2650, $2651, $2652);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2654 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2656 = self.err;
                                                                                                                            var self = $2654;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2658 = self.value;
                                                                                                                                    var $2659 = Parser$Reply$error$(Parser$Error$combine$($2658, $2656));
                                                                                                                                    var $2657 = $2659;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2660 = Parser$Reply$error$($2656);
                                                                                                                                    var $2657 = $2660;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2655 = $2657;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2661 = self.pst;
                                                                                                                            var $2662 = self.val;
                                                                                                                            var self = $2661;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2664 = self.err;
                                                                                                                                    var $2665 = self.nam;
                                                                                                                                    var $2666 = self.ini;
                                                                                                                                    var $2667 = self.idx;
                                                                                                                                    var $2668 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2654, $2664), $2665, $2666, $2667, $2668);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2670 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("from", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2672 = self.err;
                                                                                                                                                    var self = $2670;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2674 = self.value;
                                                                                                                                                            var $2675 = Parser$Reply$error$(Parser$Error$combine$($2674, $2672));
                                                                                                                                                            var $2673 = $2675;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2676 = Parser$Reply$error$($2672);
                                                                                                                                                            var $2673 = $2676;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2671 = $2673;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2677 = self.pst;
                                                                                                                                                    var self = $2677;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2679 = self.err;
                                                                                                                                                            var $2680 = self.nam;
                                                                                                                                                            var $2681 = self.ini;
                                                                                                                                                            var $2682 = self.idx;
                                                                                                                                                            var $2683 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2670, $2679), $2680, $2681, $2682, $2683);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2685 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2687 = self.err;
                                                                                                                                                                            var self = $2685;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2689 = self.value;
                                                                                                                                                                                    var $2690 = Parser$Reply$error$(Parser$Error$combine$($2689, $2687));
                                                                                                                                                                                    var $2688 = $2690;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2691 = Parser$Reply$error$($2687);
                                                                                                                                                                                    var $2688 = $2691;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2686 = $2688;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2692 = self.pst;
                                                                                                                                                                            var $2693 = self.val;
                                                                                                                                                                            var self = $2692;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2695 = self.err;
                                                                                                                                                                                    var $2696 = self.nam;
                                                                                                                                                                                    var $2697 = self.ini;
                                                                                                                                                                                    var $2698 = self.idx;
                                                                                                                                                                                    var $2699 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2685, $2695), $2696, $2697, $2698, $2699);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2701 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("to", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2703 = self.err;
                                                                                                                                                                                                    var self = $2701;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2705 = self.value;
                                                                                                                                                                                                            var $2706 = Parser$Reply$error$(Parser$Error$combine$($2705, $2703));
                                                                                                                                                                                                            var $2704 = $2706;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2707 = Parser$Reply$error$($2703);
                                                                                                                                                                                                            var $2704 = $2707;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2702 = $2704;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2708 = self.pst;
                                                                                                                                                                                                    var self = $2708;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2710 = self.err;
                                                                                                                                                                                                            var $2711 = self.nam;
                                                                                                                                                                                                            var $2712 = self.ini;
                                                                                                                                                                                                            var $2713 = self.idx;
                                                                                                                                                                                                            var $2714 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2701, $2710), $2711, $2712, $2713, $2714);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2716 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2718 = self.err;
                                                                                                                                                                                                                            var self = $2716;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2720 = self.value;
                                                                                                                                                                                                                                    var $2721 = Parser$Reply$error$(Parser$Error$combine$($2720, $2718));
                                                                                                                                                                                                                                    var $2719 = $2721;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2722 = Parser$Reply$error$($2718);
                                                                                                                                                                                                                                    var $2719 = $2722;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2717 = $2719;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2723 = self.pst;
                                                                                                                                                                                                                            var $2724 = self.val;
                                                                                                                                                                                                                            var self = $2723;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2726 = self.err;
                                                                                                                                                                                                                                    var $2727 = self.nam;
                                                                                                                                                                                                                                    var $2728 = self.ini;
                                                                                                                                                                                                                                    var $2729 = self.idx;
                                                                                                                                                                                                                                    var $2730 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2716, $2726), $2727, $2728, $2729, $2730);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2732 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2734 = self.err;
                                                                                                                                                                                                                                                    var self = $2732;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2736 = self.value;
                                                                                                                                                                                                                                                            var $2737 = Parser$Reply$error$(Parser$Error$combine$($2736, $2734));
                                                                                                                                                                                                                                                            var $2735 = $2737;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2738 = Parser$Reply$error$($2734);
                                                                                                                                                                                                                                                            var $2735 = $2738;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2733 = $2735;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2739 = self.pst;
                                                                                                                                                                                                                                                    var self = $2739;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2741 = self.err;
                                                                                                                                                                                                                                                            var $2742 = self.nam;
                                                                                                                                                                                                                                                            var $2743 = self.ini;
                                                                                                                                                                                                                                                            var $2744 = self.idx;
                                                                                                                                                                                                                                                            var $2745 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2732, $2741), $2742, $2743, $2744, $2745);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2747 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2749 = self.err;
                                                                                                                                                                                                                                                                            var self = $2747;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2751 = self.value;
                                                                                                                                                                                                                                                                                    var $2752 = Parser$Reply$error$(Parser$Error$combine$($2751, $2749));
                                                                                                                                                                                                                                                                                    var $2750 = $2752;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2753 = Parser$Reply$error$($2749);
                                                                                                                                                                                                                                                                                    var $2750 = $2753;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2748 = $2750;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2754 = self.pst;
                                                                                                                                                                                                                                                                            var $2755 = self.val;
                                                                                                                                                                                                                                                                            var self = $2754;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2757 = self.err;
                                                                                                                                                                                                                                                                                    var $2758 = self.nam;
                                                                                                                                                                                                                                                                                    var $2759 = self.ini;
                                                                                                                                                                                                                                                                                    var $2760 = self.idx;
                                                                                                                                                                                                                                                                                    var $2761 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2747, $2757), $2758, $2759, $2760, $2761);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2763 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2765 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2763;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2767 = self.value;
                                                                                                                                                                                                                                                                                                            var $2768 = Parser$Reply$error$(Parser$Error$combine$($2767, $2765));
                                                                                                                                                                                                                                                                                                            var $2766 = $2768;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2769 = Parser$Reply$error$($2765);
                                                                                                                                                                                                                                                                                                            var $2766 = $2769;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2764 = $2766;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2770 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $2770;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2772 = self.err;
                                                                                                                                                                                                                                                                                                            var $2773 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2774 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2775 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2776 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2763, $2772), $2773, $2774, $2775, $2776);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $2778 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $2780 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $2778;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $2782 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $2783 = Parser$Reply$error$(Parser$Error$combine$($2782, $2780));
                                                                                                                                                                                                                                                                                                                                    var $2781 = $2783;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $2784 = Parser$Reply$error$($2780);
                                                                                                                                                                                                                                                                                                                                    var $2781 = $2784;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2779 = $2781;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $2785 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $2786 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $2785;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $2788 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $2789 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $2790 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $2791 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $2792 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($2778, $2788), $2789, $2790, $2791, $2792);
                                                                                                                                                                                                                                                                                                                                    var _term$185 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$app$(_term$185, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$ref$($2616));
                                                                                                                                                                                                                                                                                                                                    var _term$188 = Kind$Term$app$(_term$187, $2693);
                                                                                                                                                                                                                                                                                                                                    var _term$189 = Kind$Term$app$(_term$188, $2724);
                                                                                                                                                                                                                                                                                                                                    var _lamb$190 = Kind$Term$lam$($2662, (_e$190 => {
                                                                                                                                                                                                                                                                                                                                        var $2794 = Kind$Term$lam$($2616, (_s$191 => {
                                                                                                                                                                                                                                                                                                                                            var $2795 = $2755;
                                                                                                                                                                                                                                                                                                                                            return $2795;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $2794;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$191 = Kind$Term$app$(_term$189, _lamb$190);
                                                                                                                                                                                                                                                                                                                                    var _term$192 = Kind$Term$let$($2616, _term$191, (_x$192 => {
                                                                                                                                                                                                                                                                                                                                        var $2796 = $2786;
                                                                                                                                                                                                                                                                                                                                        return $2796;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var $2793 = Parser$Reply$value$(_reply$pst$184, _term$192);
                                                                                                                                                                                                                                                                                                                                    var $2787 = $2793;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $2779 = $2787;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $2777 = $2779;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $2771 = $2777;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2764 = $2771;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2762 = $2764;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2756 = $2762;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2748 = $2756;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2746 = $2748;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2740 = $2746;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2733 = $2740;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2731 = $2733;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2725 = $2731;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2717 = $2725;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2715 = $2717;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2709 = $2715;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2702 = $2709;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2700 = $2702;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2694 = $2700;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2686 = $2694;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2684 = $2686;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2678 = $2684;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2671 = $2678;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2669 = $2671;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2663 = $2669;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2655 = $2663;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2653 = $2655;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2647 = $2653;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2640 = $2647;
                                                                                                    break;
                                                                                            };
                                                                                            var $2638 = $2640;
                                                                                            break;
                                                                                    };
                                                                                    var $2632 = $2638;
                                                                                    break;
                                                                            };
                                                                            var $2625 = $2632;
                                                                            break;
                                                                    };
                                                                    var $2623 = $2625;
                                                                    break;
                                                            };
                                                            var $2617 = $2623;
                                                            break;
                                                    };
                                                    var $2609 = $2617;
                                                    break;
                                            };
                                            var $2607 = $2609;
                                            break;
                                    };
                                    var $2601 = $2607;
                                    break;
                            };
                            var $2594 = $2601;
                            break;
                    };
                    var $2592 = $2594;
                    break;
            };
            return $2592;
        }));
        return $2591;
    };
    const Kind$Parser$letforrange$nat = x0 => Kind$Parser$letforrange$nat$(x0);

    function Kind$Parser$letforrange$nat$with$(_body$1) {
        var $2797 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2799 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2801 = self.err;
                            var self = $2799;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2803 = self.value;
                                    var $2804 = Parser$Reply$error$(Parser$Error$combine$($2803, $2801));
                                    var $2802 = $2804;
                                    break;
                                case 'Maybe.none':
                                    var $2805 = Parser$Reply$error$($2801);
                                    var $2802 = $2805;
                                    break;
                            };
                            var $2800 = $2802;
                            break;
                        case 'Parser.Reply.value':
                            var $2806 = self.pst;
                            var self = $2806;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2808 = self.err;
                                    var $2809 = self.nam;
                                    var $2810 = self.ini;
                                    var $2811 = self.idx;
                                    var $2812 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2799, $2808), $2809, $2810, $2811, $2812);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $2814 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $2816 = self.err;
                                                    var self = $2814;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $2818 = self.value;
                                                            var $2819 = Parser$Reply$error$(Parser$Error$combine$($2818, $2816));
                                                            var $2817 = $2819;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $2820 = Parser$Reply$error$($2816);
                                                            var $2817 = $2820;
                                                            break;
                                                    };
                                                    var $2815 = $2817;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $2821 = self.pst;
                                                    var $2822 = self.val;
                                                    var self = $2821;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $2824 = self.err;
                                                            var $2825 = self.nam;
                                                            var $2826 = self.ini;
                                                            var $2827 = self.idx;
                                                            var $2828 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($2814, $2824), $2825, $2826, $2827, $2828);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $2830 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $2832 = self.err;
                                                                            var self = $2830;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $2834 = self.value;
                                                                                    var $2835 = Parser$Reply$error$(Parser$Error$combine$($2834, $2832));
                                                                                    var $2833 = $2835;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $2836 = Parser$Reply$error$($2832);
                                                                                    var $2833 = $2836;
                                                                                    break;
                                                                            };
                                                                            var $2831 = $2833;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $2837 = self.pst;
                                                                            var self = $2837;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $2839 = self.err;
                                                                                    var $2840 = self.nam;
                                                                                    var $2841 = self.ini;
                                                                                    var $2842 = self.idx;
                                                                                    var $2843 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($2830, $2839), $2840, $2841, $2842, $2843);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $2845 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $2847 = self.err;
                                                                                                    var self = $2845;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $2849 = self.value;
                                                                                                            var $2850 = Parser$Reply$error$(Parser$Error$combine$($2849, $2847));
                                                                                                            var $2848 = $2850;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $2851 = Parser$Reply$error$($2847);
                                                                                                            var $2848 = $2851;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2846 = $2848;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $2852 = self.pst;
                                                                                                    var $2853 = self.val;
                                                                                                    var self = $2852;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $2855 = self.err;
                                                                                                            var $2856 = self.nam;
                                                                                                            var $2857 = self.ini;
                                                                                                            var $2858 = self.idx;
                                                                                                            var $2859 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($2845, $2855), $2856, $2857, $2858, $2859);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $2861 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $2863 = self.err;
                                                                                                                            var self = $2861;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $2865 = self.value;
                                                                                                                                    var $2866 = Parser$Reply$error$(Parser$Error$combine$($2865, $2863));
                                                                                                                                    var $2864 = $2866;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $2867 = Parser$Reply$error$($2863);
                                                                                                                                    var $2864 = $2867;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2862 = $2864;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $2868 = self.pst;
                                                                                                                            var self = $2868;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $2870 = self.err;
                                                                                                                                    var $2871 = self.nam;
                                                                                                                                    var $2872 = self.ini;
                                                                                                                                    var $2873 = self.idx;
                                                                                                                                    var $2874 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($2861, $2870), $2871, $2872, $2873, $2874);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $2876 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $2878 = self.err;
                                                                                                                                                    var self = $2876;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $2880 = self.value;
                                                                                                                                                            var $2881 = Parser$Reply$error$(Parser$Error$combine$($2880, $2878));
                                                                                                                                                            var $2879 = $2881;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $2882 = Parser$Reply$error$($2878);
                                                                                                                                                            var $2879 = $2882;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2877 = $2879;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $2883 = self.pst;
                                                                                                                                                    var $2884 = self.val;
                                                                                                                                                    var self = $2883;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $2886 = self.err;
                                                                                                                                                            var $2887 = self.nam;
                                                                                                                                                            var $2888 = self.ini;
                                                                                                                                                            var $2889 = self.idx;
                                                                                                                                                            var $2890 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($2876, $2886), $2887, $2888, $2889, $2890);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $2892 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("with ", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $2894 = self.err;
                                                                                                                                                                            var self = $2892;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $2896 = self.value;
                                                                                                                                                                                    var $2897 = Parser$Reply$error$(Parser$Error$combine$($2896, $2894));
                                                                                                                                                                                    var $2895 = $2897;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $2898 = Parser$Reply$error$($2894);
                                                                                                                                                                                    var $2895 = $2898;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2893 = $2895;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $2899 = self.pst;
                                                                                                                                                                            var self = $2899;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $2901 = self.err;
                                                                                                                                                                                    var $2902 = self.nam;
                                                                                                                                                                                    var $2903 = self.ini;
                                                                                                                                                                                    var $2904 = self.idx;
                                                                                                                                                                                    var $2905 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($2892, $2901), $2902, $2903, $2904, $2905);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $2907 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$name1$(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $2909 = self.err;
                                                                                                                                                                                                    var self = $2907;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $2911 = self.value;
                                                                                                                                                                                                            var $2912 = Parser$Reply$error$(Parser$Error$combine$($2911, $2909));
                                                                                                                                                                                                            var $2910 = $2912;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $2913 = Parser$Reply$error$($2909);
                                                                                                                                                                                                            var $2910 = $2913;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2908 = $2910;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $2914 = self.pst;
                                                                                                                                                                                                    var $2915 = self.val;
                                                                                                                                                                                                    var self = $2914;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $2917 = self.err;
                                                                                                                                                                                                            var $2918 = self.nam;
                                                                                                                                                                                                            var $2919 = self.ini;
                                                                                                                                                                                                            var $2920 = self.idx;
                                                                                                                                                                                                            var $2921 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($2907, $2917), $2918, $2919, $2920, $2921);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $2923 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $2925 = self.err;
                                                                                                                                                                                                                            var self = $2923;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $2927 = self.value;
                                                                                                                                                                                                                                    var $2928 = Parser$Reply$error$(Parser$Error$combine$($2927, $2925));
                                                                                                                                                                                                                                    var $2926 = $2928;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $2929 = Parser$Reply$error$($2925);
                                                                                                                                                                                                                                    var $2926 = $2929;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2924 = $2926;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $2930 = self.pst;
                                                                                                                                                                                                                            var self = $2930;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $2932 = self.err;
                                                                                                                                                                                                                                    var $2933 = self.nam;
                                                                                                                                                                                                                                    var $2934 = self.ini;
                                                                                                                                                                                                                                    var $2935 = self.idx;
                                                                                                                                                                                                                                    var $2936 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($2923, $2932), $2933, $2934, $2935, $2936);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $2938 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $2940 = self.err;
                                                                                                                                                                                                                                                    var self = $2938;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $2942 = self.value;
                                                                                                                                                                                                                                                            var $2943 = Parser$Reply$error$(Parser$Error$combine$($2942, $2940));
                                                                                                                                                                                                                                                            var $2941 = $2943;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $2944 = Parser$Reply$error$($2940);
                                                                                                                                                                                                                                                            var $2941 = $2944;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2939 = $2941;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $2945 = self.pst;
                                                                                                                                                                                                                                                    var $2946 = self.val;
                                                                                                                                                                                                                                                    var self = $2945;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $2948 = self.err;
                                                                                                                                                                                                                                                            var $2949 = self.nam;
                                                                                                                                                                                                                                                            var $2950 = self.ini;
                                                                                                                                                                                                                                                            var $2951 = self.idx;
                                                                                                                                                                                                                                                            var $2952 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($2938, $2948), $2949, $2950, $2951, $2952);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $2954 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $2956 = self.err;
                                                                                                                                                                                                                                                                            var self = $2954;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $2958 = self.value;
                                                                                                                                                                                                                                                                                    var $2959 = Parser$Reply$error$(Parser$Error$combine$($2958, $2956));
                                                                                                                                                                                                                                                                                    var $2957 = $2959;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $2960 = Parser$Reply$error$($2956);
                                                                                                                                                                                                                                                                                    var $2957 = $2960;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2955 = $2957;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $2961 = self.pst;
                                                                                                                                                                                                                                                                            var self = $2961;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $2963 = self.err;
                                                                                                                                                                                                                                                                                    var $2964 = self.nam;
                                                                                                                                                                                                                                                                                    var $2965 = self.ini;
                                                                                                                                                                                                                                                                                    var $2966 = self.idx;
                                                                                                                                                                                                                                                                                    var $2967 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($2954, $2963), $2964, $2965, $2966, $2967);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $2969 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $2971 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $2969;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $2973 = self.value;
                                                                                                                                                                                                                                                                                                            var $2974 = Parser$Reply$error$(Parser$Error$combine$($2973, $2971));
                                                                                                                                                                                                                                                                                                            var $2972 = $2974;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $2975 = Parser$Reply$error$($2971);
                                                                                                                                                                                                                                                                                                            var $2972 = $2975;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2970 = $2972;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $2976 = self.pst;
                                                                                                                                                                                                                                                                                                    var $2977 = self.val;
                                                                                                                                                                                                                                                                                                    var self = $2976;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $2979 = self.err;
                                                                                                                                                                                                                                                                                                            var $2980 = self.nam;
                                                                                                                                                                                                                                                                                                            var $2981 = self.ini;
                                                                                                                                                                                                                                                                                                            var $2982 = self.idx;
                                                                                                                                                                                                                                                                                                            var $2983 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($2969, $2979), $2980, $2981, $2982, $2983);
                                                                                                                                                                                                                                                                                                            var _term$171 = Kind$Term$ref$("Nat.for");
                                                                                                                                                                                                                                                                                                            var _term$172 = Kind$Term$app$(_term$171, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                            var _term$173 = Kind$Term$app$(_term$172, Kind$Term$ref$($2915));
                                                                                                                                                                                                                                                                                                            var _term$174 = Kind$Term$app$(_term$173, $2853);
                                                                                                                                                                                                                                                                                                            var _term$175 = Kind$Term$app$(_term$174, $2884);
                                                                                                                                                                                                                                                                                                            var _lamb$176 = Kind$Term$lam$($2822, (_e$176 => {
                                                                                                                                                                                                                                                                                                                var $2985 = Kind$Term$lam$($2915, (_s$177 => {
                                                                                                                                                                                                                                                                                                                    var $2986 = $2946;
                                                                                                                                                                                                                                                                                                                    return $2986;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $2985;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var _term$177 = Kind$Term$app$(_term$175, _lamb$176);
                                                                                                                                                                                                                                                                                                            var _term$178 = Kind$Term$let$($2915, _term$177, (_x$178 => {
                                                                                                                                                                                                                                                                                                                var $2987 = $2977;
                                                                                                                                                                                                                                                                                                                return $2987;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            var $2984 = Parser$Reply$value$(_reply$pst$170, _term$178);
                                                                                                                                                                                                                                                                                                            var $2978 = $2984;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $2970 = $2978;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $2968 = $2970;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $2962 = $2968;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $2955 = $2962;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $2953 = $2955;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $2947 = $2953;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $2939 = $2947;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $2937 = $2939;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $2931 = $2937;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $2924 = $2931;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $2922 = $2924;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $2916 = $2922;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $2908 = $2916;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $2906 = $2908;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $2900 = $2906;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $2893 = $2900;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $2891 = $2893;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $2885 = $2891;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $2877 = $2885;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $2875 = $2877;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $2869 = $2875;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $2862 = $2869;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $2860 = $2862;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $2854 = $2860;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $2846 = $2854;
                                                                                                    break;
                                                                                            };
                                                                                            var $2844 = $2846;
                                                                                            break;
                                                                                    };
                                                                                    var $2838 = $2844;
                                                                                    break;
                                                                            };
                                                                            var $2831 = $2838;
                                                                            break;
                                                                    };
                                                                    var $2829 = $2831;
                                                                    break;
                                                            };
                                                            var $2823 = $2829;
                                                            break;
                                                    };
                                                    var $2815 = $2823;
                                                    break;
                                            };
                                            var $2813 = $2815;
                                            break;
                                    };
                                    var $2807 = $2813;
                                    break;
                            };
                            var $2800 = $2807;
                            break;
                    };
                    var $2798 = $2800;
                    break;
            };
            return $2798;
        }));
        return $2797;
    };
    const Kind$Parser$letforrange$nat$with = x0 => Kind$Parser$letforrange$nat$with$(x0);

    function Kind$Parser$letforin$(_body$1) {
        var $2988 = Kind$Parser$block("let-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $2990 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $2992 = self.err;
                            var self = $2990;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $2994 = self.value;
                                    var $2995 = Parser$Reply$error$(Parser$Error$combine$($2994, $2992));
                                    var $2993 = $2995;
                                    break;
                                case 'Maybe.none':
                                    var $2996 = Parser$Reply$error$($2992);
                                    var $2993 = $2996;
                                    break;
                            };
                            var $2991 = $2993;
                            break;
                        case 'Parser.Reply.value':
                            var $2997 = self.pst;
                            var self = $2997;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $2999 = self.err;
                                    var $3000 = self.nam;
                                    var $3001 = self.ini;
                                    var $3002 = self.idx;
                                    var $3003 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($2990, $2999), $3000, $3001, $3002, $3003);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3005 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3007 = self.err;
                                                    var self = $3005;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3009 = self.value;
                                                            var $3010 = Parser$Reply$error$(Parser$Error$combine$($3009, $3007));
                                                            var $3008 = $3010;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3011 = Parser$Reply$error$($3007);
                                                            var $3008 = $3011;
                                                            break;
                                                    };
                                                    var $3006 = $3008;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3012 = self.pst;
                                                    var $3013 = self.val;
                                                    var self = $3012;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3015 = self.err;
                                                            var $3016 = self.nam;
                                                            var $3017 = self.ini;
                                                            var $3018 = self.idx;
                                                            var $3019 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3005, $3015), $3016, $3017, $3018, $3019);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3021 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3023 = self.err;
                                                                            var self = $3021;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3025 = self.value;
                                                                                    var $3026 = Parser$Reply$error$(Parser$Error$combine$($3025, $3023));
                                                                                    var $3024 = $3026;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3027 = Parser$Reply$error$($3023);
                                                                                    var $3024 = $3027;
                                                                                    break;
                                                                            };
                                                                            var $3022 = $3024;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3028 = self.pst;
                                                                            var self = $3028;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3030 = self.err;
                                                                                    var $3031 = self.nam;
                                                                                    var $3032 = self.ini;
                                                                                    var $3033 = self.idx;
                                                                                    var $3034 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3021, $3030), $3031, $3032, $3033, $3034);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3036 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("for ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3038 = self.err;
                                                                                                    var self = $3036;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3040 = self.value;
                                                                                                            var $3041 = Parser$Reply$error$(Parser$Error$combine$($3040, $3038));
                                                                                                            var $3039 = $3041;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3042 = Parser$Reply$error$($3038);
                                                                                                            var $3039 = $3042;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3037 = $3039;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3043 = self.pst;
                                                                                                    var self = $3043;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3045 = self.err;
                                                                                                            var $3046 = self.nam;
                                                                                                            var $3047 = self.ini;
                                                                                                            var $3048 = self.idx;
                                                                                                            var $3049 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3036, $3045), $3046, $3047, $3048, $3049);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3051 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3053 = self.err;
                                                                                                                            var self = $3051;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3055 = self.value;
                                                                                                                                    var $3056 = Parser$Reply$error$(Parser$Error$combine$($3055, $3053));
                                                                                                                                    var $3054 = $3056;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3057 = Parser$Reply$error$($3053);
                                                                                                                                    var $3054 = $3057;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3052 = $3054;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3058 = self.pst;
                                                                                                                            var $3059 = self.val;
                                                                                                                            var self = $3058;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3061 = self.err;
                                                                                                                                    var $3062 = self.nam;
                                                                                                                                    var $3063 = self.ini;
                                                                                                                                    var $3064 = self.idx;
                                                                                                                                    var $3065 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3051, $3061), $3062, $3063, $3064, $3065);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3067 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("in", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3069 = self.err;
                                                                                                                                                    var self = $3067;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3071 = self.value;
                                                                                                                                                            var $3072 = Parser$Reply$error$(Parser$Error$combine$($3071, $3069));
                                                                                                                                                            var $3070 = $3072;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3073 = Parser$Reply$error$($3069);
                                                                                                                                                            var $3070 = $3073;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3068 = $3070;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3074 = self.pst;
                                                                                                                                                    var self = $3074;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3076 = self.err;
                                                                                                                                                            var $3077 = self.nam;
                                                                                                                                                            var $3078 = self.ini;
                                                                                                                                                            var $3079 = self.idx;
                                                                                                                                                            var $3080 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3067, $3076), $3077, $3078, $3079, $3080);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3082 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3084 = self.err;
                                                                                                                                                                            var self = $3082;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3086 = self.value;
                                                                                                                                                                                    var $3087 = Parser$Reply$error$(Parser$Error$combine$($3086, $3084));
                                                                                                                                                                                    var $3085 = $3087;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3088 = Parser$Reply$error$($3084);
                                                                                                                                                                                    var $3085 = $3088;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3083 = $3085;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3089 = self.pst;
                                                                                                                                                                            var $3090 = self.val;
                                                                                                                                                                            var self = $3089;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3092 = self.err;
                                                                                                                                                                                    var $3093 = self.nam;
                                                                                                                                                                                    var $3094 = self.ini;
                                                                                                                                                                                    var $3095 = self.idx;
                                                                                                                                                                                    var $3096 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3082, $3092), $3093, $3094, $3095, $3096);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3098 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$(":", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3100 = self.err;
                                                                                                                                                                                                    var self = $3098;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3102 = self.value;
                                                                                                                                                                                                            var $3103 = Parser$Reply$error$(Parser$Error$combine$($3102, $3100));
                                                                                                                                                                                                            var $3101 = $3103;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3104 = Parser$Reply$error$($3100);
                                                                                                                                                                                                            var $3101 = $3104;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3099 = $3101;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3105 = self.pst;
                                                                                                                                                                                                    var self = $3105;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3107 = self.err;
                                                                                                                                                                                                            var $3108 = self.nam;
                                                                                                                                                                                                            var $3109 = self.ini;
                                                                                                                                                                                                            var $3110 = self.idx;
                                                                                                                                                                                                            var $3111 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3098, $3107), $3108, $3109, $3110, $3111);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3113 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3115 = self.err;
                                                                                                                                                                                                                            var self = $3113;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3117 = self.value;
                                                                                                                                                                                                                                    var $3118 = Parser$Reply$error$(Parser$Error$combine$($3117, $3115));
                                                                                                                                                                                                                                    var $3116 = $3118;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3119 = Parser$Reply$error$($3115);
                                                                                                                                                                                                                                    var $3116 = $3119;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3114 = $3116;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3120 = self.pst;
                                                                                                                                                                                                                            var $3121 = self.val;
                                                                                                                                                                                                                            var self = $3120;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3123 = self.err;
                                                                                                                                                                                                                                    var $3124 = self.nam;
                                                                                                                                                                                                                                    var $3125 = self.ini;
                                                                                                                                                                                                                                    var $3126 = self.idx;
                                                                                                                                                                                                                                    var $3127 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3113, $3123), $3124, $3125, $3126, $3127);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3129 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3131 = self.err;
                                                                                                                                                                                                                                                    var self = $3129;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3133 = self.value;
                                                                                                                                                                                                                                                            var $3134 = Parser$Reply$error$(Parser$Error$combine$($3133, $3131));
                                                                                                                                                                                                                                                            var $3132 = $3134;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3135 = Parser$Reply$error$($3131);
                                                                                                                                                                                                                                                            var $3132 = $3135;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3130 = $3132;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3136 = self.pst;
                                                                                                                                                                                                                                                    var self = $3136;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3138 = self.err;
                                                                                                                                                                                                                                                            var $3139 = self.nam;
                                                                                                                                                                                                                                                            var $3140 = self.ini;
                                                                                                                                                                                                                                                            var $3141 = self.idx;
                                                                                                                                                                                                                                                            var $3142 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3129, $3138), $3139, $3140, $3141, $3142);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3144 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = _body$1(Unit$new)(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3146 = self.err;
                                                                                                                                                                                                                                                                            var self = $3144;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3148 = self.value;
                                                                                                                                                                                                                                                                                    var $3149 = Parser$Reply$error$(Parser$Error$combine$($3148, $3146));
                                                                                                                                                                                                                                                                                    var $3147 = $3149;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3150 = Parser$Reply$error$($3146);
                                                                                                                                                                                                                                                                                    var $3147 = $3150;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3145 = $3147;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3151 = self.pst;
                                                                                                                                                                                                                                                                            var $3152 = self.val;
                                                                                                                                                                                                                                                                            var self = $3151;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3154 = self.err;
                                                                                                                                                                                                                                                                                    var $3155 = self.nam;
                                                                                                                                                                                                                                                                                    var $3156 = self.ini;
                                                                                                                                                                                                                                                                                    var $3157 = self.idx;
                                                                                                                                                                                                                                                                                    var $3158 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3144, $3154), $3155, $3156, $3157, $3158);
                                                                                                                                                                                                                                                                                    var _term$157 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                                                    var _term$158 = Kind$Term$app$(_term$157, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$159 = Kind$Term$app$(_term$158, $3090);
                                                                                                                                                                                                                                                                                    var _term$160 = Kind$Term$app$(_term$159, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                    var _term$161 = Kind$Term$app$(_term$160, Kind$Term$ref$($3013));
                                                                                                                                                                                                                                                                                    var _lamb$162 = Kind$Term$lam$($3059, (_i$162 => {
                                                                                                                                                                                                                                                                                        var $3160 = Kind$Term$lam$($3013, (_x$163 => {
                                                                                                                                                                                                                                                                                            var $3161 = $3121;
                                                                                                                                                                                                                                                                                            return $3161;
                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                        return $3160;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var _term$163 = Kind$Term$app$(_term$161, _lamb$162);
                                                                                                                                                                                                                                                                                    var _term$164 = Kind$Term$let$($3013, _term$163, (_x$164 => {
                                                                                                                                                                                                                                                                                        var $3162 = $3152;
                                                                                                                                                                                                                                                                                        return $3162;
                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                    var $3159 = Parser$Reply$value$(_reply$pst$156, _term$164);
                                                                                                                                                                                                                                                                                    var $3153 = $3159;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3145 = $3153;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3143 = $3145;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3137 = $3143;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3130 = $3137;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3128 = $3130;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3122 = $3128;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3114 = $3122;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3112 = $3114;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3106 = $3112;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3099 = $3106;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3097 = $3099;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3091 = $3097;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3083 = $3091;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3081 = $3083;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3075 = $3081;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3068 = $3075;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3066 = $3068;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3060 = $3066;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3052 = $3060;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3050 = $3052;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3044 = $3050;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3037 = $3044;
                                                                                                    break;
                                                                                            };
                                                                                            var $3035 = $3037;
                                                                                            break;
                                                                                    };
                                                                                    var $3029 = $3035;
                                                                                    break;
                                                                            };
                                                                            var $3022 = $3029;
                                                                            break;
                                                                    };
                                                                    var $3020 = $3022;
                                                                    break;
                                                            };
                                                            var $3014 = $3020;
                                                            break;
                                                    };
                                                    var $3006 = $3014;
                                                    break;
                                            };
                                            var $3004 = $3006;
                                            break;
                                    };
                                    var $2998 = $3004;
                                    break;
                            };
                            var $2991 = $2998;
                            break;
                    };
                    var $2989 = $2991;
                    break;
            };
            return $2989;
        }));
        return $2988;
    };
    const Kind$Parser$letforin = x0 => Kind$Parser$letforin$(x0);

    function Kind$Parser$letforin$with$(_body$1) {
        var $3163 = Kind$Parser$block("for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3165 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3167 = self.err;
                            var self = $3165;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3169 = self.value;
                                    var $3170 = Parser$Reply$error$(Parser$Error$combine$($3169, $3167));
                                    var $3168 = $3170;
                                    break;
                                case 'Maybe.none':
                                    var $3171 = Parser$Reply$error$($3167);
                                    var $3168 = $3171;
                                    break;
                            };
                            var $3166 = $3168;
                            break;
                        case 'Parser.Reply.value':
                            var $3172 = self.pst;
                            var self = $3172;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3174 = self.err;
                                    var $3175 = self.nam;
                                    var $3176 = self.ini;
                                    var $3177 = self.idx;
                                    var $3178 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3165, $3174), $3175, $3176, $3177, $3178);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3180 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3182 = self.err;
                                                    var self = $3180;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3184 = self.value;
                                                            var $3185 = Parser$Reply$error$(Parser$Error$combine$($3184, $3182));
                                                            var $3183 = $3185;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3186 = Parser$Reply$error$($3182);
                                                            var $3183 = $3186;
                                                            break;
                                                    };
                                                    var $3181 = $3183;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3187 = self.pst;
                                                    var $3188 = self.val;
                                                    var self = $3187;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3190 = self.err;
                                                            var $3191 = self.nam;
                                                            var $3192 = self.ini;
                                                            var $3193 = self.idx;
                                                            var $3194 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3180, $3190), $3191, $3192, $3193, $3194);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3196 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("in", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3198 = self.err;
                                                                            var self = $3196;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3200 = self.value;
                                                                                    var $3201 = Parser$Reply$error$(Parser$Error$combine$($3200, $3198));
                                                                                    var $3199 = $3201;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3202 = Parser$Reply$error$($3198);
                                                                                    var $3199 = $3202;
                                                                                    break;
                                                                            };
                                                                            var $3197 = $3199;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3203 = self.pst;
                                                                            var self = $3203;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3205 = self.err;
                                                                                    var $3206 = self.nam;
                                                                                    var $3207 = self.ini;
                                                                                    var $3208 = self.idx;
                                                                                    var $3209 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3196, $3205), $3206, $3207, $3208, $3209);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3211 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3213 = self.err;
                                                                                                    var self = $3211;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3215 = self.value;
                                                                                                            var $3216 = Parser$Reply$error$(Parser$Error$combine$($3215, $3213));
                                                                                                            var $3214 = $3216;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3217 = Parser$Reply$error$($3213);
                                                                                                            var $3214 = $3217;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3212 = $3214;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3218 = self.pst;
                                                                                                    var $3219 = self.val;
                                                                                                    var self = $3218;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3221 = self.err;
                                                                                                            var $3222 = self.nam;
                                                                                                            var $3223 = self.ini;
                                                                                                            var $3224 = self.idx;
                                                                                                            var $3225 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3211, $3221), $3222, $3223, $3224, $3225);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3227 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("with", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3229 = self.err;
                                                                                                                            var self = $3227;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3231 = self.value;
                                                                                                                                    var $3232 = Parser$Reply$error$(Parser$Error$combine$($3231, $3229));
                                                                                                                                    var $3230 = $3232;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3233 = Parser$Reply$error$($3229);
                                                                                                                                    var $3230 = $3233;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3228 = $3230;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3234 = self.pst;
                                                                                                                            var self = $3234;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3236 = self.err;
                                                                                                                                    var $3237 = self.nam;
                                                                                                                                    var $3238 = self.ini;
                                                                                                                                    var $3239 = self.idx;
                                                                                                                                    var $3240 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3227, $3236), $3237, $3238, $3239, $3240);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3242 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$name1$(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3244 = self.err;
                                                                                                                                                    var self = $3242;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3246 = self.value;
                                                                                                                                                            var $3247 = Parser$Reply$error$(Parser$Error$combine$($3246, $3244));
                                                                                                                                                            var $3245 = $3247;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3248 = Parser$Reply$error$($3244);
                                                                                                                                                            var $3245 = $3248;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3243 = $3245;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3249 = self.pst;
                                                                                                                                                    var $3250 = self.val;
                                                                                                                                                    var self = $3249;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3252 = self.err;
                                                                                                                                                            var $3253 = self.nam;
                                                                                                                                                            var $3254 = self.ini;
                                                                                                                                                            var $3255 = self.idx;
                                                                                                                                                            var $3256 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3242, $3252), $3253, $3254, $3255, $3256);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3258 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3260 = self.err;
                                                                                                                                                                            var self = $3258;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3262 = self.value;
                                                                                                                                                                                    var $3263 = Parser$Reply$error$(Parser$Error$combine$($3262, $3260));
                                                                                                                                                                                    var $3261 = $3263;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3264 = Parser$Reply$error$($3260);
                                                                                                                                                                                    var $3261 = $3264;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3259 = $3261;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3265 = self.pst;
                                                                                                                                                                            var self = $3265;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3267 = self.err;
                                                                                                                                                                                    var $3268 = self.nam;
                                                                                                                                                                                    var $3269 = self.ini;
                                                                                                                                                                                    var $3270 = self.idx;
                                                                                                                                                                                    var $3271 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3258, $3267), $3268, $3269, $3270, $3271);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3273 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3275 = self.err;
                                                                                                                                                                                                    var self = $3273;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3277 = self.value;
                                                                                                                                                                                                            var $3278 = Parser$Reply$error$(Parser$Error$combine$($3277, $3275));
                                                                                                                                                                                                            var $3276 = $3278;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3279 = Parser$Reply$error$($3275);
                                                                                                                                                                                                            var $3276 = $3279;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3274 = $3276;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3280 = self.pst;
                                                                                                                                                                                                    var $3281 = self.val;
                                                                                                                                                                                                    var self = $3280;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3283 = self.err;
                                                                                                                                                                                                            var $3284 = self.nam;
                                                                                                                                                                                                            var $3285 = self.ini;
                                                                                                                                                                                                            var $3286 = self.idx;
                                                                                                                                                                                                            var $3287 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3273, $3283), $3284, $3285, $3286, $3287);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3289 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3291 = self.err;
                                                                                                                                                                                                                            var self = $3289;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3293 = self.value;
                                                                                                                                                                                                                                    var $3294 = Parser$Reply$error$(Parser$Error$combine$($3293, $3291));
                                                                                                                                                                                                                                    var $3292 = $3294;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3295 = Parser$Reply$error$($3291);
                                                                                                                                                                                                                                    var $3292 = $3295;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3290 = $3292;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3296 = self.pst;
                                                                                                                                                                                                                            var self = $3296;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3298 = self.err;
                                                                                                                                                                                                                                    var $3299 = self.nam;
                                                                                                                                                                                                                                    var $3300 = self.ini;
                                                                                                                                                                                                                                    var $3301 = self.idx;
                                                                                                                                                                                                                                    var $3302 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3289, $3298), $3299, $3300, $3301, $3302);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3304 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3306 = self.err;
                                                                                                                                                                                                                                                    var self = $3304;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3308 = self.value;
                                                                                                                                                                                                                                                            var $3309 = Parser$Reply$error$(Parser$Error$combine$($3308, $3306));
                                                                                                                                                                                                                                                            var $3307 = $3309;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3310 = Parser$Reply$error$($3306);
                                                                                                                                                                                                                                                            var $3307 = $3310;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3305 = $3307;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3311 = self.pst;
                                                                                                                                                                                                                                                    var $3312 = self.val;
                                                                                                                                                                                                                                                    var self = $3311;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3314 = self.err;
                                                                                                                                                                                                                                                            var $3315 = self.nam;
                                                                                                                                                                                                                                                            var $3316 = self.ini;
                                                                                                                                                                                                                                                            var $3317 = self.idx;
                                                                                                                                                                                                                                                            var $3318 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3304, $3314), $3315, $3316, $3317, $3318);
                                                                                                                                                                                                                                                            var _term$143 = Kind$Term$ref$("List.for");
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, $3219);
                                                                                                                                                                                                                                                            var _term$146 = Kind$Term$app$(_term$145, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                            var _term$147 = Kind$Term$app$(_term$146, Kind$Term$ref$($3250));
                                                                                                                                                                                                                                                            var _lamb$148 = Kind$Term$lam$($3188, (_i$148 => {
                                                                                                                                                                                                                                                                var $3320 = Kind$Term$lam$($3250, (_x$149 => {
                                                                                                                                                                                                                                                                    var $3321 = $3281;
                                                                                                                                                                                                                                                                    return $3321;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $3320;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var _term$149 = Kind$Term$app$(_term$147, _lamb$148);
                                                                                                                                                                                                                                                            var _term$150 = Kind$Term$let$($3250, _term$149, (_x$150 => {
                                                                                                                                                                                                                                                                var $3322 = $3312;
                                                                                                                                                                                                                                                                return $3322;
                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                            var $3319 = Parser$Reply$value$(_reply$pst$142, _term$150);
                                                                                                                                                                                                                                                            var $3313 = $3319;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3305 = $3313;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3303 = $3305;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3297 = $3303;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3290 = $3297;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3288 = $3290;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3282 = $3288;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3274 = $3282;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3272 = $3274;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3266 = $3272;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3259 = $3266;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3257 = $3259;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3251 = $3257;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3243 = $3251;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3241 = $3243;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3235 = $3241;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3228 = $3235;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3226 = $3228;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3220 = $3226;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3212 = $3220;
                                                                                                    break;
                                                                                            };
                                                                                            var $3210 = $3212;
                                                                                            break;
                                                                                    };
                                                                                    var $3204 = $3210;
                                                                                    break;
                                                                            };
                                                                            var $3197 = $3204;
                                                                            break;
                                                                    };
                                                                    var $3195 = $3197;
                                                                    break;
                                                            };
                                                            var $3189 = $3195;
                                                            break;
                                                    };
                                                    var $3181 = $3189;
                                                    break;
                                            };
                                            var $3179 = $3181;
                                            break;
                                    };
                                    var $3173 = $3179;
                                    break;
                            };
                            var $3166 = $3173;
                            break;
                    };
                    var $3164 = $3166;
                    break;
            };
            return $3164;
        }));
        return $3163;
    };
    const Kind$Parser$letforin$with = x0 => Kind$Parser$letforin$with$(x0);

    function Kind$Parser$letwhile$(_body$1) {
        var $3323 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3325 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3327 = self.err;
                            var self = $3325;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3329 = self.value;
                                    var $3330 = Parser$Reply$error$(Parser$Error$combine$($3329, $3327));
                                    var $3328 = $3330;
                                    break;
                                case 'Maybe.none':
                                    var $3331 = Parser$Reply$error$($3327);
                                    var $3328 = $3331;
                                    break;
                            };
                            var $3326 = $3328;
                            break;
                        case 'Parser.Reply.value':
                            var $3332 = self.pst;
                            var self = $3332;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3334 = self.err;
                                    var $3335 = self.nam;
                                    var $3336 = self.ini;
                                    var $3337 = self.idx;
                                    var $3338 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3325, $3334), $3335, $3336, $3337, $3338);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3340 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3342 = self.err;
                                                    var self = $3340;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3344 = self.value;
                                                            var $3345 = Parser$Reply$error$(Parser$Error$combine$($3344, $3342));
                                                            var $3343 = $3345;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3346 = Parser$Reply$error$($3342);
                                                            var $3343 = $3346;
                                                            break;
                                                    };
                                                    var $3341 = $3343;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3347 = self.pst;
                                                    var $3348 = self.val;
                                                    var self = $3347;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3350 = self.err;
                                                            var $3351 = self.nam;
                                                            var $3352 = self.ini;
                                                            var $3353 = self.idx;
                                                            var $3354 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3340, $3350), $3351, $3352, $3353, $3354);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3356 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3358 = self.err;
                                                                            var self = $3356;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3360 = self.value;
                                                                                    var $3361 = Parser$Reply$error$(Parser$Error$combine$($3360, $3358));
                                                                                    var $3359 = $3361;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3362 = Parser$Reply$error$($3358);
                                                                                    var $3359 = $3362;
                                                                                    break;
                                                                            };
                                                                            var $3357 = $3359;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3363 = self.pst;
                                                                            var self = $3363;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3365 = self.err;
                                                                                    var $3366 = self.nam;
                                                                                    var $3367 = self.ini;
                                                                                    var $3368 = self.idx;
                                                                                    var $3369 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3356, $3365), $3366, $3367, $3368, $3369);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3371 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$("while ", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3373 = self.err;
                                                                                                    var self = $3371;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3375 = self.value;
                                                                                                            var $3376 = Parser$Reply$error$(Parser$Error$combine$($3375, $3373));
                                                                                                            var $3374 = $3376;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3377 = Parser$Reply$error$($3373);
                                                                                                            var $3374 = $3377;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3372 = $3374;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3378 = self.pst;
                                                                                                    var self = $3378;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3380 = self.err;
                                                                                                            var $3381 = self.nam;
                                                                                                            var $3382 = self.ini;
                                                                                                            var $3383 = self.idx;
                                                                                                            var $3384 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3371, $3380), $3381, $3382, $3383, $3384);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3386 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3388 = self.err;
                                                                                                                            var self = $3386;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3390 = self.value;
                                                                                                                                    var $3391 = Parser$Reply$error$(Parser$Error$combine$($3390, $3388));
                                                                                                                                    var $3389 = $3391;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3392 = Parser$Reply$error$($3388);
                                                                                                                                    var $3389 = $3392;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3387 = $3389;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3393 = self.pst;
                                                                                                                            var $3394 = self.val;
                                                                                                                            var self = $3393;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3396 = self.err;
                                                                                                                                    var $3397 = self.nam;
                                                                                                                                    var $3398 = self.ini;
                                                                                                                                    var $3399 = self.idx;
                                                                                                                                    var $3400 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3386, $3396), $3397, $3398, $3399, $3400);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3402 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$(":", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3404 = self.err;
                                                                                                                                                    var self = $3402;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3406 = self.value;
                                                                                                                                                            var $3407 = Parser$Reply$error$(Parser$Error$combine$($3406, $3404));
                                                                                                                                                            var $3405 = $3407;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3408 = Parser$Reply$error$($3404);
                                                                                                                                                            var $3405 = $3408;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3403 = $3405;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3409 = self.pst;
                                                                                                                                                    var self = $3409;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3411 = self.err;
                                                                                                                                                            var $3412 = self.nam;
                                                                                                                                                            var $3413 = self.ini;
                                                                                                                                                            var $3414 = self.idx;
                                                                                                                                                            var $3415 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3402, $3411), $3412, $3413, $3414, $3415);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3417 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3419 = self.err;
                                                                                                                                                                            var self = $3417;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3421 = self.value;
                                                                                                                                                                                    var $3422 = Parser$Reply$error$(Parser$Error$combine$($3421, $3419));
                                                                                                                                                                                    var $3420 = $3422;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3423 = Parser$Reply$error$($3419);
                                                                                                                                                                                    var $3420 = $3423;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3418 = $3420;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3424 = self.pst;
                                                                                                                                                                            var $3425 = self.val;
                                                                                                                                                                            var self = $3424;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3427 = self.err;
                                                                                                                                                                                    var $3428 = self.nam;
                                                                                                                                                                                    var $3429 = self.ini;
                                                                                                                                                                                    var $3430 = self.idx;
                                                                                                                                                                                    var $3431 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3417, $3427), $3428, $3429, $3430, $3431);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3433 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3435 = self.err;
                                                                                                                                                                                                    var self = $3433;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3437 = self.value;
                                                                                                                                                                                                            var $3438 = Parser$Reply$error$(Parser$Error$combine$($3437, $3435));
                                                                                                                                                                                                            var $3436 = $3438;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3439 = Parser$Reply$error$($3435);
                                                                                                                                                                                                            var $3436 = $3439;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3434 = $3436;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3440 = self.pst;
                                                                                                                                                                                                    var self = $3440;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3442 = self.err;
                                                                                                                                                                                                            var $3443 = self.nam;
                                                                                                                                                                                                            var $3444 = self.ini;
                                                                                                                                                                                                            var $3445 = self.idx;
                                                                                                                                                                                                            var $3446 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3433, $3442), $3443, $3444, $3445, $3446);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3448 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3450 = self.err;
                                                                                                                                                                                                                            var self = $3448;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3452 = self.value;
                                                                                                                                                                                                                                    var $3453 = Parser$Reply$error$(Parser$Error$combine$($3452, $3450));
                                                                                                                                                                                                                                    var $3451 = $3453;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3454 = Parser$Reply$error$($3450);
                                                                                                                                                                                                                                    var $3451 = $3454;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3449 = $3451;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3455 = self.pst;
                                                                                                                                                                                                                            var $3456 = self.val;
                                                                                                                                                                                                                            var self = $3455;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3458 = self.err;
                                                                                                                                                                                                                                    var $3459 = self.nam;
                                                                                                                                                                                                                                    var $3460 = self.ini;
                                                                                                                                                                                                                                    var $3461 = self.idx;
                                                                                                                                                                                                                                    var $3462 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3448, $3458), $3459, $3460, $3461, $3462);
                                                                                                                                                                                                                                    var _term$129 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$ref$($3348));
                                                                                                                                                                                                                                    var _term$132 = Kind$Term$app$(_term$131, Kind$Term$lam$($3348, (_s$132 => {
                                                                                                                                                                                                                                        var $3464 = $3394;
                                                                                                                                                                                                                                        return $3464;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$133 = Kind$Term$app$(_term$132, Kind$Term$lam$($3348, (_s$133 => {
                                                                                                                                                                                                                                        var $3465 = $3425;
                                                                                                                                                                                                                                        return $3465;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$134 = Kind$Term$let$($3348, _term$133, (_x$134 => {
                                                                                                                                                                                                                                        var $3466 = $3456;
                                                                                                                                                                                                                                        return $3466;
                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                    var $3463 = Parser$Reply$value$(_reply$pst$128, _term$134);
                                                                                                                                                                                                                                    var $3457 = $3463;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3449 = $3457;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3447 = $3449;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3441 = $3447;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3434 = $3441;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3432 = $3434;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3426 = $3432;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3418 = $3426;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3416 = $3418;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3410 = $3416;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3403 = $3410;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3401 = $3403;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3395 = $3401;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3387 = $3395;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3385 = $3387;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3379 = $3385;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3372 = $3379;
                                                                                                    break;
                                                                                            };
                                                                                            var $3370 = $3372;
                                                                                            break;
                                                                                    };
                                                                                    var $3364 = $3370;
                                                                                    break;
                                                                            };
                                                                            var $3357 = $3364;
                                                                            break;
                                                                    };
                                                                    var $3355 = $3357;
                                                                    break;
                                                            };
                                                            var $3349 = $3355;
                                                            break;
                                                    };
                                                    var $3341 = $3349;
                                                    break;
                                            };
                                            var $3339 = $3341;
                                            break;
                                    };
                                    var $3333 = $3339;
                                    break;
                            };
                            var $3326 = $3333;
                            break;
                    };
                    var $3324 = $3326;
                    break;
            };
            return $3324;
        }));
        return $3323;
    };
    const Kind$Parser$letwhile = x0 => Kind$Parser$letwhile$(x0);

    function Kind$Parser$letwhile$with$(_body$1) {
        var $3467 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3469 = self.err;
                    var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3471 = self.err;
                            var self = $3469;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3473 = self.value;
                                    var $3474 = Parser$Reply$error$(Parser$Error$combine$($3473, $3471));
                                    var $3472 = $3474;
                                    break;
                                case 'Maybe.none':
                                    var $3475 = Parser$Reply$error$($3471);
                                    var $3472 = $3475;
                                    break;
                            };
                            var $3470 = $3472;
                            break;
                        case 'Parser.Reply.value':
                            var $3476 = self.pst;
                            var self = $3476;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3478 = self.err;
                                    var $3479 = self.nam;
                                    var $3480 = self.ini;
                                    var $3481 = self.idx;
                                    var $3482 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3469, $3478), $3479, $3480, $3481, $3482);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3484 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3486 = self.err;
                                                    var self = $3484;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3488 = self.value;
                                                            var $3489 = Parser$Reply$error$(Parser$Error$combine$($3488, $3486));
                                                            var $3487 = $3489;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3490 = Parser$Reply$error$($3486);
                                                            var $3487 = $3490;
                                                            break;
                                                    };
                                                    var $3485 = $3487;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3491 = self.pst;
                                                    var $3492 = self.val;
                                                    var self = $3491;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3494 = self.err;
                                                            var $3495 = self.nam;
                                                            var $3496 = self.ini;
                                                            var $3497 = self.idx;
                                                            var $3498 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3484, $3494), $3495, $3496, $3497, $3498);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3500 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3502 = self.err;
                                                                            var self = $3500;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3504 = self.value;
                                                                                    var $3505 = Parser$Reply$error$(Parser$Error$combine$($3504, $3502));
                                                                                    var $3503 = $3505;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3506 = Parser$Reply$error$($3502);
                                                                                    var $3503 = $3506;
                                                                                    break;
                                                                            };
                                                                            var $3501 = $3503;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3507 = self.pst;
                                                                            var self = $3507;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3509 = self.err;
                                                                                    var $3510 = self.nam;
                                                                                    var $3511 = self.ini;
                                                                                    var $3512 = self.idx;
                                                                                    var $3513 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3500, $3509), $3510, $3511, $3512, $3513);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3515 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3517 = self.err;
                                                                                                    var self = $3515;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3519 = self.value;
                                                                                                            var $3520 = Parser$Reply$error$(Parser$Error$combine$($3519, $3517));
                                                                                                            var $3518 = $3520;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3521 = Parser$Reply$error$($3517);
                                                                                                            var $3518 = $3521;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3516 = $3518;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3522 = self.pst;
                                                                                                    var $3523 = self.val;
                                                                                                    var self = $3522;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3525 = self.err;
                                                                                                            var $3526 = self.nam;
                                                                                                            var $3527 = self.ini;
                                                                                                            var $3528 = self.idx;
                                                                                                            var $3529 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3515, $3525), $3526, $3527, $3528, $3529);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3531 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$(":", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3533 = self.err;
                                                                                                                            var self = $3531;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3535 = self.value;
                                                                                                                                    var $3536 = Parser$Reply$error$(Parser$Error$combine$($3535, $3533));
                                                                                                                                    var $3534 = $3536;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3537 = Parser$Reply$error$($3533);
                                                                                                                                    var $3534 = $3537;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3532 = $3534;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3538 = self.pst;
                                                                                                                            var self = $3538;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3540 = self.err;
                                                                                                                                    var $3541 = self.nam;
                                                                                                                                    var $3542 = self.ini;
                                                                                                                                    var $3543 = self.idx;
                                                                                                                                    var $3544 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3531, $3540), $3541, $3542, $3543, $3544);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3546 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3548 = self.err;
                                                                                                                                                    var self = $3546;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3550 = self.value;
                                                                                                                                                            var $3551 = Parser$Reply$error$(Parser$Error$combine$($3550, $3548));
                                                                                                                                                            var $3549 = $3551;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3552 = Parser$Reply$error$($3548);
                                                                                                                                                            var $3549 = $3552;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3547 = $3549;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3553 = self.pst;
                                                                                                                                                    var $3554 = self.val;
                                                                                                                                                    var self = $3553;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3556 = self.err;
                                                                                                                                                            var $3557 = self.nam;
                                                                                                                                                            var $3558 = self.ini;
                                                                                                                                                            var $3559 = self.idx;
                                                                                                                                                            var $3560 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3546, $3556), $3557, $3558, $3559, $3560);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3562 = self.err;
                                                                                                                                                                    var _reply$92 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3564 = self.err;
                                                                                                                                                                            var self = $3562;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3566 = self.value;
                                                                                                                                                                                    var $3567 = Parser$Reply$error$(Parser$Error$combine$($3566, $3564));
                                                                                                                                                                                    var $3565 = $3567;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3568 = Parser$Reply$error$($3564);
                                                                                                                                                                                    var $3565 = $3568;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3563 = $3565;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3569 = self.pst;
                                                                                                                                                                            var self = $3569;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3571 = self.err;
                                                                                                                                                                                    var $3572 = self.nam;
                                                                                                                                                                                    var $3573 = self.ini;
                                                                                                                                                                                    var $3574 = self.idx;
                                                                                                                                                                                    var $3575 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3562, $3571), $3572, $3573, $3574, $3575);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3577 = self.err;
                                                                                                                                                                                            var _reply$106 = _body$1(Unit$new)(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3579 = self.err;
                                                                                                                                                                                                    var self = $3577;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3581 = self.value;
                                                                                                                                                                                                            var $3582 = Parser$Reply$error$(Parser$Error$combine$($3581, $3579));
                                                                                                                                                                                                            var $3580 = $3582;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3583 = Parser$Reply$error$($3579);
                                                                                                                                                                                                            var $3580 = $3583;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3578 = $3580;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3584 = self.pst;
                                                                                                                                                                                                    var $3585 = self.val;
                                                                                                                                                                                                    var self = $3584;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3587 = self.err;
                                                                                                                                                                                                            var $3588 = self.nam;
                                                                                                                                                                                                            var $3589 = self.ini;
                                                                                                                                                                                                            var $3590 = self.idx;
                                                                                                                                                                                                            var $3591 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3577, $3587), $3588, $3589, $3590, $3591);
                                                                                                                                                                                                            var _term$115 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                            var _term$116 = Kind$Term$app$(_term$115, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                            var _term$117 = Kind$Term$app$(_term$116, Kind$Term$ref$($3523));
                                                                                                                                                                                                            var _term$118 = Kind$Term$app$(_term$117, Kind$Term$lam$($3523, (_s$118 => {
                                                                                                                                                                                                                var $3593 = $3492;
                                                                                                                                                                                                                return $3593;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$119 = Kind$Term$app$(_term$118, Kind$Term$lam$($3523, (_s$119 => {
                                                                                                                                                                                                                var $3594 = $3554;
                                                                                                                                                                                                                return $3594;
                                                                                                                                                                                                            })));
                                                                                                                                                                                                            var _term$120 = Kind$Term$let$($3523, _term$119, (_x$120 => {
                                                                                                                                                                                                                var $3595 = $3585;
                                                                                                                                                                                                                return $3595;
                                                                                                                                                                                                            }));
                                                                                                                                                                                                            var $3592 = Parser$Reply$value$(_reply$pst$114, _term$120);
                                                                                                                                                                                                            var $3586 = $3592;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3578 = $3586;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3576 = $3578;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3570 = $3576;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3563 = $3570;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3561 = $3563;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3555 = $3561;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3547 = $3555;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3545 = $3547;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3539 = $3545;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3532 = $3539;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3530 = $3532;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3524 = $3530;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3516 = $3524;
                                                                                                    break;
                                                                                            };
                                                                                            var $3514 = $3516;
                                                                                            break;
                                                                                    };
                                                                                    var $3508 = $3514;
                                                                                    break;
                                                                            };
                                                                            var $3501 = $3508;
                                                                            break;
                                                                    };
                                                                    var $3499 = $3501;
                                                                    break;
                                                            };
                                                            var $3493 = $3499;
                                                            break;
                                                    };
                                                    var $3485 = $3493;
                                                    break;
                                            };
                                            var $3483 = $3485;
                                            break;
                                    };
                                    var $3477 = $3483;
                                    break;
                            };
                            var $3470 = $3477;
                            break;
                    };
                    var $3468 = $3470;
                    break;
            };
            return $3468;
        }));
        return $3467;
    };
    const Kind$Parser$letwhile$with = x0 => Kind$Parser$letwhile$with$(x0);

    function Kind$Parser$let$(_body$1) {
        var $3596 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3598 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3600 = self.err;
                            var self = $3598;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3602 = self.value;
                                    var $3603 = Parser$Reply$error$(Parser$Error$combine$($3602, $3600));
                                    var $3601 = $3603;
                                    break;
                                case 'Maybe.none':
                                    var $3604 = Parser$Reply$error$($3600);
                                    var $3601 = $3604;
                                    break;
                            };
                            var $3599 = $3601;
                            break;
                        case 'Parser.Reply.value':
                            var $3605 = self.pst;
                            var self = $3605;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3607 = self.err;
                                    var $3608 = self.nam;
                                    var $3609 = self.ini;
                                    var $3610 = self.idx;
                                    var $3611 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3598, $3607), $3608, $3609, $3610, $3611);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3613 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3615 = self.err;
                                                    var self = $3613;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3617 = self.value;
                                                            var $3618 = Parser$Reply$error$(Parser$Error$combine$($3617, $3615));
                                                            var $3616 = $3618;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3619 = Parser$Reply$error$($3615);
                                                            var $3616 = $3619;
                                                            break;
                                                    };
                                                    var $3614 = $3616;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3620 = self.pst;
                                                    var $3621 = self.val;
                                                    var self = $3620;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3623 = self.err;
                                                            var $3624 = self.nam;
                                                            var $3625 = self.ini;
                                                            var $3626 = self.idx;
                                                            var $3627 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3613, $3623), $3624, $3625, $3626, $3627);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3629 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3631 = self.err;
                                                                            var self = $3629;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3633 = self.value;
                                                                                    var $3634 = Parser$Reply$error$(Parser$Error$combine$($3633, $3631));
                                                                                    var $3632 = $3634;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3635 = Parser$Reply$error$($3631);
                                                                                    var $3632 = $3635;
                                                                                    break;
                                                                            };
                                                                            var $3630 = $3632;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3636 = self.pst;
                                                                            var self = $3636;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3638 = self.err;
                                                                                    var $3639 = self.nam;
                                                                                    var $3640 = self.ini;
                                                                                    var $3641 = self.idx;
                                                                                    var $3642 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3629, $3638), $3639, $3640, $3641, $3642);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3644 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3646 = self.err;
                                                                                                    var self = $3644;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3648 = self.value;
                                                                                                            var $3649 = Parser$Reply$error$(Parser$Error$combine$($3648, $3646));
                                                                                                            var $3647 = $3649;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3650 = Parser$Reply$error$($3646);
                                                                                                            var $3647 = $3650;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3645 = $3647;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3651 = self.pst;
                                                                                                    var $3652 = self.val;
                                                                                                    var self = $3651;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3654 = self.err;
                                                                                                            var $3655 = self.nam;
                                                                                                            var $3656 = self.ini;
                                                                                                            var $3657 = self.idx;
                                                                                                            var $3658 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3644, $3654), $3655, $3656, $3657, $3658);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3660 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3662 = self.err;
                                                                                                                            var self = $3660;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3664 = self.value;
                                                                                                                                    var $3665 = Parser$Reply$error$(Parser$Error$combine$($3664, $3662));
                                                                                                                                    var $3663 = $3665;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3666 = Parser$Reply$error$($3662);
                                                                                                                                    var $3663 = $3666;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3661 = $3663;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3667 = self.pst;
                                                                                                                            var self = $3667;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3669 = self.err;
                                                                                                                                    var $3670 = self.nam;
                                                                                                                                    var $3671 = self.ini;
                                                                                                                                    var $3672 = self.idx;
                                                                                                                                    var $3673 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3660, $3669), $3670, $3671, $3672, $3673);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3675 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3677 = self.err;
                                                                                                                                                    var self = $3675;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3679 = self.value;
                                                                                                                                                            var $3680 = Parser$Reply$error$(Parser$Error$combine$($3679, $3677));
                                                                                                                                                            var $3678 = $3680;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3681 = Parser$Reply$error$($3677);
                                                                                                                                                            var $3678 = $3681;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3676 = $3678;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3682 = self.pst;
                                                                                                                                                    var $3683 = self.val;
                                                                                                                                                    var self = $3682;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3685 = self.err;
                                                                                                                                                            var $3686 = self.nam;
                                                                                                                                                            var $3687 = self.ini;
                                                                                                                                                            var $3688 = self.idx;
                                                                                                                                                            var $3689 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3675, $3685), $3686, $3687, $3688, $3689);
                                                                                                                                                            var $3690 = Parser$Reply$value$(_reply$pst$86, Kind$Term$let$($3621, $3652, (_x$87 => {
                                                                                                                                                                var $3691 = $3683;
                                                                                                                                                                return $3691;
                                                                                                                                                            })));
                                                                                                                                                            var $3684 = $3690;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3676 = $3684;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3674 = $3676;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3668 = $3674;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3661 = $3668;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3659 = $3661;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3653 = $3659;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3645 = $3653;
                                                                                                    break;
                                                                                            };
                                                                                            var $3643 = $3645;
                                                                                            break;
                                                                                    };
                                                                                    var $3637 = $3643;
                                                                                    break;
                                                                            };
                                                                            var $3630 = $3637;
                                                                            break;
                                                                    };
                                                                    var $3628 = $3630;
                                                                    break;
                                                            };
                                                            var $3622 = $3628;
                                                            break;
                                                    };
                                                    var $3614 = $3622;
                                                    break;
                                            };
                                            var $3612 = $3614;
                                            break;
                                    };
                                    var $3606 = $3612;
                                    break;
                            };
                            var $3599 = $3606;
                            break;
                    };
                    var $3597 = $3599;
                    break;
            };
            return $3597;
        }));
        return $3596;
    };
    const Kind$Parser$let = x0 => Kind$Parser$let$(x0);

    function Kind$Parser$let$omit$(_body$1) {
        var $3692 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3694 = self.err;
                    var _reply$8 = Kind$Parser$name1$(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3696 = self.err;
                            var self = $3694;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3698 = self.value;
                                    var $3699 = Parser$Reply$error$(Parser$Error$combine$($3698, $3696));
                                    var $3697 = $3699;
                                    break;
                                case 'Maybe.none':
                                    var $3700 = Parser$Reply$error$($3696);
                                    var $3697 = $3700;
                                    break;
                            };
                            var $3695 = $3697;
                            break;
                        case 'Parser.Reply.value':
                            var $3701 = self.pst;
                            var $3702 = self.val;
                            var self = $3701;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3704 = self.err;
                                    var $3705 = self.nam;
                                    var $3706 = self.ini;
                                    var $3707 = self.idx;
                                    var $3708 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3694, $3704), $3705, $3706, $3707, $3708);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3710 = self.err;
                                            var _reply$22 = Kind$Parser$text$("= ", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3712 = self.err;
                                                    var self = $3710;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3714 = self.value;
                                                            var $3715 = Parser$Reply$error$(Parser$Error$combine$($3714, $3712));
                                                            var $3713 = $3715;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3716 = Parser$Reply$error$($3712);
                                                            var $3713 = $3716;
                                                            break;
                                                    };
                                                    var $3711 = $3713;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3717 = self.pst;
                                                    var self = $3717;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3719 = self.err;
                                                            var $3720 = self.nam;
                                                            var $3721 = self.ini;
                                                            var $3722 = self.idx;
                                                            var $3723 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3710, $3719), $3720, $3721, $3722, $3723);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3725 = self.err;
                                                                    var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3727 = self.err;
                                                                            var self = $3725;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3729 = self.value;
                                                                                    var $3730 = Parser$Reply$error$(Parser$Error$combine$($3729, $3727));
                                                                                    var $3728 = $3730;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3731 = Parser$Reply$error$($3727);
                                                                                    var $3728 = $3731;
                                                                                    break;
                                                                            };
                                                                            var $3726 = $3728;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3732 = self.pst;
                                                                            var $3733 = self.val;
                                                                            var self = $3732;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3735 = self.err;
                                                                                    var $3736 = self.nam;
                                                                                    var $3737 = self.ini;
                                                                                    var $3738 = self.idx;
                                                                                    var $3739 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3725, $3735), $3736, $3737, $3738, $3739);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3741 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3743 = self.err;
                                                                                                    var self = $3741;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3745 = self.value;
                                                                                                            var $3746 = Parser$Reply$error$(Parser$Error$combine$($3745, $3743));
                                                                                                            var $3744 = $3746;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3747 = Parser$Reply$error$($3743);
                                                                                                            var $3744 = $3747;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3742 = $3744;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3748 = self.pst;
                                                                                                    var self = $3748;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3750 = self.err;
                                                                                                            var $3751 = self.nam;
                                                                                                            var $3752 = self.ini;
                                                                                                            var $3753 = self.idx;
                                                                                                            var $3754 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3741, $3750), $3751, $3752, $3753, $3754);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3756 = self.err;
                                                                                                                    var _reply$64 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3758 = self.err;
                                                                                                                            var self = $3756;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3760 = self.value;
                                                                                                                                    var $3761 = Parser$Reply$error$(Parser$Error$combine$($3760, $3758));
                                                                                                                                    var $3759 = $3761;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3762 = Parser$Reply$error$($3758);
                                                                                                                                    var $3759 = $3762;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3757 = $3759;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3763 = self.pst;
                                                                                                                            var $3764 = self.val;
                                                                                                                            var self = $3763;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3766 = self.err;
                                                                                                                                    var $3767 = self.nam;
                                                                                                                                    var $3768 = self.ini;
                                                                                                                                    var $3769 = self.idx;
                                                                                                                                    var $3770 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3756, $3766), $3767, $3768, $3769, $3770);
                                                                                                                                    var $3771 = Parser$Reply$value$(_reply$pst$72, Kind$Term$let$($3702, $3733, (_x$73 => {
                                                                                                                                        var $3772 = $3764;
                                                                                                                                        return $3772;
                                                                                                                                    })));
                                                                                                                                    var $3765 = $3771;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3757 = $3765;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3755 = $3757;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3749 = $3755;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3742 = $3749;
                                                                                                    break;
                                                                                            };
                                                                                            var $3740 = $3742;
                                                                                            break;
                                                                                    };
                                                                                    var $3734 = $3740;
                                                                                    break;
                                                                            };
                                                                            var $3726 = $3734;
                                                                            break;
                                                                    };
                                                                    var $3724 = $3726;
                                                                    break;
                                                            };
                                                            var $3718 = $3724;
                                                            break;
                                                    };
                                                    var $3711 = $3718;
                                                    break;
                                            };
                                            var $3709 = $3711;
                                            break;
                                    };
                                    var $3703 = $3709;
                                    break;
                            };
                            var $3695 = $3703;
                            break;
                    };
                    var $3693 = $3695;
                    break;
            };
            return $3693;
        }));
        return $3692;
    };
    const Kind$Parser$let$omit = x0 => Kind$Parser$let$omit$(x0);

    function Kind$Parser$getwhile$(_body$1) {
        var $3773 = Kind$Parser$block("let-while")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $3775 = self.err;
                    var _reply$8 = Parser$maybe$(Kind$Parser$text("let "), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $3777 = self.err;
                            var self = $3775;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $3779 = self.value;
                                    var $3780 = Parser$Reply$error$(Parser$Error$combine$($3779, $3777));
                                    var $3778 = $3780;
                                    break;
                                case 'Maybe.none':
                                    var $3781 = Parser$Reply$error$($3777);
                                    var $3778 = $3781;
                                    break;
                            };
                            var $3776 = $3778;
                            break;
                        case 'Parser.Reply.value':
                            var $3782 = self.pst;
                            var self = $3782;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $3784 = self.err;
                                    var $3785 = self.nam;
                                    var $3786 = self.ini;
                                    var $3787 = self.idx;
                                    var $3788 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3775, $3784), $3785, $3786, $3787, $3788);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $3790 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $3792 = self.err;
                                                    var self = $3790;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $3794 = self.value;
                                                            var $3795 = Parser$Reply$error$(Parser$Error$combine$($3794, $3792));
                                                            var $3793 = $3795;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $3796 = Parser$Reply$error$($3792);
                                                            var $3793 = $3796;
                                                            break;
                                                    };
                                                    var $3791 = $3793;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $3797 = self.pst;
                                                    var self = $3797;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $3799 = self.err;
                                                            var $3800 = self.nam;
                                                            var $3801 = self.ini;
                                                            var $3802 = self.idx;
                                                            var $3803 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($3790, $3799), $3800, $3801, $3802, $3803);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $3805 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $3807 = self.err;
                                                                            var self = $3805;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $3809 = self.value;
                                                                                    var $3810 = Parser$Reply$error$(Parser$Error$combine$($3809, $3807));
                                                                                    var $3808 = $3810;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $3811 = Parser$Reply$error$($3807);
                                                                                    var $3808 = $3811;
                                                                                    break;
                                                                            };
                                                                            var $3806 = $3808;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $3812 = self.pst;
                                                                            var $3813 = self.val;
                                                                            var self = $3812;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $3815 = self.err;
                                                                                    var $3816 = self.nam;
                                                                                    var $3817 = self.ini;
                                                                                    var $3818 = self.idx;
                                                                                    var $3819 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($3805, $3815), $3816, $3817, $3818, $3819);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $3821 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $3823 = self.err;
                                                                                                    var self = $3821;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $3825 = self.value;
                                                                                                            var $3826 = Parser$Reply$error$(Parser$Error$combine$($3825, $3823));
                                                                                                            var $3824 = $3826;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $3827 = Parser$Reply$error$($3823);
                                                                                                            var $3824 = $3827;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3822 = $3824;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $3828 = self.pst;
                                                                                                    var self = $3828;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $3830 = self.err;
                                                                                                            var $3831 = self.nam;
                                                                                                            var $3832 = self.ini;
                                                                                                            var $3833 = self.idx;
                                                                                                            var $3834 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($3821, $3830), $3831, $3832, $3833, $3834);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $3836 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $3838 = self.err;
                                                                                                                            var self = $3836;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $3840 = self.value;
                                                                                                                                    var $3841 = Parser$Reply$error$(Parser$Error$combine$($3840, $3838));
                                                                                                                                    var $3839 = $3841;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $3842 = Parser$Reply$error$($3838);
                                                                                                                                    var $3839 = $3842;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3837 = $3839;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $3843 = self.pst;
                                                                                                                            var $3844 = self.val;
                                                                                                                            var self = $3843;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $3846 = self.err;
                                                                                                                                    var $3847 = self.nam;
                                                                                                                                    var $3848 = self.ini;
                                                                                                                                    var $3849 = self.idx;
                                                                                                                                    var $3850 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($3836, $3846), $3847, $3848, $3849, $3850);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $3852 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $3854 = self.err;
                                                                                                                                                    var self = $3852;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $3856 = self.value;
                                                                                                                                                            var $3857 = Parser$Reply$error$(Parser$Error$combine$($3856, $3854));
                                                                                                                                                            var $3855 = $3857;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $3858 = Parser$Reply$error$($3854);
                                                                                                                                                            var $3855 = $3858;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3853 = $3855;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $3859 = self.pst;
                                                                                                                                                    var self = $3859;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $3861 = self.err;
                                                                                                                                                            var $3862 = self.nam;
                                                                                                                                                            var $3863 = self.ini;
                                                                                                                                                            var $3864 = self.idx;
                                                                                                                                                            var $3865 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($3852, $3861), $3862, $3863, $3864, $3865);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $3867 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $3869 = self.err;
                                                                                                                                                                            var self = $3867;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $3871 = self.value;
                                                                                                                                                                                    var $3872 = Parser$Reply$error$(Parser$Error$combine$($3871, $3869));
                                                                                                                                                                                    var $3870 = $3872;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $3873 = Parser$Reply$error$($3869);
                                                                                                                                                                                    var $3870 = $3873;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3868 = $3870;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $3874 = self.pst;
                                                                                                                                                                            var self = $3874;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $3876 = self.err;
                                                                                                                                                                                    var $3877 = self.nam;
                                                                                                                                                                                    var $3878 = self.ini;
                                                                                                                                                                                    var $3879 = self.idx;
                                                                                                                                                                                    var $3880 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($3867, $3876), $3877, $3878, $3879, $3880);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $3882 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$text$("while ", _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $3884 = self.err;
                                                                                                                                                                                                    var self = $3882;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $3886 = self.value;
                                                                                                                                                                                                            var $3887 = Parser$Reply$error$(Parser$Error$combine$($3886, $3884));
                                                                                                                                                                                                            var $3885 = $3887;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $3888 = Parser$Reply$error$($3884);
                                                                                                                                                                                                            var $3885 = $3888;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3883 = $3885;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $3889 = self.pst;
                                                                                                                                                                                                    var self = $3889;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $3891 = self.err;
                                                                                                                                                                                                            var $3892 = self.nam;
                                                                                                                                                                                                            var $3893 = self.ini;
                                                                                                                                                                                                            var $3894 = self.idx;
                                                                                                                                                                                                            var $3895 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($3882, $3891), $3892, $3893, $3894, $3895);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $3897 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Kind$Parser$term(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $3899 = self.err;
                                                                                                                                                                                                                            var self = $3897;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $3901 = self.value;
                                                                                                                                                                                                                                    var $3902 = Parser$Reply$error$(Parser$Error$combine$($3901, $3899));
                                                                                                                                                                                                                                    var $3900 = $3902;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $3903 = Parser$Reply$error$($3899);
                                                                                                                                                                                                                                    var $3900 = $3903;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3898 = $3900;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $3904 = self.pst;
                                                                                                                                                                                                                            var $3905 = self.val;
                                                                                                                                                                                                                            var self = $3904;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $3907 = self.err;
                                                                                                                                                                                                                                    var $3908 = self.nam;
                                                                                                                                                                                                                                    var $3909 = self.ini;
                                                                                                                                                                                                                                    var $3910 = self.idx;
                                                                                                                                                                                                                                    var $3911 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($3897, $3907), $3908, $3909, $3910, $3911);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $3913 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = Kind$Parser$text$(":", _reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $3915 = self.err;
                                                                                                                                                                                                                                                    var self = $3913;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $3917 = self.value;
                                                                                                                                                                                                                                                            var $3918 = Parser$Reply$error$(Parser$Error$combine$($3917, $3915));
                                                                                                                                                                                                                                                            var $3916 = $3918;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $3919 = Parser$Reply$error$($3915);
                                                                                                                                                                                                                                                            var $3916 = $3919;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3914 = $3916;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $3920 = self.pst;
                                                                                                                                                                                                                                                    var self = $3920;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $3922 = self.err;
                                                                                                                                                                                                                                                            var $3923 = self.nam;
                                                                                                                                                                                                                                                            var $3924 = self.ini;
                                                                                                                                                                                                                                                            var $3925 = self.idx;
                                                                                                                                                                                                                                                            var $3926 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($3913, $3922), $3923, $3924, $3925, $3926);
                                                                                                                                                                                                                                                            var self = _reply$pst$142;
                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                    var $3928 = self.err;
                                                                                                                                                                                                                                                                    var _reply$148 = Kind$Parser$term(_reply$pst$142);
                                                                                                                                                                                                                                                                    var self = _reply$148;
                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                            var $3930 = self.err;
                                                                                                                                                                                                                                                                            var self = $3928;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                    var $3932 = self.value;
                                                                                                                                                                                                                                                                                    var $3933 = Parser$Reply$error$(Parser$Error$combine$($3932, $3930));
                                                                                                                                                                                                                                                                                    var $3931 = $3933;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                    var $3934 = Parser$Reply$error$($3930);
                                                                                                                                                                                                                                                                                    var $3931 = $3934;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3929 = $3931;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                            var $3935 = self.pst;
                                                                                                                                                                                                                                                                            var $3936 = self.val;
                                                                                                                                                                                                                                                                            var self = $3935;
                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                    var $3938 = self.err;
                                                                                                                                                                                                                                                                                    var $3939 = self.nam;
                                                                                                                                                                                                                                                                                    var $3940 = self.ini;
                                                                                                                                                                                                                                                                                    var $3941 = self.idx;
                                                                                                                                                                                                                                                                                    var $3942 = self.str;
                                                                                                                                                                                                                                                                                    var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($3928, $3938), $3939, $3940, $3941, $3942);
                                                                                                                                                                                                                                                                                    var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                            var $3944 = self.err;
                                                                                                                                                                                                                                                                                            var _reply$162 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$156);
                                                                                                                                                                                                                                                                                            var self = _reply$162;
                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                    var $3946 = self.err;
                                                                                                                                                                                                                                                                                                    var self = $3944;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                                                                            var $3948 = self.value;
                                                                                                                                                                                                                                                                                                            var $3949 = Parser$Reply$error$(Parser$Error$combine$($3948, $3946));
                                                                                                                                                                                                                                                                                                            var $3947 = $3949;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                                                                            var $3950 = Parser$Reply$error$($3946);
                                                                                                                                                                                                                                                                                                            var $3947 = $3950;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3945 = $3947;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                    var $3951 = self.pst;
                                                                                                                                                                                                                                                                                                    var self = $3951;
                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                            var $3953 = self.err;
                                                                                                                                                                                                                                                                                                            var $3954 = self.nam;
                                                                                                                                                                                                                                                                                                            var $3955 = self.ini;
                                                                                                                                                                                                                                                                                                            var $3956 = self.idx;
                                                                                                                                                                                                                                                                                                            var $3957 = self.str;
                                                                                                                                                                                                                                                                                                            var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($3944, $3953), $3954, $3955, $3956, $3957);
                                                                                                                                                                                                                                                                                                            var self = _reply$pst$170;
                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                    var $3959 = self.err;
                                                                                                                                                                                                                                                                                                                    var _reply$176 = _body$1(Unit$new)(_reply$pst$170);
                                                                                                                                                                                                                                                                                                                    var self = _reply$176;
                                                                                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                                            var $3961 = self.err;
                                                                                                                                                                                                                                                                                                                            var self = $3959;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                                                                                                                    var $3963 = self.value;
                                                                                                                                                                                                                                                                                                                                    var $3964 = Parser$Reply$error$(Parser$Error$combine$($3963, $3961));
                                                                                                                                                                                                                                                                                                                                    var $3962 = $3964;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                                                                                                                    var $3965 = Parser$Reply$error$($3961);
                                                                                                                                                                                                                                                                                                                                    var $3962 = $3965;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $3960 = $3962;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                                            var $3966 = self.pst;
                                                                                                                                                                                                                                                                                                                            var $3967 = self.val;
                                                                                                                                                                                                                                                                                                                            var self = $3966;
                                                                                                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                                                    var $3969 = self.err;
                                                                                                                                                                                                                                                                                                                                    var $3970 = self.nam;
                                                                                                                                                                                                                                                                                                                                    var $3971 = self.ini;
                                                                                                                                                                                                                                                                                                                                    var $3972 = self.idx;
                                                                                                                                                                                                                                                                                                                                    var $3973 = self.str;
                                                                                                                                                                                                                                                                                                                                    var _reply$pst$184 = Parser$State$new$(Parser$Error$maybe_combine$($3959, $3969), $3970, $3971, $3972, $3973);
                                                                                                                                                                                                                                                                                                                                    var _moti$185 = Kind$Term$lam$("", (_x$185 => {
                                                                                                                                                                                                                                                                                                                                        var $3975 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                                                        return $3975;
                                                                                                                                                                                                                                                                                                                                    }));
                                                                                                                                                                                                                                                                                                                                    var _term$186 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                                                    var _term$187 = Kind$Term$app$(_term$186, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$188 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                                                    var _init$189 = Kind$Term$app$(_init$188, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$190 = Kind$Term$app$(_init$189, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                                                    var _init$191 = Kind$Term$app$(_init$190, Kind$Term$ref$($3813));
                                                                                                                                                                                                                                                                                                                                    var _init$192 = Kind$Term$app$(_init$191, Kind$Term$ref$($3844));
                                                                                                                                                                                                                                                                                                                                    var _term$193 = Kind$Term$app$(_term$187, _init$192);
                                                                                                                                                                                                                                                                                                                                    var _term$194 = Kind$Term$app$(_term$193, Kind$Term$lam$("s", (_s$194 => {
                                                                                                                                                                                                                                                                                                                                        var $3976 = Kind$Term$app$(Kind$Term$app$(_s$194, _moti$185), Kind$Term$lam$($3813, (_x$195 => {
                                                                                                                                                                                                                                                                                                                                            var $3977 = Kind$Term$lam$($3844, (_y$196 => {
                                                                                                                                                                                                                                                                                                                                                var $3978 = $3905;
                                                                                                                                                                                                                                                                                                                                                return $3978;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $3977;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $3976;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$195 = Kind$Term$app$(_term$194, Kind$Term$lam$("s", (_s$195 => {
                                                                                                                                                                                                                                                                                                                                        var $3979 = Kind$Term$app$(Kind$Term$app$(_s$195, _moti$185), Kind$Term$lam$($3813, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                            var $3980 = Kind$Term$lam$($3844, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                                var $3981 = $3936;
                                                                                                                                                                                                                                                                                                                                                return $3981;
                                                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                                                            return $3980;
                                                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                                                        return $3979;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var _term$196 = Kind$Term$app$(Kind$Term$app$(_term$195, _moti$185), Kind$Term$lam$($3813, (_x$196 => {
                                                                                                                                                                                                                                                                                                                                        var $3982 = Kind$Term$lam$($3844, (_y$197 => {
                                                                                                                                                                                                                                                                                                                                            var $3983 = $3967;
                                                                                                                                                                                                                                                                                                                                            return $3983;
                                                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                                                        return $3982;
                                                                                                                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                                                                                                                    var $3974 = Parser$Reply$value$(_reply$pst$184, _term$196);
                                                                                                                                                                                                                                                                                                                                    var $3968 = $3974;
                                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                                            var $3960 = $3968;
                                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                                    var $3958 = $3960;
                                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                                            var $3952 = $3958;
                                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                                    var $3945 = $3952;
                                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                            var $3943 = $3945;
                                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                                    var $3937 = $3943;
                                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                            var $3929 = $3937;
                                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                                    var $3927 = $3929;
                                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                            var $3921 = $3927;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $3914 = $3921;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $3912 = $3914;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $3906 = $3912;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $3898 = $3906;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $3896 = $3898;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $3890 = $3896;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $3883 = $3890;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $3881 = $3883;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $3875 = $3881;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $3868 = $3875;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $3866 = $3868;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $3860 = $3866;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $3853 = $3860;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $3851 = $3853;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $3845 = $3851;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $3837 = $3845;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $3835 = $3837;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $3829 = $3835;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $3822 = $3829;
                                                                                                    break;
                                                                                            };
                                                                                            var $3820 = $3822;
                                                                                            break;
                                                                                    };
                                                                                    var $3814 = $3820;
                                                                                    break;
                                                                            };
                                                                            var $3806 = $3814;
                                                                            break;
                                                                    };
                                                                    var $3804 = $3806;
                                                                    break;
                                                            };
                                                            var $3798 = $3804;
                                                            break;
                                                    };
                                                    var $3791 = $3798;
                                                    break;
                                            };
                                            var $3789 = $3791;
                                            break;
                                    };
                                    var $3783 = $3789;
                                    break;
                            };
                            var $3776 = $3783;
                            break;
                    };
                    var $3774 = $3776;
                    break;
            };
            return $3774;
        }));
        return $3773;
    };
    const Kind$Parser$getwhile = x0 => Kind$Parser$getwhile$(x0);

    function Kind$Parser$getwhile$with$(_body$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $3985 = self.err;
                var _reply$8 = Kind$Parser$text$("while ", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $3987 = self.err;
                        var self = $3985;
                        switch (self._) {
                            case 'Maybe.some':
                                var $3989 = self.value;
                                var $3990 = Parser$Reply$error$(Parser$Error$combine$($3989, $3987));
                                var $3988 = $3990;
                                break;
                            case 'Maybe.none':
                                var $3991 = Parser$Reply$error$($3987);
                                var $3988 = $3991;
                                break;
                        };
                        var $3986 = $3988;
                        break;
                    case 'Parser.Reply.value':
                        var $3992 = self.pst;
                        var self = $3992;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $3994 = self.err;
                                var $3995 = self.nam;
                                var $3996 = self.ini;
                                var $3997 = self.idx;
                                var $3998 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($3985, $3994), $3995, $3996, $3997, $3998);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4000 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4002 = self.err;
                                                var self = $4000;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4004 = self.value;
                                                        var $4005 = Parser$Reply$error$(Parser$Error$combine$($4004, $4002));
                                                        var $4003 = $4005;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4006 = Parser$Reply$error$($4002);
                                                        var $4003 = $4006;
                                                        break;
                                                };
                                                var $4001 = $4003;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4007 = self.pst;
                                                var $4008 = self.val;
                                                var self = $4007;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4010 = self.err;
                                                        var $4011 = self.nam;
                                                        var $4012 = self.ini;
                                                        var $4013 = self.idx;
                                                        var $4014 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4000, $4010), $4011, $4012, $4013, $4014);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4016 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("with ", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4018 = self.err;
                                                                        var self = $4016;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4020 = self.value;
                                                                                var $4021 = Parser$Reply$error$(Parser$Error$combine$($4020, $4018));
                                                                                var $4019 = $4021;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4022 = Parser$Reply$error$($4018);
                                                                                var $4019 = $4022;
                                                                                break;
                                                                        };
                                                                        var $4017 = $4019;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4023 = self.pst;
                                                                        var self = $4023;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4025 = self.err;
                                                                                var $4026 = self.nam;
                                                                                var $4027 = self.ini;
                                                                                var $4028 = self.idx;
                                                                                var $4029 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4016, $4025), $4026, $4027, $4028, $4029);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4031 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("{", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4033 = self.err;
                                                                                                var self = $4031;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4035 = self.value;
                                                                                                        var $4036 = Parser$Reply$error$(Parser$Error$combine$($4035, $4033));
                                                                                                        var $4034 = $4036;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4037 = Parser$Reply$error$($4033);
                                                                                                        var $4034 = $4037;
                                                                                                        break;
                                                                                                };
                                                                                                var $4032 = $4034;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4038 = self.pst;
                                                                                                var self = $4038;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4040 = self.err;
                                                                                                        var $4041 = self.nam;
                                                                                                        var $4042 = self.ini;
                                                                                                        var $4043 = self.idx;
                                                                                                        var $4044 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4031, $4040), $4041, $4042, $4043, $4044);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4046 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4048 = self.err;
                                                                                                                        var self = $4046;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4050 = self.value;
                                                                                                                                var $4051 = Parser$Reply$error$(Parser$Error$combine$($4050, $4048));
                                                                                                                                var $4049 = $4051;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4052 = Parser$Reply$error$($4048);
                                                                                                                                var $4049 = $4052;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4047 = $4049;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4053 = self.pst;
                                                                                                                        var $4054 = self.val;
                                                                                                                        var self = $4053;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4056 = self.err;
                                                                                                                                var $4057 = self.nam;
                                                                                                                                var $4058 = self.ini;
                                                                                                                                var $4059 = self.idx;
                                                                                                                                var $4060 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4046, $4056), $4057, $4058, $4059, $4060);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4062 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$(",", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4064 = self.err;
                                                                                                                                                var self = $4062;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4066 = self.value;
                                                                                                                                                        var $4067 = Parser$Reply$error$(Parser$Error$combine$($4066, $4064));
                                                                                                                                                        var $4065 = $4067;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4068 = Parser$Reply$error$($4064);
                                                                                                                                                        var $4065 = $4068;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4063 = $4065;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4069 = self.pst;
                                                                                                                                                var self = $4069;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4071 = self.err;
                                                                                                                                                        var $4072 = self.nam;
                                                                                                                                                        var $4073 = self.ini;
                                                                                                                                                        var $4074 = self.idx;
                                                                                                                                                        var $4075 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4062, $4071), $4072, $4073, $4074, $4075);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4077 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$name1$(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4079 = self.err;
                                                                                                                                                                        var self = $4077;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4081 = self.value;
                                                                                                                                                                                var $4082 = Parser$Reply$error$(Parser$Error$combine$($4081, $4079));
                                                                                                                                                                                var $4080 = $4082;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4083 = Parser$Reply$error$($4079);
                                                                                                                                                                                var $4080 = $4083;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4078 = $4080;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4084 = self.pst;
                                                                                                                                                                        var $4085 = self.val;
                                                                                                                                                                        var self = $4084;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4087 = self.err;
                                                                                                                                                                                var $4088 = self.nam;
                                                                                                                                                                                var $4089 = self.ini;
                                                                                                                                                                                var $4090 = self.idx;
                                                                                                                                                                                var $4091 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4077, $4087), $4088, $4089, $4090, $4091);
                                                                                                                                                                                var self = _reply$pst$100;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $4093 = self.err;
                                                                                                                                                                                        var _reply$106 = Kind$Parser$text$("}", _reply$pst$100);
                                                                                                                                                                                        var self = _reply$106;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $4095 = self.err;
                                                                                                                                                                                                var self = $4093;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $4097 = self.value;
                                                                                                                                                                                                        var $4098 = Parser$Reply$error$(Parser$Error$combine$($4097, $4095));
                                                                                                                                                                                                        var $4096 = $4098;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $4099 = Parser$Reply$error$($4095);
                                                                                                                                                                                                        var $4096 = $4099;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4094 = $4096;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $4100 = self.pst;
                                                                                                                                                                                                var self = $4100;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $4102 = self.err;
                                                                                                                                                                                                        var $4103 = self.nam;
                                                                                                                                                                                                        var $4104 = self.ini;
                                                                                                                                                                                                        var $4105 = self.idx;
                                                                                                                                                                                                        var $4106 = self.str;
                                                                                                                                                                                                        var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4093, $4102), $4103, $4104, $4105, $4106);
                                                                                                                                                                                                        var self = _reply$pst$114;
                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                var $4108 = self.err;
                                                                                                                                                                                                                var _reply$120 = Kind$Parser$text$(":", _reply$pst$114);
                                                                                                                                                                                                                var self = _reply$120;
                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                        var $4110 = self.err;
                                                                                                                                                                                                                        var self = $4108;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                var $4112 = self.value;
                                                                                                                                                                                                                                var $4113 = Parser$Reply$error$(Parser$Error$combine$($4112, $4110));
                                                                                                                                                                                                                                var $4111 = $4113;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                var $4114 = Parser$Reply$error$($4110);
                                                                                                                                                                                                                                var $4111 = $4114;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4109 = $4111;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                        var $4115 = self.pst;
                                                                                                                                                                                                                        var self = $4115;
                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                var $4117 = self.err;
                                                                                                                                                                                                                                var $4118 = self.nam;
                                                                                                                                                                                                                                var $4119 = self.ini;
                                                                                                                                                                                                                                var $4120 = self.idx;
                                                                                                                                                                                                                                var $4121 = self.str;
                                                                                                                                                                                                                                var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4108, $4117), $4118, $4119, $4120, $4121);
                                                                                                                                                                                                                                var self = _reply$pst$128;
                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                        var $4123 = self.err;
                                                                                                                                                                                                                                        var _reply$134 = Kind$Parser$term(_reply$pst$128);
                                                                                                                                                                                                                                        var self = _reply$134;
                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                var $4125 = self.err;
                                                                                                                                                                                                                                                var self = $4123;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                        var $4127 = self.value;
                                                                                                                                                                                                                                                        var $4128 = Parser$Reply$error$(Parser$Error$combine$($4127, $4125));
                                                                                                                                                                                                                                                        var $4126 = $4128;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                        var $4129 = Parser$Reply$error$($4125);
                                                                                                                                                                                                                                                        var $4126 = $4129;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4124 = $4126;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                var $4130 = self.pst;
                                                                                                                                                                                                                                                var $4131 = self.val;
                                                                                                                                                                                                                                                var self = $4130;
                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                        var $4133 = self.err;
                                                                                                                                                                                                                                                        var $4134 = self.nam;
                                                                                                                                                                                                                                                        var $4135 = self.ini;
                                                                                                                                                                                                                                                        var $4136 = self.idx;
                                                                                                                                                                                                                                                        var $4137 = self.str;
                                                                                                                                                                                                                                                        var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4123, $4133), $4134, $4135, $4136, $4137);
                                                                                                                                                                                                                                                        var self = _reply$pst$142;
                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                var $4139 = self.err;
                                                                                                                                                                                                                                                                var _reply$148 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$142);
                                                                                                                                                                                                                                                                var self = _reply$148;
                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                        var $4141 = self.err;
                                                                                                                                                                                                                                                                        var self = $4139;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                                                                                                var $4143 = self.value;
                                                                                                                                                                                                                                                                                var $4144 = Parser$Reply$error$(Parser$Error$combine$($4143, $4141));
                                                                                                                                                                                                                                                                                var $4142 = $4144;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                                                                                                var $4145 = Parser$Reply$error$($4141);
                                                                                                                                                                                                                                                                                var $4142 = $4145;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4140 = $4142;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                        var $4146 = self.pst;
                                                                                                                                                                                                                                                                        var self = $4146;
                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                                                                                                                var $4148 = self.err;
                                                                                                                                                                                                                                                                                var $4149 = self.nam;
                                                                                                                                                                                                                                                                                var $4150 = self.ini;
                                                                                                                                                                                                                                                                                var $4151 = self.idx;
                                                                                                                                                                                                                                                                                var $4152 = self.str;
                                                                                                                                                                                                                                                                                var _reply$pst$156 = Parser$State$new$(Parser$Error$maybe_combine$($4139, $4148), $4149, $4150, $4151, $4152);
                                                                                                                                                                                                                                                                                var self = _reply$pst$156;
                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                        var $4154 = self.err;
                                                                                                                                                                                                                                                                                        var _reply$162 = _body$1(Unit$new)(_reply$pst$156);
                                                                                                                                                                                                                                                                                        var self = _reply$162;
                                                                                                                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                                                                                                                var $4156 = self.err;
                                                                                                                                                                                                                                                                                                var self = $4154;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                                                                                                                        var $4158 = self.value;
                                                                                                                                                                                                                                                                                                        var $4159 = Parser$Reply$error$(Parser$Error$combine$($4158, $4156));
                                                                                                                                                                                                                                                                                                        var $4157 = $4159;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                                                                                                                        var $4160 = Parser$Reply$error$($4156);
                                                                                                                                                                                                                                                                                                        var $4157 = $4160;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4155 = $4157;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                                                                                                                var $4161 = self.pst;
                                                                                                                                                                                                                                                                                                var $4162 = self.val;
                                                                                                                                                                                                                                                                                                var self = $4161;
                                                                                                                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                                                                                                                        var $4164 = self.err;
                                                                                                                                                                                                                                                                                                        var $4165 = self.nam;
                                                                                                                                                                                                                                                                                                        var $4166 = self.ini;
                                                                                                                                                                                                                                                                                                        var $4167 = self.idx;
                                                                                                                                                                                                                                                                                                        var $4168 = self.str;
                                                                                                                                                                                                                                                                                                        var _reply$pst$170 = Parser$State$new$(Parser$Error$maybe_combine$($4154, $4164), $4165, $4166, $4167, $4168);
                                                                                                                                                                                                                                                                                                        var _moti$171 = Kind$Term$lam$("", (_x$171 => {
                                                                                                                                                                                                                                                                                                            var $4170 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                                                            return $4170;
                                                                                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                                                                                        var _term$172 = Kind$Term$ref$("Function.while");
                                                                                                                                                                                                                                                                                                        var _term$173 = Kind$Term$app$(_term$172, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$174 = Kind$Term$ref$("Pair.new");
                                                                                                                                                                                                                                                                                                        var _init$175 = Kind$Term$app$(_init$174, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$176 = Kind$Term$app$(_init$175, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                                                                                        var _init$177 = Kind$Term$app$(_init$176, Kind$Term$ref$($4054));
                                                                                                                                                                                                                                                                                                        var _init$178 = Kind$Term$app$(_init$177, Kind$Term$ref$($4085));
                                                                                                                                                                                                                                                                                                        var _term$179 = Kind$Term$app$(_term$173, _init$178);
                                                                                                                                                                                                                                                                                                        var _term$180 = Kind$Term$app$(_term$179, Kind$Term$lam$("s", (_s$180 => {
                                                                                                                                                                                                                                                                                                            var $4171 = Kind$Term$app$(Kind$Term$app$(_s$180, _moti$171), Kind$Term$lam$($4054, (_x$181 => {
                                                                                                                                                                                                                                                                                                                var $4172 = Kind$Term$lam$($4085, (_y$182 => {
                                                                                                                                                                                                                                                                                                                    var $4173 = $4008;
                                                                                                                                                                                                                                                                                                                    return $4173;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4172;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4171;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$181 = Kind$Term$app$(_term$180, Kind$Term$lam$("s", (_s$181 => {
                                                                                                                                                                                                                                                                                                            var $4174 = Kind$Term$app$(Kind$Term$app$(_s$181, _moti$171), Kind$Term$lam$($4054, (_x$182 => {
                                                                                                                                                                                                                                                                                                                var $4175 = Kind$Term$lam$($4085, (_y$183 => {
                                                                                                                                                                                                                                                                                                                    var $4176 = $4131;
                                                                                                                                                                                                                                                                                                                    return $4176;
                                                                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                                                                return $4175;
                                                                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                                                                            return $4174;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var _term$182 = Kind$Term$app$(Kind$Term$app$(_term$181, _moti$171), Kind$Term$lam$($4054, (_x$182 => {
                                                                                                                                                                                                                                                                                                            var $4177 = Kind$Term$lam$($4085, (_y$183 => {
                                                                                                                                                                                                                                                                                                                var $4178 = $4162;
                                                                                                                                                                                                                                                                                                                return $4178;
                                                                                                                                                                                                                                                                                                            }));
                                                                                                                                                                                                                                                                                                            return $4177;
                                                                                                                                                                                                                                                                                                        })));
                                                                                                                                                                                                                                                                                                        var $4169 = Parser$Reply$value$(_reply$pst$170, _term$182);
                                                                                                                                                                                                                                                                                                        var $4163 = $4169;
                                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                                var $4155 = $4163;
                                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                        var $4153 = $4155;
                                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                                var $4147 = $4153;
                                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                        var $4140 = $4147;
                                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                var $4138 = $4140;
                                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                        var $4132 = $4138;
                                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                var $4124 = $4132;
                                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                        var $4122 = $4124;
                                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                var $4116 = $4122;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                        var $4109 = $4116;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                };
                                                                                                                                                                                                                var $4107 = $4109;
                                                                                                                                                                                                                break;
                                                                                                                                                                                                        };
                                                                                                                                                                                                        var $4101 = $4107;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $4094 = $4101;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $4092 = $4094;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $4086 = $4092;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4078 = $4086;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4076 = $4078;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4070 = $4076;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4063 = $4070;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4061 = $4063;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4055 = $4061;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4047 = $4055;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4045 = $4047;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4039 = $4045;
                                                                                                        break;
                                                                                                };
                                                                                                var $4032 = $4039;
                                                                                                break;
                                                                                        };
                                                                                        var $4030 = $4032;
                                                                                        break;
                                                                                };
                                                                                var $4024 = $4030;
                                                                                break;
                                                                        };
                                                                        var $4017 = $4024;
                                                                        break;
                                                                };
                                                                var $4015 = $4017;
                                                                break;
                                                        };
                                                        var $4009 = $4015;
                                                        break;
                                                };
                                                var $4001 = $4009;
                                                break;
                                        };
                                        var $3999 = $4001;
                                        break;
                                };
                                var $3993 = $3999;
                                break;
                        };
                        var $3986 = $3993;
                        break;
                };
                var $3984 = $3986;
                break;
        };
        return $3984;
    };
    const Kind$Parser$getwhile$with = x0 => x1 => Kind$Parser$getwhile$with$(x0, x1);

    function Kind$Parser$get$(_body$1) {
        var $4179 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4181 = self.err;
                    var _reply$8 = Kind$Parser$text$("let ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4183 = self.err;
                            var self = $4181;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4185 = self.value;
                                    var $4186 = Parser$Reply$error$(Parser$Error$combine$($4185, $4183));
                                    var $4184 = $4186;
                                    break;
                                case 'Maybe.none':
                                    var $4187 = Parser$Reply$error$($4183);
                                    var $4184 = $4187;
                                    break;
                            };
                            var $4182 = $4184;
                            break;
                        case 'Parser.Reply.value':
                            var $4188 = self.pst;
                            var self = $4188;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4190 = self.err;
                                    var $4191 = self.nam;
                                    var $4192 = self.ini;
                                    var $4193 = self.idx;
                                    var $4194 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4181, $4190), $4191, $4192, $4193, $4194);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4196 = self.err;
                                            var _reply$22 = Kind$Parser$text$("{", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4198 = self.err;
                                                    var self = $4196;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4200 = self.value;
                                                            var $4201 = Parser$Reply$error$(Parser$Error$combine$($4200, $4198));
                                                            var $4199 = $4201;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4202 = Parser$Reply$error$($4198);
                                                            var $4199 = $4202;
                                                            break;
                                                    };
                                                    var $4197 = $4199;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4203 = self.pst;
                                                    var self = $4203;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4205 = self.err;
                                                            var $4206 = self.nam;
                                                            var $4207 = self.ini;
                                                            var $4208 = self.idx;
                                                            var $4209 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4196, $4205), $4206, $4207, $4208, $4209);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4211 = self.err;
                                                                    var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4213 = self.err;
                                                                            var self = $4211;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4215 = self.value;
                                                                                    var $4216 = Parser$Reply$error$(Parser$Error$combine$($4215, $4213));
                                                                                    var $4214 = $4216;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4217 = Parser$Reply$error$($4213);
                                                                                    var $4214 = $4217;
                                                                                    break;
                                                                            };
                                                                            var $4212 = $4214;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4218 = self.pst;
                                                                            var $4219 = self.val;
                                                                            var self = $4218;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4221 = self.err;
                                                                                    var $4222 = self.nam;
                                                                                    var $4223 = self.ini;
                                                                                    var $4224 = self.idx;
                                                                                    var $4225 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4211, $4221), $4222, $4223, $4224, $4225);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4227 = self.err;
                                                                                            var _reply$50 = Kind$Parser$text$(",", _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4229 = self.err;
                                                                                                    var self = $4227;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4231 = self.value;
                                                                                                            var $4232 = Parser$Reply$error$(Parser$Error$combine$($4231, $4229));
                                                                                                            var $4230 = $4232;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4233 = Parser$Reply$error$($4229);
                                                                                                            var $4230 = $4233;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4228 = $4230;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4234 = self.pst;
                                                                                                    var self = $4234;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4236 = self.err;
                                                                                                            var $4237 = self.nam;
                                                                                                            var $4238 = self.ini;
                                                                                                            var $4239 = self.idx;
                                                                                                            var $4240 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4227, $4236), $4237, $4238, $4239, $4240);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4242 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$name1$(_reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4244 = self.err;
                                                                                                                            var self = $4242;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4246 = self.value;
                                                                                                                                    var $4247 = Parser$Reply$error$(Parser$Error$combine$($4246, $4244));
                                                                                                                                    var $4245 = $4247;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4248 = Parser$Reply$error$($4244);
                                                                                                                                    var $4245 = $4248;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4243 = $4245;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4249 = self.pst;
                                                                                                                            var $4250 = self.val;
                                                                                                                            var self = $4249;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4252 = self.err;
                                                                                                                                    var $4253 = self.nam;
                                                                                                                                    var $4254 = self.ini;
                                                                                                                                    var $4255 = self.idx;
                                                                                                                                    var $4256 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4242, $4252), $4253, $4254, $4255, $4256);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4258 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("}", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4260 = self.err;
                                                                                                                                                    var self = $4258;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4262 = self.value;
                                                                                                                                                            var $4263 = Parser$Reply$error$(Parser$Error$combine$($4262, $4260));
                                                                                                                                                            var $4261 = $4263;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4264 = Parser$Reply$error$($4260);
                                                                                                                                                            var $4261 = $4264;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4259 = $4261;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4265 = self.pst;
                                                                                                                                                    var self = $4265;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4267 = self.err;
                                                                                                                                                            var $4268 = self.nam;
                                                                                                                                                            var $4269 = self.ini;
                                                                                                                                                            var $4270 = self.idx;
                                                                                                                                                            var $4271 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4258, $4267), $4268, $4269, $4270, $4271);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4273 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$("=", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4275 = self.err;
                                                                                                                                                                            var self = $4273;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4277 = self.value;
                                                                                                                                                                                    var $4278 = Parser$Reply$error$(Parser$Error$combine$($4277, $4275));
                                                                                                                                                                                    var $4276 = $4278;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4279 = Parser$Reply$error$($4275);
                                                                                                                                                                                    var $4276 = $4279;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4274 = $4276;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4280 = self.pst;
                                                                                                                                                                            var self = $4280;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4282 = self.err;
                                                                                                                                                                                    var $4283 = self.nam;
                                                                                                                                                                                    var $4284 = self.ini;
                                                                                                                                                                                    var $4285 = self.idx;
                                                                                                                                                                                    var $4286 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4273, $4282), $4283, $4284, $4285, $4286);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4288 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4290 = self.err;
                                                                                                                                                                                                    var self = $4288;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4292 = self.value;
                                                                                                                                                                                                            var $4293 = Parser$Reply$error$(Parser$Error$combine$($4292, $4290));
                                                                                                                                                                                                            var $4291 = $4293;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4294 = Parser$Reply$error$($4290);
                                                                                                                                                                                                            var $4291 = $4294;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4289 = $4291;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4295 = self.pst;
                                                                                                                                                                                                    var $4296 = self.val;
                                                                                                                                                                                                    var self = $4295;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4298 = self.err;
                                                                                                                                                                                                            var $4299 = self.nam;
                                                                                                                                                                                                            var $4300 = self.ini;
                                                                                                                                                                                                            var $4301 = self.idx;
                                                                                                                                                                                                            var $4302 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4288, $4298), $4299, $4300, $4301, $4302);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4304 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4306 = self.err;
                                                                                                                                                                                                                            var self = $4304;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4308 = self.value;
                                                                                                                                                                                                                                    var $4309 = Parser$Reply$error$(Parser$Error$combine$($4308, $4306));
                                                                                                                                                                                                                                    var $4307 = $4309;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4310 = Parser$Reply$error$($4306);
                                                                                                                                                                                                                                    var $4307 = $4310;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4305 = $4307;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4311 = self.pst;
                                                                                                                                                                                                                            var self = $4311;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4313 = self.err;
                                                                                                                                                                                                                                    var $4314 = self.nam;
                                                                                                                                                                                                                                    var $4315 = self.ini;
                                                                                                                                                                                                                                    var $4316 = self.idx;
                                                                                                                                                                                                                                    var $4317 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4304, $4313), $4314, $4315, $4316, $4317);
                                                                                                                                                                                                                                    var self = _reply$pst$128;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                            var $4319 = self.err;
                                                                                                                                                                                                                                            var _reply$134 = _body$1(Unit$new)(_reply$pst$128);
                                                                                                                                                                                                                                            var self = _reply$134;
                                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                                                                    var $4321 = self.err;
                                                                                                                                                                                                                                                    var self = $4319;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                                            var $4323 = self.value;
                                                                                                                                                                                                                                                            var $4324 = Parser$Reply$error$(Parser$Error$combine$($4323, $4321));
                                                                                                                                                                                                                                                            var $4322 = $4324;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                                            var $4325 = Parser$Reply$error$($4321);
                                                                                                                                                                                                                                                            var $4322 = $4325;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4320 = $4322;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                                                                    var $4326 = self.pst;
                                                                                                                                                                                                                                                    var $4327 = self.val;
                                                                                                                                                                                                                                                    var self = $4326;
                                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                                                                            var $4329 = self.err;
                                                                                                                                                                                                                                                            var $4330 = self.nam;
                                                                                                                                                                                                                                                            var $4331 = self.ini;
                                                                                                                                                                                                                                                            var $4332 = self.idx;
                                                                                                                                                                                                                                                            var $4333 = self.str;
                                                                                                                                                                                                                                                            var _reply$pst$142 = Parser$State$new$(Parser$Error$maybe_combine$($4319, $4329), $4330, $4331, $4332, $4333);
                                                                                                                                                                                                                                                            var _term$143 = $4296;
                                                                                                                                                                                                                                                            var _term$144 = Kind$Term$app$(_term$143, Kind$Term$lam$("", (_x$144 => {
                                                                                                                                                                                                                                                                var $4335 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                                                return $4335;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var _term$145 = Kind$Term$app$(_term$144, Kind$Term$lam$($4219, (_x$145 => {
                                                                                                                                                                                                                                                                var $4336 = Kind$Term$lam$($4250, (_y$146 => {
                                                                                                                                                                                                                                                                    var $4337 = $4327;
                                                                                                                                                                                                                                                                    return $4337;
                                                                                                                                                                                                                                                                }));
                                                                                                                                                                                                                                                                return $4336;
                                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                                            var $4334 = Parser$Reply$value$(_reply$pst$142, _term$145);
                                                                                                                                                                                                                                                            var $4328 = $4334;
                                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                    var $4320 = $4328;
                                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                            var $4318 = $4320;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $4312 = $4318;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4305 = $4312;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4303 = $4305;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4297 = $4303;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4289 = $4297;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4287 = $4289;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4281 = $4287;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4274 = $4281;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4272 = $4274;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4266 = $4272;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4259 = $4266;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4257 = $4259;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4251 = $4257;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4243 = $4251;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4241 = $4243;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4235 = $4241;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4228 = $4235;
                                                                                                    break;
                                                                                            };
                                                                                            var $4226 = $4228;
                                                                                            break;
                                                                                    };
                                                                                    var $4220 = $4226;
                                                                                    break;
                                                                            };
                                                                            var $4212 = $4220;
                                                                            break;
                                                                    };
                                                                    var $4210 = $4212;
                                                                    break;
                                                            };
                                                            var $4204 = $4210;
                                                            break;
                                                    };
                                                    var $4197 = $4204;
                                                    break;
                                            };
                                            var $4195 = $4197;
                                            break;
                                    };
                                    var $4189 = $4195;
                                    break;
                            };
                            var $4182 = $4189;
                            break;
                    };
                    var $4180 = $4182;
                    break;
            };
            return $4180;
        }));
        return $4179;
    };
    const Kind$Parser$get = x0 => Kind$Parser$get$(x0);

    function Kind$Parser$get$omit$(_body$1) {
        var $4338 = Kind$Parser$block("let")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4340 = self.err;
                    var _reply$8 = Kind$Parser$text$("{", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4342 = self.err;
                            var self = $4340;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4344 = self.value;
                                    var $4345 = Parser$Reply$error$(Parser$Error$combine$($4344, $4342));
                                    var $4343 = $4345;
                                    break;
                                case 'Maybe.none':
                                    var $4346 = Parser$Reply$error$($4342);
                                    var $4343 = $4346;
                                    break;
                            };
                            var $4341 = $4343;
                            break;
                        case 'Parser.Reply.value':
                            var $4347 = self.pst;
                            var self = $4347;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4349 = self.err;
                                    var $4350 = self.nam;
                                    var $4351 = self.ini;
                                    var $4352 = self.idx;
                                    var $4353 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4340, $4349), $4350, $4351, $4352, $4353);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4355 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4357 = self.err;
                                                    var self = $4355;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4359 = self.value;
                                                            var $4360 = Parser$Reply$error$(Parser$Error$combine$($4359, $4357));
                                                            var $4358 = $4360;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4361 = Parser$Reply$error$($4357);
                                                            var $4358 = $4361;
                                                            break;
                                                    };
                                                    var $4356 = $4358;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4362 = self.pst;
                                                    var $4363 = self.val;
                                                    var self = $4362;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4365 = self.err;
                                                            var $4366 = self.nam;
                                                            var $4367 = self.ini;
                                                            var $4368 = self.idx;
                                                            var $4369 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4355, $4365), $4366, $4367, $4368, $4369);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4371 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(",", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4373 = self.err;
                                                                            var self = $4371;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4375 = self.value;
                                                                                    var $4376 = Parser$Reply$error$(Parser$Error$combine$($4375, $4373));
                                                                                    var $4374 = $4376;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4377 = Parser$Reply$error$($4373);
                                                                                    var $4374 = $4377;
                                                                                    break;
                                                                            };
                                                                            var $4372 = $4374;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4378 = self.pst;
                                                                            var self = $4378;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4380 = self.err;
                                                                                    var $4381 = self.nam;
                                                                                    var $4382 = self.ini;
                                                                                    var $4383 = self.idx;
                                                                                    var $4384 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4371, $4380), $4381, $4382, $4383, $4384);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4386 = self.err;
                                                                                            var _reply$50 = Kind$Parser$name1$(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4388 = self.err;
                                                                                                    var self = $4386;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4390 = self.value;
                                                                                                            var $4391 = Parser$Reply$error$(Parser$Error$combine$($4390, $4388));
                                                                                                            var $4389 = $4391;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4392 = Parser$Reply$error$($4388);
                                                                                                            var $4389 = $4392;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4387 = $4389;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4393 = self.pst;
                                                                                                    var $4394 = self.val;
                                                                                                    var self = $4393;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4396 = self.err;
                                                                                                            var $4397 = self.nam;
                                                                                                            var $4398 = self.ini;
                                                                                                            var $4399 = self.idx;
                                                                                                            var $4400 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4386, $4396), $4397, $4398, $4399, $4400);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4402 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4404 = self.err;
                                                                                                                            var self = $4402;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4406 = self.value;
                                                                                                                                    var $4407 = Parser$Reply$error$(Parser$Error$combine$($4406, $4404));
                                                                                                                                    var $4405 = $4407;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4408 = Parser$Reply$error$($4404);
                                                                                                                                    var $4405 = $4408;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4403 = $4405;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4409 = self.pst;
                                                                                                                            var self = $4409;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4411 = self.err;
                                                                                                                                    var $4412 = self.nam;
                                                                                                                                    var $4413 = self.ini;
                                                                                                                                    var $4414 = self.idx;
                                                                                                                                    var $4415 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4402, $4411), $4412, $4413, $4414, $4415);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4417 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$text$("= ", _reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4419 = self.err;
                                                                                                                                                    var self = $4417;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4421 = self.value;
                                                                                                                                                            var $4422 = Parser$Reply$error$(Parser$Error$combine$($4421, $4419));
                                                                                                                                                            var $4420 = $4422;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4423 = Parser$Reply$error$($4419);
                                                                                                                                                            var $4420 = $4423;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4418 = $4420;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4424 = self.pst;
                                                                                                                                                    var self = $4424;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4426 = self.err;
                                                                                                                                                            var $4427 = self.nam;
                                                                                                                                                            var $4428 = self.ini;
                                                                                                                                                            var $4429 = self.idx;
                                                                                                                                                            var $4430 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4417, $4426), $4427, $4428, $4429, $4430);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $4432 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $4434 = self.err;
                                                                                                                                                                            var self = $4432;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $4436 = self.value;
                                                                                                                                                                                    var $4437 = Parser$Reply$error$(Parser$Error$combine$($4436, $4434));
                                                                                                                                                                                    var $4435 = $4437;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $4438 = Parser$Reply$error$($4434);
                                                                                                                                                                                    var $4435 = $4438;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4433 = $4435;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $4439 = self.pst;
                                                                                                                                                                            var $4440 = self.val;
                                                                                                                                                                            var self = $4439;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $4442 = self.err;
                                                                                                                                                                                    var $4443 = self.nam;
                                                                                                                                                                                    var $4444 = self.ini;
                                                                                                                                                                                    var $4445 = self.idx;
                                                                                                                                                                                    var $4446 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($4432, $4442), $4443, $4444, $4445, $4446);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $4448 = self.err;
                                                                                                                                                                                            var _reply$106 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $4450 = self.err;
                                                                                                                                                                                                    var self = $4448;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $4452 = self.value;
                                                                                                                                                                                                            var $4453 = Parser$Reply$error$(Parser$Error$combine$($4452, $4450));
                                                                                                                                                                                                            var $4451 = $4453;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $4454 = Parser$Reply$error$($4450);
                                                                                                                                                                                                            var $4451 = $4454;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4449 = $4451;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $4455 = self.pst;
                                                                                                                                                                                                    var self = $4455;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $4457 = self.err;
                                                                                                                                                                                                            var $4458 = self.nam;
                                                                                                                                                                                                            var $4459 = self.ini;
                                                                                                                                                                                                            var $4460 = self.idx;
                                                                                                                                                                                                            var $4461 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($4448, $4457), $4458, $4459, $4460, $4461);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $4463 = self.err;
                                                                                                                                                                                                                    var _reply$120 = _body$1(Unit$new)(_reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $4465 = self.err;
                                                                                                                                                                                                                            var self = $4463;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $4467 = self.value;
                                                                                                                                                                                                                                    var $4468 = Parser$Reply$error$(Parser$Error$combine$($4467, $4465));
                                                                                                                                                                                                                                    var $4466 = $4468;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $4469 = Parser$Reply$error$($4465);
                                                                                                                                                                                                                                    var $4466 = $4469;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4464 = $4466;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $4470 = self.pst;
                                                                                                                                                                                                                            var $4471 = self.val;
                                                                                                                                                                                                                            var self = $4470;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $4473 = self.err;
                                                                                                                                                                                                                                    var $4474 = self.nam;
                                                                                                                                                                                                                                    var $4475 = self.ini;
                                                                                                                                                                                                                                    var $4476 = self.idx;
                                                                                                                                                                                                                                    var $4477 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($4463, $4473), $4474, $4475, $4476, $4477);
                                                                                                                                                                                                                                    var _term$129 = $4440;
                                                                                                                                                                                                                                    var _term$130 = Kind$Term$app$(_term$129, Kind$Term$lam$("", (_x$130 => {
                                                                                                                                                                                                                                        var $4479 = Kind$Term$hol$(Bits$e);
                                                                                                                                                                                                                                        return $4479;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var _term$131 = Kind$Term$app$(_term$130, Kind$Term$lam$($4363, (_x$131 => {
                                                                                                                                                                                                                                        var $4480 = Kind$Term$lam$($4394, (_y$132 => {
                                                                                                                                                                                                                                            var $4481 = $4471;
                                                                                                                                                                                                                                            return $4481;
                                                                                                                                                                                                                                        }));
                                                                                                                                                                                                                                        return $4480;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var $4478 = Parser$Reply$value$(_reply$pst$128, _term$131);
                                                                                                                                                                                                                                    var $4472 = $4478;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $4464 = $4472;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $4462 = $4464;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $4456 = $4462;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $4449 = $4456;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $4447 = $4449;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $4441 = $4447;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $4433 = $4441;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $4431 = $4433;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $4425 = $4431;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4418 = $4425;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4416 = $4418;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4410 = $4416;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4403 = $4410;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4401 = $4403;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4395 = $4401;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4387 = $4395;
                                                                                                    break;
                                                                                            };
                                                                                            var $4385 = $4387;
                                                                                            break;
                                                                                    };
                                                                                    var $4379 = $4385;
                                                                                    break;
                                                                            };
                                                                            var $4372 = $4379;
                                                                            break;
                                                                    };
                                                                    var $4370 = $4372;
                                                                    break;
                                                            };
                                                            var $4364 = $4370;
                                                            break;
                                                    };
                                                    var $4356 = $4364;
                                                    break;
                                            };
                                            var $4354 = $4356;
                                            break;
                                    };
                                    var $4348 = $4354;
                                    break;
                            };
                            var $4341 = $4348;
                            break;
                    };
                    var $4339 = $4341;
                    break;
            };
            return $4339;
        }));
        return $4338;
    };
    const Kind$Parser$get$omit = x0 => Kind$Parser$get$omit$(x0);

    function Kind$Parser$def$(_body$1) {
        var $4482 = Kind$Parser$block("def")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4484 = self.err;
                    var _reply$8 = Kind$Parser$text$("def ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4486 = self.err;
                            var self = $4484;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4488 = self.value;
                                    var $4489 = Parser$Reply$error$(Parser$Error$combine$($4488, $4486));
                                    var $4487 = $4489;
                                    break;
                                case 'Maybe.none':
                                    var $4490 = Parser$Reply$error$($4486);
                                    var $4487 = $4490;
                                    break;
                            };
                            var $4485 = $4487;
                            break;
                        case 'Parser.Reply.value':
                            var $4491 = self.pst;
                            var self = $4491;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4493 = self.err;
                                    var $4494 = self.nam;
                                    var $4495 = self.ini;
                                    var $4496 = self.idx;
                                    var $4497 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4484, $4493), $4494, $4495, $4496, $4497);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4499 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4501 = self.err;
                                                    var self = $4499;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4503 = self.value;
                                                            var $4504 = Parser$Reply$error$(Parser$Error$combine$($4503, $4501));
                                                            var $4502 = $4504;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4505 = Parser$Reply$error$($4501);
                                                            var $4502 = $4505;
                                                            break;
                                                    };
                                                    var $4500 = $4502;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4506 = self.pst;
                                                    var $4507 = self.val;
                                                    var self = $4506;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4509 = self.err;
                                                            var $4510 = self.nam;
                                                            var $4511 = self.ini;
                                                            var $4512 = self.idx;
                                                            var $4513 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4499, $4509), $4510, $4511, $4512, $4513);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $4515 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $4517 = self.err;
                                                                            var self = $4515;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $4519 = self.value;
                                                                                    var $4520 = Parser$Reply$error$(Parser$Error$combine$($4519, $4517));
                                                                                    var $4518 = $4520;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $4521 = Parser$Reply$error$($4517);
                                                                                    var $4518 = $4521;
                                                                                    break;
                                                                            };
                                                                            var $4516 = $4518;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $4522 = self.pst;
                                                                            var self = $4522;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $4524 = self.err;
                                                                                    var $4525 = self.nam;
                                                                                    var $4526 = self.ini;
                                                                                    var $4527 = self.idx;
                                                                                    var $4528 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($4515, $4524), $4525, $4526, $4527, $4528);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $4530 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $4532 = self.err;
                                                                                                    var self = $4530;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $4534 = self.value;
                                                                                                            var $4535 = Parser$Reply$error$(Parser$Error$combine$($4534, $4532));
                                                                                                            var $4533 = $4535;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $4536 = Parser$Reply$error$($4532);
                                                                                                            var $4533 = $4536;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4531 = $4533;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $4537 = self.pst;
                                                                                                    var $4538 = self.val;
                                                                                                    var self = $4537;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $4540 = self.err;
                                                                                                            var $4541 = self.nam;
                                                                                                            var $4542 = self.ini;
                                                                                                            var $4543 = self.idx;
                                                                                                            var $4544 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($4530, $4540), $4541, $4542, $4543, $4544);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $4546 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $4548 = self.err;
                                                                                                                            var self = $4546;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $4550 = self.value;
                                                                                                                                    var $4551 = Parser$Reply$error$(Parser$Error$combine$($4550, $4548));
                                                                                                                                    var $4549 = $4551;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $4552 = Parser$Reply$error$($4548);
                                                                                                                                    var $4549 = $4552;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4547 = $4549;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $4553 = self.pst;
                                                                                                                            var self = $4553;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $4555 = self.err;
                                                                                                                                    var $4556 = self.nam;
                                                                                                                                    var $4557 = self.ini;
                                                                                                                                    var $4558 = self.idx;
                                                                                                                                    var $4559 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($4546, $4555), $4556, $4557, $4558, $4559);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $4561 = self.err;
                                                                                                                                            var _reply$78 = _body$1(Unit$new)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $4563 = self.err;
                                                                                                                                                    var self = $4561;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $4565 = self.value;
                                                                                                                                                            var $4566 = Parser$Reply$error$(Parser$Error$combine$($4565, $4563));
                                                                                                                                                            var $4564 = $4566;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $4567 = Parser$Reply$error$($4563);
                                                                                                                                                            var $4564 = $4567;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4562 = $4564;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $4568 = self.pst;
                                                                                                                                                    var $4569 = self.val;
                                                                                                                                                    var self = $4568;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $4571 = self.err;
                                                                                                                                                            var $4572 = self.nam;
                                                                                                                                                            var $4573 = self.ini;
                                                                                                                                                            var $4574 = self.idx;
                                                                                                                                                            var $4575 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($4561, $4571), $4572, $4573, $4574, $4575);
                                                                                                                                                            var $4576 = Parser$Reply$value$(_reply$pst$86, Kind$Term$def$($4507, $4538, (_x$87 => {
                                                                                                                                                                var $4577 = $4569;
                                                                                                                                                                return $4577;
                                                                                                                                                            })));
                                                                                                                                                            var $4570 = $4576;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $4562 = $4570;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $4560 = $4562;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $4554 = $4560;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $4547 = $4554;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $4545 = $4547;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $4539 = $4545;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $4531 = $4539;
                                                                                                    break;
                                                                                            };
                                                                                            var $4529 = $4531;
                                                                                            break;
                                                                                    };
                                                                                    var $4523 = $4529;
                                                                                    break;
                                                                            };
                                                                            var $4516 = $4523;
                                                                            break;
                                                                    };
                                                                    var $4514 = $4516;
                                                                    break;
                                                            };
                                                            var $4508 = $4514;
                                                            break;
                                                    };
                                                    var $4500 = $4508;
                                                    break;
                                            };
                                            var $4498 = $4500;
                                            break;
                                    };
                                    var $4492 = $4498;
                                    break;
                            };
                            var $4485 = $4492;
                            break;
                    };
                    var $4483 = $4485;
                    break;
            };
            return $4483;
        }));
        return $4482;
    };
    const Kind$Parser$def = x0 => Kind$Parser$def$(x0);
    const Kind$Parser$goal_rewrite = Kind$Parser$block("goal-rewrite")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4579 = self.err;
                var _reply$7 = Kind$Parser$text$("rewrite ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4581 = self.err;
                        var self = $4579;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4583 = self.value;
                                var $4584 = Parser$Reply$error$(Parser$Error$combine$($4583, $4581));
                                var $4582 = $4584;
                                break;
                            case 'Maybe.none':
                                var $4585 = Parser$Reply$error$($4581);
                                var $4582 = $4585;
                                break;
                        };
                        var $4580 = $4582;
                        break;
                    case 'Parser.Reply.value':
                        var $4586 = self.pst;
                        var self = $4586;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4588 = self.err;
                                var $4589 = self.nam;
                                var $4590 = self.ini;
                                var $4591 = self.idx;
                                var $4592 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4579, $4588), $4589, $4590, $4591, $4592);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4594 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4596 = self.err;
                                                var self = $4594;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4598 = self.value;
                                                        var $4599 = Parser$Reply$error$(Parser$Error$combine$($4598, $4596));
                                                        var $4597 = $4599;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4600 = Parser$Reply$error$($4596);
                                                        var $4597 = $4600;
                                                        break;
                                                };
                                                var $4595 = $4597;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4601 = self.pst;
                                                var $4602 = self.val;
                                                var self = $4601;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4604 = self.err;
                                                        var $4605 = self.nam;
                                                        var $4606 = self.ini;
                                                        var $4607 = self.idx;
                                                        var $4608 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4594, $4604), $4605, $4606, $4607, $4608);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4610 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("in", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4612 = self.err;
                                                                        var self = $4610;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4614 = self.value;
                                                                                var $4615 = Parser$Reply$error$(Parser$Error$combine$($4614, $4612));
                                                                                var $4613 = $4615;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4616 = Parser$Reply$error$($4612);
                                                                                var $4613 = $4616;
                                                                                break;
                                                                        };
                                                                        var $4611 = $4613;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4617 = self.pst;
                                                                        var self = $4617;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4619 = self.err;
                                                                                var $4620 = self.nam;
                                                                                var $4621 = self.ini;
                                                                                var $4622 = self.idx;
                                                                                var $4623 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4610, $4619), $4620, $4621, $4622, $4623);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4625 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4627 = self.err;
                                                                                                var self = $4625;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4629 = self.value;
                                                                                                        var $4630 = Parser$Reply$error$(Parser$Error$combine$($4629, $4627));
                                                                                                        var $4628 = $4630;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4631 = Parser$Reply$error$($4627);
                                                                                                        var $4628 = $4631;
                                                                                                        break;
                                                                                                };
                                                                                                var $4626 = $4628;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4632 = self.pst;
                                                                                                var $4633 = self.val;
                                                                                                var self = $4632;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4635 = self.err;
                                                                                                        var $4636 = self.nam;
                                                                                                        var $4637 = self.ini;
                                                                                                        var $4638 = self.idx;
                                                                                                        var $4639 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4625, $4635), $4636, $4637, $4638, $4639);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4641 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("with", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4643 = self.err;
                                                                                                                        var self = $4641;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4645 = self.value;
                                                                                                                                var $4646 = Parser$Reply$error$(Parser$Error$combine$($4645, $4643));
                                                                                                                                var $4644 = $4646;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4647 = Parser$Reply$error$($4643);
                                                                                                                                var $4644 = $4647;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4642 = $4644;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4648 = self.pst;
                                                                                                                        var self = $4648;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4650 = self.err;
                                                                                                                                var $4651 = self.nam;
                                                                                                                                var $4652 = self.ini;
                                                                                                                                var $4653 = self.idx;
                                                                                                                                var $4654 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4641, $4650), $4651, $4652, $4653, $4654);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4656 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4658 = self.err;
                                                                                                                                                var self = $4656;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4660 = self.value;
                                                                                                                                                        var $4661 = Parser$Reply$error$(Parser$Error$combine$($4660, $4658));
                                                                                                                                                        var $4659 = $4661;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4662 = Parser$Reply$error$($4658);
                                                                                                                                                        var $4659 = $4662;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4657 = $4659;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4663 = self.pst;
                                                                                                                                                var $4664 = self.val;
                                                                                                                                                var self = $4663;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4666 = self.err;
                                                                                                                                                        var $4667 = self.nam;
                                                                                                                                                        var $4668 = self.ini;
                                                                                                                                                        var $4669 = self.idx;
                                                                                                                                                        var $4670 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4656, $4666), $4667, $4668, $4669, $4670);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $4672 = self.err;
                                                                                                                                                                var _reply$91 = Kind$Parser$term(_reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $4674 = self.err;
                                                                                                                                                                        var self = $4672;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $4676 = self.value;
                                                                                                                                                                                var $4677 = Parser$Reply$error$(Parser$Error$combine$($4676, $4674));
                                                                                                                                                                                var $4675 = $4677;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $4678 = Parser$Reply$error$($4674);
                                                                                                                                                                                var $4675 = $4678;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4673 = $4675;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $4679 = self.pst;
                                                                                                                                                                        var $4680 = self.val;
                                                                                                                                                                        var self = $4679;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $4682 = self.err;
                                                                                                                                                                                var $4683 = self.nam;
                                                                                                                                                                                var $4684 = self.ini;
                                                                                                                                                                                var $4685 = self.idx;
                                                                                                                                                                                var $4686 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($4672, $4682), $4683, $4684, $4685, $4686);
                                                                                                                                                                                var _moti$100 = Kind$Term$lam$($4602, (_s$100 => {
                                                                                                                                                                                    var $4688 = Kind$Term$lam$("", (_x$101 => {
                                                                                                                                                                                        var $4689 = $4633;
                                                                                                                                                                                        return $4689;
                                                                                                                                                                                    }));
                                                                                                                                                                                    return $4688;
                                                                                                                                                                                }));
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.mirror");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $4664);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, _moti$100);
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, $4680);
                                                                                                                                                                                var $4687 = Parser$Reply$value$(_reply$pst$99, _term$107);
                                                                                                                                                                                var $4681 = $4687;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $4673 = $4681;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $4671 = $4673;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $4665 = $4671;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4657 = $4665;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4655 = $4657;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4649 = $4655;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4642 = $4649;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4640 = $4642;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4634 = $4640;
                                                                                                        break;
                                                                                                };
                                                                                                var $4626 = $4634;
                                                                                                break;
                                                                                        };
                                                                                        var $4624 = $4626;
                                                                                        break;
                                                                                };
                                                                                var $4618 = $4624;
                                                                                break;
                                                                        };
                                                                        var $4611 = $4618;
                                                                        break;
                                                                };
                                                                var $4609 = $4611;
                                                                break;
                                                        };
                                                        var $4603 = $4609;
                                                        break;
                                                };
                                                var $4595 = $4603;
                                                break;
                                        };
                                        var $4593 = $4595;
                                        break;
                                };
                                var $4587 = $4593;
                                break;
                        };
                        var $4580 = $4587;
                        break;
                };
                var $4578 = $4580;
                break;
        };
        return $4578;
    }));
    const Kind$Parser$if = Kind$Parser$block("if")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4691 = self.err;
                var _reply$7 = Kind$Parser$text$("if ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4693 = self.err;
                        var self = $4691;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4695 = self.value;
                                var $4696 = Parser$Reply$error$(Parser$Error$combine$($4695, $4693));
                                var $4694 = $4696;
                                break;
                            case 'Maybe.none':
                                var $4697 = Parser$Reply$error$($4693);
                                var $4694 = $4697;
                                break;
                        };
                        var $4692 = $4694;
                        break;
                    case 'Parser.Reply.value':
                        var $4698 = self.pst;
                        var self = $4698;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4700 = self.err;
                                var $4701 = self.nam;
                                var $4702 = self.ini;
                                var $4703 = self.idx;
                                var $4704 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4691, $4700), $4701, $4702, $4703, $4704);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4706 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4708 = self.err;
                                                var self = $4706;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4710 = self.value;
                                                        var $4711 = Parser$Reply$error$(Parser$Error$combine$($4710, $4708));
                                                        var $4709 = $4711;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4712 = Parser$Reply$error$($4708);
                                                        var $4709 = $4712;
                                                        break;
                                                };
                                                var $4707 = $4709;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4713 = self.pst;
                                                var $4714 = self.val;
                                                var self = $4713;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4716 = self.err;
                                                        var $4717 = self.nam;
                                                        var $4718 = self.ini;
                                                        var $4719 = self.idx;
                                                        var $4720 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4706, $4716), $4717, $4718, $4719, $4720);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4722 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("then", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4724 = self.err;
                                                                        var self = $4722;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4726 = self.value;
                                                                                var $4727 = Parser$Reply$error$(Parser$Error$combine$($4726, $4724));
                                                                                var $4725 = $4727;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4728 = Parser$Reply$error$($4724);
                                                                                var $4725 = $4728;
                                                                                break;
                                                                        };
                                                                        var $4723 = $4725;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4729 = self.pst;
                                                                        var self = $4729;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4731 = self.err;
                                                                                var $4732 = self.nam;
                                                                                var $4733 = self.ini;
                                                                                var $4734 = self.idx;
                                                                                var $4735 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4722, $4731), $4732, $4733, $4734, $4735);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4737 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4739 = self.err;
                                                                                                var self = $4737;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4741 = self.value;
                                                                                                        var $4742 = Parser$Reply$error$(Parser$Error$combine$($4741, $4739));
                                                                                                        var $4740 = $4742;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4743 = Parser$Reply$error$($4739);
                                                                                                        var $4740 = $4743;
                                                                                                        break;
                                                                                                };
                                                                                                var $4738 = $4740;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4744 = self.pst;
                                                                                                var $4745 = self.val;
                                                                                                var self = $4744;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4747 = self.err;
                                                                                                        var $4748 = self.nam;
                                                                                                        var $4749 = self.ini;
                                                                                                        var $4750 = self.idx;
                                                                                                        var $4751 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4737, $4747), $4748, $4749, $4750, $4751);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4753 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("else", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4755 = self.err;
                                                                                                                        var self = $4753;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4757 = self.value;
                                                                                                                                var $4758 = Parser$Reply$error$(Parser$Error$combine$($4757, $4755));
                                                                                                                                var $4756 = $4758;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4759 = Parser$Reply$error$($4755);
                                                                                                                                var $4756 = $4759;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4754 = $4756;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4760 = self.pst;
                                                                                                                        var self = $4760;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4762 = self.err;
                                                                                                                                var $4763 = self.nam;
                                                                                                                                var $4764 = self.ini;
                                                                                                                                var $4765 = self.idx;
                                                                                                                                var $4766 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4753, $4762), $4763, $4764, $4765, $4766);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $4768 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $4770 = self.err;
                                                                                                                                                var self = $4768;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $4772 = self.value;
                                                                                                                                                        var $4773 = Parser$Reply$error$(Parser$Error$combine$($4772, $4770));
                                                                                                                                                        var $4771 = $4773;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $4774 = Parser$Reply$error$($4770);
                                                                                                                                                        var $4771 = $4774;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4769 = $4771;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $4775 = self.pst;
                                                                                                                                                var $4776 = self.val;
                                                                                                                                                var self = $4775;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $4778 = self.err;
                                                                                                                                                        var $4779 = self.nam;
                                                                                                                                                        var $4780 = self.ini;
                                                                                                                                                        var $4781 = self.idx;
                                                                                                                                                        var $4782 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($4768, $4778), $4779, $4780, $4781, $4782);
                                                                                                                                                        var _term$86 = $4714;
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, Kind$Term$lam$("", (_x$87 => {
                                                                                                                                                            var $4784 = Kind$Term$hol$(Bits$e);
                                                                                                                                                            return $4784;
                                                                                                                                                        })));
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, $4745);
                                                                                                                                                        var _term$89 = Kind$Term$app$(_term$88, $4776);
                                                                                                                                                        var $4783 = Parser$Reply$value$(_reply$pst$85, _term$89);
                                                                                                                                                        var $4777 = $4783;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $4769 = $4777;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $4767 = $4769;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4761 = $4767;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4754 = $4761;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4752 = $4754;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4746 = $4752;
                                                                                                        break;
                                                                                                };
                                                                                                var $4738 = $4746;
                                                                                                break;
                                                                                        };
                                                                                        var $4736 = $4738;
                                                                                        break;
                                                                                };
                                                                                var $4730 = $4736;
                                                                                break;
                                                                        };
                                                                        var $4723 = $4730;
                                                                        break;
                                                                };
                                                                var $4721 = $4723;
                                                                break;
                                                        };
                                                        var $4715 = $4721;
                                                        break;
                                                };
                                                var $4707 = $4715;
                                                break;
                                        };
                                        var $4705 = $4707;
                                        break;
                                };
                                var $4699 = $4705;
                                break;
                        };
                        var $4692 = $4699;
                        break;
                };
                var $4690 = $4692;
                break;
        };
        return $4690;
    }));
    const Kind$Code$backslash = 92;
    const Kind$Code$escapes = List$cons$(Pair$new$("\\b", 8), List$cons$(Pair$new$("\\f", 12), List$cons$(Pair$new$("\\n", 10), List$cons$(Pair$new$("\\r", 13), List$cons$(Pair$new$("\\t", 9), List$cons$(Pair$new$("\\v", 11), List$cons$(Pair$new$(String$cons$(Kind$Code$backslash, String$cons$(Kind$Code$backslash, String$nil)), Kind$Code$backslash), List$cons$(Pair$new$("\\\"", 34), List$cons$(Pair$new$("\\0", 0), List$cons$(Pair$new$("\\\'", 39), List$nil))))))))));
    const Kind$Parser$char$single = Parser$choice(List$cons$(Parser$choice(List$mapped$(Kind$Code$escapes, (_esc$1 => {
        var self = _esc$1;
        switch (self._) {
            case 'Pair.new':
                var $4786 = self.fst;
                var $4787 = self.snd;
                var $4788 = (_pst$4 => {
                    var self = _pst$4;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $4790 = self.err;
                            var _reply$10 = Parser$text$($4786, _pst$4);
                            var self = _reply$10;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $4792 = self.err;
                                    var self = $4790;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $4794 = self.value;
                                            var $4795 = Parser$Reply$error$(Parser$Error$combine$($4794, $4792));
                                            var $4793 = $4795;
                                            break;
                                        case 'Maybe.none':
                                            var $4796 = Parser$Reply$error$($4792);
                                            var $4793 = $4796;
                                            break;
                                    };
                                    var $4791 = $4793;
                                    break;
                                case 'Parser.Reply.value':
                                    var $4797 = self.pst;
                                    var self = $4797;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4799 = self.err;
                                            var $4800 = self.nam;
                                            var $4801 = self.ini;
                                            var $4802 = self.idx;
                                            var $4803 = self.str;
                                            var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($4790, $4799), $4800, $4801, $4802, $4803);
                                            var $4804 = Parser$Reply$value$(_reply$pst$18, $4787);
                                            var $4798 = $4804;
                                            break;
                                    };
                                    var $4791 = $4798;
                                    break;
                            };
                            var $4789 = $4791;
                            break;
                    };
                    return $4789;
                });
                var $4785 = $4788;
                break;
        };
        return $4785;
    }))), List$cons$(Parser$one, List$nil)));
    const Kind$Parser$char = Kind$Parser$block("char")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4806 = self.err;
                var _reply$7 = Kind$Parser$text$("\'", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4808 = self.err;
                        var self = $4806;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4810 = self.value;
                                var $4811 = Parser$Reply$error$(Parser$Error$combine$($4810, $4808));
                                var $4809 = $4811;
                                break;
                            case 'Maybe.none':
                                var $4812 = Parser$Reply$error$($4808);
                                var $4809 = $4812;
                                break;
                        };
                        var $4807 = $4809;
                        break;
                    case 'Parser.Reply.value':
                        var $4813 = self.pst;
                        var self = $4813;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4815 = self.err;
                                var $4816 = self.nam;
                                var $4817 = self.ini;
                                var $4818 = self.idx;
                                var $4819 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4806, $4815), $4816, $4817, $4818, $4819);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4821 = self.err;
                                        var _reply$21 = Kind$Parser$char$single(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4823 = self.err;
                                                var self = $4821;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4825 = self.value;
                                                        var $4826 = Parser$Reply$error$(Parser$Error$combine$($4825, $4823));
                                                        var $4824 = $4826;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4827 = Parser$Reply$error$($4823);
                                                        var $4824 = $4827;
                                                        break;
                                                };
                                                var $4822 = $4824;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4828 = self.pst;
                                                var $4829 = self.val;
                                                var self = $4828;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4831 = self.err;
                                                        var $4832 = self.nam;
                                                        var $4833 = self.ini;
                                                        var $4834 = self.idx;
                                                        var $4835 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4821, $4831), $4832, $4833, $4834, $4835);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4837 = self.err;
                                                                var _reply$35 = Kind$Parser$text$("\'", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4839 = self.err;
                                                                        var self = $4837;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4841 = self.value;
                                                                                var $4842 = Parser$Reply$error$(Parser$Error$combine$($4841, $4839));
                                                                                var $4840 = $4842;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4843 = Parser$Reply$error$($4839);
                                                                                var $4840 = $4843;
                                                                                break;
                                                                        };
                                                                        var $4838 = $4840;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4844 = self.pst;
                                                                        var self = $4844;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4846 = self.err;
                                                                                var $4847 = self.nam;
                                                                                var $4848 = self.ini;
                                                                                var $4849 = self.idx;
                                                                                var $4850 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4837, $4846), $4847, $4848, $4849, $4850);
                                                                                var $4851 = Parser$Reply$value$(_reply$pst$43, Kind$Term$chr$($4829));
                                                                                var $4845 = $4851;
                                                                                break;
                                                                        };
                                                                        var $4838 = $4845;
                                                                        break;
                                                                };
                                                                var $4836 = $4838;
                                                                break;
                                                        };
                                                        var $4830 = $4836;
                                                        break;
                                                };
                                                var $4822 = $4830;
                                                break;
                                        };
                                        var $4820 = $4822;
                                        break;
                                };
                                var $4814 = $4820;
                                break;
                        };
                        var $4807 = $4814;
                        break;
                };
                var $4805 = $4807;
                break;
        };
        return $4805;
    }));

    function String$reverse$go$(_xs$1, _res$2) {
        var String$reverse$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$reverse$go = _xs$1 => _res$2 => String$reverse$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $4852 = _res$2;
                    return $4852;
                } else {
                    var $4853 = self.charCodeAt(0);
                    var $4854 = self.slice(1);
                    var $4855 = String$reverse$go$($4854, String$cons$($4853, _res$2));
                    return $4855;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$reverse$go = x0 => x1 => String$reverse$go$(x0, x1);

    function String$reverse$(_xs$1) {
        var $4856 = String$reverse$go$(_xs$1, String$nil);
        return $4856;
    };
    const String$reverse = x0 => String$reverse$(x0);

    function Kind$Parser$string$go$(_delim$1, _str$2, _pst$3) {
        var Kind$Parser$string$go$ = (_delim$1, _str$2, _pst$3) => ({
            ctr: 'TCO',
            arg: [_delim$1, _str$2, _pst$3]
        });
        var Kind$Parser$string$go = _delim$1 => _str$2 => _pst$3 => Kind$Parser$string$go$(_delim$1, _str$2, _pst$3);
        var arg = [_delim$1, _str$2, _pst$3];
        while (true) {
            let [_delim$1, _str$2, _pst$3] = arg;
            var R = (() => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $4857 = self.err;
                        var $4858 = self.nam;
                        var $4859 = self.ini;
                        var $4860 = self.idx;
                        var $4861 = self.str;
                        var self = $4861;
                        if (self.length === 0) {
                            var $4863 = Parser$Reply$fail$($4858, $4859, $4860, "Non-terminating string.");
                            var $4862 = $4863;
                        } else {
                            var $4864 = self.charCodeAt(0);
                            var $4865 = self.slice(1);
                            var self = ($4864 === _delim$1);
                            if (self) {
                                var _pst$11 = Parser$State$new$($4857, $4858, $4859, Nat$succ$($4860), $4865);
                                var $4867 = Parser$Reply$value$(_pst$11, String$reverse$(_str$2));
                                var $4866 = $4867;
                            } else {
                                var self = Kind$Parser$char$single(_pst$3);
                                switch (self._) {
                                    case 'Parser.Reply.error':
                                        var $4869 = self.err;
                                        var $4870 = Parser$Reply$error$($4869);
                                        var $4868 = $4870;
                                        break;
                                    case 'Parser.Reply.value':
                                        var $4871 = self.pst;
                                        var $4872 = self.val;
                                        var $4873 = Kind$Parser$string$go$(_delim$1, String$cons$($4872, _str$2), $4871);
                                        var $4868 = $4873;
                                        break;
                                };
                                var $4866 = $4868;
                            };
                            var $4862 = $4866;
                        };
                        return $4862;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$string$go = x0 => x1 => x2 => Kind$Parser$string$go$(x0, x1, x2);

    function Kind$Parser$string$(_delim$1) {
        var $4874 = Kind$Parser$block("string")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $4876 = self.err;
                    var _reply$8 = Kind$Parser$text$(String$cons$(_delim$1, String$nil), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $4878 = self.err;
                            var self = $4876;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $4880 = self.value;
                                    var $4881 = Parser$Reply$error$(Parser$Error$combine$($4880, $4878));
                                    var $4879 = $4881;
                                    break;
                                case 'Maybe.none':
                                    var $4882 = Parser$Reply$error$($4878);
                                    var $4879 = $4882;
                                    break;
                            };
                            var $4877 = $4879;
                            break;
                        case 'Parser.Reply.value':
                            var $4883 = self.pst;
                            var self = $4883;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $4885 = self.err;
                                    var $4886 = self.nam;
                                    var $4887 = self.ini;
                                    var $4888 = self.idx;
                                    var $4889 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($4876, $4885), $4886, $4887, $4888, $4889);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $4891 = self.err;
                                            var _reply$22 = Kind$Parser$string$go$(_delim$1, "", _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $4893 = self.err;
                                                    var self = $4891;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $4895 = self.value;
                                                            var $4896 = Parser$Reply$error$(Parser$Error$combine$($4895, $4893));
                                                            var $4894 = $4896;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $4897 = Parser$Reply$error$($4893);
                                                            var $4894 = $4897;
                                                            break;
                                                    };
                                                    var $4892 = $4894;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $4898 = self.pst;
                                                    var $4899 = self.val;
                                                    var self = $4898;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $4901 = self.err;
                                                            var $4902 = self.nam;
                                                            var $4903 = self.ini;
                                                            var $4904 = self.idx;
                                                            var $4905 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($4891, $4901), $4902, $4903, $4904, $4905);
                                                            var $4906 = Parser$Reply$value$(_reply$pst$30, Kind$Term$str$($4899));
                                                            var $4900 = $4906;
                                                            break;
                                                    };
                                                    var $4892 = $4900;
                                                    break;
                                            };
                                            var $4890 = $4892;
                                            break;
                                    };
                                    var $4884 = $4890;
                                    break;
                            };
                            var $4877 = $4884;
                            break;
                    };
                    var $4875 = $4877;
                    break;
            };
            return $4875;
        }));
        return $4874;
    };
    const Kind$Parser$string = x0 => Kind$Parser$string$(x0);

    function Kind$Term$new$(_args$1) {
        var $4907 = ({
            _: 'Kind.Term.new',
            'args': _args$1
        });
        return $4907;
    };
    const Kind$Term$new = x0 => Kind$Term$new$(x0);
    const Kind$Parser$new = Kind$Parser$block("new-struct")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4909 = self.err;
                var _reply$7 = Kind$Parser$items1$("{", Kind$Parser$term, "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4911 = self.err;
                        var self = $4909;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4913 = self.value;
                                var $4914 = Parser$Reply$error$(Parser$Error$combine$($4913, $4911));
                                var $4912 = $4914;
                                break;
                            case 'Maybe.none':
                                var $4915 = Parser$Reply$error$($4911);
                                var $4912 = $4915;
                                break;
                        };
                        var $4910 = $4912;
                        break;
                    case 'Parser.Reply.value':
                        var $4916 = self.pst;
                        var $4917 = self.val;
                        var self = $4916;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4919 = self.err;
                                var $4920 = self.nam;
                                var $4921 = self.ini;
                                var $4922 = self.idx;
                                var $4923 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4909, $4919), $4920, $4921, $4922, $4923);
                                var $4924 = Parser$Reply$value$(_reply$pst$15, Kind$Term$new$($4917));
                                var $4918 = $4924;
                                break;
                        };
                        var $4910 = $4918;
                        break;
                };
                var $4908 = $4910;
                break;
        };
        return $4908;
    }));
    const Kind$Parser$sigma$type = Kind$Parser$block("sigma")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $4926 = self.err;
                var _reply$7 = Kind$Parser$text$("[", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $4928 = self.err;
                        var self = $4926;
                        switch (self._) {
                            case 'Maybe.some':
                                var $4930 = self.value;
                                var $4931 = Parser$Reply$error$(Parser$Error$combine$($4930, $4928));
                                var $4929 = $4931;
                                break;
                            case 'Maybe.none':
                                var $4932 = Parser$Reply$error$($4928);
                                var $4929 = $4932;
                                break;
                        };
                        var $4927 = $4929;
                        break;
                    case 'Parser.Reply.value':
                        var $4933 = self.pst;
                        var self = $4933;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $4935 = self.err;
                                var $4936 = self.nam;
                                var $4937 = self.ini;
                                var $4938 = self.idx;
                                var $4939 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($4926, $4935), $4936, $4937, $4938, $4939);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $4941 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $4943 = self.err;
                                                var self = $4941;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $4945 = self.value;
                                                        var $4946 = Parser$Reply$error$(Parser$Error$combine$($4945, $4943));
                                                        var $4944 = $4946;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $4947 = Parser$Reply$error$($4943);
                                                        var $4944 = $4947;
                                                        break;
                                                };
                                                var $4942 = $4944;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $4948 = self.pst;
                                                var $4949 = self.val;
                                                var self = $4948;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $4951 = self.err;
                                                        var $4952 = self.nam;
                                                        var $4953 = self.ini;
                                                        var $4954 = self.idx;
                                                        var $4955 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($4941, $4951), $4952, $4953, $4954, $4955);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $4957 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $4959 = self.err;
                                                                        var self = $4957;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $4961 = self.value;
                                                                                var $4962 = Parser$Reply$error$(Parser$Error$combine$($4961, $4959));
                                                                                var $4960 = $4962;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $4963 = Parser$Reply$error$($4959);
                                                                                var $4960 = $4963;
                                                                                break;
                                                                        };
                                                                        var $4958 = $4960;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $4964 = self.pst;
                                                                        var self = $4964;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $4966 = self.err;
                                                                                var $4967 = self.nam;
                                                                                var $4968 = self.ini;
                                                                                var $4969 = self.idx;
                                                                                var $4970 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($4957, $4966), $4967, $4968, $4969, $4970);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $4972 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $4974 = self.err;
                                                                                                var self = $4972;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $4976 = self.value;
                                                                                                        var $4977 = Parser$Reply$error$(Parser$Error$combine$($4976, $4974));
                                                                                                        var $4975 = $4977;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $4978 = Parser$Reply$error$($4974);
                                                                                                        var $4975 = $4978;
                                                                                                        break;
                                                                                                };
                                                                                                var $4973 = $4975;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $4979 = self.pst;
                                                                                                var $4980 = self.val;
                                                                                                var self = $4979;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $4982 = self.err;
                                                                                                        var $4983 = self.nam;
                                                                                                        var $4984 = self.ini;
                                                                                                        var $4985 = self.idx;
                                                                                                        var $4986 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($4972, $4982), $4983, $4984, $4985, $4986);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $4988 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$("]", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $4990 = self.err;
                                                                                                                        var self = $4988;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $4992 = self.value;
                                                                                                                                var $4993 = Parser$Reply$error$(Parser$Error$combine$($4992, $4990));
                                                                                                                                var $4991 = $4993;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $4994 = Parser$Reply$error$($4990);
                                                                                                                                var $4991 = $4994;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4989 = $4991;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $4995 = self.pst;
                                                                                                                        var self = $4995;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $4997 = self.err;
                                                                                                                                var $4998 = self.nam;
                                                                                                                                var $4999 = self.ini;
                                                                                                                                var $5000 = self.idx;
                                                                                                                                var $5001 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($4988, $4997), $4998, $4999, $5000, $5001);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $5003 = self.err;
                                                                                                                                        var _reply$77 = Kind$Parser$term(_reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $5005 = self.err;
                                                                                                                                                var self = $5003;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $5007 = self.value;
                                                                                                                                                        var $5008 = Parser$Reply$error$(Parser$Error$combine$($5007, $5005));
                                                                                                                                                        var $5006 = $5008;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $5009 = Parser$Reply$error$($5005);
                                                                                                                                                        var $5006 = $5009;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5004 = $5006;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $5010 = self.pst;
                                                                                                                                                var $5011 = self.val;
                                                                                                                                                var self = $5010;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $5013 = self.err;
                                                                                                                                                        var $5014 = self.nam;
                                                                                                                                                        var $5015 = self.ini;
                                                                                                                                                        var $5016 = self.idx;
                                                                                                                                                        var $5017 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($5003, $5013), $5014, $5015, $5016, $5017);
                                                                                                                                                        var _term$86 = Kind$Term$ref$("Sigma");
                                                                                                                                                        var _term$87 = Kind$Term$app$(_term$86, $4980);
                                                                                                                                                        var _term$88 = Kind$Term$app$(_term$87, Kind$Term$lam$($4949, (_x$88 => {
                                                                                                                                                            var $5019 = $5011;
                                                                                                                                                            return $5019;
                                                                                                                                                        })));
                                                                                                                                                        var $5018 = Parser$Reply$value$(_reply$pst$85, _term$88);
                                                                                                                                                        var $5012 = $5018;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $5004 = $5012;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $5002 = $5004;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $4996 = $5002;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $4989 = $4996;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $4987 = $4989;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $4981 = $4987;
                                                                                                        break;
                                                                                                };
                                                                                                var $4973 = $4981;
                                                                                                break;
                                                                                        };
                                                                                        var $4971 = $4973;
                                                                                        break;
                                                                                };
                                                                                var $4965 = $4971;
                                                                                break;
                                                                        };
                                                                        var $4958 = $4965;
                                                                        break;
                                                                };
                                                                var $4956 = $4958;
                                                                break;
                                                        };
                                                        var $4950 = $4956;
                                                        break;
                                                };
                                                var $4942 = $4950;
                                                break;
                                        };
                                        var $4940 = $4942;
                                        break;
                                };
                                var $4934 = $4940;
                                break;
                        };
                        var $4927 = $4934;
                        break;
                };
                var $4925 = $4927;
                break;
        };
        return $4925;
    }));
    const Kind$Parser$some = Kind$Parser$block("some")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5021 = self.err;
                var _reply$7 = Kind$Parser$text$("some(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5023 = self.err;
                        var self = $5021;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5025 = self.value;
                                var $5026 = Parser$Reply$error$(Parser$Error$combine$($5025, $5023));
                                var $5024 = $5026;
                                break;
                            case 'Maybe.none':
                                var $5027 = Parser$Reply$error$($5023);
                                var $5024 = $5027;
                                break;
                        };
                        var $5022 = $5024;
                        break;
                    case 'Parser.Reply.value':
                        var $5028 = self.pst;
                        var self = $5028;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5030 = self.err;
                                var $5031 = self.nam;
                                var $5032 = self.ini;
                                var $5033 = self.idx;
                                var $5034 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5021, $5030), $5031, $5032, $5033, $5034);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5036 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5038 = self.err;
                                                var self = $5036;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5040 = self.value;
                                                        var $5041 = Parser$Reply$error$(Parser$Error$combine$($5040, $5038));
                                                        var $5039 = $5041;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5042 = Parser$Reply$error$($5038);
                                                        var $5039 = $5042;
                                                        break;
                                                };
                                                var $5037 = $5039;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5043 = self.pst;
                                                var $5044 = self.val;
                                                var self = $5043;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5046 = self.err;
                                                        var $5047 = self.nam;
                                                        var $5048 = self.ini;
                                                        var $5049 = self.idx;
                                                        var $5050 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5036, $5046), $5047, $5048, $5049, $5050);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5052 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5054 = self.err;
                                                                        var self = $5052;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5056 = self.value;
                                                                                var $5057 = Parser$Reply$error$(Parser$Error$combine$($5056, $5054));
                                                                                var $5055 = $5057;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5058 = Parser$Reply$error$($5054);
                                                                                var $5055 = $5058;
                                                                                break;
                                                                        };
                                                                        var $5053 = $5055;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5059 = self.pst;
                                                                        var self = $5059;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5061 = self.err;
                                                                                var $5062 = self.nam;
                                                                                var $5063 = self.ini;
                                                                                var $5064 = self.idx;
                                                                                var $5065 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5052, $5061), $5062, $5063, $5064, $5065);
                                                                                var _term$44 = Kind$Term$ref$("Maybe.some");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, $5044);
                                                                                var $5066 = Parser$Reply$value$(_reply$pst$43, _term$46);
                                                                                var $5060 = $5066;
                                                                                break;
                                                                        };
                                                                        var $5053 = $5060;
                                                                        break;
                                                                };
                                                                var $5051 = $5053;
                                                                break;
                                                        };
                                                        var $5045 = $5051;
                                                        break;
                                                };
                                                var $5037 = $5045;
                                                break;
                                        };
                                        var $5035 = $5037;
                                        break;
                                };
                                var $5029 = $5035;
                                break;
                        };
                        var $5022 = $5029;
                        break;
                };
                var $5020 = $5022;
                break;
        };
        return $5020;
    }));
    const Kind$Parser$not = Kind$Parser$block("not")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5068 = self.err;
                var _reply$7 = Kind$Parser$text$("not(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5070 = self.err;
                        var self = $5068;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5072 = self.value;
                                var $5073 = Parser$Reply$error$(Parser$Error$combine$($5072, $5070));
                                var $5071 = $5073;
                                break;
                            case 'Maybe.none':
                                var $5074 = Parser$Reply$error$($5070);
                                var $5071 = $5074;
                                break;
                        };
                        var $5069 = $5071;
                        break;
                    case 'Parser.Reply.value':
                        var $5075 = self.pst;
                        var self = $5075;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5077 = self.err;
                                var $5078 = self.nam;
                                var $5079 = self.ini;
                                var $5080 = self.idx;
                                var $5081 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5068, $5077), $5078, $5079, $5080, $5081);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5083 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5085 = self.err;
                                                var self = $5083;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5087 = self.value;
                                                        var $5088 = Parser$Reply$error$(Parser$Error$combine$($5087, $5085));
                                                        var $5086 = $5088;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5089 = Parser$Reply$error$($5085);
                                                        var $5086 = $5089;
                                                        break;
                                                };
                                                var $5084 = $5086;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5090 = self.pst;
                                                var $5091 = self.val;
                                                var self = $5090;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5093 = self.err;
                                                        var $5094 = self.nam;
                                                        var $5095 = self.ini;
                                                        var $5096 = self.idx;
                                                        var $5097 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5083, $5093), $5094, $5095, $5096, $5097);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5099 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5101 = self.err;
                                                                        var self = $5099;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5103 = self.value;
                                                                                var $5104 = Parser$Reply$error$(Parser$Error$combine$($5103, $5101));
                                                                                var $5102 = $5104;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5105 = Parser$Reply$error$($5101);
                                                                                var $5102 = $5105;
                                                                                break;
                                                                        };
                                                                        var $5100 = $5102;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5106 = self.pst;
                                                                        var self = $5106;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5108 = self.err;
                                                                                var $5109 = self.nam;
                                                                                var $5110 = self.ini;
                                                                                var $5111 = self.idx;
                                                                                var $5112 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5099, $5108), $5109, $5110, $5111, $5112);
                                                                                var _term$44 = Kind$Term$ref$("Bool.not");
                                                                                var _term$45 = Kind$Term$app$(_term$44, $5091);
                                                                                var $5113 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $5107 = $5113;
                                                                                break;
                                                                        };
                                                                        var $5100 = $5107;
                                                                        break;
                                                                };
                                                                var $5098 = $5100;
                                                                break;
                                                        };
                                                        var $5092 = $5098;
                                                        break;
                                                };
                                                var $5084 = $5092;
                                                break;
                                        };
                                        var $5082 = $5084;
                                        break;
                                };
                                var $5076 = $5082;
                                break;
                        };
                        var $5069 = $5076;
                        break;
                };
                var $5067 = $5069;
                break;
        };
        return $5067;
    }));
    const Kind$Parser$left = Kind$Parser$block("left")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5115 = self.err;
                var _reply$7 = Kind$Parser$text$("left(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5117 = self.err;
                        var self = $5115;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5119 = self.value;
                                var $5120 = Parser$Reply$error$(Parser$Error$combine$($5119, $5117));
                                var $5118 = $5120;
                                break;
                            case 'Maybe.none':
                                var $5121 = Parser$Reply$error$($5117);
                                var $5118 = $5121;
                                break;
                        };
                        var $5116 = $5118;
                        break;
                    case 'Parser.Reply.value':
                        var $5122 = self.pst;
                        var self = $5122;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5124 = self.err;
                                var $5125 = self.nam;
                                var $5126 = self.ini;
                                var $5127 = self.idx;
                                var $5128 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5115, $5124), $5125, $5126, $5127, $5128);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5130 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5132 = self.err;
                                                var self = $5130;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5134 = self.value;
                                                        var $5135 = Parser$Reply$error$(Parser$Error$combine$($5134, $5132));
                                                        var $5133 = $5135;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5136 = Parser$Reply$error$($5132);
                                                        var $5133 = $5136;
                                                        break;
                                                };
                                                var $5131 = $5133;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5137 = self.pst;
                                                var $5138 = self.val;
                                                var self = $5137;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5140 = self.err;
                                                        var $5141 = self.nam;
                                                        var $5142 = self.ini;
                                                        var $5143 = self.idx;
                                                        var $5144 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5130, $5140), $5141, $5142, $5143, $5144);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5146 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5148 = self.err;
                                                                        var self = $5146;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5150 = self.value;
                                                                                var $5151 = Parser$Reply$error$(Parser$Error$combine$($5150, $5148));
                                                                                var $5149 = $5151;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5152 = Parser$Reply$error$($5148);
                                                                                var $5149 = $5152;
                                                                                break;
                                                                        };
                                                                        var $5147 = $5149;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5153 = self.pst;
                                                                        var self = $5153;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5155 = self.err;
                                                                                var $5156 = self.nam;
                                                                                var $5157 = self.ini;
                                                                                var $5158 = self.idx;
                                                                                var $5159 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5146, $5155), $5156, $5157, $5158, $5159);
                                                                                var _term$44 = Kind$Term$ref$("Either.left");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5138);
                                                                                var $5160 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5154 = $5160;
                                                                                break;
                                                                        };
                                                                        var $5147 = $5154;
                                                                        break;
                                                                };
                                                                var $5145 = $5147;
                                                                break;
                                                        };
                                                        var $5139 = $5145;
                                                        break;
                                                };
                                                var $5131 = $5139;
                                                break;
                                        };
                                        var $5129 = $5131;
                                        break;
                                };
                                var $5123 = $5129;
                                break;
                        };
                        var $5116 = $5123;
                        break;
                };
                var $5114 = $5116;
                break;
        };
        return $5114;
    }));
    const Kind$Parser$right = Kind$Parser$block("right")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5162 = self.err;
                var _reply$7 = Kind$Parser$text$("right(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5164 = self.err;
                        var self = $5162;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5166 = self.value;
                                var $5167 = Parser$Reply$error$(Parser$Error$combine$($5166, $5164));
                                var $5165 = $5167;
                                break;
                            case 'Maybe.none':
                                var $5168 = Parser$Reply$error$($5164);
                                var $5165 = $5168;
                                break;
                        };
                        var $5163 = $5165;
                        break;
                    case 'Parser.Reply.value':
                        var $5169 = self.pst;
                        var self = $5169;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5171 = self.err;
                                var $5172 = self.nam;
                                var $5173 = self.ini;
                                var $5174 = self.idx;
                                var $5175 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5162, $5171), $5172, $5173, $5174, $5175);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5177 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5179 = self.err;
                                                var self = $5177;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5181 = self.value;
                                                        var $5182 = Parser$Reply$error$(Parser$Error$combine$($5181, $5179));
                                                        var $5180 = $5182;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5183 = Parser$Reply$error$($5179);
                                                        var $5180 = $5183;
                                                        break;
                                                };
                                                var $5178 = $5180;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5184 = self.pst;
                                                var $5185 = self.val;
                                                var self = $5184;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5187 = self.err;
                                                        var $5188 = self.nam;
                                                        var $5189 = self.ini;
                                                        var $5190 = self.idx;
                                                        var $5191 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5177, $5187), $5188, $5189, $5190, $5191);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5193 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5195 = self.err;
                                                                        var self = $5193;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5197 = self.value;
                                                                                var $5198 = Parser$Reply$error$(Parser$Error$combine$($5197, $5195));
                                                                                var $5196 = $5198;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5199 = Parser$Reply$error$($5195);
                                                                                var $5196 = $5199;
                                                                                break;
                                                                        };
                                                                        var $5194 = $5196;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5200 = self.pst;
                                                                        var self = $5200;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5202 = self.err;
                                                                                var $5203 = self.nam;
                                                                                var $5204 = self.ini;
                                                                                var $5205 = self.idx;
                                                                                var $5206 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5193, $5202), $5203, $5204, $5205, $5206);
                                                                                var _term$44 = Kind$Term$ref$("Either.right");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $5185);
                                                                                var $5207 = Parser$Reply$value$(_reply$pst$43, _term$47);
                                                                                var $5201 = $5207;
                                                                                break;
                                                                        };
                                                                        var $5194 = $5201;
                                                                        break;
                                                                };
                                                                var $5192 = $5194;
                                                                break;
                                                        };
                                                        var $5186 = $5192;
                                                        break;
                                                };
                                                var $5178 = $5186;
                                                break;
                                        };
                                        var $5176 = $5178;
                                        break;
                                };
                                var $5170 = $5176;
                                break;
                        };
                        var $5163 = $5170;
                        break;
                };
                var $5161 = $5163;
                break;
        };
        return $5161;
    }));
    const Kind$Parser$apply = Kind$Parser$block("apply")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5209 = self.err;
                var _reply$7 = Kind$Parser$text$("apply(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5211 = self.err;
                        var self = $5209;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5213 = self.value;
                                var $5214 = Parser$Reply$error$(Parser$Error$combine$($5213, $5211));
                                var $5212 = $5214;
                                break;
                            case 'Maybe.none':
                                var $5215 = Parser$Reply$error$($5211);
                                var $5212 = $5215;
                                break;
                        };
                        var $5210 = $5212;
                        break;
                    case 'Parser.Reply.value':
                        var $5216 = self.pst;
                        var self = $5216;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5218 = self.err;
                                var $5219 = self.nam;
                                var $5220 = self.ini;
                                var $5221 = self.idx;
                                var $5222 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5209, $5218), $5219, $5220, $5221, $5222);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5224 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5226 = self.err;
                                                var self = $5224;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5228 = self.value;
                                                        var $5229 = Parser$Reply$error$(Parser$Error$combine$($5228, $5226));
                                                        var $5227 = $5229;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5230 = Parser$Reply$error$($5226);
                                                        var $5227 = $5230;
                                                        break;
                                                };
                                                var $5225 = $5227;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5231 = self.pst;
                                                var $5232 = self.val;
                                                var self = $5231;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5234 = self.err;
                                                        var $5235 = self.nam;
                                                        var $5236 = self.ini;
                                                        var $5237 = self.idx;
                                                        var $5238 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5224, $5234), $5235, $5236, $5237, $5238);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5240 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5242 = self.err;
                                                                        var self = $5240;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5244 = self.value;
                                                                                var $5245 = Parser$Reply$error$(Parser$Error$combine$($5244, $5242));
                                                                                var $5243 = $5245;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5246 = Parser$Reply$error$($5242);
                                                                                var $5243 = $5246;
                                                                                break;
                                                                        };
                                                                        var $5241 = $5243;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5247 = self.pst;
                                                                        var self = $5247;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5249 = self.err;
                                                                                var $5250 = self.nam;
                                                                                var $5251 = self.ini;
                                                                                var $5252 = self.idx;
                                                                                var $5253 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5240, $5249), $5250, $5251, $5252, $5253);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5255 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5257 = self.err;
                                                                                                var self = $5255;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5259 = self.value;
                                                                                                        var $5260 = Parser$Reply$error$(Parser$Error$combine$($5259, $5257));
                                                                                                        var $5258 = $5260;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5261 = Parser$Reply$error$($5257);
                                                                                                        var $5258 = $5261;
                                                                                                        break;
                                                                                                };
                                                                                                var $5256 = $5258;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5262 = self.pst;
                                                                                                var $5263 = self.val;
                                                                                                var self = $5262;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5265 = self.err;
                                                                                                        var $5266 = self.nam;
                                                                                                        var $5267 = self.ini;
                                                                                                        var $5268 = self.idx;
                                                                                                        var $5269 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5255, $5265), $5266, $5267, $5268, $5269);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5271 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5273 = self.err;
                                                                                                                        var self = $5271;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5275 = self.value;
                                                                                                                                var $5276 = Parser$Reply$error$(Parser$Error$combine$($5275, $5273));
                                                                                                                                var $5274 = $5276;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5277 = Parser$Reply$error$($5273);
                                                                                                                                var $5274 = $5277;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5272 = $5274;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5278 = self.pst;
                                                                                                                        var self = $5278;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5280 = self.err;
                                                                                                                                var $5281 = self.nam;
                                                                                                                                var $5282 = self.ini;
                                                                                                                                var $5283 = self.idx;
                                                                                                                                var $5284 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5271, $5280), $5281, $5282, $5283, $5284);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.apply");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5232);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5263);
                                                                                                                                var $5285 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5279 = $5285;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5272 = $5279;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5270 = $5272;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5264 = $5270;
                                                                                                        break;
                                                                                                };
                                                                                                var $5256 = $5264;
                                                                                                break;
                                                                                        };
                                                                                        var $5254 = $5256;
                                                                                        break;
                                                                                };
                                                                                var $5248 = $5254;
                                                                                break;
                                                                        };
                                                                        var $5241 = $5248;
                                                                        break;
                                                                };
                                                                var $5239 = $5241;
                                                                break;
                                                        };
                                                        var $5233 = $5239;
                                                        break;
                                                };
                                                var $5225 = $5233;
                                                break;
                                        };
                                        var $5223 = $5225;
                                        break;
                                };
                                var $5217 = $5223;
                                break;
                        };
                        var $5210 = $5217;
                        break;
                };
                var $5208 = $5210;
                break;
        };
        return $5208;
    }));
    const Kind$Parser$chain = Kind$Parser$block("chain")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5287 = self.err;
                var _reply$7 = Kind$Parser$text$("chain(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5289 = self.err;
                        var self = $5287;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5291 = self.value;
                                var $5292 = Parser$Reply$error$(Parser$Error$combine$($5291, $5289));
                                var $5290 = $5292;
                                break;
                            case 'Maybe.none':
                                var $5293 = Parser$Reply$error$($5289);
                                var $5290 = $5293;
                                break;
                        };
                        var $5288 = $5290;
                        break;
                    case 'Parser.Reply.value':
                        var $5294 = self.pst;
                        var self = $5294;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5296 = self.err;
                                var $5297 = self.nam;
                                var $5298 = self.ini;
                                var $5299 = self.idx;
                                var $5300 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5287, $5296), $5297, $5298, $5299, $5300);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5302 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5304 = self.err;
                                                var self = $5302;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5306 = self.value;
                                                        var $5307 = Parser$Reply$error$(Parser$Error$combine$($5306, $5304));
                                                        var $5305 = $5307;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5308 = Parser$Reply$error$($5304);
                                                        var $5305 = $5308;
                                                        break;
                                                };
                                                var $5303 = $5305;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5309 = self.pst;
                                                var $5310 = self.val;
                                                var self = $5309;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5312 = self.err;
                                                        var $5313 = self.nam;
                                                        var $5314 = self.ini;
                                                        var $5315 = self.idx;
                                                        var $5316 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5302, $5312), $5313, $5314, $5315, $5316);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5318 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(",", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5320 = self.err;
                                                                        var self = $5318;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5322 = self.value;
                                                                                var $5323 = Parser$Reply$error$(Parser$Error$combine$($5322, $5320));
                                                                                var $5321 = $5323;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5324 = Parser$Reply$error$($5320);
                                                                                var $5321 = $5324;
                                                                                break;
                                                                        };
                                                                        var $5319 = $5321;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5325 = self.pst;
                                                                        var self = $5325;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5327 = self.err;
                                                                                var $5328 = self.nam;
                                                                                var $5329 = self.ini;
                                                                                var $5330 = self.idx;
                                                                                var $5331 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5318, $5327), $5328, $5329, $5330, $5331);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $5333 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $5335 = self.err;
                                                                                                var self = $5333;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $5337 = self.value;
                                                                                                        var $5338 = Parser$Reply$error$(Parser$Error$combine$($5337, $5335));
                                                                                                        var $5336 = $5338;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $5339 = Parser$Reply$error$($5335);
                                                                                                        var $5336 = $5339;
                                                                                                        break;
                                                                                                };
                                                                                                var $5334 = $5336;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $5340 = self.pst;
                                                                                                var $5341 = self.val;
                                                                                                var self = $5340;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $5343 = self.err;
                                                                                                        var $5344 = self.nam;
                                                                                                        var $5345 = self.ini;
                                                                                                        var $5346 = self.idx;
                                                                                                        var $5347 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($5333, $5343), $5344, $5345, $5346, $5347);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $5349 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$text$(")", _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $5351 = self.err;
                                                                                                                        var self = $5349;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $5353 = self.value;
                                                                                                                                var $5354 = Parser$Reply$error$(Parser$Error$combine$($5353, $5351));
                                                                                                                                var $5352 = $5354;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $5355 = Parser$Reply$error$($5351);
                                                                                                                                var $5352 = $5355;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5350 = $5352;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $5356 = self.pst;
                                                                                                                        var self = $5356;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $5358 = self.err;
                                                                                                                                var $5359 = self.nam;
                                                                                                                                var $5360 = self.ini;
                                                                                                                                var $5361 = self.idx;
                                                                                                                                var $5362 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($5349, $5358), $5359, $5360, $5361, $5362);
                                                                                                                                var _term$72 = Kind$Term$ref$("Equal.chain");
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, $5310);
                                                                                                                                var _term$78 = Kind$Term$app$(_term$77, $5341);
                                                                                                                                var $5363 = Parser$Reply$value$(_reply$pst$71, _term$78);
                                                                                                                                var $5357 = $5363;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $5350 = $5357;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $5348 = $5350;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $5342 = $5348;
                                                                                                        break;
                                                                                                };
                                                                                                var $5334 = $5342;
                                                                                                break;
                                                                                        };
                                                                                        var $5332 = $5334;
                                                                                        break;
                                                                                };
                                                                                var $5326 = $5332;
                                                                                break;
                                                                        };
                                                                        var $5319 = $5326;
                                                                        break;
                                                                };
                                                                var $5317 = $5319;
                                                                break;
                                                        };
                                                        var $5311 = $5317;
                                                        break;
                                                };
                                                var $5303 = $5311;
                                                break;
                                        };
                                        var $5301 = $5303;
                                        break;
                                };
                                var $5295 = $5301;
                                break;
                        };
                        var $5288 = $5295;
                        break;
                };
                var $5286 = $5288;
                break;
        };
        return $5286;
    }));
    const Kind$Parser$mirror = Kind$Parser$block("mirror")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5365 = self.err;
                var _reply$7 = Kind$Parser$text$("mirror(", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5367 = self.err;
                        var self = $5365;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5369 = self.value;
                                var $5370 = Parser$Reply$error$(Parser$Error$combine$($5369, $5367));
                                var $5368 = $5370;
                                break;
                            case 'Maybe.none':
                                var $5371 = Parser$Reply$error$($5367);
                                var $5368 = $5371;
                                break;
                        };
                        var $5366 = $5368;
                        break;
                    case 'Parser.Reply.value':
                        var $5372 = self.pst;
                        var self = $5372;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5374 = self.err;
                                var $5375 = self.nam;
                                var $5376 = self.ini;
                                var $5377 = self.idx;
                                var $5378 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5365, $5374), $5375, $5376, $5377, $5378);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $5380 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $5382 = self.err;
                                                var self = $5380;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $5384 = self.value;
                                                        var $5385 = Parser$Reply$error$(Parser$Error$combine$($5384, $5382));
                                                        var $5383 = $5385;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $5386 = Parser$Reply$error$($5382);
                                                        var $5383 = $5386;
                                                        break;
                                                };
                                                var $5381 = $5383;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $5387 = self.pst;
                                                var $5388 = self.val;
                                                var self = $5387;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $5390 = self.err;
                                                        var $5391 = self.nam;
                                                        var $5392 = self.ini;
                                                        var $5393 = self.idx;
                                                        var $5394 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($5380, $5390), $5391, $5392, $5393, $5394);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $5396 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(")", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $5398 = self.err;
                                                                        var self = $5396;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $5400 = self.value;
                                                                                var $5401 = Parser$Reply$error$(Parser$Error$combine$($5400, $5398));
                                                                                var $5399 = $5401;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $5402 = Parser$Reply$error$($5398);
                                                                                var $5399 = $5402;
                                                                                break;
                                                                        };
                                                                        var $5397 = $5399;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $5403 = self.pst;
                                                                        var self = $5403;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5405 = self.err;
                                                                                var $5406 = self.nam;
                                                                                var $5407 = self.ini;
                                                                                var $5408 = self.idx;
                                                                                var $5409 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($5396, $5405), $5406, $5407, $5408, $5409);
                                                                                var _term$44 = Kind$Term$ref$("Equal.mirror");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$hol$(Bits$e));
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                var _term$48 = Kind$Term$app$(_term$47, $5388);
                                                                                var $5410 = Parser$Reply$value$(_reply$pst$43, _term$48);
                                                                                var $5404 = $5410;
                                                                                break;
                                                                        };
                                                                        var $5397 = $5404;
                                                                        break;
                                                                };
                                                                var $5395 = $5397;
                                                                break;
                                                        };
                                                        var $5389 = $5395;
                                                        break;
                                                };
                                                var $5381 = $5389;
                                                break;
                                        };
                                        var $5379 = $5381;
                                        break;
                                };
                                var $5373 = $5379;
                                break;
                        };
                        var $5366 = $5373;
                        break;
                };
                var $5364 = $5366;
                break;
        };
        return $5364;
    }));

    function Kind$Name$read$(_str$1) {
        var $5411 = _str$1;
        return $5411;
    };
    const Kind$Name$read = x0 => Kind$Name$read$(x0);
    const Kind$Parser$list = Kind$Parser$block("list")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5413 = self.err;
                var _reply$7 = Kind$Parser$items$("[", Kind$Parser$term, "]")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5415 = self.err;
                        var self = $5413;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5417 = self.value;
                                var $5418 = Parser$Reply$error$(Parser$Error$combine$($5417, $5415));
                                var $5416 = $5418;
                                break;
                            case 'Maybe.none':
                                var $5419 = Parser$Reply$error$($5415);
                                var $5416 = $5419;
                                break;
                        };
                        var $5414 = $5416;
                        break;
                    case 'Parser.Reply.value':
                        var $5420 = self.pst;
                        var $5421 = self.val;
                        var self = $5420;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5423 = self.err;
                                var $5424 = self.nam;
                                var $5425 = self.ini;
                                var $5426 = self.idx;
                                var $5427 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5413, $5423), $5424, $5425, $5426, $5427);
                                var $5428 = Parser$Reply$value$(_reply$pst$15, List$fold$($5421, Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("List.nil")), Kind$Term$hol$(Bits$e)), (_x$16 => _xs$17 => {
                                    var _term$18 = Kind$Term$ref$(Kind$Name$read$("List.cons"));
                                    var _term$19 = Kind$Term$app$(_term$18, Kind$Term$hol$(Bits$e));
                                    var _term$20 = Kind$Term$app$(_term$19, _x$16);
                                    var _term$21 = Kind$Term$app$(_term$20, _xs$17);
                                    var $5429 = _term$21;
                                    return $5429;
                                })));
                                var $5422 = $5428;
                                break;
                        };
                        var $5414 = $5422;
                        break;
                };
                var $5412 = $5414;
                break;
        };
        return $5412;
    }));
    const Kind$Parser$map = Kind$Parser$block("map")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $5431 = self.err;
                var _reply$7 = Kind$Parser$items$("{", (_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $5434 = self.err;
                            var _reply$13 = Kind$Parser$term(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $5436 = self.err;
                                    var self = $5434;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $5438 = self.value;
                                            var $5439 = Parser$Reply$error$(Parser$Error$combine$($5438, $5436));
                                            var $5437 = $5439;
                                            break;
                                        case 'Maybe.none':
                                            var $5440 = Parser$Reply$error$($5436);
                                            var $5437 = $5440;
                                            break;
                                    };
                                    var $5435 = $5437;
                                    break;
                                case 'Parser.Reply.value':
                                    var $5441 = self.pst;
                                    var $5442 = self.val;
                                    var self = $5441;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5444 = self.err;
                                            var $5445 = self.nam;
                                            var $5446 = self.ini;
                                            var $5447 = self.idx;
                                            var $5448 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($5434, $5444), $5445, $5446, $5447, $5448);
                                            var self = _reply$pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $5450 = self.err;
                                                    var _reply$27 = Kind$Parser$text$(":", _reply$pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $5452 = self.err;
                                                            var self = $5450;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $5454 = self.value;
                                                                    var $5455 = Parser$Reply$error$(Parser$Error$combine$($5454, $5452));
                                                                    var $5453 = $5455;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $5456 = Parser$Reply$error$($5452);
                                                                    var $5453 = $5456;
                                                                    break;
                                                            };
                                                            var $5451 = $5453;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $5457 = self.pst;
                                                            var self = $5457;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5459 = self.err;
                                                                    var $5460 = self.nam;
                                                                    var $5461 = self.ini;
                                                                    var $5462 = self.idx;
                                                                    var $5463 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($5450, $5459), $5460, $5461, $5462, $5463);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $5465 = self.err;
                                                                            var _reply$41 = Kind$Parser$term(_reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $5467 = self.err;
                                                                                    var self = $5465;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $5469 = self.value;
                                                                                            var $5470 = Parser$Reply$error$(Parser$Error$combine$($5469, $5467));
                                                                                            var $5468 = $5470;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $5471 = Parser$Reply$error$($5467);
                                                                                            var $5468 = $5471;
                                                                                            break;
                                                                                    };
                                                                                    var $5466 = $5468;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $5472 = self.pst;
                                                                                    var $5473 = self.val;
                                                                                    var self = $5472;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5475 = self.err;
                                                                                            var $5476 = self.nam;
                                                                                            var $5477 = self.ini;
                                                                                            var $5478 = self.idx;
                                                                                            var $5479 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($5465, $5475), $5476, $5477, $5478, $5479);
                                                                                            var $5480 = Parser$Reply$value$(_reply$pst$49, Pair$new$($5442, $5473));
                                                                                            var $5474 = $5480;
                                                                                            break;
                                                                                    };
                                                                                    var $5466 = $5474;
                                                                                    break;
                                                                            };
                                                                            var $5464 = $5466;
                                                                            break;
                                                                    };
                                                                    var $5458 = $5464;
                                                                    break;
                                                            };
                                                            var $5451 = $5458;
                                                            break;
                                                    };
                                                    var $5449 = $5451;
                                                    break;
                                            };
                                            var $5443 = $5449;
                                            break;
                                    };
                                    var $5435 = $5443;
                                    break;
                            };
                            var $5433 = $5435;
                            break;
                    };
                    return $5433;
                }), "}")(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $5481 = self.err;
                        var self = $5431;
                        switch (self._) {
                            case 'Maybe.some':
                                var $5483 = self.value;
                                var $5484 = Parser$Reply$error$(Parser$Error$combine$($5483, $5481));
                                var $5482 = $5484;
                                break;
                            case 'Maybe.none':
                                var $5485 = Parser$Reply$error$($5481);
                                var $5482 = $5485;
                                break;
                        };
                        var $5432 = $5482;
                        break;
                    case 'Parser.Reply.value':
                        var $5486 = self.pst;
                        var $5487 = self.val;
                        var self = $5486;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $5489 = self.err;
                                var $5490 = self.nam;
                                var $5491 = self.ini;
                                var $5492 = self.idx;
                                var $5493 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($5431, $5489), $5490, $5491, $5492, $5493);
                                var _list$16 = List$fold$($5487, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)), (_kv$16 => _xs$17 => {
                                    var self = _kv$16;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $5496 = self.fst;
                                            var $5497 = self.snd;
                                            var _pair$20 = Kind$Term$ref$("Pair.new");
                                            var _pair$21 = Kind$Term$app$(_pair$20, Kind$Term$hol$(Bits$e));
                                            var _pair$22 = Kind$Term$app$(_pair$21, Kind$Term$hol$(Bits$e));
                                            var _pair$23 = Kind$Term$app$(_pair$22, $5496);
                                            var _pair$24 = Kind$Term$app$(_pair$23, $5497);
                                            var _term$25 = Kind$Term$ref$("List.cons");
                                            var _term$26 = Kind$Term$app$(_term$25, Kind$Term$hol$(Bits$e));
                                            var _term$27 = Kind$Term$app$(_term$26, _pair$24);
                                            var _term$28 = Kind$Term$app$(_term$27, _xs$17);
                                            var $5498 = _term$28;
                                            var $5495 = $5498;
                                            break;
                                    };
                                    return $5495;
                                }));
                                var _term$17 = Kind$Term$ref$("Map.from_list");
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                var _term$19 = Kind$Term$app$(_term$18, _list$16);
                                var $5494 = Parser$Reply$value$(_reply$pst$15, _term$19);
                                var $5488 = $5494;
                                break;
                        };
                        var $5432 = $5488;
                        break;
                };
                var $5430 = $5432;
                break;
        };
        return $5430;
    }));

    function Kind$Parser$log$(_body$1) {
        var $5499 = Kind$Parser$block("log")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5501 = self.err;
                    var _reply$8 = Kind$Parser$text$("log(", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5503 = self.err;
                            var self = $5501;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5505 = self.value;
                                    var $5506 = Parser$Reply$error$(Parser$Error$combine$($5505, $5503));
                                    var $5504 = $5506;
                                    break;
                                case 'Maybe.none':
                                    var $5507 = Parser$Reply$error$($5503);
                                    var $5504 = $5507;
                                    break;
                            };
                            var $5502 = $5504;
                            break;
                        case 'Parser.Reply.value':
                            var $5508 = self.pst;
                            var self = $5508;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5510 = self.err;
                                    var $5511 = self.nam;
                                    var $5512 = self.ini;
                                    var $5513 = self.idx;
                                    var $5514 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5501, $5510), $5511, $5512, $5513, $5514);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5516 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5518 = self.err;
                                                    var self = $5516;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5520 = self.value;
                                                            var $5521 = Parser$Reply$error$(Parser$Error$combine$($5520, $5518));
                                                            var $5519 = $5521;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5522 = Parser$Reply$error$($5518);
                                                            var $5519 = $5522;
                                                            break;
                                                    };
                                                    var $5517 = $5519;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5523 = self.pst;
                                                    var $5524 = self.val;
                                                    var self = $5523;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5526 = self.err;
                                                            var $5527 = self.nam;
                                                            var $5528 = self.ini;
                                                            var $5529 = self.idx;
                                                            var $5530 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5516, $5526), $5527, $5528, $5529, $5530);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5532 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$(")", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5534 = self.err;
                                                                            var self = $5532;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5536 = self.value;
                                                                                    var $5537 = Parser$Reply$error$(Parser$Error$combine$($5536, $5534));
                                                                                    var $5535 = $5537;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5538 = Parser$Reply$error$($5534);
                                                                                    var $5535 = $5538;
                                                                                    break;
                                                                            };
                                                                            var $5533 = $5535;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5539 = self.pst;
                                                                            var self = $5539;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5541 = self.err;
                                                                                    var $5542 = self.nam;
                                                                                    var $5543 = self.ini;
                                                                                    var $5544 = self.idx;
                                                                                    var $5545 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5532, $5541), $5542, $5543, $5544, $5545);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5547 = self.err;
                                                                                            var _reply$50 = _body$1(Unit$new)(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5549 = self.err;
                                                                                                    var self = $5547;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5551 = self.value;
                                                                                                            var $5552 = Parser$Reply$error$(Parser$Error$combine$($5551, $5549));
                                                                                                            var $5550 = $5552;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5553 = Parser$Reply$error$($5549);
                                                                                                            var $5550 = $5553;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5548 = $5550;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5554 = self.pst;
                                                                                                    var $5555 = self.val;
                                                                                                    var self = $5554;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5557 = self.err;
                                                                                                            var $5558 = self.nam;
                                                                                                            var $5559 = self.ini;
                                                                                                            var $5560 = self.idx;
                                                                                                            var $5561 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5547, $5557), $5558, $5559, $5560, $5561);
                                                                                                            var _term$59 = Kind$Term$ref$("Debug.log");
                                                                                                            var _term$60 = Kind$Term$app$(_term$59, Kind$Term$hol$(Bits$e));
                                                                                                            var _term$61 = Kind$Term$app$(_term$60, $5524);
                                                                                                            var _term$62 = Kind$Term$app$(_term$61, Kind$Term$lam$("", (_x$62 => {
                                                                                                                var $5563 = $5555;
                                                                                                                return $5563;
                                                                                                            })));
                                                                                                            var $5562 = Parser$Reply$value$(_reply$pst$58, _term$62);
                                                                                                            var $5556 = $5562;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5548 = $5556;
                                                                                                    break;
                                                                                            };
                                                                                            var $5546 = $5548;
                                                                                            break;
                                                                                    };
                                                                                    var $5540 = $5546;
                                                                                    break;
                                                                            };
                                                                            var $5533 = $5540;
                                                                            break;
                                                                    };
                                                                    var $5531 = $5533;
                                                                    break;
                                                            };
                                                            var $5525 = $5531;
                                                            break;
                                                    };
                                                    var $5517 = $5525;
                                                    break;
                                            };
                                            var $5515 = $5517;
                                            break;
                                    };
                                    var $5509 = $5515;
                                    break;
                            };
                            var $5502 = $5509;
                            break;
                    };
                    var $5500 = $5502;
                    break;
            };
            return $5500;
        }));
        return $5499;
    };
    const Kind$Parser$log = x0 => Kind$Parser$log$(x0);

    function Char$to_upper$(_char$1) {
        var self = ((_char$1 >= 97) && (_char$1 <= 122));
        if (self) {
            var $5565 = ((_char$1 - 32) & 0xFFFF);
            var $5564 = $5565;
        } else {
            var $5566 = _char$1;
            var $5564 = $5566;
        };
        return $5564;
    };
    const Char$to_upper = x0 => Char$to_upper$(x0);

    function String$to_upper$(_str$1) {
        var $5567 = String$map$(Char$to_upper, _str$1);
        return $5567;
    };
    const String$to_upper = x0 => String$to_upper$(x0);

    function String$is_upper$(_str$1) {
        var $5568 = (String$to_upper$(_str$1) === _str$1);
        return $5568;
    };
    const String$is_upper = x0 => String$is_upper$(x0);

    function String$take$(_n$1, _xs$2) {
        var self = _xs$2;
        if (self.length === 0) {
            var $5570 = String$nil;
            var $5569 = $5570;
        } else {
            var $5571 = self.charCodeAt(0);
            var $5572 = self.slice(1);
            var self = _n$1;
            if (self === 0n) {
                var $5574 = String$nil;
                var $5573 = $5574;
            } else {
                var $5575 = (self - 1n);
                var $5576 = String$cons$($5571, String$take$($5575, $5572));
                var $5573 = $5576;
            };
            var $5569 = $5573;
        };
        return $5569;
    };
    const String$take = x0 => x1 => String$take$(x0, x1);
    const Nat$sub = a0 => a1 => (a0 - a1 <= 0n ? 0n : a0 - a1);

    function String$slice$(_i$1, _j$2, _xs$3) {
        var $5577 = String$take$((_j$2 - _i$1 <= 0n ? 0n : _j$2 - _i$1), String$drop$(_i$1, _xs$3));
        return $5577;
    };
    const String$slice = x0 => x1 => x2 => String$slice$(x0, x1, x2);

    function Kind$Term$unroll_nat$(_natx$1) {
        var self = _natx$1;
        if (self === 0n) {
            var $5579 = Kind$Term$ref$(Kind$Name$read$("Nat.zero"));
            var $5578 = $5579;
        } else {
            var $5580 = (self - 1n);
            var _func$3 = Kind$Term$ref$(Kind$Name$read$("Nat.succ"));
            var _argm$4 = Kind$Term$nat$($5580);
            var $5581 = Kind$Term$app$(_func$3, _argm$4);
            var $5578 = $5581;
        };
        return $5578;
    };
    const Kind$Term$unroll_nat = x0 => Kind$Term$unroll_nat$(x0);

    function Word$to_bits$(_a$2) {
        var self = _a$2;
        switch (self._) {
            case 'Word.o':
                var $5583 = self.pred;
                var $5584 = (Word$to_bits$($5583) + '0');
                var $5582 = $5584;
                break;
            case 'Word.i':
                var $5585 = self.pred;
                var $5586 = (Word$to_bits$($5585) + '1');
                var $5582 = $5586;
                break;
            case 'Word.e':
                var $5587 = Bits$e;
                var $5582 = $5587;
                break;
        };
        return $5582;
    };
    const Word$to_bits = x0 => Word$to_bits$(x0);
    const U16$to_bits = a0 => (u16_to_bits(a0));

    function Kind$Term$unroll_chr$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $5589 = self.slice(0, -1);
                var $5590 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.o")), Kind$Term$unroll_chr$bits$($5589));
                var $5588 = $5590;
                break;
            case 'i':
                var $5591 = self.slice(0, -1);
                var $5592 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("Bits.i")), Kind$Term$unroll_chr$bits$($5591));
                var $5588 = $5592;
                break;
            case 'e':
                var $5593 = Kind$Term$ref$(Kind$Name$read$("Bits.e"));
                var $5588 = $5593;
                break;
        };
        return $5588;
    };
    const Kind$Term$unroll_chr$bits = x0 => Kind$Term$unroll_chr$bits$(x0);

    function Kind$Term$unroll_chr$(_chrx$1) {
        var _bits$2 = (u16_to_bits(_chrx$1));
        var _term$3 = Kind$Term$ref$(Kind$Name$read$("Word.from_bits"));
        var _term$4 = Kind$Term$app$(_term$3, Kind$Term$nat$(16n));
        var _term$5 = Kind$Term$app$(_term$4, Kind$Term$unroll_chr$bits$(_bits$2));
        var _term$6 = Kind$Term$app$(Kind$Term$ref$(Kind$Name$read$("U16.new")), _term$5);
        var $5594 = _term$6;
        return $5594;
    };
    const Kind$Term$unroll_chr = x0 => Kind$Term$unroll_chr$(x0);

    function Kind$Term$unroll_str$(_strx$1) {
        var self = _strx$1;
        if (self.length === 0) {
            var $5596 = Kind$Term$ref$(Kind$Name$read$("String.nil"));
            var $5595 = $5596;
        } else {
            var $5597 = self.charCodeAt(0);
            var $5598 = self.slice(1);
            var _char$4 = Kind$Term$chr$($5597);
            var _term$5 = Kind$Term$ref$(Kind$Name$read$("String.cons"));
            var _term$6 = Kind$Term$app$(_term$5, _char$4);
            var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$($5598));
            var $5599 = _term$7;
            var $5595 = $5599;
        };
        return $5595;
    };
    const Kind$Term$unroll_str = x0 => Kind$Term$unroll_str$(x0);

    function Kind$Term$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $5601 = self.name;
                var self = Kind$Map$get$($5601, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $5603 = self.value;
                        var self = $5603;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $5605 = self.term;
                                var $5606 = Kind$Term$reduce$($5605, _defs$2);
                                var $5604 = $5606;
                                break;
                        };
                        var $5602 = $5604;
                        break;
                    case 'Maybe.none':
                        var $5607 = Kind$Term$ref$($5601);
                        var $5602 = $5607;
                        break;
                };
                var $5600 = $5602;
                break;
            case 'Kind.Term.app':
                var $5608 = self.func;
                var $5609 = self.argm;
                var _func$5 = Kind$Term$reduce$($5608, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $5611 = self.body;
                        var $5612 = Kind$Term$reduce$($5611($5609), _defs$2);
                        var $5610 = $5612;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $5613 = _term$1;
                        var $5610 = $5613;
                        break;
                };
                var $5600 = $5610;
                break;
            case 'Kind.Term.let':
                var $5614 = self.expr;
                var $5615 = self.body;
                var $5616 = Kind$Term$reduce$($5615($5614), _defs$2);
                var $5600 = $5616;
                break;
            case 'Kind.Term.def':
                var $5617 = self.expr;
                var $5618 = self.body;
                var $5619 = Kind$Term$reduce$($5618($5617), _defs$2);
                var $5600 = $5619;
                break;
            case 'Kind.Term.ann':
                var $5620 = self.term;
                var $5621 = Kind$Term$reduce$($5620, _defs$2);
                var $5600 = $5621;
                break;
            case 'Kind.Term.nat':
                var $5622 = self.natx;
                var $5623 = Kind$Term$reduce$(Kind$Term$unroll_nat$($5622), _defs$2);
                var $5600 = $5623;
                break;
            case 'Kind.Term.chr':
                var $5624 = self.chrx;
                var $5625 = Kind$Term$reduce$(Kind$Term$unroll_chr$($5624), _defs$2);
                var $5600 = $5625;
                break;
            case 'Kind.Term.str':
                var $5626 = self.strx;
                var $5627 = Kind$Term$reduce$(Kind$Term$unroll_str$($5626), _defs$2);
                var $5600 = $5627;
                break;
            case 'Kind.Term.ori':
                var $5628 = self.expr;
                var $5629 = Kind$Term$reduce$($5628, _defs$2);
                var $5600 = $5629;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $5630 = _term$1;
                var $5600 = $5630;
                break;
        };
        return $5600;
    };
    const Kind$Term$reduce = x0 => x1 => Kind$Term$reduce$(x0, x1);

    function Kind$Term$cse$(_path$1, _expr$2, _name$3, _with$4, _cses$5, _moti$6) {
        var $5631 = ({
            _: 'Kind.Term.cse',
            'path': _path$1,
            'expr': _expr$2,
            'name': _name$3,
            'with': _with$4,
            'cses': _cses$5,
            'moti': _moti$6
        });
        return $5631;
    };
    const Kind$Term$cse = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$cse$(x0, x1, x2, x3, x4, x5);

    function Kind$Parser$open$(_body$1) {
        var $5632 = Kind$Parser$block("open")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5634 = self.err;
                    var _reply$8 = Kind$Parser$text$("open ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5636 = self.err;
                            var self = $5634;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5638 = self.value;
                                    var $5639 = Parser$Reply$error$(Parser$Error$combine$($5638, $5636));
                                    var $5637 = $5639;
                                    break;
                                case 'Maybe.none':
                                    var $5640 = Parser$Reply$error$($5636);
                                    var $5637 = $5640;
                                    break;
                            };
                            var $5635 = $5637;
                            break;
                        case 'Parser.Reply.value':
                            var $5641 = self.pst;
                            var self = $5641;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5643 = self.err;
                                    var $5644 = self.nam;
                                    var $5645 = self.ini;
                                    var $5646 = self.idx;
                                    var $5647 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5634, $5643), $5644, $5645, $5646, $5647);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5649 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5651 = self.err;
                                                    var self = $5649;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5653 = self.value;
                                                            var $5654 = Parser$Reply$error$(Parser$Error$combine$($5653, $5651));
                                                            var $5652 = $5654;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5655 = Parser$Reply$error$($5651);
                                                            var $5652 = $5655;
                                                            break;
                                                    };
                                                    var $5650 = $5652;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5656 = self.pst;
                                                    var $5657 = self.val;
                                                    var self = $5656;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5659 = self.err;
                                                            var $5660 = self.nam;
                                                            var $5661 = self.ini;
                                                            var $5662 = self.idx;
                                                            var $5663 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5649, $5659), $5660, $5661, $5662, $5663);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5665 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $5668 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$("as", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $5670 = self.err;
                                                                                        var self = $5668;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $5672 = self.value;
                                                                                                var $5673 = Parser$Reply$error$(Parser$Error$combine$($5672, $5670));
                                                                                                var $5671 = $5673;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $5674 = Parser$Reply$error$($5670);
                                                                                                var $5671 = $5674;
                                                                                                break;
                                                                                        };
                                                                                        var $5669 = $5671;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $5675 = self.pst;
                                                                                        var self = $5675;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $5677 = self.err;
                                                                                                var $5678 = self.nam;
                                                                                                var $5679 = self.ini;
                                                                                                var $5680 = self.idx;
                                                                                                var $5681 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($5668, $5677), $5678, $5679, $5680, $5681);
                                                                                                var $5682 = Kind$Parser$name1$(_reply$pst$50);
                                                                                                var $5676 = $5682;
                                                                                                break;
                                                                                        };
                                                                                        var $5669 = $5676;
                                                                                        break;
                                                                                };
                                                                                var $5667 = $5669;
                                                                                break;
                                                                        };
                                                                        return $5667;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5683 = self.err;
                                                                            var self = $5665;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5685 = self.value;
                                                                                    var $5686 = Parser$Reply$error$(Parser$Error$combine$($5685, $5683));
                                                                                    var $5684 = $5686;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5687 = Parser$Reply$error$($5683);
                                                                                    var $5684 = $5687;
                                                                                    break;
                                                                            };
                                                                            var $5666 = $5684;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5688 = self.pst;
                                                                            var $5689 = self.val;
                                                                            var self = $5688;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5691 = self.err;
                                                                                    var $5692 = self.nam;
                                                                                    var $5693 = self.ini;
                                                                                    var $5694 = self.idx;
                                                                                    var $5695 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5665, $5691), $5692, $5693, $5694, $5695);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5697 = self.err;
                                                                                            var _reply$50 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5699 = self.err;
                                                                                                    var self = $5697;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5701 = self.value;
                                                                                                            var $5702 = Parser$Reply$error$(Parser$Error$combine$($5701, $5699));
                                                                                                            var $5700 = $5702;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5703 = Parser$Reply$error$($5699);
                                                                                                            var $5700 = $5703;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5698 = $5700;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5704 = self.pst;
                                                                                                    var self = $5704;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5706 = self.err;
                                                                                                            var $5707 = self.nam;
                                                                                                            var $5708 = self.ini;
                                                                                                            var $5709 = self.idx;
                                                                                                            var $5710 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5697, $5706), $5707, $5708, $5709, $5710);
                                                                                                            var self = $5689;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $5712 = self.value;
                                                                                                                    var $5713 = $5712;
                                                                                                                    var _name$59 = $5713;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var self = Kind$Term$reduce$($5657, Kind$Map$new);
                                                                                                                    switch (self._) {
                                                                                                                        case 'Kind.Term.var':
                                                                                                                            var $5715 = self.name;
                                                                                                                            var $5716 = $5715;
                                                                                                                            var $5714 = $5716;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.ref':
                                                                                                                            var $5717 = self.name;
                                                                                                                            var $5718 = $5717;
                                                                                                                            var $5714 = $5718;
                                                                                                                            break;
                                                                                                                        case 'Kind.Term.typ':
                                                                                                                        case 'Kind.Term.all':
                                                                                                                        case 'Kind.Term.lam':
                                                                                                                        case 'Kind.Term.app':
                                                                                                                        case 'Kind.Term.let':
                                                                                                                        case 'Kind.Term.def':
                                                                                                                        case 'Kind.Term.ann':
                                                                                                                        case 'Kind.Term.gol':
                                                                                                                        case 'Kind.Term.hol':
                                                                                                                        case 'Kind.Term.nat':
                                                                                                                        case 'Kind.Term.chr':
                                                                                                                        case 'Kind.Term.str':
                                                                                                                        case 'Kind.Term.num':
                                                                                                                        case 'Kind.Term.cse':
                                                                                                                        case 'Kind.Term.new':
                                                                                                                        case 'Kind.Term.get':
                                                                                                                        case 'Kind.Term.set':
                                                                                                                        case 'Kind.Term.ope':
                                                                                                                        case 'Kind.Term.ori':
                                                                                                                            var $5719 = Kind$Name$read$("self");
                                                                                                                            var $5714 = $5719;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var _name$59 = $5714;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var _wyth$60 = List$nil;
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5720 = self.err;
                                                                                                                    var _reply$66 = _body$1(Unit$new)(_reply$pst$58);
                                                                                                                    var self = _reply$66;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5722 = self.err;
                                                                                                                            var self = $5720;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5724 = self.value;
                                                                                                                                    var $5725 = Parser$Reply$error$(Parser$Error$combine$($5724, $5722));
                                                                                                                                    var $5723 = $5725;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5726 = Parser$Reply$error$($5722);
                                                                                                                                    var $5723 = $5726;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5721 = $5723;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5727 = self.pst;
                                                                                                                            var $5728 = self.val;
                                                                                                                            var self = $5727;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5730 = self.err;
                                                                                                                                    var $5731 = self.nam;
                                                                                                                                    var $5732 = self.ini;
                                                                                                                                    var $5733 = self.idx;
                                                                                                                                    var $5734 = self.str;
                                                                                                                                    var _reply$pst$74 = Parser$State$new$(Parser$Error$maybe_combine$($5720, $5730), $5731, $5732, $5733, $5734);
                                                                                                                                    var _cses$75 = Kind$Map$set$("_", $5728, Kind$Map$new);
                                                                                                                                    var _moti$76 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                    var $5735 = Parser$Reply$value$(_reply$pst$74, Kind$Term$cse$(Bits$e, $5657, _name$59, _wyth$60, _cses$75, _moti$76));
                                                                                                                                    var $5729 = $5735;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5721 = $5729;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5711 = $5721;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5705 = $5711;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5698 = $5705;
                                                                                                    break;
                                                                                            };
                                                                                            var $5696 = $5698;
                                                                                            break;
                                                                                    };
                                                                                    var $5690 = $5696;
                                                                                    break;
                                                                            };
                                                                            var $5666 = $5690;
                                                                            break;
                                                                    };
                                                                    var $5664 = $5666;
                                                                    break;
                                                            };
                                                            var $5658 = $5664;
                                                            break;
                                                    };
                                                    var $5650 = $5658;
                                                    break;
                                            };
                                            var $5648 = $5650;
                                            break;
                                    };
                                    var $5642 = $5648;
                                    break;
                            };
                            var $5635 = $5642;
                            break;
                    };
                    var $5633 = $5635;
                    break;
            };
            return $5633;
        }));
        return $5632;
    };
    const Kind$Parser$open = x0 => Kind$Parser$open$(x0);

    function Kind$Parser$do$statements$(_monad_name$1) {
        var $5736 = Parser$choice(List$cons$(Kind$Parser$block("do-get")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5738 = self.err;
                    var _reply$8 = Parser$choice$(List$cons$(Kind$Parser$text("var "), List$cons$(Kind$Parser$text("get "), List$nil)), _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5740 = self.err;
                            var self = $5738;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5742 = self.value;
                                    var $5743 = Parser$Reply$error$(Parser$Error$combine$($5742, $5740));
                                    var $5741 = $5743;
                                    break;
                                case 'Maybe.none':
                                    var $5744 = Parser$Reply$error$($5740);
                                    var $5741 = $5744;
                                    break;
                            };
                            var $5739 = $5741;
                            break;
                        case 'Parser.Reply.value':
                            var $5745 = self.pst;
                            var self = $5745;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5747 = self.err;
                                    var $5748 = self.nam;
                                    var $5749 = self.ini;
                                    var $5750 = self.idx;
                                    var $5751 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5738, $5747), $5748, $5749, $5750, $5751);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5753 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5755 = self.err;
                                                    var self = $5753;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5757 = self.value;
                                                            var $5758 = Parser$Reply$error$(Parser$Error$combine$($5757, $5755));
                                                            var $5756 = $5758;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5759 = Parser$Reply$error$($5755);
                                                            var $5756 = $5759;
                                                            break;
                                                    };
                                                    var $5754 = $5756;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5760 = self.pst;
                                                    var $5761 = self.val;
                                                    var self = $5760;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5763 = self.err;
                                                            var $5764 = self.nam;
                                                            var $5765 = self.ini;
                                                            var $5766 = self.idx;
                                                            var $5767 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5753, $5763), $5764, $5765, $5766, $5767);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5769 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("=", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5771 = self.err;
                                                                            var self = $5769;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5773 = self.value;
                                                                                    var $5774 = Parser$Reply$error$(Parser$Error$combine$($5773, $5771));
                                                                                    var $5772 = $5774;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5775 = Parser$Reply$error$($5771);
                                                                                    var $5772 = $5775;
                                                                                    break;
                                                                            };
                                                                            var $5770 = $5772;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5776 = self.pst;
                                                                            var self = $5776;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5778 = self.err;
                                                                                    var $5779 = self.nam;
                                                                                    var $5780 = self.ini;
                                                                                    var $5781 = self.idx;
                                                                                    var $5782 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5769, $5778), $5779, $5780, $5781, $5782);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5784 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5786 = self.err;
                                                                                                    var self = $5784;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5788 = self.value;
                                                                                                            var $5789 = Parser$Reply$error$(Parser$Error$combine$($5788, $5786));
                                                                                                            var $5787 = $5789;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5790 = Parser$Reply$error$($5786);
                                                                                                            var $5787 = $5790;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5785 = $5787;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5791 = self.pst;
                                                                                                    var $5792 = self.val;
                                                                                                    var self = $5791;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5794 = self.err;
                                                                                                            var $5795 = self.nam;
                                                                                                            var $5796 = self.ini;
                                                                                                            var $5797 = self.idx;
                                                                                                            var $5798 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5784, $5794), $5795, $5796, $5797, $5798);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5800 = self.err;
                                                                                                                    var _reply$64 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5802 = self.err;
                                                                                                                            var self = $5800;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5804 = self.value;
                                                                                                                                    var $5805 = Parser$Reply$error$(Parser$Error$combine$($5804, $5802));
                                                                                                                                    var $5803 = $5805;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5806 = Parser$Reply$error$($5802);
                                                                                                                                    var $5803 = $5806;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5801 = $5803;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5807 = self.pst;
                                                                                                                            var self = $5807;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5809 = self.err;
                                                                                                                                    var $5810 = self.nam;
                                                                                                                                    var $5811 = self.ini;
                                                                                                                                    var $5812 = self.idx;
                                                                                                                                    var $5813 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($5800, $5809), $5810, $5811, $5812, $5813);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $5815 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $5817 = self.err;
                                                                                                                                                    var self = $5815;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $5819 = self.value;
                                                                                                                                                            var $5820 = Parser$Reply$error$(Parser$Error$combine$($5819, $5817));
                                                                                                                                                            var $5818 = $5820;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $5821 = Parser$Reply$error$($5817);
                                                                                                                                                            var $5818 = $5821;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5816 = $5818;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $5822 = self.pst;
                                                                                                                                                    var $5823 = self.val;
                                                                                                                                                    var self = $5822;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $5825 = self.err;
                                                                                                                                                            var $5826 = self.nam;
                                                                                                                                                            var $5827 = self.ini;
                                                                                                                                                            var $5828 = self.idx;
                                                                                                                                                            var $5829 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($5815, $5825), $5826, $5827, $5828, $5829);
                                                                                                                                                            var _term$87 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                            var _term$88 = Kind$Term$app$(_term$87, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                            var _term$89 = Kind$Term$app$(_term$88, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$90 = Kind$Term$app$(_term$89, Kind$Term$hol$(Bits$e));
                                                                                                                                                            var _term$91 = Kind$Term$app$(_term$90, $5792);
                                                                                                                                                            var _term$92 = Kind$Term$app$(_term$91, Kind$Term$lam$($5761, (_x$92 => {
                                                                                                                                                                var $5831 = $5823;
                                                                                                                                                                return $5831;
                                                                                                                                                            })));
                                                                                                                                                            var $5830 = Parser$Reply$value$(_reply$pst$86, _term$92);
                                                                                                                                                            var $5824 = $5830;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5816 = $5824;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $5814 = $5816;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $5808 = $5814;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5801 = $5808;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5799 = $5801;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5793 = $5799;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5785 = $5793;
                                                                                                    break;
                                                                                            };
                                                                                            var $5783 = $5785;
                                                                                            break;
                                                                                    };
                                                                                    var $5777 = $5783;
                                                                                    break;
                                                                            };
                                                                            var $5770 = $5777;
                                                                            break;
                                                                    };
                                                                    var $5768 = $5770;
                                                                    break;
                                                            };
                                                            var $5762 = $5768;
                                                            break;
                                                    };
                                                    var $5754 = $5762;
                                                    break;
                                            };
                                            var $5752 = $5754;
                                            break;
                                    };
                                    var $5746 = $5752;
                                    break;
                            };
                            var $5739 = $5746;
                            break;
                    };
                    var $5737 = $5739;
                    break;
            };
            return $5737;
        })), List$cons$(Kind$Parser$block("do-return")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5833 = self.err;
                    var _reply$8 = Kind$Parser$text$("return ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5835 = self.err;
                            var self = $5833;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5837 = self.value;
                                    var $5838 = Parser$Reply$error$(Parser$Error$combine$($5837, $5835));
                                    var $5836 = $5838;
                                    break;
                                case 'Maybe.none':
                                    var $5839 = Parser$Reply$error$($5835);
                                    var $5836 = $5839;
                                    break;
                            };
                            var $5834 = $5836;
                            break;
                        case 'Parser.Reply.value':
                            var $5840 = self.pst;
                            var self = $5840;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5842 = self.err;
                                    var $5843 = self.nam;
                                    var $5844 = self.ini;
                                    var $5845 = self.idx;
                                    var $5846 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5833, $5842), $5843, $5844, $5845, $5846);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5848 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5850 = self.err;
                                                    var self = $5848;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5852 = self.value;
                                                            var $5853 = Parser$Reply$error$(Parser$Error$combine$($5852, $5850));
                                                            var $5851 = $5853;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5854 = Parser$Reply$error$($5850);
                                                            var $5851 = $5854;
                                                            break;
                                                    };
                                                    var $5849 = $5851;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5855 = self.pst;
                                                    var $5856 = self.val;
                                                    var self = $5855;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5858 = self.err;
                                                            var $5859 = self.nam;
                                                            var $5860 = self.ini;
                                                            var $5861 = self.idx;
                                                            var $5862 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5848, $5858), $5859, $5860, $5861, $5862);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5864 = self.err;
                                                                    var _reply$36 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5866 = self.err;
                                                                            var self = $5864;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5868 = self.value;
                                                                                    var $5869 = Parser$Reply$error$(Parser$Error$combine$($5868, $5866));
                                                                                    var $5867 = $5869;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5870 = Parser$Reply$error$($5866);
                                                                                    var $5867 = $5870;
                                                                                    break;
                                                                            };
                                                                            var $5865 = $5867;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5871 = self.pst;
                                                                            var self = $5871;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5873 = self.err;
                                                                                    var $5874 = self.nam;
                                                                                    var $5875 = self.ini;
                                                                                    var $5876 = self.idx;
                                                                                    var $5877 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5864, $5873), $5874, $5875, $5876, $5877);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.pure"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, $5856);
                                                                                    var $5878 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                    var $5872 = $5878;
                                                                                    break;
                                                                            };
                                                                            var $5865 = $5872;
                                                                            break;
                                                                    };
                                                                    var $5863 = $5865;
                                                                    break;
                                                            };
                                                            var $5857 = $5863;
                                                            break;
                                                    };
                                                    var $5849 = $5857;
                                                    break;
                                            };
                                            var $5847 = $5849;
                                            break;
                                    };
                                    var $5841 = $5847;
                                    break;
                            };
                            var $5834 = $5841;
                            break;
                    };
                    var $5832 = $5834;
                    break;
            };
            return $5832;
        })), List$cons$(Kind$Parser$block("do-for")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $5880 = self.err;
                    var _reply$8 = Kind$Parser$text$("for ", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $5882 = self.err;
                            var self = $5880;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $5884 = self.value;
                                    var $5885 = Parser$Reply$error$(Parser$Error$combine$($5884, $5882));
                                    var $5883 = $5885;
                                    break;
                                case 'Maybe.none':
                                    var $5886 = Parser$Reply$error$($5882);
                                    var $5883 = $5886;
                                    break;
                            };
                            var $5881 = $5883;
                            break;
                        case 'Parser.Reply.value':
                            var $5887 = self.pst;
                            var self = $5887;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $5889 = self.err;
                                    var $5890 = self.nam;
                                    var $5891 = self.ini;
                                    var $5892 = self.idx;
                                    var $5893 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($5880, $5889), $5890, $5891, $5892, $5893);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $5895 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $5897 = self.err;
                                                    var self = $5895;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $5899 = self.value;
                                                            var $5900 = Parser$Reply$error$(Parser$Error$combine$($5899, $5897));
                                                            var $5898 = $5900;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $5901 = Parser$Reply$error$($5897);
                                                            var $5898 = $5901;
                                                            break;
                                                    };
                                                    var $5896 = $5898;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $5902 = self.pst;
                                                    var $5903 = self.val;
                                                    var self = $5902;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $5905 = self.err;
                                                            var $5906 = self.nam;
                                                            var $5907 = self.ini;
                                                            var $5908 = self.idx;
                                                            var $5909 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($5895, $5905), $5906, $5907, $5908, $5909);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $5911 = self.err;
                                                                    var _reply$36 = Kind$Parser$text$("from", _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $5913 = self.err;
                                                                            var self = $5911;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $5915 = self.value;
                                                                                    var $5916 = Parser$Reply$error$(Parser$Error$combine$($5915, $5913));
                                                                                    var $5914 = $5916;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $5917 = Parser$Reply$error$($5913);
                                                                                    var $5914 = $5917;
                                                                                    break;
                                                                            };
                                                                            var $5912 = $5914;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $5918 = self.pst;
                                                                            var self = $5918;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $5920 = self.err;
                                                                                    var $5921 = self.nam;
                                                                                    var $5922 = self.ini;
                                                                                    var $5923 = self.idx;
                                                                                    var $5924 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($5911, $5920), $5921, $5922, $5923, $5924);
                                                                                    var self = _reply$pst$44;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $5926 = self.err;
                                                                                            var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                            var self = _reply$50;
                                                                                            switch (self._) {
                                                                                                case 'Parser.Reply.error':
                                                                                                    var $5928 = self.err;
                                                                                                    var self = $5926;
                                                                                                    switch (self._) {
                                                                                                        case 'Maybe.some':
                                                                                                            var $5930 = self.value;
                                                                                                            var $5931 = Parser$Reply$error$(Parser$Error$combine$($5930, $5928));
                                                                                                            var $5929 = $5931;
                                                                                                            break;
                                                                                                        case 'Maybe.none':
                                                                                                            var $5932 = Parser$Reply$error$($5928);
                                                                                                            var $5929 = $5932;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5927 = $5929;
                                                                                                    break;
                                                                                                case 'Parser.Reply.value':
                                                                                                    var $5933 = self.pst;
                                                                                                    var $5934 = self.val;
                                                                                                    var self = $5933;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.State.new':
                                                                                                            var $5936 = self.err;
                                                                                                            var $5937 = self.nam;
                                                                                                            var $5938 = self.ini;
                                                                                                            var $5939 = self.idx;
                                                                                                            var $5940 = self.str;
                                                                                                            var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($5926, $5936), $5937, $5938, $5939, $5940);
                                                                                                            var self = _reply$pst$58;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $5942 = self.err;
                                                                                                                    var _reply$64 = Kind$Parser$text$("to", _reply$pst$58);
                                                                                                                    var self = _reply$64;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Parser.Reply.error':
                                                                                                                            var $5944 = self.err;
                                                                                                                            var self = $5942;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $5946 = self.value;
                                                                                                                                    var $5947 = Parser$Reply$error$(Parser$Error$combine$($5946, $5944));
                                                                                                                                    var $5945 = $5947;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $5948 = Parser$Reply$error$($5944);
                                                                                                                                    var $5945 = $5948;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5943 = $5945;
                                                                                                                            break;
                                                                                                                        case 'Parser.Reply.value':
                                                                                                                            var $5949 = self.pst;
                                                                                                                            var self = $5949;
                                                                                                                            switch (self._) {
                                                                                                                                case 'Parser.State.new':
                                                                                                                                    var $5951 = self.err;
                                                                                                                                    var $5952 = self.nam;
                                                                                                                                    var $5953 = self.ini;
                                                                                                                                    var $5954 = self.idx;
                                                                                                                                    var $5955 = self.str;
                                                                                                                                    var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($5942, $5951), $5952, $5953, $5954, $5955);
                                                                                                                                    var self = _reply$pst$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Parser.State.new':
                                                                                                                                            var $5957 = self.err;
                                                                                                                                            var _reply$78 = Kind$Parser$term(_reply$pst$72);
                                                                                                                                            var self = _reply$78;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                    var $5959 = self.err;
                                                                                                                                                    var self = $5957;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                            var $5961 = self.value;
                                                                                                                                                            var $5962 = Parser$Reply$error$(Parser$Error$combine$($5961, $5959));
                                                                                                                                                            var $5960 = $5962;
                                                                                                                                                            break;
                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                            var $5963 = Parser$Reply$error$($5959);
                                                                                                                                                            var $5960 = $5963;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5958 = $5960;
                                                                                                                                                    break;
                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                    var $5964 = self.pst;
                                                                                                                                                    var $5965 = self.val;
                                                                                                                                                    var self = $5964;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                            var $5967 = self.err;
                                                                                                                                                            var $5968 = self.nam;
                                                                                                                                                            var $5969 = self.ini;
                                                                                                                                                            var $5970 = self.idx;
                                                                                                                                                            var $5971 = self.str;
                                                                                                                                                            var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($5957, $5967), $5968, $5969, $5970, $5971);
                                                                                                                                                            var self = _reply$pst$86;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $5973 = self.err;
                                                                                                                                                                    var _reply$92 = Kind$Parser$text$(":", _reply$pst$86);
                                                                                                                                                                    var self = _reply$92;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                            var $5975 = self.err;
                                                                                                                                                                            var self = $5973;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                    var $5977 = self.value;
                                                                                                                                                                                    var $5978 = Parser$Reply$error$(Parser$Error$combine$($5977, $5975));
                                                                                                                                                                                    var $5976 = $5978;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                    var $5979 = Parser$Reply$error$($5975);
                                                                                                                                                                                    var $5976 = $5979;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $5974 = $5976;
                                                                                                                                                                            break;
                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                            var $5980 = self.pst;
                                                                                                                                                                            var self = $5980;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                    var $5982 = self.err;
                                                                                                                                                                                    var $5983 = self.nam;
                                                                                                                                                                                    var $5984 = self.ini;
                                                                                                                                                                                    var $5985 = self.idx;
                                                                                                                                                                                    var $5986 = self.str;
                                                                                                                                                                                    var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($5973, $5982), $5983, $5984, $5985, $5986);
                                                                                                                                                                                    var self = _reply$pst$100;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $5988 = self.err;
                                                                                                                                                                                            var _reply$106 = Kind$Parser$term(_reply$pst$100);
                                                                                                                                                                                            var self = _reply$106;
                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                                    var $5990 = self.err;
                                                                                                                                                                                                    var self = $5988;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                            var $5992 = self.value;
                                                                                                                                                                                                            var $5993 = Parser$Reply$error$(Parser$Error$combine$($5992, $5990));
                                                                                                                                                                                                            var $5991 = $5993;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                            var $5994 = Parser$Reply$error$($5990);
                                                                                                                                                                                                            var $5991 = $5994;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $5989 = $5991;
                                                                                                                                                                                                    break;
                                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                                    var $5995 = self.pst;
                                                                                                                                                                                                    var $5996 = self.val;
                                                                                                                                                                                                    var self = $5995;
                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                                            var $5998 = self.err;
                                                                                                                                                                                                            var $5999 = self.nam;
                                                                                                                                                                                                            var $6000 = self.ini;
                                                                                                                                                                                                            var $6001 = self.idx;
                                                                                                                                                                                                            var $6002 = self.str;
                                                                                                                                                                                                            var _reply$pst$114 = Parser$State$new$(Parser$Error$maybe_combine$($5988, $5998), $5999, $6000, $6001, $6002);
                                                                                                                                                                                                            var self = _reply$pst$114;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                    var $6004 = self.err;
                                                                                                                                                                                                                    var _reply$120 = Parser$maybe$(Kind$Parser$do$statements$(_monad_name$1), _reply$pst$114);
                                                                                                                                                                                                                    var self = _reply$120;
                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                                                                                            var $6006 = self.err;
                                                                                                                                                                                                                            var self = $6004;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                                                                                    var $6008 = self.value;
                                                                                                                                                                                                                                    var $6009 = Parser$Reply$error$(Parser$Error$combine$($6008, $6006));
                                                                                                                                                                                                                                    var $6007 = $6009;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                                                                                    var $6010 = Parser$Reply$error$($6006);
                                                                                                                                                                                                                                    var $6007 = $6010;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6005 = $6007;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                                                                                            var $6011 = self.pst;
                                                                                                                                                                                                                            var $6012 = self.val;
                                                                                                                                                                                                                            var self = $6011;
                                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                                                                                    var $6014 = self.err;
                                                                                                                                                                                                                                    var $6015 = self.nam;
                                                                                                                                                                                                                                    var $6016 = self.ini;
                                                                                                                                                                                                                                    var $6017 = self.idx;
                                                                                                                                                                                                                                    var $6018 = self.str;
                                                                                                                                                                                                                                    var _reply$pst$128 = Parser$State$new$(Parser$Error$maybe_combine$($6004, $6014), $6015, $6016, $6017, $6018);
                                                                                                                                                                                                                                    var _expr$129 = Kind$Term$ref$("Nat.for.io");
                                                                                                                                                                                                                                    var _expr$130 = Kind$Term$app$(_expr$129, $5934);
                                                                                                                                                                                                                                    var _expr$131 = Kind$Term$app$(_expr$130, $5965);
                                                                                                                                                                                                                                    var _expr$132 = Kind$Term$app$(_expr$131, Kind$Term$lam$($5903, (_x$132 => {
                                                                                                                                                                                                                                        var $6020 = $5996;
                                                                                                                                                                                                                                        return $6020;
                                                                                                                                                                                                                                    })));
                                                                                                                                                                                                                                    var self = $6012;
                                                                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                                                                            var $6021 = self.value;
                                                                                                                                                                                                                                            var _term$134 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                                                                                                                                                                            var _term$135 = Kind$Term$app$(_term$134, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                                                                                                                                                                            var _term$136 = Kind$Term$app$(_term$135, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$137 = Kind$Term$app$(_term$136, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                                                            var _term$138 = Kind$Term$app$(_term$137, _expr$132);
                                                                                                                                                                                                                                            var _term$139 = Kind$Term$app$(_term$138, Kind$Term$lam$("", (_x$139 => {
                                                                                                                                                                                                                                                var $6023 = $6021;
                                                                                                                                                                                                                                                return $6023;
                                                                                                                                                                                                                                            })));
                                                                                                                                                                                                                                            var $6022 = (_pst$140 => {
                                                                                                                                                                                                                                                var $6024 = Parser$Reply$value$(_pst$140, _term$139);
                                                                                                                                                                                                                                                return $6024;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6019 = $6022;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                                                                            var $6025 = (_pst$133 => {
                                                                                                                                                                                                                                                var $6026 = Parser$Reply$value$(_pst$133, _expr$132);
                                                                                                                                                                                                                                                return $6026;
                                                                                                                                                                                                                                            });
                                                                                                                                                                                                                                            var $6019 = $6025;
                                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                    var $6019 = $6019(_reply$pst$128);
                                                                                                                                                                                                                                    var $6013 = $6019;
                                                                                                                                                                                                                                    break;
                                                                                                                                                                                                                            };
                                                                                                                                                                                                                            var $6005 = $6013;
                                                                                                                                                                                                                            break;
                                                                                                                                                                                                                    };
                                                                                                                                                                                                                    var $6003 = $6005;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            var $5997 = $6003;
                                                                                                                                                                                                            break;
                                                                                                                                                                                                    };
                                                                                                                                                                                                    var $5989 = $5997;
                                                                                                                                                                                                    break;
                                                                                                                                                                                            };
                                                                                                                                                                                            var $5987 = $5989;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $5981 = $5987;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $5974 = $5981;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $5972 = $5974;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $5966 = $5972;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $5958 = $5966;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            var $5956 = $5958;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $5950 = $5956;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $5943 = $5950;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    var $5941 = $5943;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $5935 = $5941;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $5927 = $5935;
                                                                                                    break;
                                                                                            };
                                                                                            var $5925 = $5927;
                                                                                            break;
                                                                                    };
                                                                                    var $5919 = $5925;
                                                                                    break;
                                                                            };
                                                                            var $5912 = $5919;
                                                                            break;
                                                                    };
                                                                    var $5910 = $5912;
                                                                    break;
                                                            };
                                                            var $5904 = $5910;
                                                            break;
                                                    };
                                                    var $5896 = $5904;
                                                    break;
                                            };
                                            var $5894 = $5896;
                                            break;
                                    };
                                    var $5888 = $5894;
                                    break;
                            };
                            var $5881 = $5888;
                            break;
                    };
                    var $5879 = $5881;
                    break;
            };
            return $5879;
        })), List$cons$(Kind$Parser$letforrange$u32$((_x$2 => {
            var $6027 = Kind$Parser$do$statements$(_monad_name$1);
            return $6027;
        })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$2 => {
            var $6028 = Kind$Parser$do$statements$(_monad_name$1);
            return $6028;
        })), List$cons$(Kind$Parser$letforrange$nat$((_x$2 => {
            var $6029 = Kind$Parser$do$statements$(_monad_name$1);
            return $6029;
        })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$2 => {
            var $6030 = Kind$Parser$do$statements$(_monad_name$1);
            return $6030;
        })), List$cons$(Kind$Parser$letforin$((_x$2 => {
            var $6031 = Kind$Parser$do$statements$(_monad_name$1);
            return $6031;
        })), List$cons$(Kind$Parser$letforin$with$((_x$2 => {
            var $6032 = Kind$Parser$do$statements$(_monad_name$1);
            return $6032;
        })), List$cons$(Kind$Parser$letwhile$((_x$2 => {
            var $6033 = Kind$Parser$do$statements$(_monad_name$1);
            return $6033;
        })), List$cons$(Kind$Parser$letwhile$with$((_x$2 => {
            var $6034 = Kind$Parser$do$statements$(_monad_name$1);
            return $6034;
        })), List$cons$(Kind$Parser$let$((_x$2 => {
            var $6035 = Kind$Parser$do$statements$(_monad_name$1);
            return $6035;
        })), List$cons$(Kind$Parser$getwhile$((_x$2 => {
            var $6036 = Kind$Parser$do$statements$(_monad_name$1);
            return $6036;
        })), List$cons$(Kind$Parser$getwhile$with((_x$2 => {
            var $6037 = Kind$Parser$do$statements$(_monad_name$1);
            return $6037;
        })), List$cons$(Kind$Parser$get$((_x$2 => {
            var $6038 = Kind$Parser$do$statements$(_monad_name$1);
            return $6038;
        })), List$cons$(Kind$Parser$def$((_x$2 => {
            var $6039 = Kind$Parser$do$statements$(_monad_name$1);
            return $6039;
        })), List$cons$(Kind$Parser$log$((_x$2 => {
            var $6040 = Kind$Parser$do$statements$(_monad_name$1);
            return $6040;
        })), List$cons$(Kind$Parser$open$((_x$2 => {
            var $6041 = Kind$Parser$do$statements$(_monad_name$1);
            return $6041;
        })), List$cons$(Kind$Parser$block("do-statement")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6043 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6045 = self.err;
                            var self = $6043;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6047 = self.value;
                                    var $6048 = Parser$Reply$error$(Parser$Error$combine$($6047, $6045));
                                    var $6046 = $6048;
                                    break;
                                case 'Maybe.none':
                                    var $6049 = Parser$Reply$error$($6045);
                                    var $6046 = $6049;
                                    break;
                            };
                            var $6044 = $6046;
                            break;
                        case 'Parser.Reply.value':
                            var $6050 = self.pst;
                            var $6051 = self.val;
                            var self = $6050;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6053 = self.err;
                                    var $6054 = self.nam;
                                    var $6055 = self.ini;
                                    var $6056 = self.idx;
                                    var $6057 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6043, $6053), $6054, $6055, $6056, $6057);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6059 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6061 = self.err;
                                                    var self = $6059;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6063 = self.value;
                                                            var $6064 = Parser$Reply$error$(Parser$Error$combine$($6063, $6061));
                                                            var $6062 = $6064;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6065 = Parser$Reply$error$($6061);
                                                            var $6062 = $6065;
                                                            break;
                                                    };
                                                    var $6060 = $6062;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6066 = self.pst;
                                                    var self = $6066;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6068 = self.err;
                                                            var $6069 = self.nam;
                                                            var $6070 = self.ini;
                                                            var $6071 = self.idx;
                                                            var $6072 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6059, $6068), $6069, $6070, $6071, $6072);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6074 = self.err;
                                                                    var _reply$36 = Kind$Parser$do$statements$(_monad_name$1)(_reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6076 = self.err;
                                                                            var self = $6074;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6078 = self.value;
                                                                                    var $6079 = Parser$Reply$error$(Parser$Error$combine$($6078, $6076));
                                                                                    var $6077 = $6079;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6080 = Parser$Reply$error$($6076);
                                                                                    var $6077 = $6080;
                                                                                    break;
                                                                            };
                                                                            var $6075 = $6077;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6081 = self.pst;
                                                                            var $6082 = self.val;
                                                                            var self = $6081;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6084 = self.err;
                                                                                    var $6085 = self.nam;
                                                                                    var $6086 = self.ini;
                                                                                    var $6087 = self.idx;
                                                                                    var $6088 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6074, $6084), $6085, $6086, $6087, $6088);
                                                                                    var _term$45 = Kind$Term$app$(Kind$Term$ref$("Monad.bind"), Kind$Term$ref$(_monad_name$1));
                                                                                    var _term$46 = Kind$Term$app$(_term$45, Kind$Term$ref$((_monad_name$1 + ".monad")));
                                                                                    var _term$47 = Kind$Term$app$(_term$46, Kind$Term$hol$(Bits$e));
                                                                                    var _term$48 = Kind$Term$app$(_term$47, Kind$Term$hol$(Bits$e));
                                                                                    var _term$49 = Kind$Term$app$(_term$48, $6051);
                                                                                    var _term$50 = Kind$Term$app$(_term$49, Kind$Term$lam$("", (_x$50 => {
                                                                                        var $6090 = $6082;
                                                                                        return $6090;
                                                                                    })));
                                                                                    var $6089 = Parser$Reply$value$(_reply$pst$44, _term$50);
                                                                                    var $6083 = $6089;
                                                                                    break;
                                                                            };
                                                                            var $6075 = $6083;
                                                                            break;
                                                                    };
                                                                    var $6073 = $6075;
                                                                    break;
                                                            };
                                                            var $6067 = $6073;
                                                            break;
                                                    };
                                                    var $6060 = $6067;
                                                    break;
                                            };
                                            var $6058 = $6060;
                                            break;
                                    };
                                    var $6052 = $6058;
                                    break;
                            };
                            var $6044 = $6052;
                            break;
                    };
                    var $6042 = $6044;
                    break;
            };
            return $6042;
        })), List$cons$(Kind$Parser$block("do-end")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $6092 = self.err;
                    var _reply$8 = Kind$Parser$term(_pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $6094 = self.err;
                            var self = $6092;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $6096 = self.value;
                                    var $6097 = Parser$Reply$error$(Parser$Error$combine$($6096, $6094));
                                    var $6095 = $6097;
                                    break;
                                case 'Maybe.none':
                                    var $6098 = Parser$Reply$error$($6094);
                                    var $6095 = $6098;
                                    break;
                            };
                            var $6093 = $6095;
                            break;
                        case 'Parser.Reply.value':
                            var $6099 = self.pst;
                            var $6100 = self.val;
                            var self = $6099;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $6102 = self.err;
                                    var $6103 = self.nam;
                                    var $6104 = self.ini;
                                    var $6105 = self.idx;
                                    var $6106 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($6092, $6102), $6103, $6104, $6105, $6106);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6108 = self.err;
                                            var _reply$22 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6110 = self.err;
                                                    var self = $6108;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6112 = self.value;
                                                            var $6113 = Parser$Reply$error$(Parser$Error$combine$($6112, $6110));
                                                            var $6111 = $6113;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6114 = Parser$Reply$error$($6110);
                                                            var $6111 = $6114;
                                                            break;
                                                    };
                                                    var $6109 = $6111;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6115 = self.pst;
                                                    var self = $6115;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6117 = self.err;
                                                            var $6118 = self.nam;
                                                            var $6119 = self.ini;
                                                            var $6120 = self.idx;
                                                            var $6121 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6108, $6117), $6118, $6119, $6120, $6121);
                                                            var $6122 = Parser$Reply$value$(_reply$pst$30, $6100);
                                                            var $6116 = $6122;
                                                            break;
                                                    };
                                                    var $6109 = $6116;
                                                    break;
                                            };
                                            var $6107 = $6109;
                                            break;
                                    };
                                    var $6101 = $6107;
                                    break;
                            };
                            var $6093 = $6101;
                            break;
                    };
                    var $6091 = $6093;
                    break;
            };
            return $6091;
        })), List$nil)))))))))))))))))))));
        return $5736;
    };
    const Kind$Parser$do$statements = x0 => Kind$Parser$do$statements$(x0);
    const Kind$Parser$do = Kind$Parser$block("do")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6124 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$text("do "), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6126 = self.err;
                        var self = $6124;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6128 = self.value;
                                var $6129 = Parser$Reply$error$(Parser$Error$combine$($6128, $6126));
                                var $6127 = $6129;
                                break;
                            case 'Maybe.none':
                                var $6130 = Parser$Reply$error$($6126);
                                var $6127 = $6130;
                                break;
                        };
                        var $6125 = $6127;
                        break;
                    case 'Parser.Reply.value':
                        var $6131 = self.pst;
                        var self = $6131;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6133 = self.err;
                                var $6134 = self.nam;
                                var $6135 = self.ini;
                                var $6136 = self.idx;
                                var $6137 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6124, $6133), $6134, $6135, $6136, $6137);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6139 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6141 = self.err;
                                                var self = $6139;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6143 = self.value;
                                                        var $6144 = Parser$Reply$error$(Parser$Error$combine$($6143, $6141));
                                                        var $6142 = $6144;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6145 = Parser$Reply$error$($6141);
                                                        var $6142 = $6145;
                                                        break;
                                                };
                                                var $6140 = $6142;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6146 = self.pst;
                                                var $6147 = self.val;
                                                var self = $6146;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6149 = self.err;
                                                        var $6150 = self.nam;
                                                        var $6151 = self.ini;
                                                        var $6152 = self.idx;
                                                        var $6153 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6139, $6149), $6150, $6151, $6152, $6153);
                                                        var self = String$is_upper$(String$slice$(0n, 1n, $6147));
                                                        if (self) {
                                                            var $6155 = (_pst$30 => {
                                                                var self = _pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6157 = self.err;
                                                                        var _reply$36 = Parser$text$(" {", _pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6159 = self.err;
                                                                                var self = $6157;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6161 = self.value;
                                                                                        var $6162 = Parser$Reply$error$(Parser$Error$combine$($6161, $6159));
                                                                                        var $6160 = $6162;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6163 = Parser$Reply$error$($6159);
                                                                                        var $6160 = $6163;
                                                                                        break;
                                                                                };
                                                                                var $6158 = $6160;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6164 = self.pst;
                                                                                var self = $6164;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6166 = self.err;
                                                                                        var $6167 = self.nam;
                                                                                        var $6168 = self.ini;
                                                                                        var $6169 = self.idx;
                                                                                        var $6170 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6157, $6166), $6167, $6168, $6169, $6170);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6172 = self.err;
                                                                                                var _reply$50 = Kind$Parser$do$statements$($6147)(_reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6174 = self.err;
                                                                                                        var self = $6172;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6176 = self.value;
                                                                                                                var $6177 = Parser$Reply$error$(Parser$Error$combine$($6176, $6174));
                                                                                                                var $6175 = $6177;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6178 = Parser$Reply$error$($6174);
                                                                                                                var $6175 = $6178;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6173 = $6175;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6179 = self.pst;
                                                                                                        var $6180 = self.val;
                                                                                                        var self = $6179;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6182 = self.err;
                                                                                                                var $6183 = self.nam;
                                                                                                                var $6184 = self.ini;
                                                                                                                var $6185 = self.idx;
                                                                                                                var $6186 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6172, $6182), $6183, $6184, $6185, $6186);
                                                                                                                var self = _reply$pst$58;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6188 = self.err;
                                                                                                                        var _reply$64 = Kind$Parser$text$("}", _reply$pst$58);
                                                                                                                        var self = _reply$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                var $6190 = self.err;
                                                                                                                                var self = $6188;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Maybe.some':
                                                                                                                                        var $6192 = self.value;
                                                                                                                                        var $6193 = Parser$Reply$error$(Parser$Error$combine$($6192, $6190));
                                                                                                                                        var $6191 = $6193;
                                                                                                                                        break;
                                                                                                                                    case 'Maybe.none':
                                                                                                                                        var $6194 = Parser$Reply$error$($6190);
                                                                                                                                        var $6191 = $6194;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6189 = $6191;
                                                                                                                                break;
                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                var $6195 = self.pst;
                                                                                                                                var self = $6195;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6197 = self.err;
                                                                                                                                        var $6198 = self.nam;
                                                                                                                                        var $6199 = self.ini;
                                                                                                                                        var $6200 = self.idx;
                                                                                                                                        var $6201 = self.str;
                                                                                                                                        var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($6188, $6197), $6198, $6199, $6200, $6201);
                                                                                                                                        var $6202 = Parser$Reply$value$(_reply$pst$72, $6180);
                                                                                                                                        var $6196 = $6202;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6189 = $6196;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6187 = $6189;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6181 = $6187;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6173 = $6181;
                                                                                                        break;
                                                                                                };
                                                                                                var $6171 = $6173;
                                                                                                break;
                                                                                        };
                                                                                        var $6165 = $6171;
                                                                                        break;
                                                                                };
                                                                                var $6158 = $6165;
                                                                                break;
                                                                        };
                                                                        var $6156 = $6158;
                                                                        break;
                                                                };
                                                                return $6156;
                                                            });
                                                            var $6154 = $6155;
                                                        } else {
                                                            var $6203 = Parser$fail("Not a do-block.");
                                                            var $6154 = $6203;
                                                        };
                                                        var $6154 = $6154(_reply$pst$29);
                                                        var $6148 = $6154;
                                                        break;
                                                };
                                                var $6140 = $6148;
                                                break;
                                        };
                                        var $6138 = $6140;
                                        break;
                                };
                                var $6132 = $6138;
                                break;
                        };
                        var $6125 = $6132;
                        break;
                };
                var $6123 = $6125;
                break;
        };
        return $6123;
    }));

    function Parser$try$(_parse$2, _pst$3) {
        var self = _parse$2(_pst$3);
        switch (self._) {
            case 'Parser.Reply.error':
                var $6205 = Parser$Reply$value$(_pst$3, Bool$false);
                var $6204 = $6205;
                break;
            case 'Parser.Reply.value':
                var $6206 = Parser$Reply$value$(_pst$3, Bool$true);
                var $6204 = $6206;
                break;
        };
        return $6204;
    };
    const Parser$try = x0 => x1 => Parser$try$(x0, x1);

    function Parser$avoiding$(_test$2, _parse$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $6208 = self.err;
                var _reply$10 = Parser$try$(_test$2, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6210 = self.err;
                        var self = $6208;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6212 = self.value;
                                var $6213 = Parser$Reply$error$(Parser$Error$combine$($6212, $6210));
                                var $6211 = $6213;
                                break;
                            case 'Maybe.none':
                                var $6214 = Parser$Reply$error$($6210);
                                var $6211 = $6214;
                                break;
                        };
                        var $6209 = $6211;
                        break;
                    case 'Parser.Reply.value':
                        var $6215 = self.pst;
                        var $6216 = self.val;
                        var self = $6215;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6218 = self.err;
                                var $6219 = self.nam;
                                var $6220 = self.ini;
                                var $6221 = self.idx;
                                var $6222 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($6208, $6218), $6219, $6220, $6221, $6222);
                                var self = $6216;
                                if (self) {
                                    var $6224 = Parser$fail("Avoided.");
                                    var $6223 = $6224;
                                } else {
                                    var $6225 = _parse$3;
                                    var $6223 = $6225;
                                };
                                var $6223 = $6223(_reply$pst$18);
                                var $6217 = $6223;
                                break;
                        };
                        var $6209 = $6217;
                        break;
                };
                var $6207 = $6209;
                break;
        };
        return $6207;
    };
    const Parser$avoiding = x0 => x1 => x2 => Parser$avoiding$(x0, x1, x2);

    function Kind$Term$extract_name$(_term$1) {
        var _term$2 = Kind$Term$reduce$(_term$1, Kind$Map$new);
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
                var $6227 = self.name;
                var $6228 = $6227;
                var $6226 = $6228;
                break;
            case 'Kind.Term.ref':
                var $6229 = self.name;
                var $6230 = $6229;
                var $6226 = $6230;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $6231 = "self";
                var $6226 = $6231;
                break;
        };
        return $6226;
    };
    const Kind$Term$extract_name = x0 => Kind$Term$extract_name$(x0);

    function Kind$Ann$new$(_name$1, _term$2, _type$3) {
        var $6232 = ({
            _: 'Kind.Ann.new',
            'name': _name$1,
            'term': _term$2,
            'type': _type$3
        });
        return $6232;
    };
    const Kind$Ann$new = x0 => x1 => x2 => Kind$Ann$new$(x0, x1, x2);
    const Kind$Parser$case$with = Parser$choice(List$cons$((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6234 = self.err;
                var _reply$7 = Kind$Parser$text$("with ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6236 = self.err;
                        var self = $6234;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6238 = self.value;
                                var $6239 = Parser$Reply$error$(Parser$Error$combine$($6238, $6236));
                                var $6237 = $6239;
                                break;
                            case 'Maybe.none':
                                var $6240 = Parser$Reply$error$($6236);
                                var $6237 = $6240;
                                break;
                        };
                        var $6235 = $6237;
                        break;
                    case 'Parser.Reply.value':
                        var $6241 = self.pst;
                        var self = $6241;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6243 = self.err;
                                var $6244 = self.nam;
                                var $6245 = self.ini;
                                var $6246 = self.idx;
                                var $6247 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6234, $6243), $6244, $6245, $6246, $6247);
                                var $6248 = Parser$many$((_pst$16 => {
                                    var self = _pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $6250 = self.err;
                                            var _reply$22 = Kind$Parser$name1$(_pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $6252 = self.err;
                                                    var self = $6250;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $6254 = self.value;
                                                            var $6255 = Parser$Reply$error$(Parser$Error$combine$($6254, $6252));
                                                            var $6253 = $6255;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $6256 = Parser$Reply$error$($6252);
                                                            var $6253 = $6256;
                                                            break;
                                                    };
                                                    var $6251 = $6253;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $6257 = self.pst;
                                                    var $6258 = self.val;
                                                    var self = $6257;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $6260 = self.err;
                                                            var $6261 = self.nam;
                                                            var $6262 = self.ini;
                                                            var $6263 = self.idx;
                                                            var $6264 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6250, $6260), $6261, $6262, $6263, $6264);
                                                            var self = _reply$pst$30;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6266 = self.err;
                                                                    var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                        var self = _pst$36;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6269 = self.err;
                                                                                var _reply$42 = Kind$Parser$text$(":", _pst$36);
                                                                                var self = _reply$42;
                                                                                switch (self._) {
                                                                                    case 'Parser.Reply.error':
                                                                                        var $6271 = self.err;
                                                                                        var self = $6269;
                                                                                        switch (self._) {
                                                                                            case 'Maybe.some':
                                                                                                var $6273 = self.value;
                                                                                                var $6274 = Parser$Reply$error$(Parser$Error$combine$($6273, $6271));
                                                                                                var $6272 = $6274;
                                                                                                break;
                                                                                            case 'Maybe.none':
                                                                                                var $6275 = Parser$Reply$error$($6271);
                                                                                                var $6272 = $6275;
                                                                                                break;
                                                                                        };
                                                                                        var $6270 = $6272;
                                                                                        break;
                                                                                    case 'Parser.Reply.value':
                                                                                        var $6276 = self.pst;
                                                                                        var self = $6276;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6278 = self.err;
                                                                                                var $6279 = self.nam;
                                                                                                var $6280 = self.ini;
                                                                                                var $6281 = self.idx;
                                                                                                var $6282 = self.str;
                                                                                                var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($6269, $6278), $6279, $6280, $6281, $6282);
                                                                                                var self = _reply$pst$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6284 = self.err;
                                                                                                        var _reply$56 = Kind$Parser$term(_reply$pst$50);
                                                                                                        var self = _reply$56;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.Reply.error':
                                                                                                                var $6286 = self.err;
                                                                                                                var self = $6284;
                                                                                                                switch (self._) {
                                                                                                                    case 'Maybe.some':
                                                                                                                        var $6288 = self.value;
                                                                                                                        var $6289 = Parser$Reply$error$(Parser$Error$combine$($6288, $6286));
                                                                                                                        var $6287 = $6289;
                                                                                                                        break;
                                                                                                                    case 'Maybe.none':
                                                                                                                        var $6290 = Parser$Reply$error$($6286);
                                                                                                                        var $6287 = $6290;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6285 = $6287;
                                                                                                                break;
                                                                                                            case 'Parser.Reply.value':
                                                                                                                var $6291 = self.pst;
                                                                                                                var $6292 = self.val;
                                                                                                                var self = $6291;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.State.new':
                                                                                                                        var $6294 = self.err;
                                                                                                                        var $6295 = self.nam;
                                                                                                                        var $6296 = self.ini;
                                                                                                                        var $6297 = self.idx;
                                                                                                                        var $6298 = self.str;
                                                                                                                        var _reply$pst$64 = Parser$State$new$(Parser$Error$maybe_combine$($6284, $6294), $6295, $6296, $6297, $6298);
                                                                                                                        var self = _reply$pst$64;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6300 = self.err;
                                                                                                                                var _reply$70 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$64);
                                                                                                                                var self = _reply$70;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                        var $6302 = self.err;
                                                                                                                                        var self = $6300;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Maybe.some':
                                                                                                                                                var $6304 = self.value;
                                                                                                                                                var $6305 = Parser$Reply$error$(Parser$Error$combine$($6304, $6302));
                                                                                                                                                var $6303 = $6305;
                                                                                                                                                break;
                                                                                                                                            case 'Maybe.none':
                                                                                                                                                var $6306 = Parser$Reply$error$($6302);
                                                                                                                                                var $6303 = $6306;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6301 = $6303;
                                                                                                                                        break;
                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                        var $6307 = self.pst;
                                                                                                                                        var self = $6307;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                var $6309 = self.err;
                                                                                                                                                var $6310 = self.nam;
                                                                                                                                                var $6311 = self.ini;
                                                                                                                                                var $6312 = self.idx;
                                                                                                                                                var $6313 = self.str;
                                                                                                                                                var _reply$pst$78 = Parser$State$new$(Parser$Error$maybe_combine$($6300, $6309), $6310, $6311, $6312, $6313);
                                                                                                                                                var $6314 = Parser$Reply$value$(_reply$pst$78, $6292);
                                                                                                                                                var $6308 = $6314;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6301 = $6308;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6299 = $6301;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6293 = $6299;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6285 = $6293;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6283 = $6285;
                                                                                                        break;
                                                                                                };
                                                                                                var $6277 = $6283;
                                                                                                break;
                                                                                        };
                                                                                        var $6270 = $6277;
                                                                                        break;
                                                                                };
                                                                                var $6268 = $6270;
                                                                                break;
                                                                        };
                                                                        return $6268;
                                                                    }), _reply$pst$30);
                                                                    var self = _reply$36;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $6315 = self.err;
                                                                            var self = $6266;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $6317 = self.value;
                                                                                    var $6318 = Parser$Reply$error$(Parser$Error$combine$($6317, $6315));
                                                                                    var $6316 = $6318;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $6319 = Parser$Reply$error$($6315);
                                                                                    var $6316 = $6319;
                                                                                    break;
                                                                            };
                                                                            var $6267 = $6316;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $6320 = self.pst;
                                                                            var $6321 = self.val;
                                                                            var self = $6320;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $6323 = self.err;
                                                                                    var $6324 = self.nam;
                                                                                    var $6325 = self.ini;
                                                                                    var $6326 = self.idx;
                                                                                    var $6327 = self.str;
                                                                                    var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6266, $6323), $6324, $6325, $6326, $6327);
                                                                                    var $6328 = Parser$Reply$value$(_reply$pst$44, Kind$Ann$new$($6258, Kind$Term$ref$($6258), $6321));
                                                                                    var $6322 = $6328;
                                                                                    break;
                                                                            };
                                                                            var $6267 = $6322;
                                                                            break;
                                                                    };
                                                                    var $6265 = $6267;
                                                                    break;
                                                            };
                                                            var $6259 = $6265;
                                                            break;
                                                    };
                                                    var $6251 = $6259;
                                                    break;
                                            };
                                            var $6249 = $6251;
                                            break;
                                    };
                                    return $6249;
                                }))(_reply$pst$15);
                                var $6242 = $6248;
                                break;
                        };
                        var $6235 = $6242;
                        break;
                };
                var $6233 = $6235;
                break;
        };
        return $6233;
    }), List$cons$((_pst$1 => {
        var $6329 = Parser$Reply$value$(_pst$1, List$nil);
        return $6329;
    }), List$nil)));

    function Kind$Parser$case$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6331 = self.err;
                var _reply$7 = Parser$try$(Kind$Parser$text(":"), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6333 = self.err;
                        var self = $6331;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6335 = self.value;
                                var $6336 = Parser$Reply$error$(Parser$Error$combine$($6335, $6333));
                                var $6334 = $6336;
                                break;
                            case 'Maybe.none':
                                var $6337 = Parser$Reply$error$($6333);
                                var $6334 = $6337;
                                break;
                        };
                        var $6332 = $6334;
                        break;
                    case 'Parser.Reply.value':
                        var $6338 = self.pst;
                        var $6339 = self.val;
                        var self = $6338;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6341 = self.err;
                                var $6342 = self.nam;
                                var $6343 = self.ini;
                                var $6344 = self.idx;
                                var $6345 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6331, $6341), $6342, $6343, $6344, $6345);
                                var self = $6339;
                                if (self) {
                                    var $6347 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6349 = self.err;
                                                var _reply$22 = Kind$Parser$spaces(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6351 = self.err;
                                                        var self = $6349;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6353 = self.value;
                                                                var $6354 = Parser$Reply$error$(Parser$Error$combine$($6353, $6351));
                                                                var $6352 = $6354;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6355 = Parser$Reply$error$($6351);
                                                                var $6352 = $6355;
                                                                break;
                                                        };
                                                        var $6350 = $6352;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6356 = self.pst;
                                                        var self = $6356;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6358 = self.err;
                                                                var $6359 = self.nam;
                                                                var $6360 = self.ini;
                                                                var $6361 = self.idx;
                                                                var $6362 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6349, $6358), $6359, $6360, $6361, $6362);
                                                                var $6363 = Parser$fail$("Expected constructor names.", _reply$pst$30);
                                                                var $6357 = $6363;
                                                                break;
                                                        };
                                                        var $6350 = $6357;
                                                        break;
                                                };
                                                var $6348 = $6350;
                                                break;
                                        };
                                        return $6348;
                                    });
                                    var $6346 = $6347;
                                } else {
                                    var $6364 = (_pst$16 => {
                                        var self = _pst$16;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $6366 = self.err;
                                                var _reply$22 = Parser$until$(Kind$Parser$text(":"), Kind$Parser$name1)(_pst$16);
                                                var self = _reply$22;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $6368 = self.err;
                                                        var self = $6366;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $6370 = self.value;
                                                                var $6371 = Parser$Reply$error$(Parser$Error$combine$($6370, $6368));
                                                                var $6369 = $6371;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $6372 = Parser$Reply$error$($6368);
                                                                var $6369 = $6372;
                                                                break;
                                                        };
                                                        var $6367 = $6369;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $6373 = self.pst;
                                                        var $6374 = self.val;
                                                        var self = $6373;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6376 = self.err;
                                                                var $6377 = self.nam;
                                                                var $6378 = self.ini;
                                                                var $6379 = self.idx;
                                                                var $6380 = self.str;
                                                                var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($6366, $6376), $6377, $6378, $6379, $6380);
                                                                var self = _reply$pst$30;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $6382 = self.err;
                                                                        var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                        var self = _reply$36;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $6384 = self.err;
                                                                                var self = $6382;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $6386 = self.value;
                                                                                        var $6387 = Parser$Reply$error$(Parser$Error$combine$($6386, $6384));
                                                                                        var $6385 = $6387;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $6388 = Parser$Reply$error$($6384);
                                                                                        var $6385 = $6388;
                                                                                        break;
                                                                                };
                                                                                var $6383 = $6385;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $6389 = self.pst;
                                                                                var $6390 = self.val;
                                                                                var self = $6389;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6392 = self.err;
                                                                                        var $6393 = self.nam;
                                                                                        var $6394 = self.ini;
                                                                                        var $6395 = self.idx;
                                                                                        var $6396 = self.str;
                                                                                        var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($6382, $6392), $6393, $6394, $6395, $6396);
                                                                                        var self = _reply$pst$44;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $6398 = self.err;
                                                                                                var _reply$50 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$44);
                                                                                                var self = _reply$50;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $6400 = self.err;
                                                                                                        var self = $6398;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $6402 = self.value;
                                                                                                                var $6403 = Parser$Reply$error$(Parser$Error$combine$($6402, $6400));
                                                                                                                var $6401 = $6403;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $6404 = Parser$Reply$error$($6400);
                                                                                                                var $6401 = $6404;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6399 = $6401;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $6405 = self.pst;
                                                                                                        var self = $6405;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6407 = self.err;
                                                                                                                var $6408 = self.nam;
                                                                                                                var $6409 = self.ini;
                                                                                                                var $6410 = self.idx;
                                                                                                                var $6411 = self.str;
                                                                                                                var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($6398, $6407), $6408, $6409, $6410, $6411);
                                                                                                                var $6412 = Parser$Reply$value$(_reply$pst$58, Pair$new$($6374, $6390));
                                                                                                                var $6406 = $6412;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6399 = $6406;
                                                                                                        break;
                                                                                                };
                                                                                                var $6397 = $6399;
                                                                                                break;
                                                                                        };
                                                                                        var $6391 = $6397;
                                                                                        break;
                                                                                };
                                                                                var $6383 = $6391;
                                                                                break;
                                                                        };
                                                                        var $6381 = $6383;
                                                                        break;
                                                                };
                                                                var $6375 = $6381;
                                                                break;
                                                        };
                                                        var $6367 = $6375;
                                                        break;
                                                };
                                                var $6365 = $6367;
                                                break;
                                        };
                                        return $6365;
                                    });
                                    var $6346 = $6364;
                                };
                                var $6346 = $6346(_reply$pst$15);
                                var $6340 = $6346;
                                break;
                        };
                        var $6332 = $6340;
                        break;
                };
                var $6330 = $6332;
                break;
        };
        return $6330;
    };
    const Kind$Parser$case$case = x0 => Kind$Parser$case$case$(x0);

    function Parser$append_error$(_parse$2, _msg$3, _pst$4) {
        var _reply$5 = _parse$2(_pst$4);
        var self = _reply$5;
        switch (self._) {
            case 'Parser.Reply.error':
                var $6414 = self.err;
                var self = $6414;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $6416 = self.nam;
                        var $6417 = self.ini;
                        var $6418 = self.idx;
                        var $6419 = self.msg;
                        var $6420 = Parser$Reply$fail$($6416, $6417, $6418, ($6419 + _msg$3));
                        var $6415 = $6420;
                        break;
                };
                var $6413 = $6415;
                break;
            case 'Parser.Reply.value':
                var $6421 = _reply$5;
                var $6413 = $6421;
                break;
        };
        return $6413;
    };
    const Parser$append_error = x0 => x1 => x2 => Parser$append_error$(x0, x1, x2);

    function Kind$Parser$case$group$(_dflt$1, _cses$2) {
        var self = _cses$2;
        switch (self._) {
            case 'List.cons':
                var $6423 = self.head;
                var $6424 = self.tail;
                var _map$5 = Kind$Parser$case$group$(_dflt$1, $6424);
                var self = $6423;
                switch (self._) {
                    case 'Pair.new':
                        var $6426 = self.fst;
                        var $6427 = self.snd;
                        var self = $6426;
                        switch (self._) {
                            case 'List.cons':
                                var $6429 = self.head;
                                var $6430 = self.tail;
                                var _rest$10 = Maybe$default$(Kind$Map$get$($6429, _map$5), List$nil);
                                var $6431 = Kind$Map$set$($6429, List$cons$(Pair$new$($6430, $6427), _rest$10), _map$5);
                                var $6428 = $6431;
                                break;
                            case 'List.nil':
                                var $6432 = _map$5;
                                var $6428 = $6432;
                                break;
                        };
                        var $6425 = $6428;
                        break;
                };
                var $6422 = $6425;
                break;
            case 'List.nil':
                var self = _dflt$1;
                switch (self._) {
                    case 'Maybe.some':
                        var $6434 = self.value;
                        var $6435 = Kind$Map$set$("_", List$cons$(Pair$new$(List$nil, $6434), List$nil), Kind$Map$new);
                        var $6433 = $6435;
                        break;
                    case 'Maybe.none':
                        var $6436 = Kind$Map$new;
                        var $6433 = $6436;
                        break;
                };
                var $6422 = $6433;
                break;
        };
        return $6422;
    };
    const Kind$Parser$case$group = x0 => x1 => Kind$Parser$case$group$(x0, x1);

    function BitsMap$map$(_fn$3, _map$4) {
        var self = _map$4;
        switch (self._) {
            case 'BitsMap.tie':
                var $6438 = self.val;
                var $6439 = self.lft;
                var $6440 = self.rgt;
                var self = $6438;
                switch (self._) {
                    case 'Maybe.some':
                        var $6442 = self.value;
                        var $6443 = Maybe$some$(_fn$3($6442));
                        var _val$8 = $6443;
                        break;
                    case 'Maybe.none':
                        var $6444 = Maybe$none;
                        var _val$8 = $6444;
                        break;
                };
                var _lft$9 = BitsMap$map$(_fn$3, $6439);
                var _rgt$10 = BitsMap$map$(_fn$3, $6440);
                var $6441 = BitsMap$tie$(_val$8, _lft$9, _rgt$10);
                var $6437 = $6441;
                break;
            case 'BitsMap.new':
                var $6445 = BitsMap$new;
                var $6437 = $6445;
                break;
        };
        return $6437;
    };
    const BitsMap$map = x0 => x1 => BitsMap$map$(x0, x1);

    function Kind$Map$map$(_fn$3, _map$4) {
        var $6446 = BitsMap$map$(_fn$3, _map$4);
        return $6446;
    };
    const Kind$Map$map = x0 => x1 => Kind$Map$map$(x0, x1);

    function Kind$Parser$case$build$(_vals$1, _wyth$2, _cses$3, _dflt$4, _moti$5) {
        var self = _vals$1;
        switch (self._) {
            case 'List.cons':
                var $6448 = self.head;
                var $6449 = self.tail;
                var _group$8 = Kind$Parser$case$group$(_dflt$4, _cses$3);
                var _name$9 = Pair$fst$($6448);
                var _expr$10 = Pair$snd$($6448);
                var _cses$11 = Kind$Map$map$((_cses$11 => {
                    var $6451 = Kind$Parser$case$build$($6449, _wyth$2, _cses$11, _dflt$4, _moti$5);
                    return $6451;
                }), _group$8);
                var $6450 = Kind$Term$cse$(Bits$e, _expr$10, _name$9, _wyth$2, _cses$11, _moti$5);
                var $6447 = $6450;
                break;
            case 'List.nil':
                var self = _cses$3;
                switch (self._) {
                    case 'List.cons':
                        var $6453 = self.head;
                        var $6454 = Pair$snd$($6453);
                        var $6452 = $6454;
                        break;
                    case 'List.nil':
                        var $6455 = Kind$Term$ref$("missing_case");
                        var $6452 = $6455;
                        break;
                };
                var $6447 = $6452;
                break;
        };
        return $6447;
    };
    const Kind$Parser$case$build = x0 => x1 => x2 => x3 => x4 => Kind$Parser$case$build$(x0, x1, x2, x3, x4);
    const Kind$Parser$case = Kind$Parser$block("case")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6457 = self.err;
                var _reply$7 = Kind$Parser$text$("case ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6459 = self.err;
                        var self = $6457;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6461 = self.value;
                                var $6462 = Parser$Reply$error$(Parser$Error$combine$($6461, $6459));
                                var $6460 = $6462;
                                break;
                            case 'Maybe.none':
                                var $6463 = Parser$Reply$error$($6459);
                                var $6460 = $6463;
                                break;
                        };
                        var $6458 = $6460;
                        break;
                    case 'Parser.Reply.value':
                        var $6464 = self.pst;
                        var self = $6464;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6466 = self.err;
                                var $6467 = self.nam;
                                var $6468 = self.ini;
                                var $6469 = self.idx;
                                var $6470 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6457, $6466), $6467, $6468, $6469, $6470);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6472 = self.err;
                                        var _reply$21 = Parser$many1$((_pst$21 => {
                                            var self = _pst$21;
                                            switch (self._) {
                                                case 'Parser.State.new':
                                                    var $6475 = self.err;
                                                    var _reply$27 = Parser$avoiding$(Kind$Parser$text("{"), Kind$Parser$term, _pst$21);
                                                    var self = _reply$27;
                                                    switch (self._) {
                                                        case 'Parser.Reply.error':
                                                            var $6477 = self.err;
                                                            var self = $6475;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $6479 = self.value;
                                                                    var $6480 = Parser$Reply$error$(Parser$Error$combine$($6479, $6477));
                                                                    var $6478 = $6480;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $6481 = Parser$Reply$error$($6477);
                                                                    var $6478 = $6481;
                                                                    break;
                                                            };
                                                            var $6476 = $6478;
                                                            break;
                                                        case 'Parser.Reply.value':
                                                            var $6482 = self.pst;
                                                            var $6483 = self.val;
                                                            var self = $6482;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $6485 = self.err;
                                                                    var $6486 = self.nam;
                                                                    var $6487 = self.ini;
                                                                    var $6488 = self.idx;
                                                                    var $6489 = self.str;
                                                                    var _reply$pst$35 = Parser$State$new$(Parser$Error$maybe_combine$($6475, $6485), $6486, $6487, $6488, $6489);
                                                                    var self = _reply$pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6491 = self.err;
                                                                            var _reply$41 = Parser$maybe$((_pst$41 => {
                                                                                var self = _pst$41;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6494 = self.err;
                                                                                        var _reply$47 = Kind$Parser$text$("as", _pst$41);
                                                                                        var self = _reply$47;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6496 = self.err;
                                                                                                var self = $6494;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6498 = self.value;
                                                                                                        var $6499 = Parser$Reply$error$(Parser$Error$combine$($6498, $6496));
                                                                                                        var $6497 = $6499;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6500 = Parser$Reply$error$($6496);
                                                                                                        var $6497 = $6500;
                                                                                                        break;
                                                                                                };
                                                                                                var $6495 = $6497;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6501 = self.pst;
                                                                                                var self = $6501;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6503 = self.err;
                                                                                                        var $6504 = self.nam;
                                                                                                        var $6505 = self.ini;
                                                                                                        var $6506 = self.idx;
                                                                                                        var $6507 = self.str;
                                                                                                        var _reply$pst$55 = Parser$State$new$(Parser$Error$maybe_combine$($6494, $6503), $6504, $6505, $6506, $6507);
                                                                                                        var self = _reply$pst$55;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6509 = self.err;
                                                                                                                var _reply$61 = Kind$Parser$name1$(_reply$pst$55);
                                                                                                                var self = _reply$61;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6511 = self.err;
                                                                                                                        var self = $6509;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6513 = self.value;
                                                                                                                                var $6514 = Parser$Reply$error$(Parser$Error$combine$($6513, $6511));
                                                                                                                                var $6512 = $6514;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6515 = Parser$Reply$error$($6511);
                                                                                                                                var $6512 = $6515;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6510 = $6512;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6516 = self.pst;
                                                                                                                        var $6517 = self.val;
                                                                                                                        var self = $6516;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6519 = self.err;
                                                                                                                                var $6520 = self.nam;
                                                                                                                                var $6521 = self.ini;
                                                                                                                                var $6522 = self.idx;
                                                                                                                                var $6523 = self.str;
                                                                                                                                var _reply$pst$69 = Parser$State$new$(Parser$Error$maybe_combine$($6509, $6519), $6520, $6521, $6522, $6523);
                                                                                                                                var self = _reply$pst$69;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6525 = self.err;
                                                                                                                                        var _reply$75 = Parser$maybe$(Kind$Parser$text(";"), _reply$pst$69);
                                                                                                                                        var self = _reply$75;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6527 = self.err;
                                                                                                                                                var self = $6525;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6529 = self.value;
                                                                                                                                                        var $6530 = Parser$Reply$error$(Parser$Error$combine$($6529, $6527));
                                                                                                                                                        var $6528 = $6530;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6531 = Parser$Reply$error$($6527);
                                                                                                                                                        var $6528 = $6531;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6526 = $6528;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6532 = self.pst;
                                                                                                                                                var self = $6532;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6534 = self.err;
                                                                                                                                                        var $6535 = self.nam;
                                                                                                                                                        var $6536 = self.ini;
                                                                                                                                                        var $6537 = self.idx;
                                                                                                                                                        var $6538 = self.str;
                                                                                                                                                        var _reply$pst$83 = Parser$State$new$(Parser$Error$maybe_combine$($6525, $6534), $6535, $6536, $6537, $6538);
                                                                                                                                                        var $6539 = Parser$Reply$value$(_reply$pst$83, $6517);
                                                                                                                                                        var $6533 = $6539;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6526 = $6533;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6524 = $6526;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6518 = $6524;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6510 = $6518;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6508 = $6510;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6502 = $6508;
                                                                                                        break;
                                                                                                };
                                                                                                var $6495 = $6502;
                                                                                                break;
                                                                                        };
                                                                                        var $6493 = $6495;
                                                                                        break;
                                                                                };
                                                                                return $6493;
                                                                            }), _reply$pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6540 = self.err;
                                                                                    var self = $6491;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6542 = self.value;
                                                                                            var $6543 = Parser$Reply$error$(Parser$Error$combine$($6542, $6540));
                                                                                            var $6541 = $6543;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6544 = Parser$Reply$error$($6540);
                                                                                            var $6541 = $6544;
                                                                                            break;
                                                                                    };
                                                                                    var $6492 = $6541;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6545 = self.pst;
                                                                                    var $6546 = self.val;
                                                                                    var self = $6545;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6548 = self.err;
                                                                                            var $6549 = self.nam;
                                                                                            var $6550 = self.ini;
                                                                                            var $6551 = self.idx;
                                                                                            var $6552 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6491, $6548), $6549, $6550, $6551, $6552);
                                                                                            var _name$50 = Maybe$default$($6546, Kind$Term$extract_name$($6483));
                                                                                            var $6553 = Parser$Reply$value$(_reply$pst$49, Pair$new$(_name$50, $6483));
                                                                                            var $6547 = $6553;
                                                                                            break;
                                                                                    };
                                                                                    var $6492 = $6547;
                                                                                    break;
                                                                            };
                                                                            var $6490 = $6492;
                                                                            break;
                                                                    };
                                                                    var $6484 = $6490;
                                                                    break;
                                                            };
                                                            var $6476 = $6484;
                                                            break;
                                                    };
                                                    var $6474 = $6476;
                                                    break;
                                            };
                                            return $6474;
                                        }), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6554 = self.err;
                                                var self = $6472;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6556 = self.value;
                                                        var $6557 = Parser$Reply$error$(Parser$Error$combine$($6556, $6554));
                                                        var $6555 = $6557;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6558 = Parser$Reply$error$($6554);
                                                        var $6555 = $6558;
                                                        break;
                                                };
                                                var $6473 = $6555;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6559 = self.pst;
                                                var $6560 = self.val;
                                                var self = $6559;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6562 = self.err;
                                                        var $6563 = self.nam;
                                                        var $6564 = self.ini;
                                                        var $6565 = self.idx;
                                                        var $6566 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6472, $6562), $6563, $6564, $6565, $6566);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6568 = self.err;
                                                                var _reply$35 = Kind$Parser$case$with(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6570 = self.err;
                                                                        var self = $6568;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6572 = self.value;
                                                                                var $6573 = Parser$Reply$error$(Parser$Error$combine$($6572, $6570));
                                                                                var $6571 = $6573;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6574 = Parser$Reply$error$($6570);
                                                                                var $6571 = $6574;
                                                                                break;
                                                                        };
                                                                        var $6569 = $6571;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6575 = self.pst;
                                                                        var $6576 = self.val;
                                                                        var self = $6575;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6578 = self.err;
                                                                                var $6579 = self.nam;
                                                                                var $6580 = self.ini;
                                                                                var $6581 = self.idx;
                                                                                var $6582 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6568, $6578), $6579, $6580, $6581, $6582);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6584 = self.err;
                                                                                        var _reply$49 = Kind$Parser$items$("{", Kind$Parser$case$case, "}")(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6586 = self.err;
                                                                                                var self = $6584;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6588 = self.value;
                                                                                                        var $6589 = Parser$Reply$error$(Parser$Error$combine$($6588, $6586));
                                                                                                        var $6587 = $6589;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6590 = Parser$Reply$error$($6586);
                                                                                                        var $6587 = $6590;
                                                                                                        break;
                                                                                                };
                                                                                                var $6585 = $6587;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6591 = self.pst;
                                                                                                var $6592 = self.val;
                                                                                                var self = $6591;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6594 = self.err;
                                                                                                        var $6595 = self.nam;
                                                                                                        var $6596 = self.ini;
                                                                                                        var $6597 = self.idx;
                                                                                                        var $6598 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6584, $6594), $6595, $6596, $6597, $6598);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6600 = self.err;
                                                                                                                var _reply$63 = Parser$maybe$(Kind$Parser$text("!"), _reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6602 = self.err;
                                                                                                                        var self = $6600;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6604 = self.value;
                                                                                                                                var $6605 = Parser$Reply$error$(Parser$Error$combine$($6604, $6602));
                                                                                                                                var $6603 = $6605;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6606 = Parser$Reply$error$($6602);
                                                                                                                                var $6603 = $6606;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6601 = $6603;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6607 = self.pst;
                                                                                                                        var $6608 = self.val;
                                                                                                                        var self = $6607;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6610 = self.err;
                                                                                                                                var $6611 = self.nam;
                                                                                                                                var $6612 = self.ini;
                                                                                                                                var $6613 = self.idx;
                                                                                                                                var $6614 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6600, $6610), $6611, $6612, $6613, $6614);
                                                                                                                                var self = _reply$pst$71;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $6616 = self.err;
                                                                                                                                        var _reply$77 = Parser$maybe$((_pst$77 => {
                                                                                                                                            var self = _pst$77;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $6619 = self.err;
                                                                                                                                                    var _reply$83 = Kind$Parser$text$("default", _pst$77);
                                                                                                                                                    var self = _reply$83;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $6621 = self.err;
                                                                                                                                                            var self = $6619;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $6623 = self.value;
                                                                                                                                                                    var $6624 = Parser$Reply$error$(Parser$Error$combine$($6623, $6621));
                                                                                                                                                                    var $6622 = $6624;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $6625 = Parser$Reply$error$($6621);
                                                                                                                                                                    var $6622 = $6625;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6620 = $6622;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $6626 = self.pst;
                                                                                                                                                            var self = $6626;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $6628 = self.err;
                                                                                                                                                                    var $6629 = self.nam;
                                                                                                                                                                    var $6630 = self.ini;
                                                                                                                                                                    var $6631 = self.idx;
                                                                                                                                                                    var $6632 = self.str;
                                                                                                                                                                    var _reply$pst$91 = Parser$State$new$(Parser$Error$maybe_combine$($6619, $6628), $6629, $6630, $6631, $6632);
                                                                                                                                                                    var self = _reply$pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6634 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$term(_reply$pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6636 = self.err;
                                                                                                                                                                                    var self = $6634;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6638 = self.value;
                                                                                                                                                                                            var $6639 = Parser$Reply$error$(Parser$Error$combine$($6638, $6636));
                                                                                                                                                                                            var $6637 = $6639;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6640 = Parser$Reply$error$($6636);
                                                                                                                                                                                            var $6637 = $6640;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6635 = $6637;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6641 = self.pst;
                                                                                                                                                                                    var $6642 = self.val;
                                                                                                                                                                                    var self = $6641;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6644 = self.err;
                                                                                                                                                                                            var $6645 = self.nam;
                                                                                                                                                                                            var $6646 = self.ini;
                                                                                                                                                                                            var $6647 = self.idx;
                                                                                                                                                                                            var $6648 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6634, $6644), $6645, $6646, $6647, $6648);
                                                                                                                                                                                            var $6649 = Parser$Reply$value$(_reply$pst$105, $6642);
                                                                                                                                                                                            var $6643 = $6649;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6635 = $6643;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6633 = $6635;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    var $6627 = $6633;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $6620 = $6627;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $6618 = $6620;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $6618;
                                                                                                                                        }), _reply$pst$71);
                                                                                                                                        var self = _reply$77;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $6650 = self.err;
                                                                                                                                                var self = $6616;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $6652 = self.value;
                                                                                                                                                        var $6653 = Parser$Reply$error$(Parser$Error$combine$($6652, $6650));
                                                                                                                                                        var $6651 = $6653;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $6654 = Parser$Reply$error$($6650);
                                                                                                                                                        var $6651 = $6654;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6617 = $6651;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $6655 = self.pst;
                                                                                                                                                var $6656 = self.val;
                                                                                                                                                var self = $6655;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $6658 = self.err;
                                                                                                                                                        var $6659 = self.nam;
                                                                                                                                                        var $6660 = self.ini;
                                                                                                                                                        var $6661 = self.idx;
                                                                                                                                                        var $6662 = self.str;
                                                                                                                                                        var _reply$pst$85 = Parser$State$new$(Parser$Error$maybe_combine$($6616, $6658), $6659, $6660, $6661, $6662);
                                                                                                                                                        var self = _reply$pst$85;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $6664 = self.err;
                                                                                                                                                                var _reply$91 = Parser$maybe$((_pst$91 => {
                                                                                                                                                                    var self = _pst$91;
                                                                                                                                                                    switch (self._) {
                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                            var $6667 = self.err;
                                                                                                                                                                            var _reply$97 = Kind$Parser$text$(":", _pst$91);
                                                                                                                                                                            var self = _reply$97;
                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                case 'Parser.Reply.error':
                                                                                                                                                                                    var $6669 = self.err;
                                                                                                                                                                                    var self = $6667;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Maybe.some':
                                                                                                                                                                                            var $6671 = self.value;
                                                                                                                                                                                            var $6672 = Parser$Reply$error$(Parser$Error$combine$($6671, $6669));
                                                                                                                                                                                            var $6670 = $6672;
                                                                                                                                                                                            break;
                                                                                                                                                                                        case 'Maybe.none':
                                                                                                                                                                                            var $6673 = Parser$Reply$error$($6669);
                                                                                                                                                                                            var $6670 = $6673;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6668 = $6670;
                                                                                                                                                                                    break;
                                                                                                                                                                                case 'Parser.Reply.value':
                                                                                                                                                                                    var $6674 = self.pst;
                                                                                                                                                                                    var self = $6674;
                                                                                                                                                                                    switch (self._) {
                                                                                                                                                                                        case 'Parser.State.new':
                                                                                                                                                                                            var $6676 = self.err;
                                                                                                                                                                                            var $6677 = self.nam;
                                                                                                                                                                                            var $6678 = self.ini;
                                                                                                                                                                                            var $6679 = self.idx;
                                                                                                                                                                                            var $6680 = self.str;
                                                                                                                                                                                            var _reply$pst$105 = Parser$State$new$(Parser$Error$maybe_combine$($6667, $6676), $6677, $6678, $6679, $6680);
                                                                                                                                                                                            var $6681 = Parser$append_error$(Kind$Parser$term, "\u{a}Inside motive.", _reply$pst$105);
                                                                                                                                                                                            var $6675 = $6681;
                                                                                                                                                                                            break;
                                                                                                                                                                                    };
                                                                                                                                                                                    var $6668 = $6675;
                                                                                                                                                                                    break;
                                                                                                                                                                            };
                                                                                                                                                                            var $6666 = $6668;
                                                                                                                                                                            break;
                                                                                                                                                                    };
                                                                                                                                                                    return $6666;
                                                                                                                                                                }), _reply$pst$85);
                                                                                                                                                                var self = _reply$91;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $6682 = self.err;
                                                                                                                                                                        var self = $6664;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $6684 = self.value;
                                                                                                                                                                                var $6685 = Parser$Reply$error$(Parser$Error$combine$($6684, $6682));
                                                                                                                                                                                var $6683 = $6685;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $6686 = Parser$Reply$error$($6682);
                                                                                                                                                                                var $6683 = $6686;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6665 = $6683;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $6687 = self.pst;
                                                                                                                                                                        var $6688 = self.val;
                                                                                                                                                                        var self = $6687;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $6690 = self.err;
                                                                                                                                                                                var $6691 = self.nam;
                                                                                                                                                                                var $6692 = self.ini;
                                                                                                                                                                                var $6693 = self.idx;
                                                                                                                                                                                var $6694 = self.str;
                                                                                                                                                                                var _reply$pst$99 = Parser$State$new$(Parser$Error$maybe_combine$($6664, $6690), $6691, $6692, $6693, $6694);
                                                                                                                                                                                var self = $6688;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                        var $6696 = self.value;
                                                                                                                                                                                        var $6697 = Maybe$some$($6696);
                                                                                                                                                                                        var _moti$100 = $6697;
                                                                                                                                                                                        break;
                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                        var self = $6608;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                                var $6699 = Maybe$some$(Kind$Term$hol$(Bits$e));
                                                                                                                                                                                                var $6698 = $6699;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                                var $6700 = Maybe$none;
                                                                                                                                                                                                var $6698 = $6700;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var _moti$100 = $6698;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $6695 = Parser$Reply$value$(_reply$pst$99, Kind$Parser$case$build$($6560, $6576, $6592, $6656, _moti$100));
                                                                                                                                                                                var $6689 = $6695;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $6665 = $6689;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $6663 = $6665;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $6657 = $6663;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $6617 = $6657;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $6615 = $6617;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $6609 = $6615;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6601 = $6609;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6599 = $6601;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6593 = $6599;
                                                                                                        break;
                                                                                                };
                                                                                                var $6585 = $6593;
                                                                                                break;
                                                                                        };
                                                                                        var $6583 = $6585;
                                                                                        break;
                                                                                };
                                                                                var $6577 = $6583;
                                                                                break;
                                                                        };
                                                                        var $6569 = $6577;
                                                                        break;
                                                                };
                                                                var $6567 = $6569;
                                                                break;
                                                        };
                                                        var $6561 = $6567;
                                                        break;
                                                };
                                                var $6473 = $6561;
                                                break;
                                        };
                                        var $6471 = $6473;
                                        break;
                                };
                                var $6465 = $6471;
                                break;
                        };
                        var $6458 = $6465;
                        break;
                };
                var $6456 = $6458;
                break;
        };
        return $6456;
    }));
    const Kind$Parser$without = Kind$Parser$block("without")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6702 = self.err;
                var _reply$7 = Kind$Parser$text$("without ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6704 = self.err;
                        var self = $6702;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6706 = self.value;
                                var $6707 = Parser$Reply$error$(Parser$Error$combine$($6706, $6704));
                                var $6705 = $6707;
                                break;
                            case 'Maybe.none':
                                var $6708 = Parser$Reply$error$($6704);
                                var $6705 = $6708;
                                break;
                        };
                        var $6703 = $6705;
                        break;
                    case 'Parser.Reply.value':
                        var $6709 = self.pst;
                        var self = $6709;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6711 = self.err;
                                var $6712 = self.nam;
                                var $6713 = self.ini;
                                var $6714 = self.idx;
                                var $6715 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6702, $6711), $6712, $6713, $6714, $6715);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6717 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6719 = self.err;
                                                var self = $6717;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6721 = self.value;
                                                        var $6722 = Parser$Reply$error$(Parser$Error$combine$($6721, $6719));
                                                        var $6720 = $6722;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6723 = Parser$Reply$error$($6719);
                                                        var $6720 = $6723;
                                                        break;
                                                };
                                                var $6718 = $6720;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6724 = self.pst;
                                                var $6725 = self.val;
                                                var self = $6724;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6727 = self.err;
                                                        var $6728 = self.nam;
                                                        var $6729 = self.ini;
                                                        var $6730 = self.idx;
                                                        var $6731 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6717, $6727), $6728, $6729, $6730, $6731);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6733 = self.err;
                                                                var _reply$35 = Kind$Parser$text$(":", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6735 = self.err;
                                                                        var self = $6733;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6737 = self.value;
                                                                                var $6738 = Parser$Reply$error$(Parser$Error$combine$($6737, $6735));
                                                                                var $6736 = $6738;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6739 = Parser$Reply$error$($6735);
                                                                                var $6736 = $6739;
                                                                                break;
                                                                        };
                                                                        var $6734 = $6736;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6740 = self.pst;
                                                                        var self = $6740;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6742 = self.err;
                                                                                var $6743 = self.nam;
                                                                                var $6744 = self.ini;
                                                                                var $6745 = self.idx;
                                                                                var $6746 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6733, $6742), $6743, $6744, $6745, $6746);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6748 = self.err;
                                                                                        var _reply$49 = Kind$Parser$term(_reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6750 = self.err;
                                                                                                var self = $6748;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6752 = self.value;
                                                                                                        var $6753 = Parser$Reply$error$(Parser$Error$combine$($6752, $6750));
                                                                                                        var $6751 = $6753;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6754 = Parser$Reply$error$($6750);
                                                                                                        var $6751 = $6754;
                                                                                                        break;
                                                                                                };
                                                                                                var $6749 = $6751;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6755 = self.pst;
                                                                                                var $6756 = self.val;
                                                                                                var self = $6755;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6758 = self.err;
                                                                                                        var $6759 = self.nam;
                                                                                                        var $6760 = self.ini;
                                                                                                        var $6761 = self.idx;
                                                                                                        var $6762 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6748, $6758), $6759, $6760, $6761, $6762);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6764 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6766 = self.err;
                                                                                                                        var self = $6764;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6768 = self.value;
                                                                                                                                var $6769 = Parser$Reply$error$(Parser$Error$combine$($6768, $6766));
                                                                                                                                var $6767 = $6769;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6770 = Parser$Reply$error$($6766);
                                                                                                                                var $6767 = $6770;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6765 = $6767;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6771 = self.pst;
                                                                                                                        var $6772 = self.val;
                                                                                                                        var self = $6771;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6774 = self.err;
                                                                                                                                var $6775 = self.nam;
                                                                                                                                var $6776 = self.ini;
                                                                                                                                var $6777 = self.idx;
                                                                                                                                var $6778 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6764, $6774), $6775, $6776, $6777, $6778);
                                                                                                                                var _term$72 = Kind$Term$ref$($6725);
                                                                                                                                var _term$73 = Kind$Term$app$(_term$72, Kind$Term$lam$("", (_x$73 => {
                                                                                                                                    var $6780 = Kind$Term$hol$(Bits$e);
                                                                                                                                    return $6780;
                                                                                                                                })));
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, $6756);
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, Kind$Term$lam$($6725, (_x$75 => {
                                                                                                                                    var $6781 = $6772;
                                                                                                                                    return $6781;
                                                                                                                                })));
                                                                                                                                var $6779 = Parser$Reply$value$(_reply$pst$71, _term$75);
                                                                                                                                var $6773 = $6779;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6765 = $6773;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6763 = $6765;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6757 = $6763;
                                                                                                        break;
                                                                                                };
                                                                                                var $6749 = $6757;
                                                                                                break;
                                                                                        };
                                                                                        var $6747 = $6749;
                                                                                        break;
                                                                                };
                                                                                var $6741 = $6747;
                                                                                break;
                                                                        };
                                                                        var $6734 = $6741;
                                                                        break;
                                                                };
                                                                var $6732 = $6734;
                                                                break;
                                                        };
                                                        var $6726 = $6732;
                                                        break;
                                                };
                                                var $6718 = $6726;
                                                break;
                                        };
                                        var $6716 = $6718;
                                        break;
                                };
                                var $6710 = $6716;
                                break;
                        };
                        var $6703 = $6710;
                        break;
                };
                var $6701 = $6703;
                break;
        };
        return $6701;
    }));

    function Kind$Parser$switch$case$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6783 = self.err;
                var _reply$7 = Kind$Parser$term(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6785 = self.err;
                        var self = $6783;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6787 = self.value;
                                var $6788 = Parser$Reply$error$(Parser$Error$combine$($6787, $6785));
                                var $6786 = $6788;
                                break;
                            case 'Maybe.none':
                                var $6789 = Parser$Reply$error$($6785);
                                var $6786 = $6789;
                                break;
                        };
                        var $6784 = $6786;
                        break;
                    case 'Parser.Reply.value':
                        var $6790 = self.pst;
                        var $6791 = self.val;
                        var self = $6790;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6793 = self.err;
                                var $6794 = self.nam;
                                var $6795 = self.ini;
                                var $6796 = self.idx;
                                var $6797 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6783, $6793), $6794, $6795, $6796, $6797);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6799 = self.err;
                                        var _reply$21 = Kind$Parser$text$(":", _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6801 = self.err;
                                                var self = $6799;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6803 = self.value;
                                                        var $6804 = Parser$Reply$error$(Parser$Error$combine$($6803, $6801));
                                                        var $6802 = $6804;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6805 = Parser$Reply$error$($6801);
                                                        var $6802 = $6805;
                                                        break;
                                                };
                                                var $6800 = $6802;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6806 = self.pst;
                                                var self = $6806;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6808 = self.err;
                                                        var $6809 = self.nam;
                                                        var $6810 = self.ini;
                                                        var $6811 = self.idx;
                                                        var $6812 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6799, $6808), $6809, $6810, $6811, $6812);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6814 = self.err;
                                                                var _reply$35 = Kind$Parser$term(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6816 = self.err;
                                                                        var self = $6814;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6818 = self.value;
                                                                                var $6819 = Parser$Reply$error$(Parser$Error$combine$($6818, $6816));
                                                                                var $6817 = $6819;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6820 = Parser$Reply$error$($6816);
                                                                                var $6817 = $6820;
                                                                                break;
                                                                        };
                                                                        var $6815 = $6817;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6821 = self.pst;
                                                                        var $6822 = self.val;
                                                                        var self = $6821;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6824 = self.err;
                                                                                var $6825 = self.nam;
                                                                                var $6826 = self.ini;
                                                                                var $6827 = self.idx;
                                                                                var $6828 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6814, $6824), $6825, $6826, $6827, $6828);
                                                                                var $6829 = Parser$Reply$value$(_reply$pst$43, Pair$new$($6791, $6822));
                                                                                var $6823 = $6829;
                                                                                break;
                                                                        };
                                                                        var $6815 = $6823;
                                                                        break;
                                                                };
                                                                var $6813 = $6815;
                                                                break;
                                                        };
                                                        var $6807 = $6813;
                                                        break;
                                                };
                                                var $6800 = $6807;
                                                break;
                                        };
                                        var $6798 = $6800;
                                        break;
                                };
                                var $6792 = $6798;
                                break;
                        };
                        var $6784 = $6792;
                        break;
                };
                var $6782 = $6784;
                break;
        };
        return $6782;
    };
    const Kind$Parser$switch$case = x0 => Kind$Parser$switch$case$(x0);
    const Kind$Parser$switch = Kind$Parser$block("switch")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6831 = self.err;
                var _reply$7 = Kind$Parser$text$("switch", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6833 = self.err;
                        var self = $6831;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6835 = self.value;
                                var $6836 = Parser$Reply$error$(Parser$Error$combine$($6835, $6833));
                                var $6834 = $6836;
                                break;
                            case 'Maybe.none':
                                var $6837 = Parser$Reply$error$($6833);
                                var $6834 = $6837;
                                break;
                        };
                        var $6832 = $6834;
                        break;
                    case 'Parser.Reply.value':
                        var $6838 = self.pst;
                        var self = $6838;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6840 = self.err;
                                var $6841 = self.nam;
                                var $6842 = self.ini;
                                var $6843 = self.idx;
                                var $6844 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6831, $6840), $6841, $6842, $6843, $6844);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6846 = self.err;
                                        var _reply$21 = Kind$Parser$term(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6848 = self.err;
                                                var self = $6846;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6850 = self.value;
                                                        var $6851 = Parser$Reply$error$(Parser$Error$combine$($6850, $6848));
                                                        var $6849 = $6851;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6852 = Parser$Reply$error$($6848);
                                                        var $6849 = $6852;
                                                        break;
                                                };
                                                var $6847 = $6849;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6853 = self.pst;
                                                var $6854 = self.val;
                                                var self = $6853;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6856 = self.err;
                                                        var $6857 = self.nam;
                                                        var $6858 = self.ini;
                                                        var $6859 = self.idx;
                                                        var $6860 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6846, $6856), $6857, $6858, $6859, $6860);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6862 = self.err;
                                                                var _reply$35 = Kind$Parser$items$("{", Kind$Parser$switch$case, "}")(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6864 = self.err;
                                                                        var self = $6862;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6866 = self.value;
                                                                                var $6867 = Parser$Reply$error$(Parser$Error$combine$($6866, $6864));
                                                                                var $6865 = $6867;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $6868 = Parser$Reply$error$($6864);
                                                                                var $6865 = $6868;
                                                                                break;
                                                                        };
                                                                        var $6863 = $6865;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $6869 = self.pst;
                                                                        var $6870 = self.val;
                                                                        var self = $6869;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $6872 = self.err;
                                                                                var $6873 = self.nam;
                                                                                var $6874 = self.ini;
                                                                                var $6875 = self.idx;
                                                                                var $6876 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6862, $6872), $6873, $6874, $6875, $6876);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $6878 = self.err;
                                                                                        var _reply$49 = Kind$Parser$text$("default", _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $6880 = self.err;
                                                                                                var self = $6878;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $6882 = self.value;
                                                                                                        var $6883 = Parser$Reply$error$(Parser$Error$combine$($6882, $6880));
                                                                                                        var $6881 = $6883;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $6884 = Parser$Reply$error$($6880);
                                                                                                        var $6881 = $6884;
                                                                                                        break;
                                                                                                };
                                                                                                var $6879 = $6881;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $6885 = self.pst;
                                                                                                var self = $6885;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $6887 = self.err;
                                                                                                        var $6888 = self.nam;
                                                                                                        var $6889 = self.ini;
                                                                                                        var $6890 = self.idx;
                                                                                                        var $6891 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($6878, $6887), $6888, $6889, $6890, $6891);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $6893 = self.err;
                                                                                                                var _reply$63 = Kind$Parser$term(_reply$pst$57);
                                                                                                                var self = _reply$63;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $6895 = self.err;
                                                                                                                        var self = $6893;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $6897 = self.value;
                                                                                                                                var $6898 = Parser$Reply$error$(Parser$Error$combine$($6897, $6895));
                                                                                                                                var $6896 = $6898;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $6899 = Parser$Reply$error$($6895);
                                                                                                                                var $6896 = $6899;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6894 = $6896;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $6900 = self.pst;
                                                                                                                        var $6901 = self.val;
                                                                                                                        var self = $6900;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $6903 = self.err;
                                                                                                                                var $6904 = self.nam;
                                                                                                                                var $6905 = self.ini;
                                                                                                                                var $6906 = self.idx;
                                                                                                                                var $6907 = self.str;
                                                                                                                                var _reply$pst$71 = Parser$State$new$(Parser$Error$maybe_combine$($6893, $6903), $6904, $6905, $6906, $6907);
                                                                                                                                var _term$72 = List$fold$($6870, $6901, (_cse$72 => _rest$73 => {
                                                                                                                                    var self = _cse$72;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Pair.new':
                                                                                                                                            var $6910 = self.fst;
                                                                                                                                            var $6911 = self.snd;
                                                                                                                                            var _term$76 = Kind$Term$app$($6854, $6910);
                                                                                                                                            var _term$77 = Kind$Term$app$(_term$76, Kind$Term$lam$("", (_x$77 => {
                                                                                                                                                var $6913 = Kind$Term$hol$(Bits$e);
                                                                                                                                                return $6913;
                                                                                                                                            })));
                                                                                                                                            var _term$78 = Kind$Term$app$(_term$77, $6911);
                                                                                                                                            var _term$79 = Kind$Term$app$(_term$78, _rest$73);
                                                                                                                                            var $6912 = _term$79;
                                                                                                                                            var $6909 = $6912;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    return $6909;
                                                                                                                                }));
                                                                                                                                var $6908 = Parser$Reply$value$(_reply$pst$71, _term$72);
                                                                                                                                var $6902 = $6908;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $6894 = $6902;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $6892 = $6894;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $6886 = $6892;
                                                                                                        break;
                                                                                                };
                                                                                                var $6879 = $6886;
                                                                                                break;
                                                                                        };
                                                                                        var $6877 = $6879;
                                                                                        break;
                                                                                };
                                                                                var $6871 = $6877;
                                                                                break;
                                                                        };
                                                                        var $6863 = $6871;
                                                                        break;
                                                                };
                                                                var $6861 = $6863;
                                                                break;
                                                        };
                                                        var $6855 = $6861;
                                                        break;
                                                };
                                                var $6847 = $6855;
                                                break;
                                        };
                                        var $6845 = $6847;
                                        break;
                                };
                                var $6839 = $6845;
                                break;
                        };
                        var $6832 = $6839;
                        break;
                };
                var $6830 = $6832;
                break;
        };
        return $6830;
    }));

    function Bits$tail$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $6915 = self.slice(0, -1);
                var $6916 = $6915;
                var $6914 = $6916;
                break;
            case 'i':
                var $6917 = self.slice(0, -1);
                var $6918 = $6917;
                var $6914 = $6918;
                break;
            case 'e':
                var $6919 = Bits$e;
                var $6914 = $6919;
                break;
        };
        return $6914;
    };
    const Bits$tail = x0 => Bits$tail$(x0);

    function Bits$inc$(_a$1) {
        var self = _a$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $6921 = self.slice(0, -1);
                var $6922 = ($6921 + '1');
                var $6920 = $6922;
                break;
            case 'i':
                var $6923 = self.slice(0, -1);
                var $6924 = (Bits$inc$($6923) + '0');
                var $6920 = $6924;
                break;
            case 'e':
                var $6925 = (Bits$e + '1');
                var $6920 = $6925;
                break;
        };
        return $6920;
    };
    const Bits$inc = x0 => Bits$inc$(x0);
    const Nat$to_bits = a0 => (nat_to_bits(a0));

    function Maybe$is_some$(_m$2) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.none':
                var $6927 = Bool$false;
                var $6926 = $6927;
                break;
            case 'Maybe.some':
                var $6928 = Bool$true;
                var $6926 = $6928;
                break;
        };
        return $6926;
    };
    const Maybe$is_some = x0 => Maybe$is_some$(x0);

    function Kind$Term$gol$(_name$1, _dref$2, _verb$3) {
        var $6929 = ({
            _: 'Kind.Term.gol',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3
        });
        return $6929;
    };
    const Kind$Term$gol = x0 => x1 => x2 => Kind$Term$gol$(x0, x1, x2);
    const Kind$Parser$goal = Kind$Parser$block("goal")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $6931 = self.err;
                var _reply$7 = Kind$Parser$text$("?", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $6933 = self.err;
                        var self = $6931;
                        switch (self._) {
                            case 'Maybe.some':
                                var $6935 = self.value;
                                var $6936 = Parser$Reply$error$(Parser$Error$combine$($6935, $6933));
                                var $6934 = $6936;
                                break;
                            case 'Maybe.none':
                                var $6937 = Parser$Reply$error$($6933);
                                var $6934 = $6937;
                                break;
                        };
                        var $6932 = $6934;
                        break;
                    case 'Parser.Reply.value':
                        var $6938 = self.pst;
                        var self = $6938;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $6940 = self.err;
                                var $6941 = self.nam;
                                var $6942 = self.ini;
                                var $6943 = self.idx;
                                var $6944 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($6931, $6940), $6941, $6942, $6943, $6944);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $6946 = self.err;
                                        var _reply$21 = Kind$Parser$name$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $6948 = self.err;
                                                var self = $6946;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $6950 = self.value;
                                                        var $6951 = Parser$Reply$error$(Parser$Error$combine$($6950, $6948));
                                                        var $6949 = $6951;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $6952 = Parser$Reply$error$($6948);
                                                        var $6949 = $6952;
                                                        break;
                                                };
                                                var $6947 = $6949;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $6953 = self.pst;
                                                var $6954 = self.val;
                                                var self = $6953;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $6956 = self.err;
                                                        var $6957 = self.nam;
                                                        var $6958 = self.ini;
                                                        var $6959 = self.idx;
                                                        var $6960 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($6946, $6956), $6957, $6958, $6959, $6960);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $6962 = self.err;
                                                                var _reply$35 = Parser$many$((_pst$35 => {
                                                                    var self = _pst$35;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $6965 = self.err;
                                                                            var _reply$41 = Kind$Parser$text$("-", _pst$35);
                                                                            var self = _reply$41;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $6967 = self.err;
                                                                                    var self = $6965;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $6969 = self.value;
                                                                                            var $6970 = Parser$Reply$error$(Parser$Error$combine$($6969, $6967));
                                                                                            var $6968 = $6970;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $6971 = Parser$Reply$error$($6967);
                                                                                            var $6968 = $6971;
                                                                                            break;
                                                                                    };
                                                                                    var $6966 = $6968;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $6972 = self.pst;
                                                                                    var self = $6972;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $6974 = self.err;
                                                                                            var $6975 = self.nam;
                                                                                            var $6976 = self.ini;
                                                                                            var $6977 = self.idx;
                                                                                            var $6978 = self.str;
                                                                                            var _reply$pst$49 = Parser$State$new$(Parser$Error$maybe_combine$($6965, $6974), $6975, $6976, $6977, $6978);
                                                                                            var self = _reply$pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $6980 = self.err;
                                                                                                    var _reply$55 = Parser$nat$(_reply$pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $6982 = self.err;
                                                                                                            var self = $6980;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $6984 = self.value;
                                                                                                                    var $6985 = Parser$Reply$error$(Parser$Error$combine$($6984, $6982));
                                                                                                                    var $6983 = $6985;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $6986 = Parser$Reply$error$($6982);
                                                                                                                    var $6983 = $6986;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6981 = $6983;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $6987 = self.pst;
                                                                                                            var $6988 = self.val;
                                                                                                            var self = $6987;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $6990 = self.err;
                                                                                                                    var $6991 = self.nam;
                                                                                                                    var $6992 = self.ini;
                                                                                                                    var $6993 = self.idx;
                                                                                                                    var $6994 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($6980, $6990), $6991, $6992, $6993, $6994);
                                                                                                                    var _bits$64 = Bits$reverse$(Bits$tail$(Bits$reverse$((nat_to_bits($6988)))));
                                                                                                                    var $6995 = Parser$Reply$value$(_reply$pst$63, _bits$64);
                                                                                                                    var $6989 = $6995;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $6981 = $6989;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $6979 = $6981;
                                                                                                    break;
                                                                                            };
                                                                                            var $6973 = $6979;
                                                                                            break;
                                                                                    };
                                                                                    var $6966 = $6973;
                                                                                    break;
                                                                            };
                                                                            var $6964 = $6966;
                                                                            break;
                                                                    };
                                                                    return $6964;
                                                                }))(_reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $6996 = self.err;
                                                                        var self = $6962;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $6998 = self.value;
                                                                                var $6999 = Parser$Reply$error$(Parser$Error$combine$($6998, $6996));
                                                                                var $6997 = $6999;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7000 = Parser$Reply$error$($6996);
                                                                                var $6997 = $7000;
                                                                                break;
                                                                        };
                                                                        var $6963 = $6997;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7001 = self.pst;
                                                                        var $7002 = self.val;
                                                                        var self = $7001;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7004 = self.err;
                                                                                var $7005 = self.nam;
                                                                                var $7006 = self.ini;
                                                                                var $7007 = self.idx;
                                                                                var $7008 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($6962, $7004), $7005, $7006, $7007, $7008);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7010 = self.err;
                                                                                        var self = _reply$pst$43;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7012 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$text("-"), _reply$pst$43);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7014 = self.err;
                                                                                                        var self = $7012;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7016 = self.value;
                                                                                                                var $7017 = Parser$Reply$error$(Parser$Error$combine$($7016, $7014));
                                                                                                                var $7015 = $7017;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7018 = Parser$Reply$error$($7014);
                                                                                                                var $7015 = $7018;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7013 = $7015;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7019 = self.pst;
                                                                                                        var $7020 = self.val;
                                                                                                        var self = $7019;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7022 = self.err;
                                                                                                                var $7023 = self.nam;
                                                                                                                var $7024 = self.ini;
                                                                                                                var $7025 = self.idx;
                                                                                                                var $7026 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7012, $7022), $7023, $7024, $7025, $7026);
                                                                                                                var $7027 = Parser$Reply$value$(_reply$pst$62, Maybe$is_some$($7020));
                                                                                                                var $7021 = $7027;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7013 = $7021;
                                                                                                        break;
                                                                                                };
                                                                                                var _reply$49 = $7013;
                                                                                                break;
                                                                                        };
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7028 = self.err;
                                                                                                var self = $7010;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7030 = self.value;
                                                                                                        var $7031 = Parser$Reply$error$(Parser$Error$combine$($7030, $7028));
                                                                                                        var $7029 = $7031;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7032 = Parser$Reply$error$($7028);
                                                                                                        var $7029 = $7032;
                                                                                                        break;
                                                                                                };
                                                                                                var $7011 = $7029;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7033 = self.pst;
                                                                                                var $7034 = self.val;
                                                                                                var self = $7033;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7036 = self.err;
                                                                                                        var $7037 = self.nam;
                                                                                                        var $7038 = self.ini;
                                                                                                        var $7039 = self.idx;
                                                                                                        var $7040 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($7010, $7036), $7037, $7038, $7039, $7040);
                                                                                                        var $7041 = Parser$Reply$value$(_reply$pst$57, Kind$Term$gol$($6954, $7002, $7034));
                                                                                                        var $7035 = $7041;
                                                                                                        break;
                                                                                                };
                                                                                                var $7011 = $7035;
                                                                                                break;
                                                                                        };
                                                                                        var $7009 = $7011;
                                                                                        break;
                                                                                };
                                                                                var $7003 = $7009;
                                                                                break;
                                                                        };
                                                                        var $6963 = $7003;
                                                                        break;
                                                                };
                                                                var $6961 = $6963;
                                                                break;
                                                        };
                                                        var $6955 = $6961;
                                                        break;
                                                };
                                                var $6947 = $6955;
                                                break;
                                        };
                                        var $6945 = $6947;
                                        break;
                                };
                                var $6939 = $6945;
                                break;
                        };
                        var $6932 = $6939;
                        break;
                };
                var $6930 = $6932;
                break;
        };
        return $6930;
    }));
    const Kind$Parser$hole = Kind$Parser$block("hole")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7043 = self.err;
                var _reply$7 = Kind$Parser$text$("_", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7045 = self.err;
                        var self = $7043;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7047 = self.value;
                                var $7048 = Parser$Reply$error$(Parser$Error$combine$($7047, $7045));
                                var $7046 = $7048;
                                break;
                            case 'Maybe.none':
                                var $7049 = Parser$Reply$error$($7045);
                                var $7046 = $7049;
                                break;
                        };
                        var $7044 = $7046;
                        break;
                    case 'Parser.Reply.value':
                        var $7050 = self.pst;
                        var self = $7050;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7052 = self.err;
                                var $7053 = self.nam;
                                var $7054 = self.ini;
                                var $7055 = self.idx;
                                var $7056 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7043, $7052), $7053, $7054, $7055, $7056);
                                var $7057 = Parser$Reply$value$(_reply$pst$15, Kind$Term$hol$(Bits$e));
                                var $7051 = $7057;
                                break;
                        };
                        var $7044 = $7051;
                        break;
                };
                var $7042 = $7044;
                break;
        };
        return $7042;
    }));

    function Kind$Parser$float$sign$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7059 = self.nam;
                var $7060 = self.ini;
                var $7061 = self.idx;
                var $7062 = self.str;
                var self = $7062;
                if (self.length === 0) {
                    var $7064 = Parser$Reply$fail$($7059, $7060, $7061, "Expected \'+\' or \'-\'.");
                    var $7063 = $7064;
                } else {
                    var $7065 = self.charCodeAt(0);
                    var $7066 = self.slice(1);
                    var self = (($7065 === 43) || ($7065 === 45));
                    if (self) {
                        var $7068 = Parser$Reply$value$(_pst$1, $7065);
                        var $7067 = $7068;
                    } else {
                        var $7069 = Parser$Reply$fail$($7059, $7060, $7061, "Expected \'+\' ou \'-\'.");
                        var $7067 = $7069;
                    };
                    var $7063 = $7067;
                };
                var $7058 = $7063;
                break;
        };
        return $7058;
    };
    const Kind$Parser$float$sign = x0 => Kind$Parser$float$sign$(x0);

    function List$any$(_cond$2, _list$3) {
        var List$any$ = (_cond$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_cond$2, _list$3]
        });
        var List$any = _cond$2 => _list$3 => List$any$(_cond$2, _list$3);
        var arg = [_cond$2, _list$3];
        while (true) {
            let [_cond$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7070 = self.head;
                        var $7071 = self.tail;
                        var self = _cond$2($7070);
                        if (self) {
                            var $7073 = Bool$true;
                            var $7072 = $7073;
                        } else {
                            var $7074 = List$any$(_cond$2, $7071);
                            var $7072 = $7074;
                        };
                        return $7072;
                    case 'List.nil':
                        var $7075 = Bool$false;
                        return $7075;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$any = x0 => x1 => List$any$(x0, x1);

    function Kind$Parser$float$str_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7077 = self.err;
                var $7078 = self.nam;
                var $7079 = self.ini;
                var $7080 = self.idx;
                var $7081 = self.str;
                var self = $7081;
                if (self.length === 0) {
                    var $7083 = Parser$Reply$fail$($7078, $7079, $7080, "Not a digit.");
                    var $7082 = $7083;
                } else {
                    var $7084 = self.charCodeAt(0);
                    var $7085 = self.slice(1);
                    var _digits$9 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$nil)))))))))));
                    var _pst$10 = Parser$State$new$($7077, $7078, $7079, Nat$succ$($7080), $7085);
                    var self = List$any$(a1 => ($7084 === a1), _digits$9);
                    if (self) {
                        var $7087 = Parser$Reply$value$(_pst$10, $7084);
                        var $7086 = $7087;
                    } else {
                        var $7088 = Parser$Reply$fail$($7078, $7079, $7080, "Not a digit.");
                        var $7086 = $7088;
                    };
                    var $7082 = $7086;
                };
                var $7076 = $7082;
                break;
        };
        return $7076;
    };
    const Kind$Parser$float$str_digit = x0 => Kind$Parser$float$str_digit$(x0);

    function String$from_list$(_xs$1) {
        var self = _xs$1;
        switch (self._) {
            case 'List.cons':
                var $7090 = self.head;
                var $7091 = self.tail;
                var $7092 = String$cons$($7090, String$from_list$($7091));
                var $7089 = $7092;
                break;
            case 'List.nil':
                var $7093 = String$nil;
                var $7089 = $7093;
                break;
        };
        return $7089;
    };
    const String$from_list = x0 => String$from_list$(x0);
    const Kind$Parser$float$64 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7095 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7097 = self.err;
                        var self = $7095;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7099 = self.value;
                                var $7100 = Parser$Reply$error$(Parser$Error$combine$($7099, $7097));
                                var $7098 = $7100;
                                break;
                            case 'Maybe.none':
                                var $7101 = Parser$Reply$error$($7097);
                                var $7098 = $7101;
                                break;
                        };
                        var $7096 = $7098;
                        break;
                    case 'Parser.Reply.value':
                        var $7102 = self.pst;
                        var $7103 = self.val;
                        var self = $7102;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7105 = self.err;
                                var $7106 = self.nam;
                                var $7107 = self.ini;
                                var $7108 = self.idx;
                                var $7109 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7095, $7105), $7106, $7107, $7108, $7109);
                                var _sign$16 = Maybe$default$($7103, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7111 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7113 = self.err;
                                                var self = $7111;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7115 = self.value;
                                                        var $7116 = Parser$Reply$error$(Parser$Error$combine$($7115, $7113));
                                                        var $7114 = $7116;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7117 = Parser$Reply$error$($7113);
                                                        var $7114 = $7117;
                                                        break;
                                                };
                                                var $7112 = $7114;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7118 = self.pst;
                                                var $7119 = self.val;
                                                var self = $7118;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7121 = self.err;
                                                        var $7122 = self.nam;
                                                        var $7123 = self.ini;
                                                        var $7124 = self.idx;
                                                        var $7125 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7111, $7121), $7122, $7123, $7124, $7125);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7127 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7129 = self.err;
                                                                        var self = $7127;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7131 = self.value;
                                                                                var $7132 = Parser$Reply$error$(Parser$Error$combine$($7131, $7129));
                                                                                var $7130 = $7132;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7133 = Parser$Reply$error$($7129);
                                                                                var $7130 = $7133;
                                                                                break;
                                                                        };
                                                                        var $7128 = $7130;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7134 = self.pst;
                                                                        var self = $7134;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7136 = self.err;
                                                                                var $7137 = self.nam;
                                                                                var $7138 = self.ini;
                                                                                var $7139 = self.idx;
                                                                                var $7140 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7127, $7136), $7137, $7138, $7139, $7140);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7142 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7144 = self.err;
                                                                                                var self = $7142;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7146 = self.value;
                                                                                                        var $7147 = Parser$Reply$error$(Parser$Error$combine$($7146, $7144));
                                                                                                        var $7145 = $7147;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7148 = Parser$Reply$error$($7144);
                                                                                                        var $7145 = $7148;
                                                                                                        break;
                                                                                                };
                                                                                                var $7143 = $7145;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7149 = self.pst;
                                                                                                var $7150 = self.val;
                                                                                                var self = $7149;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7152 = self.err;
                                                                                                        var $7153 = self.nam;
                                                                                                        var $7154 = self.ini;
                                                                                                        var $7155 = self.idx;
                                                                                                        var $7156 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7142, $7152), $7153, $7154, $7155, $7156);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7158 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#64", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7160 = self.err;
                                                                                                                        var self = $7158;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7162 = self.value;
                                                                                                                                var $7163 = Parser$Reply$error$(Parser$Error$combine$($7162, $7160));
                                                                                                                                var $7161 = $7163;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7164 = Parser$Reply$error$($7160);
                                                                                                                                var $7161 = $7164;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7159 = $7161;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7165 = self.pst;
                                                                                                                        var self = $7165;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7167 = self.err;
                                                                                                                                var $7168 = self.nam;
                                                                                                                                var $7169 = self.ini;
                                                                                                                                var $7170 = self.idx;
                                                                                                                                var $7171 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7158, $7167), $7168, $7169, $7170, $7171);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7119)) + ("." + String$from_list$($7150))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F64.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7172 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7166 = $7172;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7159 = $7166;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7157 = $7159;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7151 = $7157;
                                                                                                        break;
                                                                                                };
                                                                                                var $7143 = $7151;
                                                                                                break;
                                                                                        };
                                                                                        var $7141 = $7143;
                                                                                        break;
                                                                                };
                                                                                var $7135 = $7141;
                                                                                break;
                                                                        };
                                                                        var $7128 = $7135;
                                                                        break;
                                                                };
                                                                var $7126 = $7128;
                                                                break;
                                                        };
                                                        var $7120 = $7126;
                                                        break;
                                                };
                                                var $7112 = $7120;
                                                break;
                                        };
                                        var $7110 = $7112;
                                        break;
                                };
                                var $7104 = $7110;
                                break;
                        };
                        var $7096 = $7104;
                        break;
                };
                var $7094 = $7096;
                break;
        };
        return $7094;
    }));
    const Kind$Parser$float$32 = Kind$Parser$block("float")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7174 = self.err;
                var _reply$7 = Parser$maybe$(Kind$Parser$float$sign, _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7176 = self.err;
                        var self = $7174;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7178 = self.value;
                                var $7179 = Parser$Reply$error$(Parser$Error$combine$($7178, $7176));
                                var $7177 = $7179;
                                break;
                            case 'Maybe.none':
                                var $7180 = Parser$Reply$error$($7176);
                                var $7177 = $7180;
                                break;
                        };
                        var $7175 = $7177;
                        break;
                    case 'Parser.Reply.value':
                        var $7181 = self.pst;
                        var $7182 = self.val;
                        var self = $7181;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7184 = self.err;
                                var $7185 = self.nam;
                                var $7186 = self.ini;
                                var $7187 = self.idx;
                                var $7188 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7174, $7184), $7185, $7186, $7187, $7188);
                                var _sign$16 = Maybe$default$($7182, 43);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7190 = self.err;
                                        var _reply$22 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$15);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7192 = self.err;
                                                var self = $7190;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7194 = self.value;
                                                        var $7195 = Parser$Reply$error$(Parser$Error$combine$($7194, $7192));
                                                        var $7193 = $7195;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7196 = Parser$Reply$error$($7192);
                                                        var $7193 = $7196;
                                                        break;
                                                };
                                                var $7191 = $7193;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7197 = self.pst;
                                                var $7198 = self.val;
                                                var self = $7197;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7200 = self.err;
                                                        var $7201 = self.nam;
                                                        var $7202 = self.ini;
                                                        var $7203 = self.idx;
                                                        var $7204 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($7190, $7200), $7201, $7202, $7203, $7204);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7206 = self.err;
                                                                var _reply$36 = Parser$text$(".", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7208 = self.err;
                                                                        var self = $7206;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7210 = self.value;
                                                                                var $7211 = Parser$Reply$error$(Parser$Error$combine$($7210, $7208));
                                                                                var $7209 = $7211;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7212 = Parser$Reply$error$($7208);
                                                                                var $7209 = $7212;
                                                                                break;
                                                                        };
                                                                        var $7207 = $7209;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7213 = self.pst;
                                                                        var self = $7213;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7215 = self.err;
                                                                                var $7216 = self.nam;
                                                                                var $7217 = self.ini;
                                                                                var $7218 = self.idx;
                                                                                var $7219 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($7206, $7215), $7216, $7217, $7218, $7219);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7221 = self.err;
                                                                                        var _reply$50 = Parser$many1$(Kind$Parser$float$str_digit, _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $7223 = self.err;
                                                                                                var self = $7221;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $7225 = self.value;
                                                                                                        var $7226 = Parser$Reply$error$(Parser$Error$combine$($7225, $7223));
                                                                                                        var $7224 = $7226;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $7227 = Parser$Reply$error$($7223);
                                                                                                        var $7224 = $7227;
                                                                                                        break;
                                                                                                };
                                                                                                var $7222 = $7224;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $7228 = self.pst;
                                                                                                var $7229 = self.val;
                                                                                                var self = $7228;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $7231 = self.err;
                                                                                                        var $7232 = self.nam;
                                                                                                        var $7233 = self.ini;
                                                                                                        var $7234 = self.idx;
                                                                                                        var $7235 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($7221, $7231), $7232, $7233, $7234, $7235);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7237 = self.err;
                                                                                                                var _reply$64 = Parser$text$("#32", _reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $7239 = self.err;
                                                                                                                        var self = $7237;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $7241 = self.value;
                                                                                                                                var $7242 = Parser$Reply$error$(Parser$Error$combine$($7241, $7239));
                                                                                                                                var $7240 = $7242;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $7243 = Parser$Reply$error$($7239);
                                                                                                                                var $7240 = $7243;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7238 = $7240;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $7244 = self.pst;
                                                                                                                        var self = $7244;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $7246 = self.err;
                                                                                                                                var $7247 = self.nam;
                                                                                                                                var $7248 = self.ini;
                                                                                                                                var $7249 = self.idx;
                                                                                                                                var $7250 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($7237, $7246), $7247, $7248, $7249, $7250);
                                                                                                                                var _float_str$73 = Kind$Term$str$((String$cons$(_sign$16, String$from_list$($7198)) + ("." + String$from_list$($7229))));
                                                                                                                                var _conv$74 = Kind$Term$ref$("F32.parse");
                                                                                                                                var _term$75 = Kind$Term$app$(_conv$74, _float_str$73);
                                                                                                                                var $7251 = Parser$Reply$value$(_reply$pst$72, _term$75);
                                                                                                                                var $7245 = $7251;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $7238 = $7245;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $7236 = $7238;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7230 = $7236;
                                                                                                        break;
                                                                                                };
                                                                                                var $7222 = $7230;
                                                                                                break;
                                                                                        };
                                                                                        var $7220 = $7222;
                                                                                        break;
                                                                                };
                                                                                var $7214 = $7220;
                                                                                break;
                                                                        };
                                                                        var $7207 = $7214;
                                                                        break;
                                                                };
                                                                var $7205 = $7207;
                                                                break;
                                                        };
                                                        var $7199 = $7205;
                                                        break;
                                                };
                                                var $7191 = $7199;
                                                break;
                                        };
                                        var $7189 = $7191;
                                        break;
                                };
                                var $7183 = $7189;
                                break;
                        };
                        var $7175 = $7183;
                        break;
                };
                var $7173 = $7175;
                break;
        };
        return $7173;
    }));

    function Either$(_A$1, _B$2) {
        var $7252 = null;
        return $7252;
    };
    const Either = x0 => x1 => Either$(x0, x1);

    function Either$left$(_value$3) {
        var $7253 = ({
            _: 'Either.left',
            'value': _value$3
        });
        return $7253;
    };
    const Either$left = x0 => Either$left$(x0);

    function Either$right$(_value$3) {
        var $7254 = ({
            _: 'Either.right',
            'value': _value$3
        });
        return $7254;
    };
    const Either$right = x0 => Either$right$(x0);

    function Nat$sub_rem$(_n$1, _m$2) {
        var Nat$sub_rem$ = (_n$1, _m$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2]
        });
        var Nat$sub_rem = _n$1 => _m$2 => Nat$sub_rem$(_n$1, _m$2);
        var arg = [_n$1, _m$2];
        while (true) {
            let [_n$1, _m$2] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7255 = Either$left$(_n$1);
                    return $7255;
                } else {
                    var $7256 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7258 = Either$right$(Nat$succ$($7256));
                        var $7257 = $7258;
                    } else {
                        var $7259 = (self - 1n);
                        var $7260 = Nat$sub_rem$($7259, $7256);
                        var $7257 = $7260;
                    };
                    return $7257;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$sub_rem = x0 => x1 => Nat$sub_rem$(x0, x1);

    function Nat$div_mod$go$(_n$1, _m$2, _d$3) {
        var Nat$div_mod$go$ = (_n$1, _m$2, _d$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _d$3]
        });
        var Nat$div_mod$go = _n$1 => _m$2 => _d$3 => Nat$div_mod$go$(_n$1, _m$2, _d$3);
        var arg = [_n$1, _m$2, _d$3];
        while (true) {
            let [_n$1, _m$2, _d$3] = arg;
            var R = (() => {
                var self = Nat$sub_rem$(_n$1, _m$2);
                switch (self._) {
                    case 'Either.left':
                        var $7261 = self.value;
                        var $7262 = Nat$div_mod$go$($7261, _m$2, Nat$succ$(_d$3));
                        return $7262;
                    case 'Either.right':
                        var $7263 = Pair$new$(_d$3, _n$1);
                        return $7263;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$div_mod$go = x0 => x1 => x2 => Nat$div_mod$go$(x0, x1, x2);
    const Nat$div_mod = a0 => a1 => (({
        _: 'Pair.new',
        'fst': a0 / a1,
        'snd': a0 % a1
    }));

    function Nat$to_base$go$(_base$1, _nat$2, _res$3) {
        var Nat$to_base$go$ = (_base$1, _nat$2, _res$3) => ({
            ctr: 'TCO',
            arg: [_base$1, _nat$2, _res$3]
        });
        var Nat$to_base$go = _base$1 => _nat$2 => _res$3 => Nat$to_base$go$(_base$1, _nat$2, _res$3);
        var arg = [_base$1, _nat$2, _res$3];
        while (true) {
            let [_base$1, _nat$2, _res$3] = arg;
            var R = (() => {
                var self = (({
                    _: 'Pair.new',
                    'fst': _nat$2 / _base$1,
                    'snd': _nat$2 % _base$1
                }));
                switch (self._) {
                    case 'Pair.new':
                        var $7264 = self.fst;
                        var $7265 = self.snd;
                        var self = $7264;
                        if (self === 0n) {
                            var $7267 = List$cons$($7265, _res$3);
                            var $7266 = $7267;
                        } else {
                            var $7268 = (self - 1n);
                            var $7269 = Nat$to_base$go$(_base$1, $7264, List$cons$($7265, _res$3));
                            var $7266 = $7269;
                        };
                        return $7266;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$to_base$go = x0 => x1 => x2 => Nat$to_base$go$(x0, x1, x2);

    function Nat$to_base$(_base$1, _nat$2) {
        var $7270 = Nat$to_base$go$(_base$1, _nat$2, List$nil);
        return $7270;
    };
    const Nat$to_base = x0 => x1 => Nat$to_base$(x0, x1);

    function Nat$mod$go$(_n$1, _m$2, _r$3) {
        var Nat$mod$go$ = (_n$1, _m$2, _r$3) => ({
            ctr: 'TCO',
            arg: [_n$1, _m$2, _r$3]
        });
        var Nat$mod$go = _n$1 => _m$2 => _r$3 => Nat$mod$go$(_n$1, _m$2, _r$3);
        var arg = [_n$1, _m$2, _r$3];
        while (true) {
            let [_n$1, _m$2, _r$3] = arg;
            var R = (() => {
                var self = _m$2;
                if (self === 0n) {
                    var $7271 = Nat$mod$go$(_n$1, _r$3, _m$2);
                    return $7271;
                } else {
                    var $7272 = (self - 1n);
                    var self = _n$1;
                    if (self === 0n) {
                        var $7274 = _r$3;
                        var $7273 = $7274;
                    } else {
                        var $7275 = (self - 1n);
                        var $7276 = Nat$mod$go$($7275, $7272, Nat$succ$(_r$3));
                        var $7273 = $7276;
                    };
                    return $7273;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$mod$go = x0 => x1 => x2 => Nat$mod$go$(x0, x1, x2);
    const Nat$mod = a0 => a1 => (a0 % a1);
    const Nat$lte = a0 => a1 => (a0 <= a1);

    function List$at$(_index$2, _list$3) {
        var List$at$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$at = _index$2 => _list$3 => List$at$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $7277 = self.head;
                        var $7278 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $7280 = Maybe$some$($7277);
                            var $7279 = $7280;
                        } else {
                            var $7281 = (self - 1n);
                            var $7282 = List$at$($7281, $7278);
                            var $7279 = $7282;
                        };
                        return $7279;
                    case 'List.nil':
                        var $7283 = Maybe$none;
                        return $7283;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$at = x0 => x1 => List$at$(x0, x1);

    function Nat$show_digit$(_base$1, _n$2) {
        var _m$3 = (_n$2 % _base$1);
        var _base64$4 = List$cons$(48, List$cons$(49, List$cons$(50, List$cons$(51, List$cons$(52, List$cons$(53, List$cons$(54, List$cons$(55, List$cons$(56, List$cons$(57, List$cons$(97, List$cons$(98, List$cons$(99, List$cons$(100, List$cons$(101, List$cons$(102, List$cons$(103, List$cons$(104, List$cons$(105, List$cons$(106, List$cons$(107, List$cons$(108, List$cons$(109, List$cons$(110, List$cons$(111, List$cons$(112, List$cons$(113, List$cons$(114, List$cons$(115, List$cons$(116, List$cons$(117, List$cons$(118, List$cons$(119, List$cons$(120, List$cons$(121, List$cons$(122, List$cons$(65, List$cons$(66, List$cons$(67, List$cons$(68, List$cons$(69, List$cons$(70, List$cons$(71, List$cons$(72, List$cons$(73, List$cons$(74, List$cons$(75, List$cons$(76, List$cons$(77, List$cons$(78, List$cons$(79, List$cons$(80, List$cons$(81, List$cons$(82, List$cons$(83, List$cons$(84, List$cons$(85, List$cons$(86, List$cons$(87, List$cons$(88, List$cons$(89, List$cons$(90, List$cons$(43, List$cons$(47, List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
        var self = ((_base$1 > 0n) && (_base$1 <= 64n));
        if (self) {
            var self = List$at$(_m$3, _base64$4);
            switch (self._) {
                case 'Maybe.some':
                    var $7286 = self.value;
                    var $7287 = $7286;
                    var $7285 = $7287;
                    break;
                case 'Maybe.none':
                    var $7288 = 35;
                    var $7285 = $7288;
                    break;
            };
            var $7284 = $7285;
        } else {
            var $7289 = 35;
            var $7284 = $7289;
        };
        return $7284;
    };
    const Nat$show_digit = x0 => x1 => Nat$show_digit$(x0, x1);

    function Nat$to_string_base$(_base$1, _nat$2) {
        var $7290 = List$fold$(Nat$to_base$(_base$1, _nat$2), String$nil, (_n$3 => _str$4 => {
            var $7291 = String$cons$(Nat$show_digit$(_base$1, _n$3), _str$4);
            return $7291;
        }));
        return $7290;
    };
    const Nat$to_string_base = x0 => x1 => Nat$to_string_base$(x0, x1);

    function Nat$show$(_n$1) {
        var $7292 = Nat$to_string_base$(10n, _n$1);
        return $7292;
    };
    const Nat$show = x0 => Nat$show$(x0);

    function Kind$Parser$int_pos$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7294 = self.err;
                var _reply$7 = Parser$text$("+", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7296 = self.err;
                        var self = $7294;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7298 = self.value;
                                var $7299 = Parser$Reply$error$(Parser$Error$combine$($7298, $7296));
                                var $7297 = $7299;
                                break;
                            case 'Maybe.none':
                                var $7300 = Parser$Reply$error$($7296);
                                var $7297 = $7300;
                                break;
                        };
                        var $7295 = $7297;
                        break;
                    case 'Parser.Reply.value':
                        var $7301 = self.pst;
                        var self = $7301;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7303 = self.err;
                                var $7304 = self.nam;
                                var $7305 = self.ini;
                                var $7306 = self.idx;
                                var $7307 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7294, $7303), $7304, $7305, $7306, $7307);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7309 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7311 = self.err;
                                                var self = $7309;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7313 = self.value;
                                                        var $7314 = Parser$Reply$error$(Parser$Error$combine$($7313, $7311));
                                                        var $7312 = $7314;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7315 = Parser$Reply$error$($7311);
                                                        var $7312 = $7315;
                                                        break;
                                                };
                                                var $7310 = $7312;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7316 = self.pst;
                                                var $7317 = self.val;
                                                var self = $7316;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7319 = self.err;
                                                        var $7320 = self.nam;
                                                        var $7321 = self.ini;
                                                        var $7322 = self.idx;
                                                        var $7323 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7309, $7319), $7320, $7321, $7322, $7323);
                                                        var $7324 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$true, Nat$from_base$(10n, $7317)));
                                                        var $7318 = $7324;
                                                        break;
                                                };
                                                var $7310 = $7318;
                                                break;
                                        };
                                        var $7308 = $7310;
                                        break;
                                };
                                var $7302 = $7308;
                                break;
                        };
                        var $7295 = $7302;
                        break;
                };
                var $7293 = $7295;
                break;
        };
        return $7293;
    };
    const Kind$Parser$int_pos = x0 => Kind$Parser$int_pos$(x0);

    function Kind$Parser$int_neg$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7326 = self.err;
                var _reply$7 = Parser$text$("-", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7328 = self.err;
                        var self = $7326;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7330 = self.value;
                                var $7331 = Parser$Reply$error$(Parser$Error$combine$($7330, $7328));
                                var $7329 = $7331;
                                break;
                            case 'Maybe.none':
                                var $7332 = Parser$Reply$error$($7328);
                                var $7329 = $7332;
                                break;
                        };
                        var $7327 = $7329;
                        break;
                    case 'Parser.Reply.value':
                        var $7333 = self.pst;
                        var self = $7333;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7335 = self.err;
                                var $7336 = self.nam;
                                var $7337 = self.ini;
                                var $7338 = self.idx;
                                var $7339 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7326, $7335), $7336, $7337, $7338, $7339);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7341 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7343 = self.err;
                                                var self = $7341;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7345 = self.value;
                                                        var $7346 = Parser$Reply$error$(Parser$Error$combine$($7345, $7343));
                                                        var $7344 = $7346;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7347 = Parser$Reply$error$($7343);
                                                        var $7344 = $7347;
                                                        break;
                                                };
                                                var $7342 = $7344;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7348 = self.pst;
                                                var $7349 = self.val;
                                                var self = $7348;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7351 = self.err;
                                                        var $7352 = self.nam;
                                                        var $7353 = self.ini;
                                                        var $7354 = self.idx;
                                                        var $7355 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7341, $7351), $7352, $7353, $7354, $7355);
                                                        var $7356 = Parser$Reply$value$(_reply$pst$29, Pair$new$(Bool$false, Nat$from_base$(10n, $7349)));
                                                        var $7350 = $7356;
                                                        break;
                                                };
                                                var $7342 = $7350;
                                                break;
                                        };
                                        var $7340 = $7342;
                                        break;
                                };
                                var $7334 = $7340;
                                break;
                        };
                        var $7327 = $7334;
                        break;
                };
                var $7325 = $7327;
                break;
        };
        return $7325;
    };
    const Kind$Parser$int_neg = x0 => Kind$Parser$int_neg$(x0);

    function Kind$Parser$machine_integer$signed$(_size$1) {
        var $7357 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7358 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7360 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7362 = self.err;
                                var self = $7360;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7364 = self.value;
                                        var $7365 = Parser$Reply$error$(Parser$Error$combine$($7364, $7362));
                                        var $7363 = $7365;
                                        break;
                                    case 'Maybe.none':
                                        var $7366 = Parser$Reply$error$($7362);
                                        var $7363 = $7366;
                                        break;
                                };
                                var $7361 = $7363;
                                break;
                            case 'Parser.Reply.value':
                                var $7367 = self.pst;
                                var self = $7367;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7369 = self.err;
                                        var $7370 = self.nam;
                                        var $7371 = self.ini;
                                        var $7372 = self.idx;
                                        var $7373 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7360, $7369), $7370, $7371, $7372, $7373);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7375 = self.err;
                                                var _reply$23 = Parser$choice$(List$cons$(Kind$Parser$int_pos, List$cons$(Kind$Parser$int_neg, List$nil)), _reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7377 = self.err;
                                                        var self = $7375;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7379 = self.value;
                                                                var $7380 = Parser$Reply$error$(Parser$Error$combine$($7379, $7377));
                                                                var $7378 = $7380;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7381 = Parser$Reply$error$($7377);
                                                                var $7378 = $7381;
                                                                break;
                                                        };
                                                        var $7376 = $7378;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7382 = self.pst;
                                                        var $7383 = self.val;
                                                        var self = $7382;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7385 = self.err;
                                                                var $7386 = self.nam;
                                                                var $7387 = self.ini;
                                                                var $7388 = self.idx;
                                                                var $7389 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7375, $7385), $7386, $7387, $7388, $7389);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7391 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + _size_str$2), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7393 = self.err;
                                                                                var self = $7391;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7395 = self.value;
                                                                                        var $7396 = Parser$Reply$error$(Parser$Error$combine$($7395, $7393));
                                                                                        var $7394 = $7396;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7397 = Parser$Reply$error$($7393);
                                                                                        var $7394 = $7397;
                                                                                        break;
                                                                                };
                                                                                var $7392 = $7394;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7398 = self.pst;
                                                                                var self = $7398;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7400 = self.err;
                                                                                        var $7401 = self.nam;
                                                                                        var $7402 = self.ini;
                                                                                        var $7403 = self.idx;
                                                                                        var $7404 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7391, $7400), $7401, $7402, $7403, $7404);
                                                                                        var $7405 = Parser$Reply$value$(_reply$pst$45, (() => {
                                                                                            var self = $7383;
                                                                                            switch (self._) {
                                                                                                case 'Pair.new':
                                                                                                    var $7406 = self.fst;
                                                                                                    var $7407 = self.snd;
                                                                                                    var _term$48 = Kind$Term$ref$(("I" + (_size_str$2 + ".from_nat")));
                                                                                                    var _term$49 = Kind$Term$app$(_term$48, Kind$Term$nat$($7407));
                                                                                                    var self = $7406;
                                                                                                    if (self) {
                                                                                                        var $7409 = _term$49;
                                                                                                        var _term$50 = $7409;
                                                                                                    } else {
                                                                                                        var $7410 = Kind$Term$app$(Kind$Term$ref$(("I" + (_size_str$2 + ".neg"))), _term$49);
                                                                                                        var _term$50 = $7410;
                                                                                                    };
                                                                                                    var $7408 = _term$50;
                                                                                                    return $7408;
                                                                                            };
                                                                                        })());
                                                                                        var $7399 = $7405;
                                                                                        break;
                                                                                };
                                                                                var $7392 = $7399;
                                                                                break;
                                                                        };
                                                                        var $7390 = $7392;
                                                                        break;
                                                                };
                                                                var $7384 = $7390;
                                                                break;
                                                        };
                                                        var $7376 = $7384;
                                                        break;
                                                };
                                                var $7374 = $7376;
                                                break;
                                        };
                                        var $7368 = $7374;
                                        break;
                                };
                                var $7361 = $7368;
                                break;
                        };
                        var $7359 = $7361;
                        break;
                };
                return $7359;
            });
            return $7358;
        })());
        return $7357;
    };
    const Kind$Parser$machine_integer$signed = x0 => Kind$Parser$machine_integer$signed$(x0);

    function Parser$hex_digit$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7412 = self.err;
                var $7413 = self.nam;
                var $7414 = self.ini;
                var $7415 = self.idx;
                var $7416 = self.str;
                var self = $7416;
                if (self.length === 0) {
                    var $7418 = Parser$Reply$fail$($7413, $7414, $7415, "Not a digit.");
                    var $7417 = $7418;
                } else {
                    var $7419 = self.charCodeAt(0);
                    var $7420 = self.slice(1);
                    var _pst$9 = Parser$State$new$($7412, $7413, $7414, Nat$succ$($7415), $7420);
                    var self = ($7419 === 48);
                    if (self) {
                        var $7422 = Parser$Reply$value$(_pst$9, 0n);
                        var $7421 = $7422;
                    } else {
                        var self = ($7419 === 49);
                        if (self) {
                            var $7424 = Parser$Reply$value$(_pst$9, 1n);
                            var $7423 = $7424;
                        } else {
                            var self = ($7419 === 50);
                            if (self) {
                                var $7426 = Parser$Reply$value$(_pst$9, 2n);
                                var $7425 = $7426;
                            } else {
                                var self = ($7419 === 51);
                                if (self) {
                                    var $7428 = Parser$Reply$value$(_pst$9, 3n);
                                    var $7427 = $7428;
                                } else {
                                    var self = ($7419 === 52);
                                    if (self) {
                                        var $7430 = Parser$Reply$value$(_pst$9, 4n);
                                        var $7429 = $7430;
                                    } else {
                                        var self = ($7419 === 53);
                                        if (self) {
                                            var $7432 = Parser$Reply$value$(_pst$9, 5n);
                                            var $7431 = $7432;
                                        } else {
                                            var self = ($7419 === 54);
                                            if (self) {
                                                var $7434 = Parser$Reply$value$(_pst$9, 6n);
                                                var $7433 = $7434;
                                            } else {
                                                var self = ($7419 === 55);
                                                if (self) {
                                                    var $7436 = Parser$Reply$value$(_pst$9, 7n);
                                                    var $7435 = $7436;
                                                } else {
                                                    var self = ($7419 === 56);
                                                    if (self) {
                                                        var $7438 = Parser$Reply$value$(_pst$9, 8n);
                                                        var $7437 = $7438;
                                                    } else {
                                                        var self = ($7419 === 57);
                                                        if (self) {
                                                            var $7440 = Parser$Reply$value$(_pst$9, 9n);
                                                            var $7439 = $7440;
                                                        } else {
                                                            var self = ($7419 === 97);
                                                            if (self) {
                                                                var $7442 = Parser$Reply$value$(_pst$9, 10n);
                                                                var $7441 = $7442;
                                                            } else {
                                                                var self = ($7419 === 98);
                                                                if (self) {
                                                                    var $7444 = Parser$Reply$value$(_pst$9, 11n);
                                                                    var $7443 = $7444;
                                                                } else {
                                                                    var self = ($7419 === 99);
                                                                    if (self) {
                                                                        var $7446 = Parser$Reply$value$(_pst$9, 12n);
                                                                        var $7445 = $7446;
                                                                    } else {
                                                                        var self = ($7419 === 100);
                                                                        if (self) {
                                                                            var $7448 = Parser$Reply$value$(_pst$9, 13n);
                                                                            var $7447 = $7448;
                                                                        } else {
                                                                            var self = ($7419 === 101);
                                                                            if (self) {
                                                                                var $7450 = Parser$Reply$value$(_pst$9, 14n);
                                                                                var $7449 = $7450;
                                                                            } else {
                                                                                var self = ($7419 === 102);
                                                                                if (self) {
                                                                                    var $7452 = Parser$Reply$value$(_pst$9, 15n);
                                                                                    var $7451 = $7452;
                                                                                } else {
                                                                                    var self = ($7419 === 65);
                                                                                    if (self) {
                                                                                        var $7454 = Parser$Reply$value$(_pst$9, 10n);
                                                                                        var $7453 = $7454;
                                                                                    } else {
                                                                                        var self = ($7419 === 66);
                                                                                        if (self) {
                                                                                            var $7456 = Parser$Reply$value$(_pst$9, 11n);
                                                                                            var $7455 = $7456;
                                                                                        } else {
                                                                                            var self = ($7419 === 67);
                                                                                            if (self) {
                                                                                                var $7458 = Parser$Reply$value$(_pst$9, 12n);
                                                                                                var $7457 = $7458;
                                                                                            } else {
                                                                                                var self = ($7419 === 68);
                                                                                                if (self) {
                                                                                                    var $7460 = Parser$Reply$value$(_pst$9, 13n);
                                                                                                    var $7459 = $7460;
                                                                                                } else {
                                                                                                    var self = ($7419 === 69);
                                                                                                    if (self) {
                                                                                                        var $7462 = Parser$Reply$value$(_pst$9, 14n);
                                                                                                        var $7461 = $7462;
                                                                                                    } else {
                                                                                                        var self = ($7419 === 70);
                                                                                                        if (self) {
                                                                                                            var $7464 = Parser$Reply$value$(_pst$9, 15n);
                                                                                                            var $7463 = $7464;
                                                                                                        } else {
                                                                                                            var $7465 = Parser$Reply$fail$($7413, $7414, $7415, "Not a digit.");
                                                                                                            var $7463 = $7465;
                                                                                                        };
                                                                                                        var $7461 = $7463;
                                                                                                    };
                                                                                                    var $7459 = $7461;
                                                                                                };
                                                                                                var $7457 = $7459;
                                                                                            };
                                                                                            var $7455 = $7457;
                                                                                        };
                                                                                        var $7453 = $7455;
                                                                                    };
                                                                                    var $7451 = $7453;
                                                                                };
                                                                                var $7449 = $7451;
                                                                            };
                                                                            var $7447 = $7449;
                                                                        };
                                                                        var $7445 = $7447;
                                                                    };
                                                                    var $7443 = $7445;
                                                                };
                                                                var $7441 = $7443;
                                                            };
                                                            var $7439 = $7441;
                                                        };
                                                        var $7437 = $7439;
                                                    };
                                                    var $7435 = $7437;
                                                };
                                                var $7433 = $7435;
                                            };
                                            var $7431 = $7433;
                                        };
                                        var $7429 = $7431;
                                    };
                                    var $7427 = $7429;
                                };
                                var $7425 = $7427;
                            };
                            var $7423 = $7425;
                        };
                        var $7421 = $7423;
                    };
                    var $7417 = $7421;
                };
                var $7411 = $7417;
                break;
        };
        return $7411;
    };
    const Parser$hex_digit = x0 => Parser$hex_digit$(x0);

    function Parser$hex_nat$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7467 = self.err;
                var _reply$7 = Parser$text$("0x", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7469 = self.err;
                        var self = $7467;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7471 = self.value;
                                var $7472 = Parser$Reply$error$(Parser$Error$combine$($7471, $7469));
                                var $7470 = $7472;
                                break;
                            case 'Maybe.none':
                                var $7473 = Parser$Reply$error$($7469);
                                var $7470 = $7473;
                                break;
                        };
                        var $7468 = $7470;
                        break;
                    case 'Parser.Reply.value':
                        var $7474 = self.pst;
                        var self = $7474;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7476 = self.err;
                                var $7477 = self.nam;
                                var $7478 = self.ini;
                                var $7479 = self.idx;
                                var $7480 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7467, $7476), $7477, $7478, $7479, $7480);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7482 = self.err;
                                        var _reply$21 = Parser$many1$(Parser$hex_digit, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7484 = self.err;
                                                var self = $7482;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7486 = self.value;
                                                        var $7487 = Parser$Reply$error$(Parser$Error$combine$($7486, $7484));
                                                        var $7485 = $7487;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7488 = Parser$Reply$error$($7484);
                                                        var $7485 = $7488;
                                                        break;
                                                };
                                                var $7483 = $7485;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7489 = self.pst;
                                                var $7490 = self.val;
                                                var self = $7489;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7492 = self.err;
                                                        var $7493 = self.nam;
                                                        var $7494 = self.ini;
                                                        var $7495 = self.idx;
                                                        var $7496 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7482, $7492), $7493, $7494, $7495, $7496);
                                                        var $7497 = Parser$Reply$value$(_reply$pst$29, Nat$from_base$(16n, $7490));
                                                        var $7491 = $7497;
                                                        break;
                                                };
                                                var $7483 = $7491;
                                                break;
                                        };
                                        var $7481 = $7483;
                                        break;
                                };
                                var $7475 = $7481;
                                break;
                        };
                        var $7468 = $7475;
                        break;
                };
                var $7466 = $7468;
                break;
        };
        return $7466;
    };
    const Parser$hex_nat = x0 => Parser$hex_nat$(x0);
    const Kind$Parser$nat = Kind$Parser$block("nat")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7499 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7501 = self.err;
                        var self = $7499;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7503 = self.value;
                                var $7504 = Parser$Reply$error$(Parser$Error$combine$($7503, $7501));
                                var $7502 = $7504;
                                break;
                            case 'Maybe.none':
                                var $7505 = Parser$Reply$error$($7501);
                                var $7502 = $7505;
                                break;
                        };
                        var $7500 = $7502;
                        break;
                    case 'Parser.Reply.value':
                        var $7506 = self.pst;
                        var self = $7506;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7508 = self.err;
                                var $7509 = self.nam;
                                var $7510 = self.ini;
                                var $7511 = self.idx;
                                var $7512 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7499, $7508), $7509, $7510, $7511, $7512);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7514 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7516 = self.err;
                                                var self = $7514;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7518 = self.value;
                                                        var $7519 = Parser$Reply$error$(Parser$Error$combine$($7518, $7516));
                                                        var $7517 = $7519;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7520 = Parser$Reply$error$($7516);
                                                        var $7517 = $7520;
                                                        break;
                                                };
                                                var $7515 = $7517;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7521 = self.pst;
                                                var $7522 = self.val;
                                                var self = $7521;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7524 = self.err;
                                                        var $7525 = self.nam;
                                                        var $7526 = self.ini;
                                                        var $7527 = self.idx;
                                                        var $7528 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7514, $7524), $7525, $7526, $7527, $7528);
                                                        var $7529 = Parser$Reply$value$(_reply$pst$29, Kind$Term$nat$($7522));
                                                        var $7523 = $7529;
                                                        break;
                                                };
                                                var $7515 = $7523;
                                                break;
                                        };
                                        var $7513 = $7515;
                                        break;
                                };
                                var $7507 = $7513;
                                break;
                        };
                        var $7500 = $7507;
                        break;
                };
                var $7498 = $7500;
                break;
        };
        return $7498;
    }));

    function Kind$Parser$machine_integer$unsigned$(_size$1) {
        var $7530 = Kind$Parser$block("int")((() => {
            var _size_str$2 = Nat$show$(_size$1);
            var $7531 = (_pst$3 => {
                var self = _pst$3;
                switch (self._) {
                    case 'Parser.State.new':
                        var $7533 = self.err;
                        var _reply$9 = Kind$Parser$spaces(_pst$3);
                        var self = _reply$9;
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $7535 = self.err;
                                var self = $7533;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $7537 = self.value;
                                        var $7538 = Parser$Reply$error$(Parser$Error$combine$($7537, $7535));
                                        var $7536 = $7538;
                                        break;
                                    case 'Maybe.none':
                                        var $7539 = Parser$Reply$error$($7535);
                                        var $7536 = $7539;
                                        break;
                                };
                                var $7534 = $7536;
                                break;
                            case 'Parser.Reply.value':
                                var $7540 = self.pst;
                                var self = $7540;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7542 = self.err;
                                        var $7543 = self.nam;
                                        var $7544 = self.ini;
                                        var $7545 = self.idx;
                                        var $7546 = self.str;
                                        var _reply$pst$17 = Parser$State$new$(Parser$Error$maybe_combine$($7533, $7542), $7543, $7544, $7545, $7546);
                                        var self = _reply$pst$17;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $7548 = self.err;
                                                var _reply$23 = Kind$Parser$nat(_reply$pst$17);
                                                var self = _reply$23;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $7550 = self.err;
                                                        var self = $7548;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $7552 = self.value;
                                                                var $7553 = Parser$Reply$error$(Parser$Error$combine$($7552, $7550));
                                                                var $7551 = $7553;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $7554 = Parser$Reply$error$($7550);
                                                                var $7551 = $7554;
                                                                break;
                                                        };
                                                        var $7549 = $7551;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $7555 = self.pst;
                                                        var $7556 = self.val;
                                                        var self = $7555;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7558 = self.err;
                                                                var $7559 = self.nam;
                                                                var $7560 = self.ini;
                                                                var $7561 = self.idx;
                                                                var $7562 = self.str;
                                                                var _reply$pst$31 = Parser$State$new$(Parser$Error$maybe_combine$($7548, $7558), $7559, $7560, $7561, $7562);
                                                                var self = _reply$pst$31;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7564 = self.err;
                                                                        var _reply$37 = Parser$text$(("#" + Nat$show$(_size$1)), _reply$pst$31);
                                                                        var self = _reply$37;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7566 = self.err;
                                                                                var self = $7564;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7568 = self.value;
                                                                                        var $7569 = Parser$Reply$error$(Parser$Error$combine$($7568, $7566));
                                                                                        var $7567 = $7569;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7570 = Parser$Reply$error$($7566);
                                                                                        var $7567 = $7570;
                                                                                        break;
                                                                                };
                                                                                var $7565 = $7567;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7571 = self.pst;
                                                                                var self = $7571;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7573 = self.err;
                                                                                        var $7574 = self.nam;
                                                                                        var $7575 = self.ini;
                                                                                        var $7576 = self.idx;
                                                                                        var $7577 = self.str;
                                                                                        var _reply$pst$45 = Parser$State$new$(Parser$Error$maybe_combine$($7564, $7573), $7574, $7575, $7576, $7577);
                                                                                        var _term$46 = Kind$Term$ref$(("Nat.to_u" + Nat$show$(_size$1)));
                                                                                        var _term$47 = Kind$Term$app$(_term$46, $7556);
                                                                                        var $7578 = Parser$Reply$value$(_reply$pst$45, _term$47);
                                                                                        var $7572 = $7578;
                                                                                        break;
                                                                                };
                                                                                var $7565 = $7572;
                                                                                break;
                                                                        };
                                                                        var $7563 = $7565;
                                                                        break;
                                                                };
                                                                var $7557 = $7563;
                                                                break;
                                                        };
                                                        var $7549 = $7557;
                                                        break;
                                                };
                                                var $7547 = $7549;
                                                break;
                                        };
                                        var $7541 = $7547;
                                        break;
                                };
                                var $7534 = $7541;
                                break;
                        };
                        var $7532 = $7534;
                        break;
                };
                return $7532;
            });
            return $7531;
        })());
        return $7530;
    };
    const Kind$Parser$machine_integer$unsigned = x0 => Kind$Parser$machine_integer$unsigned$(x0);
    const Kind$Parser$u64 = Kind$Parser$block("u64")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7580 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7582 = self.err;
                        var self = $7580;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7584 = self.value;
                                var $7585 = Parser$Reply$error$(Parser$Error$combine$($7584, $7582));
                                var $7583 = $7585;
                                break;
                            case 'Maybe.none':
                                var $7586 = Parser$Reply$error$($7582);
                                var $7583 = $7586;
                                break;
                        };
                        var $7581 = $7583;
                        break;
                    case 'Parser.Reply.value':
                        var $7587 = self.pst;
                        var self = $7587;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7589 = self.err;
                                var $7590 = self.nam;
                                var $7591 = self.ini;
                                var $7592 = self.idx;
                                var $7593 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7580, $7589), $7590, $7591, $7592, $7593);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7595 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7597 = self.err;
                                                var self = $7595;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7599 = self.value;
                                                        var $7600 = Parser$Reply$error$(Parser$Error$combine$($7599, $7597));
                                                        var $7598 = $7600;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7601 = Parser$Reply$error$($7597);
                                                        var $7598 = $7601;
                                                        break;
                                                };
                                                var $7596 = $7598;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7602 = self.pst;
                                                var $7603 = self.val;
                                                var self = $7602;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7605 = self.err;
                                                        var $7606 = self.nam;
                                                        var $7607 = self.ini;
                                                        var $7608 = self.idx;
                                                        var $7609 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7595, $7605), $7606, $7607, $7608, $7609);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7611 = self.err;
                                                                var _reply$35 = Parser$text$("l", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7613 = self.err;
                                                                        var self = $7611;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7615 = self.value;
                                                                                var $7616 = Parser$Reply$error$(Parser$Error$combine$($7615, $7613));
                                                                                var $7614 = $7616;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7617 = Parser$Reply$error$($7613);
                                                                                var $7614 = $7617;
                                                                                break;
                                                                        };
                                                                        var $7612 = $7614;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7618 = self.pst;
                                                                        var self = $7618;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7620 = self.err;
                                                                                var $7621 = self.nam;
                                                                                var $7622 = self.ini;
                                                                                var $7623 = self.idx;
                                                                                var $7624 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7611, $7620), $7621, $7622, $7623, $7624);
                                                                                var _term$44 = Kind$Term$ref$("U64.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7603));
                                                                                var $7625 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7619 = $7625;
                                                                                break;
                                                                        };
                                                                        var $7612 = $7619;
                                                                        break;
                                                                };
                                                                var $7610 = $7612;
                                                                break;
                                                        };
                                                        var $7604 = $7610;
                                                        break;
                                                };
                                                var $7596 = $7604;
                                                break;
                                        };
                                        var $7594 = $7596;
                                        break;
                                };
                                var $7588 = $7594;
                                break;
                        };
                        var $7581 = $7588;
                        break;
                };
                var $7579 = $7581;
                break;
        };
        return $7579;
    }));
    const Kind$Parser$u32 = Kind$Parser$block("u32")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7627 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7629 = self.err;
                        var self = $7627;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7631 = self.value;
                                var $7632 = Parser$Reply$error$(Parser$Error$combine$($7631, $7629));
                                var $7630 = $7632;
                                break;
                            case 'Maybe.none':
                                var $7633 = Parser$Reply$error$($7629);
                                var $7630 = $7633;
                                break;
                        };
                        var $7628 = $7630;
                        break;
                    case 'Parser.Reply.value':
                        var $7634 = self.pst;
                        var self = $7634;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7636 = self.err;
                                var $7637 = self.nam;
                                var $7638 = self.ini;
                                var $7639 = self.idx;
                                var $7640 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7627, $7636), $7637, $7638, $7639, $7640);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7642 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7644 = self.err;
                                                var self = $7642;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7646 = self.value;
                                                        var $7647 = Parser$Reply$error$(Parser$Error$combine$($7646, $7644));
                                                        var $7645 = $7647;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7648 = Parser$Reply$error$($7644);
                                                        var $7645 = $7648;
                                                        break;
                                                };
                                                var $7643 = $7645;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7649 = self.pst;
                                                var $7650 = self.val;
                                                var self = $7649;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7652 = self.err;
                                                        var $7653 = self.nam;
                                                        var $7654 = self.ini;
                                                        var $7655 = self.idx;
                                                        var $7656 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7642, $7652), $7653, $7654, $7655, $7656);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7658 = self.err;
                                                                var _reply$35 = Parser$text$("u", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7660 = self.err;
                                                                        var self = $7658;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7662 = self.value;
                                                                                var $7663 = Parser$Reply$error$(Parser$Error$combine$($7662, $7660));
                                                                                var $7661 = $7663;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7664 = Parser$Reply$error$($7660);
                                                                                var $7661 = $7664;
                                                                                break;
                                                                        };
                                                                        var $7659 = $7661;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7665 = self.pst;
                                                                        var self = $7665;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7667 = self.err;
                                                                                var $7668 = self.nam;
                                                                                var $7669 = self.ini;
                                                                                var $7670 = self.idx;
                                                                                var $7671 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7658, $7667), $7668, $7669, $7670, $7671);
                                                                                var _term$44 = Kind$Term$ref$("U32.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7650));
                                                                                var $7672 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7666 = $7672;
                                                                                break;
                                                                        };
                                                                        var $7659 = $7666;
                                                                        break;
                                                                };
                                                                var $7657 = $7659;
                                                                break;
                                                        };
                                                        var $7651 = $7657;
                                                        break;
                                                };
                                                var $7643 = $7651;
                                                break;
                                        };
                                        var $7641 = $7643;
                                        break;
                                };
                                var $7635 = $7641;
                                break;
                        };
                        var $7628 = $7635;
                        break;
                };
                var $7626 = $7628;
                break;
        };
        return $7626;
    }));
    const Kind$Parser$u16 = Kind$Parser$block("u16")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7674 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7676 = self.err;
                        var self = $7674;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7678 = self.value;
                                var $7679 = Parser$Reply$error$(Parser$Error$combine$($7678, $7676));
                                var $7677 = $7679;
                                break;
                            case 'Maybe.none':
                                var $7680 = Parser$Reply$error$($7676);
                                var $7677 = $7680;
                                break;
                        };
                        var $7675 = $7677;
                        break;
                    case 'Parser.Reply.value':
                        var $7681 = self.pst;
                        var self = $7681;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7683 = self.err;
                                var $7684 = self.nam;
                                var $7685 = self.ini;
                                var $7686 = self.idx;
                                var $7687 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7674, $7683), $7684, $7685, $7686, $7687);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7689 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7691 = self.err;
                                                var self = $7689;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7693 = self.value;
                                                        var $7694 = Parser$Reply$error$(Parser$Error$combine$($7693, $7691));
                                                        var $7692 = $7694;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7695 = Parser$Reply$error$($7691);
                                                        var $7692 = $7695;
                                                        break;
                                                };
                                                var $7690 = $7692;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7696 = self.pst;
                                                var $7697 = self.val;
                                                var self = $7696;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7699 = self.err;
                                                        var $7700 = self.nam;
                                                        var $7701 = self.ini;
                                                        var $7702 = self.idx;
                                                        var $7703 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7689, $7699), $7700, $7701, $7702, $7703);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7705 = self.err;
                                                                var _reply$35 = Parser$text$("s", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7707 = self.err;
                                                                        var self = $7705;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7709 = self.value;
                                                                                var $7710 = Parser$Reply$error$(Parser$Error$combine$($7709, $7707));
                                                                                var $7708 = $7710;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7711 = Parser$Reply$error$($7707);
                                                                                var $7708 = $7711;
                                                                                break;
                                                                        };
                                                                        var $7706 = $7708;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7712 = self.pst;
                                                                        var self = $7712;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7714 = self.err;
                                                                                var $7715 = self.nam;
                                                                                var $7716 = self.ini;
                                                                                var $7717 = self.idx;
                                                                                var $7718 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7705, $7714), $7715, $7716, $7717, $7718);
                                                                                var _term$44 = Kind$Term$ref$("U16.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7697));
                                                                                var $7719 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7713 = $7719;
                                                                                break;
                                                                        };
                                                                        var $7706 = $7713;
                                                                        break;
                                                                };
                                                                var $7704 = $7706;
                                                                break;
                                                        };
                                                        var $7698 = $7704;
                                                        break;
                                                };
                                                var $7690 = $7698;
                                                break;
                                        };
                                        var $7688 = $7690;
                                        break;
                                };
                                var $7682 = $7688;
                                break;
                        };
                        var $7675 = $7682;
                        break;
                };
                var $7673 = $7675;
                break;
        };
        return $7673;
    }));
    const Kind$Parser$u8 = Kind$Parser$block("u8")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7721 = self.err;
                var _reply$7 = Kind$Parser$spaces(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7723 = self.err;
                        var self = $7721;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7725 = self.value;
                                var $7726 = Parser$Reply$error$(Parser$Error$combine$($7725, $7723));
                                var $7724 = $7726;
                                break;
                            case 'Maybe.none':
                                var $7727 = Parser$Reply$error$($7723);
                                var $7724 = $7727;
                                break;
                        };
                        var $7722 = $7724;
                        break;
                    case 'Parser.Reply.value':
                        var $7728 = self.pst;
                        var self = $7728;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7730 = self.err;
                                var $7731 = self.nam;
                                var $7732 = self.ini;
                                var $7733 = self.idx;
                                var $7734 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7721, $7730), $7731, $7732, $7733, $7734);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7736 = self.err;
                                        var _reply$21 = Parser$nat$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7738 = self.err;
                                                var self = $7736;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7740 = self.value;
                                                        var $7741 = Parser$Reply$error$(Parser$Error$combine$($7740, $7738));
                                                        var $7739 = $7741;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7742 = Parser$Reply$error$($7738);
                                                        var $7739 = $7742;
                                                        break;
                                                };
                                                var $7737 = $7739;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7743 = self.pst;
                                                var $7744 = self.val;
                                                var self = $7743;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7746 = self.err;
                                                        var $7747 = self.nam;
                                                        var $7748 = self.ini;
                                                        var $7749 = self.idx;
                                                        var $7750 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7736, $7746), $7747, $7748, $7749, $7750);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7752 = self.err;
                                                                var _reply$35 = Parser$text$("b", _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7754 = self.err;
                                                                        var self = $7752;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7756 = self.value;
                                                                                var $7757 = Parser$Reply$error$(Parser$Error$combine$($7756, $7754));
                                                                                var $7755 = $7757;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7758 = Parser$Reply$error$($7754);
                                                                                var $7755 = $7758;
                                                                                break;
                                                                        };
                                                                        var $7753 = $7755;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7759 = self.pst;
                                                                        var self = $7759;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7761 = self.err;
                                                                                var $7762 = self.nam;
                                                                                var $7763 = self.ini;
                                                                                var $7764 = self.idx;
                                                                                var $7765 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7752, $7761), $7762, $7763, $7764, $7765);
                                                                                var _term$44 = Kind$Term$ref$("U8.from_nat");
                                                                                var _term$45 = Kind$Term$app$(_term$44, Kind$Term$nat$($7744));
                                                                                var $7766 = Parser$Reply$value$(_reply$pst$43, _term$45);
                                                                                var $7760 = $7766;
                                                                                break;
                                                                        };
                                                                        var $7753 = $7760;
                                                                        break;
                                                                };
                                                                var $7751 = $7753;
                                                                break;
                                                        };
                                                        var $7745 = $7751;
                                                        break;
                                                };
                                                var $7737 = $7745;
                                                break;
                                        };
                                        var $7735 = $7737;
                                        break;
                                };
                                var $7729 = $7735;
                                break;
                        };
                        var $7722 = $7729;
                        break;
                };
                var $7720 = $7722;
                break;
        };
        return $7720;
    }));

    function Parser$Number$new$(_sign$1, _numb$2, _frac$3) {
        var $7767 = ({
            _: 'Parser.Number.new',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7767;
    };
    const Parser$Number$new = x0 => x1 => x2 => Parser$Number$new$(x0, x1, x2);

    function Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7769 = self.err;
                var _reply$7 = Parser$choice$(List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7772 = self.err;
                            var _reply$13 = Parser$text$("+", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7774 = self.err;
                                    var self = $7772;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7776 = self.value;
                                            var $7777 = Parser$Reply$error$(Parser$Error$combine$($7776, $7774));
                                            var $7775 = $7777;
                                            break;
                                        case 'Maybe.none':
                                            var $7778 = Parser$Reply$error$($7774);
                                            var $7775 = $7778;
                                            break;
                                    };
                                    var $7773 = $7775;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7779 = self.pst;
                                    var self = $7779;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7781 = self.err;
                                            var $7782 = self.nam;
                                            var $7783 = self.ini;
                                            var $7784 = self.idx;
                                            var $7785 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7772, $7781), $7782, $7783, $7784, $7785);
                                            var $7786 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$true));
                                            var $7780 = $7786;
                                            break;
                                    };
                                    var $7773 = $7780;
                                    break;
                            };
                            var $7771 = $7773;
                            break;
                    };
                    return $7771;
                }), List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $7788 = self.err;
                            var _reply$13 = Parser$text$("-", _pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $7790 = self.err;
                                    var self = $7788;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $7792 = self.value;
                                            var $7793 = Parser$Reply$error$(Parser$Error$combine$($7792, $7790));
                                            var $7791 = $7793;
                                            break;
                                        case 'Maybe.none':
                                            var $7794 = Parser$Reply$error$($7790);
                                            var $7791 = $7794;
                                            break;
                                    };
                                    var $7789 = $7791;
                                    break;
                                case 'Parser.Reply.value':
                                    var $7795 = self.pst;
                                    var self = $7795;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7797 = self.err;
                                            var $7798 = self.nam;
                                            var $7799 = self.ini;
                                            var $7800 = self.idx;
                                            var $7801 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($7788, $7797), $7798, $7799, $7800, $7801);
                                            var $7802 = Parser$Reply$value$(_reply$pst$21, Maybe$some$(Bool$false));
                                            var $7796 = $7802;
                                            break;
                                    };
                                    var $7789 = $7796;
                                    break;
                            };
                            var $7787 = $7789;
                            break;
                    };
                    return $7787;
                }), List$cons$((_pst$7 => {
                    var $7803 = Parser$Reply$value$(_pst$7, Maybe$none);
                    return $7803;
                }), List$nil))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7804 = self.err;
                        var self = $7769;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7806 = self.value;
                                var $7807 = Parser$Reply$error$(Parser$Error$combine$($7806, $7804));
                                var $7805 = $7807;
                                break;
                            case 'Maybe.none':
                                var $7808 = Parser$Reply$error$($7804);
                                var $7805 = $7808;
                                break;
                        };
                        var $7770 = $7805;
                        break;
                    case 'Parser.Reply.value':
                        var $7809 = self.pst;
                        var $7810 = self.val;
                        var self = $7809;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7812 = self.err;
                                var $7813 = self.nam;
                                var $7814 = self.ini;
                                var $7815 = self.idx;
                                var $7816 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7769, $7812), $7813, $7814, $7815, $7816);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $7818 = self.err;
                                        var _reply$21 = Parser$choice$(List$cons$(Parser$hex_nat, List$cons$(Parser$nat, List$nil)), _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $7820 = self.err;
                                                var self = $7818;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $7822 = self.value;
                                                        var $7823 = Parser$Reply$error$(Parser$Error$combine$($7822, $7820));
                                                        var $7821 = $7823;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $7824 = Parser$Reply$error$($7820);
                                                        var $7821 = $7824;
                                                        break;
                                                };
                                                var $7819 = $7821;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $7825 = self.pst;
                                                var $7826 = self.val;
                                                var self = $7825;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $7828 = self.err;
                                                        var $7829 = self.nam;
                                                        var $7830 = self.ini;
                                                        var $7831 = self.idx;
                                                        var $7832 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($7818, $7828), $7829, $7830, $7831, $7832);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $7834 = self.err;
                                                                var self = _reply$pst$29;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $7836 = self.err;
                                                                        var _reply$40 = Parser$maybe$(Parser$text("."), _reply$pst$29);
                                                                        var self = _reply$40;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $7838 = self.err;
                                                                                var self = $7836;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $7840 = self.value;
                                                                                        var $7841 = Parser$Reply$error$(Parser$Error$combine$($7840, $7838));
                                                                                        var $7839 = $7841;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $7842 = Parser$Reply$error$($7838);
                                                                                        var $7839 = $7842;
                                                                                        break;
                                                                                };
                                                                                var $7837 = $7839;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $7843 = self.pst;
                                                                                var self = $7843;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $7845 = self.err;
                                                                                        var $7846 = self.nam;
                                                                                        var $7847 = self.ini;
                                                                                        var $7848 = self.idx;
                                                                                        var $7849 = self.str;
                                                                                        var _reply$pst$48 = Parser$State$new$(Parser$Error$maybe_combine$($7836, $7845), $7846, $7847, $7848, $7849);
                                                                                        var self = _reply$pst$48;
                                                                                        switch (self._) {
                                                                                            case 'Parser.State.new':
                                                                                                var $7851 = self.err;
                                                                                                var _reply$54 = Parser$maybe$(Parser$nat, _reply$pst$48);
                                                                                                var self = _reply$54;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.Reply.error':
                                                                                                        var $7853 = self.err;
                                                                                                        var self = $7851;
                                                                                                        switch (self._) {
                                                                                                            case 'Maybe.some':
                                                                                                                var $7855 = self.value;
                                                                                                                var $7856 = Parser$Reply$error$(Parser$Error$combine$($7855, $7853));
                                                                                                                var $7854 = $7856;
                                                                                                                break;
                                                                                                            case 'Maybe.none':
                                                                                                                var $7857 = Parser$Reply$error$($7853);
                                                                                                                var $7854 = $7857;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7852 = $7854;
                                                                                                        break;
                                                                                                    case 'Parser.Reply.value':
                                                                                                        var $7858 = self.pst;
                                                                                                        var $7859 = self.val;
                                                                                                        var self = $7858;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $7861 = self.err;
                                                                                                                var $7862 = self.nam;
                                                                                                                var $7863 = self.ini;
                                                                                                                var $7864 = self.idx;
                                                                                                                var $7865 = self.str;
                                                                                                                var _reply$pst$62 = Parser$State$new$(Parser$Error$maybe_combine$($7851, $7861), $7862, $7863, $7864, $7865);
                                                                                                                var $7866 = Parser$Reply$value$(_reply$pst$62, $7859);
                                                                                                                var $7860 = $7866;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $7852 = $7860;
                                                                                                        break;
                                                                                                };
                                                                                                var $7850 = $7852;
                                                                                                break;
                                                                                        };
                                                                                        var $7844 = $7850;
                                                                                        break;
                                                                                };
                                                                                var $7837 = $7844;
                                                                                break;
                                                                        };
                                                                        var _reply$35 = $7837;
                                                                        break;
                                                                };
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $7867 = self.err;
                                                                        var self = $7834;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $7869 = self.value;
                                                                                var $7870 = Parser$Reply$error$(Parser$Error$combine$($7869, $7867));
                                                                                var $7868 = $7870;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $7871 = Parser$Reply$error$($7867);
                                                                                var $7868 = $7871;
                                                                                break;
                                                                        };
                                                                        var $7835 = $7868;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $7872 = self.pst;
                                                                        var $7873 = self.val;
                                                                        var self = $7872;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $7875 = self.err;
                                                                                var $7876 = self.nam;
                                                                                var $7877 = self.ini;
                                                                                var $7878 = self.idx;
                                                                                var $7879 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($7834, $7875), $7876, $7877, $7878, $7879);
                                                                                var $7880 = Parser$Reply$value$(_reply$pst$43, Parser$Number$new$($7810, $7826, $7873));
                                                                                var $7874 = $7880;
                                                                                break;
                                                                        };
                                                                        var $7835 = $7874;
                                                                        break;
                                                                };
                                                                var $7833 = $7835;
                                                                break;
                                                        };
                                                        var $7827 = $7833;
                                                        break;
                                                };
                                                var $7819 = $7827;
                                                break;
                                        };
                                        var $7817 = $7819;
                                        break;
                                };
                                var $7811 = $7817;
                                break;
                        };
                        var $7770 = $7811;
                        break;
                };
                var $7768 = $7770;
                break;
        };
        return $7768;
    };
    const Parser$num = x0 => Parser$num$(x0);

    function Kind$Term$num$(_sign$1, _numb$2, _frac$3) {
        var $7881 = ({
            _: 'Kind.Term.num',
            'sign': _sign$1,
            'numb': _numb$2,
            'frac': _frac$3
        });
        return $7881;
    };
    const Kind$Term$num = x0 => x1 => x2 => Kind$Term$num$(x0, x1, x2);

    function Kind$Parser$num$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7883 = self.err;
                var _reply$7 = Parser$num$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7885 = self.err;
                        var self = $7883;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7887 = self.value;
                                var $7888 = Parser$Reply$error$(Parser$Error$combine$($7887, $7885));
                                var $7886 = $7888;
                                break;
                            case 'Maybe.none':
                                var $7889 = Parser$Reply$error$($7885);
                                var $7886 = $7889;
                                break;
                        };
                        var $7884 = $7886;
                        break;
                    case 'Parser.Reply.value':
                        var $7890 = self.pst;
                        var $7891 = self.val;
                        var self = $7890;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7893 = self.err;
                                var $7894 = self.nam;
                                var $7895 = self.ini;
                                var $7896 = self.idx;
                                var $7897 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7883, $7893), $7894, $7895, $7896, $7897);
                                var self = $7891;
                                switch (self._) {
                                    case 'Parser.Number.new':
                                        var $7899 = self.sign;
                                        var $7900 = self.numb;
                                        var $7901 = self.frac;
                                        var self = $7899;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var self = $7901;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $7904 = (_pst$19 => {
                                                            var $7905 = Parser$Reply$value$(_pst$19, Kind$Term$nat$($7900));
                                                            return $7905;
                                                        });
                                                        var $7903 = $7904;
                                                        break;
                                                    case 'Maybe.some':
                                                        var $7906 = (_pst$20 => {
                                                            var $7907 = Parser$Reply$value$(_pst$20, Kind$Term$num$($7899, $7900, $7901));
                                                            return $7907;
                                                        });
                                                        var $7903 = $7906;
                                                        break;
                                                };
                                                var $7902 = $7903;
                                                break;
                                            case 'Maybe.some':
                                                var $7908 = (_pst$20 => {
                                                    var $7909 = Parser$Reply$value$(_pst$20, Kind$Term$num$($7899, $7900, $7901));
                                                    return $7909;
                                                });
                                                var $7902 = $7908;
                                                break;
                                        };
                                        var $7898 = $7902;
                                        break;
                                };
                                var $7898 = $7898(_reply$pst$15);
                                var $7892 = $7898;
                                break;
                        };
                        var $7884 = $7892;
                        break;
                };
                var $7882 = $7884;
                break;
        };
        return $7882;
    };
    const Kind$Parser$num = x0 => Kind$Parser$num$(x0);
    const Kind$Parser$reference = Kind$Parser$block("reference")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $7911 = self.err;
                var _reply$7 = Kind$Parser$name1$(_pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7913 = self.err;
                        var self = $7911;
                        switch (self._) {
                            case 'Maybe.some':
                                var $7915 = self.value;
                                var $7916 = Parser$Reply$error$(Parser$Error$combine$($7915, $7913));
                                var $7914 = $7916;
                                break;
                            case 'Maybe.none':
                                var $7917 = Parser$Reply$error$($7913);
                                var $7914 = $7917;
                                break;
                        };
                        var $7912 = $7914;
                        break;
                    case 'Parser.Reply.value':
                        var $7918 = self.pst;
                        var $7919 = self.val;
                        var self = $7918;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $7921 = self.err;
                                var $7922 = self.nam;
                                var $7923 = self.ini;
                                var $7924 = self.idx;
                                var $7925 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($7911, $7921), $7922, $7923, $7924, $7925);
                                var self = ($7919 === "Type");
                                if (self) {
                                    var $7927 = (_pst$16 => {
                                        var $7928 = Parser$Reply$value$(_pst$16, Kind$Term$typ);
                                        return $7928;
                                    });
                                    var $7926 = $7927;
                                } else {
                                    var self = ($7919 === "true");
                                    if (self) {
                                        var $7930 = (_pst$16 => {
                                            var $7931 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.true"));
                                            return $7931;
                                        });
                                        var $7929 = $7930;
                                    } else {
                                        var self = ($7919 === "false");
                                        if (self) {
                                            var $7933 = (_pst$16 => {
                                                var $7934 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Bool.false"));
                                                return $7934;
                                            });
                                            var $7932 = $7933;
                                        } else {
                                            var self = ($7919 === "unit");
                                            if (self) {
                                                var $7936 = (_pst$16 => {
                                                    var $7937 = Parser$Reply$value$(_pst$16, Kind$Term$ref$("Unit.new"));
                                                    return $7937;
                                                });
                                                var $7935 = $7936;
                                            } else {
                                                var self = ($7919 === "none");
                                                if (self) {
                                                    var _term$16 = Kind$Term$ref$("Maybe.none");
                                                    var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                    var $7939 = (_pst$18 => {
                                                        var $7940 = Parser$Reply$value$(_pst$18, _term$17);
                                                        return $7940;
                                                    });
                                                    var $7938 = $7939;
                                                } else {
                                                    var self = ($7919 === "refl");
                                                    if (self) {
                                                        var _term$16 = Kind$Term$ref$("Equal.refl");
                                                        var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                                        var _term$18 = Kind$Term$app$(_term$17, Kind$Term$hol$(Bits$e));
                                                        var $7942 = (_pst$19 => {
                                                            var $7943 = Parser$Reply$value$(_pst$19, _term$18);
                                                            return $7943;
                                                        });
                                                        var $7941 = $7942;
                                                    } else {
                                                        var $7944 = (_pst$16 => {
                                                            var $7945 = Parser$Reply$value$(_pst$16, Kind$Term$ref$($7919));
                                                            return $7945;
                                                        });
                                                        var $7941 = $7944;
                                                    };
                                                    var $7938 = $7941;
                                                };
                                                var $7935 = $7938;
                                            };
                                            var $7932 = $7935;
                                        };
                                        var $7929 = $7932;
                                    };
                                    var $7926 = $7929;
                                };
                                var $7926 = $7926(_reply$pst$15);
                                var $7920 = $7926;
                                break;
                        };
                        var $7912 = $7920;
                        break;
                };
                var $7910 = $7912;
                break;
        };
        return $7910;
    }));

    function Kind$Parser$text_now$(_text$1) {
        var $7946 = Parser$text(_text$1);
        return $7946;
    };
    const Kind$Parser$text_now = x0 => Kind$Parser$text_now$(x0);

    function Kind$Parser$items_now$(_ini$2, _parser$3, _end$4) {
        var $7947 = Parser$wrap1(Kind$Parser$text_now$(_ini$2))((_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $7949 = self.err;
                    var _reply$11 = Kind$Parser$spaces(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $7951 = self.err;
                            var self = $7949;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $7953 = self.value;
                                    var $7954 = Parser$Reply$error$(Parser$Error$combine$($7953, $7951));
                                    var $7952 = $7954;
                                    break;
                                case 'Maybe.none':
                                    var $7955 = Parser$Reply$error$($7951);
                                    var $7952 = $7955;
                                    break;
                            };
                            var $7950 = $7952;
                            break;
                        case 'Parser.Reply.value':
                            var $7956 = self.pst;
                            var self = $7956;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $7958 = self.err;
                                    var $7959 = self.nam;
                                    var $7960 = self.ini;
                                    var $7961 = self.idx;
                                    var $7962 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($7949, $7958), $7959, $7960, $7961, $7962);
                                    var self = _reply$pst$19;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $7964 = self.err;
                                            var _reply$25 = _parser$3(_reply$pst$19);
                                            var self = _reply$25;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $7966 = self.err;
                                                    var self = $7964;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $7968 = self.value;
                                                            var $7969 = Parser$Reply$error$(Parser$Error$combine$($7968, $7966));
                                                            var $7967 = $7969;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $7970 = Parser$Reply$error$($7966);
                                                            var $7967 = $7970;
                                                            break;
                                                    };
                                                    var $7965 = $7967;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $7971 = self.pst;
                                                    var $7972 = self.val;
                                                    var self = $7971;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $7974 = self.err;
                                                            var $7975 = self.nam;
                                                            var $7976 = self.ini;
                                                            var $7977 = self.idx;
                                                            var $7978 = self.str;
                                                            var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($7964, $7974), $7975, $7976, $7977, $7978);
                                                            var self = _reply$pst$33;
                                                            switch (self._) {
                                                                case 'Parser.State.new':
                                                                    var $7980 = self.err;
                                                                    var _reply$39 = Parser$maybe$(Kind$Parser$text(","), _reply$pst$33);
                                                                    var self = _reply$39;
                                                                    switch (self._) {
                                                                        case 'Parser.Reply.error':
                                                                            var $7982 = self.err;
                                                                            var self = $7980;
                                                                            switch (self._) {
                                                                                case 'Maybe.some':
                                                                                    var $7984 = self.value;
                                                                                    var $7985 = Parser$Reply$error$(Parser$Error$combine$($7984, $7982));
                                                                                    var $7983 = $7985;
                                                                                    break;
                                                                                case 'Maybe.none':
                                                                                    var $7986 = Parser$Reply$error$($7982);
                                                                                    var $7983 = $7986;
                                                                                    break;
                                                                            };
                                                                            var $7981 = $7983;
                                                                            break;
                                                                        case 'Parser.Reply.value':
                                                                            var $7987 = self.pst;
                                                                            var self = $7987;
                                                                            switch (self._) {
                                                                                case 'Parser.State.new':
                                                                                    var $7989 = self.err;
                                                                                    var $7990 = self.nam;
                                                                                    var $7991 = self.ini;
                                                                                    var $7992 = self.idx;
                                                                                    var $7993 = self.str;
                                                                                    var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($7980, $7989), $7990, $7991, $7992, $7993);
                                                                                    var $7994 = Parser$Reply$value$(_reply$pst$47, $7972);
                                                                                    var $7988 = $7994;
                                                                                    break;
                                                                            };
                                                                            var $7981 = $7988;
                                                                            break;
                                                                    };
                                                                    var $7979 = $7981;
                                                                    break;
                                                            };
                                                            var $7973 = $7979;
                                                            break;
                                                    };
                                                    var $7965 = $7973;
                                                    break;
                                            };
                                            var $7963 = $7965;
                                            break;
                                    };
                                    var $7957 = $7963;
                                    break;
                            };
                            var $7950 = $7957;
                            break;
                    };
                    var $7948 = $7950;
                    break;
            };
            return $7948;
        }))(Kind$Parser$text(_end$4));
        return $7947;
    };
    const Kind$Parser$items_now = x0 => x1 => x2 => Kind$Parser$items_now$(x0, x1, x2);
    const List$for = a0 => a1 => a2 => (list_for(a0)(a1)(a2));

    function Kind$Parser$application$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $7996 = self.err;
                var _reply$8 = Kind$Parser$items_now$("(", Kind$Parser$term, ")")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $7998 = self.err;
                        var self = $7996;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8000 = self.value;
                                var $8001 = Parser$Reply$error$(Parser$Error$combine$($8000, $7998));
                                var $7999 = $8001;
                                break;
                            case 'Maybe.none':
                                var $8002 = Parser$Reply$error$($7998);
                                var $7999 = $8002;
                                break;
                        };
                        var $7997 = $7999;
                        break;
                    case 'Parser.Reply.value':
                        var $8003 = self.pst;
                        var $8004 = self.val;
                        var self = $8003;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8006 = self.err;
                                var $8007 = self.nam;
                                var $8008 = self.ini;
                                var $8009 = self.idx;
                                var $8010 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($7996, $8006), $8007, $8008, $8009, $8010);
                                var _expr$17 = (() => {
                                    var $8013 = _func$1;
                                    var $8014 = $8004;
                                    let _f$18 = $8013;
                                    let _x$17;
                                    while ($8014._ === 'List.cons') {
                                        _x$17 = $8014.head;
                                        var $8013 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8013;
                                        $8014 = $8014.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8011 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8005 = $8011;
                                break;
                        };
                        var $7997 = $8005;
                        break;
                };
                var $7995 = $7997;
                break;
        };
        return $7995;
    };
    const Kind$Parser$application = x0 => x1 => Kind$Parser$application$(x0, x1);

    function Kind$Parser$application$erased$(_func$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8016 = self.err;
                var _reply$8 = Kind$Parser$items_now$("<", Kind$Parser$term, ">")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8018 = self.err;
                        var self = $8016;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8020 = self.value;
                                var $8021 = Parser$Reply$error$(Parser$Error$combine$($8020, $8018));
                                var $8019 = $8021;
                                break;
                            case 'Maybe.none':
                                var $8022 = Parser$Reply$error$($8018);
                                var $8019 = $8022;
                                break;
                        };
                        var $8017 = $8019;
                        break;
                    case 'Parser.Reply.value':
                        var $8023 = self.pst;
                        var $8024 = self.val;
                        var self = $8023;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8026 = self.err;
                                var $8027 = self.nam;
                                var $8028 = self.ini;
                                var $8029 = self.idx;
                                var $8030 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8016, $8026), $8027, $8028, $8029, $8030);
                                var _expr$17 = (() => {
                                    var $8033 = _func$1;
                                    var $8034 = $8024;
                                    let _f$18 = $8033;
                                    let _x$17;
                                    while ($8034._ === 'List.cons') {
                                        _x$17 = $8034.head;
                                        var $8033 = Kind$Term$app$(_f$18, _x$17);
                                        _f$18 = $8033;
                                        $8034 = $8034.tail;
                                    }
                                    return _f$18;
                                })();
                                var $8031 = Parser$Reply$value$(_reply$pst$16, _expr$17);
                                var $8025 = $8031;
                                break;
                        };
                        var $8017 = $8025;
                        break;
                };
                var $8015 = $8017;
                break;
        };
        return $8015;
    };
    const Kind$Parser$application$erased = x0 => x1 => Kind$Parser$application$erased$(x0, x1);

    function Kind$Parser$list_set$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8036 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8038 = self.err;
                        var self = $8036;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8040 = self.value;
                                var $8041 = Parser$Reply$error$(Parser$Error$combine$($8040, $8038));
                                var $8039 = $8041;
                                break;
                            case 'Maybe.none':
                                var $8042 = Parser$Reply$error$($8038);
                                var $8039 = $8042;
                                break;
                        };
                        var $8037 = $8039;
                        break;
                    case 'Parser.Reply.value':
                        var $8043 = self.pst;
                        var self = $8043;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8045 = self.err;
                                var $8046 = self.nam;
                                var $8047 = self.ini;
                                var $8048 = self.idx;
                                var $8049 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8036, $8045), $8046, $8047, $8048, $8049);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8051 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8053 = self.err;
                                                var self = $8051;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8055 = self.value;
                                                        var $8056 = Parser$Reply$error$(Parser$Error$combine$($8055, $8053));
                                                        var $8054 = $8056;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8057 = Parser$Reply$error$($8053);
                                                        var $8054 = $8057;
                                                        break;
                                                };
                                                var $8052 = $8054;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8058 = self.pst;
                                                var $8059 = self.val;
                                                var self = $8058;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8061 = self.err;
                                                        var $8062 = self.nam;
                                                        var $8063 = self.ini;
                                                        var $8064 = self.idx;
                                                        var $8065 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8051, $8061), $8062, $8063, $8064, $8065);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8067 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8069 = self.err;
                                                                        var self = $8067;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8071 = self.value;
                                                                                var $8072 = Parser$Reply$error$(Parser$Error$combine$($8071, $8069));
                                                                                var $8070 = $8072;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8073 = Parser$Reply$error$($8069);
                                                                                var $8070 = $8073;
                                                                                break;
                                                                        };
                                                                        var $8068 = $8070;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8074 = self.pst;
                                                                        var self = $8074;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8076 = self.err;
                                                                                var $8077 = self.nam;
                                                                                var $8078 = self.ini;
                                                                                var $8079 = self.idx;
                                                                                var $8080 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8067, $8076), $8077, $8078, $8079, $8080);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8082 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8084 = self.err;
                                                                                                var self = $8082;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8086 = self.value;
                                                                                                        var $8087 = Parser$Reply$error$(Parser$Error$combine$($8086, $8084));
                                                                                                        var $8085 = $8087;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8088 = Parser$Reply$error$($8084);
                                                                                                        var $8085 = $8088;
                                                                                                        break;
                                                                                                };
                                                                                                var $8083 = $8085;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8089 = self.pst;
                                                                                                var self = $8089;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8091 = self.err;
                                                                                                        var $8092 = self.nam;
                                                                                                        var $8093 = self.ini;
                                                                                                        var $8094 = self.idx;
                                                                                                        var $8095 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8082, $8091), $8092, $8093, $8094, $8095);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8097 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8099 = self.err;
                                                                                                                        var self = $8097;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8101 = self.value;
                                                                                                                                var $8102 = Parser$Reply$error$(Parser$Error$combine$($8101, $8099));
                                                                                                                                var $8100 = $8102;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8103 = Parser$Reply$error$($8099);
                                                                                                                                var $8100 = $8103;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8098 = $8100;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8104 = self.pst;
                                                                                                                        var $8105 = self.val;
                                                                                                                        var self = $8104;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8107 = self.err;
                                                                                                                                var $8108 = self.nam;
                                                                                                                                var $8109 = self.ini;
                                                                                                                                var $8110 = self.idx;
                                                                                                                                var $8111 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8097, $8107), $8108, $8109, $8110, $8111);
                                                                                                                                var _term$73 = Kind$Term$ref$("List.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8059);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8105);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _list$1);
                                                                                                                                var $8112 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8106 = $8112;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8098 = $8106;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8096 = $8098;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8090 = $8096;
                                                                                                        break;
                                                                                                };
                                                                                                var $8083 = $8090;
                                                                                                break;
                                                                                        };
                                                                                        var $8081 = $8083;
                                                                                        break;
                                                                                };
                                                                                var $8075 = $8081;
                                                                                break;
                                                                        };
                                                                        var $8068 = $8075;
                                                                        break;
                                                                };
                                                                var $8066 = $8068;
                                                                break;
                                                        };
                                                        var $8060 = $8066;
                                                        break;
                                                };
                                                var $8052 = $8060;
                                                break;
                                        };
                                        var $8050 = $8052;
                                        break;
                                };
                                var $8044 = $8050;
                                break;
                        };
                        var $8037 = $8044;
                        break;
                };
                var $8035 = $8037;
                break;
        };
        return $8035;
    };
    const Kind$Parser$list_set = x0 => x1 => Kind$Parser$list_set$(x0, x1);

    function Kind$Parser$list_get$(_list$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8114 = self.err;
                var _reply$8 = Kind$Parser$text_now$("[")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8116 = self.err;
                        var self = $8114;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8118 = self.value;
                                var $8119 = Parser$Reply$error$(Parser$Error$combine$($8118, $8116));
                                var $8117 = $8119;
                                break;
                            case 'Maybe.none':
                                var $8120 = Parser$Reply$error$($8116);
                                var $8117 = $8120;
                                break;
                        };
                        var $8115 = $8117;
                        break;
                    case 'Parser.Reply.value':
                        var $8121 = self.pst;
                        var self = $8121;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8123 = self.err;
                                var $8124 = self.nam;
                                var $8125 = self.ini;
                                var $8126 = self.idx;
                                var $8127 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8114, $8123), $8124, $8125, $8126, $8127);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8129 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8131 = self.err;
                                                var self = $8129;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8133 = self.value;
                                                        var $8134 = Parser$Reply$error$(Parser$Error$combine$($8133, $8131));
                                                        var $8132 = $8134;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8135 = Parser$Reply$error$($8131);
                                                        var $8132 = $8135;
                                                        break;
                                                };
                                                var $8130 = $8132;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8136 = self.pst;
                                                var $8137 = self.val;
                                                var self = $8136;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8139 = self.err;
                                                        var $8140 = self.nam;
                                                        var $8141 = self.ini;
                                                        var $8142 = self.idx;
                                                        var $8143 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8129, $8139), $8140, $8141, $8142, $8143);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8145 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("]", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8147 = self.err;
                                                                        var self = $8145;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8149 = self.value;
                                                                                var $8150 = Parser$Reply$error$(Parser$Error$combine$($8149, $8147));
                                                                                var $8148 = $8150;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8151 = Parser$Reply$error$($8147);
                                                                                var $8148 = $8151;
                                                                                break;
                                                                        };
                                                                        var $8146 = $8148;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8152 = self.pst;
                                                                        var self = $8152;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8154 = self.err;
                                                                                var $8155 = self.nam;
                                                                                var $8156 = self.ini;
                                                                                var $8157 = self.idx;
                                                                                var $8158 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8145, $8154), $8155, $8156, $8157, $8158);
                                                                                var _term$45 = Kind$Term$ref$("List.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8137);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _list$1);
                                                                                var $8159 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8153 = $8159;
                                                                                break;
                                                                        };
                                                                        var $8146 = $8153;
                                                                        break;
                                                                };
                                                                var $8144 = $8146;
                                                                break;
                                                        };
                                                        var $8138 = $8144;
                                                        break;
                                                };
                                                var $8130 = $8138;
                                                break;
                                        };
                                        var $8128 = $8130;
                                        break;
                                };
                                var $8122 = $8128;
                                break;
                        };
                        var $8115 = $8122;
                        break;
                };
                var $8113 = $8115;
                break;
        };
        return $8113;
    };
    const Kind$Parser$list_get = x0 => x1 => Kind$Parser$list_get$(x0, x1);

    function Kind$Parser$map_set$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8161 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8163 = self.err;
                        var self = $8161;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8165 = self.value;
                                var $8166 = Parser$Reply$error$(Parser$Error$combine$($8165, $8163));
                                var $8164 = $8166;
                                break;
                            case 'Maybe.none':
                                var $8167 = Parser$Reply$error$($8163);
                                var $8164 = $8167;
                                break;
                        };
                        var $8162 = $8164;
                        break;
                    case 'Parser.Reply.value':
                        var $8168 = self.pst;
                        var self = $8168;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8170 = self.err;
                                var $8171 = self.nam;
                                var $8172 = self.ini;
                                var $8173 = self.idx;
                                var $8174 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8161, $8170), $8171, $8172, $8173, $8174);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8176 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8178 = self.err;
                                                var self = $8176;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8180 = self.value;
                                                        var $8181 = Parser$Reply$error$(Parser$Error$combine$($8180, $8178));
                                                        var $8179 = $8181;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8182 = Parser$Reply$error$($8178);
                                                        var $8179 = $8182;
                                                        break;
                                                };
                                                var $8177 = $8179;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8183 = self.pst;
                                                var $8184 = self.val;
                                                var self = $8183;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8186 = self.err;
                                                        var $8187 = self.nam;
                                                        var $8188 = self.ini;
                                                        var $8189 = self.idx;
                                                        var $8190 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8176, $8186), $8187, $8188, $8189, $8190);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8192 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8194 = self.err;
                                                                        var self = $8192;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8196 = self.value;
                                                                                var $8197 = Parser$Reply$error$(Parser$Error$combine$($8196, $8194));
                                                                                var $8195 = $8197;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8198 = Parser$Reply$error$($8194);
                                                                                var $8195 = $8198;
                                                                                break;
                                                                        };
                                                                        var $8193 = $8195;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8199 = self.pst;
                                                                        var self = $8199;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8201 = self.err;
                                                                                var $8202 = self.nam;
                                                                                var $8203 = self.ini;
                                                                                var $8204 = self.idx;
                                                                                var $8205 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8192, $8201), $8202, $8203, $8204, $8205);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8207 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("<-", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8209 = self.err;
                                                                                                var self = $8207;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8211 = self.value;
                                                                                                        var $8212 = Parser$Reply$error$(Parser$Error$combine$($8211, $8209));
                                                                                                        var $8210 = $8212;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8213 = Parser$Reply$error$($8209);
                                                                                                        var $8210 = $8213;
                                                                                                        break;
                                                                                                };
                                                                                                var $8208 = $8210;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8214 = self.pst;
                                                                                                var self = $8214;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8216 = self.err;
                                                                                                        var $8217 = self.nam;
                                                                                                        var $8218 = self.ini;
                                                                                                        var $8219 = self.idx;
                                                                                                        var $8220 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8207, $8216), $8217, $8218, $8219, $8220);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8222 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8224 = self.err;
                                                                                                                        var self = $8222;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8226 = self.value;
                                                                                                                                var $8227 = Parser$Reply$error$(Parser$Error$combine$($8226, $8224));
                                                                                                                                var $8225 = $8227;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8228 = Parser$Reply$error$($8224);
                                                                                                                                var $8225 = $8228;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8223 = $8225;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8229 = self.pst;
                                                                                                                        var $8230 = self.val;
                                                                                                                        var self = $8229;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8232 = self.err;
                                                                                                                                var $8233 = self.nam;
                                                                                                                                var $8234 = self.ini;
                                                                                                                                var $8235 = self.idx;
                                                                                                                                var $8236 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8222, $8232), $8233, $8234, $8235, $8236);
                                                                                                                                var _term$73 = Kind$Term$ref$("Map.set");
                                                                                                                                var _term$74 = Kind$Term$app$(_term$73, Kind$Term$hol$(Bits$e));
                                                                                                                                var _term$75 = Kind$Term$app$(_term$74, $8184);
                                                                                                                                var _term$76 = Kind$Term$app$(_term$75, $8230);
                                                                                                                                var _term$77 = Kind$Term$app$(_term$76, _map$1);
                                                                                                                                var $8237 = Parser$Reply$value$(_reply$pst$72, _term$77);
                                                                                                                                var $8231 = $8237;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8223 = $8231;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8221 = $8223;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8215 = $8221;
                                                                                                        break;
                                                                                                };
                                                                                                var $8208 = $8215;
                                                                                                break;
                                                                                        };
                                                                                        var $8206 = $8208;
                                                                                        break;
                                                                                };
                                                                                var $8200 = $8206;
                                                                                break;
                                                                        };
                                                                        var $8193 = $8200;
                                                                        break;
                                                                };
                                                                var $8191 = $8193;
                                                                break;
                                                        };
                                                        var $8185 = $8191;
                                                        break;
                                                };
                                                var $8177 = $8185;
                                                break;
                                        };
                                        var $8175 = $8177;
                                        break;
                                };
                                var $8169 = $8175;
                                break;
                        };
                        var $8162 = $8169;
                        break;
                };
                var $8160 = $8162;
                break;
        };
        return $8160;
    };
    const Kind$Parser$map_set = x0 => x1 => Kind$Parser$map_set$(x0, x1);

    function Kind$Parser$map_get$(_map$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8239 = self.err;
                var _reply$8 = Kind$Parser$text_now$("{")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8241 = self.err;
                        var self = $8239;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8243 = self.value;
                                var $8244 = Parser$Reply$error$(Parser$Error$combine$($8243, $8241));
                                var $8242 = $8244;
                                break;
                            case 'Maybe.none':
                                var $8245 = Parser$Reply$error$($8241);
                                var $8242 = $8245;
                                break;
                        };
                        var $8240 = $8242;
                        break;
                    case 'Parser.Reply.value':
                        var $8246 = self.pst;
                        var self = $8246;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8248 = self.err;
                                var $8249 = self.nam;
                                var $8250 = self.ini;
                                var $8251 = self.idx;
                                var $8252 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8239, $8248), $8249, $8250, $8251, $8252);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8254 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8256 = self.err;
                                                var self = $8254;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8258 = self.value;
                                                        var $8259 = Parser$Reply$error$(Parser$Error$combine$($8258, $8256));
                                                        var $8257 = $8259;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8260 = Parser$Reply$error$($8256);
                                                        var $8257 = $8260;
                                                        break;
                                                };
                                                var $8255 = $8257;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8261 = self.pst;
                                                var $8262 = self.val;
                                                var self = $8261;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8264 = self.err;
                                                        var $8265 = self.nam;
                                                        var $8266 = self.ini;
                                                        var $8267 = self.idx;
                                                        var $8268 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8254, $8264), $8265, $8266, $8267, $8268);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8270 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("}", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8272 = self.err;
                                                                        var self = $8270;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8274 = self.value;
                                                                                var $8275 = Parser$Reply$error$(Parser$Error$combine$($8274, $8272));
                                                                                var $8273 = $8275;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8276 = Parser$Reply$error$($8272);
                                                                                var $8273 = $8276;
                                                                                break;
                                                                        };
                                                                        var $8271 = $8273;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8277 = self.pst;
                                                                        var self = $8277;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8279 = self.err;
                                                                                var $8280 = self.nam;
                                                                                var $8281 = self.ini;
                                                                                var $8282 = self.idx;
                                                                                var $8283 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8270, $8279), $8280, $8281, $8282, $8283);
                                                                                var _term$45 = Kind$Term$ref$("Map.get");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, $8262);
                                                                                var _term$48 = Kind$Term$app$(_term$47, _map$1);
                                                                                var $8284 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8278 = $8284;
                                                                                break;
                                                                        };
                                                                        var $8271 = $8278;
                                                                        break;
                                                                };
                                                                var $8269 = $8271;
                                                                break;
                                                        };
                                                        var $8263 = $8269;
                                                        break;
                                                };
                                                var $8255 = $8263;
                                                break;
                                        };
                                        var $8253 = $8255;
                                        break;
                                };
                                var $8247 = $8253;
                                break;
                        };
                        var $8240 = $8247;
                        break;
                };
                var $8238 = $8240;
                break;
        };
        return $8238;
    };
    const Kind$Parser$map_get = x0 => x1 => Kind$Parser$map_get$(x0, x1);

    function Kind$Term$set$(_expr$1, _fkey$2, _fval$3) {
        var $8285 = ({
            _: 'Kind.Term.set',
            'expr': _expr$1,
            'fkey': _fkey$2,
            'fval': _fval$3
        });
        return $8285;
    };
    const Kind$Term$set = x0 => x1 => x2 => Kind$Term$set$(x0, x1, x2);

    function Kind$Parser$field_set$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8287 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8289 = self.err;
                        var self = $8287;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8291 = self.value;
                                var $8292 = Parser$Reply$error$(Parser$Error$combine$($8291, $8289));
                                var $8290 = $8292;
                                break;
                            case 'Maybe.none':
                                var $8293 = Parser$Reply$error$($8289);
                                var $8290 = $8293;
                                break;
                        };
                        var $8288 = $8290;
                        break;
                    case 'Parser.Reply.value':
                        var $8294 = self.pst;
                        var self = $8294;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8296 = self.err;
                                var $8297 = self.nam;
                                var $8298 = self.ini;
                                var $8299 = self.idx;
                                var $8300 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8287, $8296), $8297, $8298, $8299, $8300);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8302 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8304 = self.err;
                                                var self = $8302;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8306 = self.value;
                                                        var $8307 = Parser$Reply$error$(Parser$Error$combine$($8306, $8304));
                                                        var $8305 = $8307;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8308 = Parser$Reply$error$($8304);
                                                        var $8305 = $8308;
                                                        break;
                                                };
                                                var $8303 = $8305;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8309 = self.pst;
                                                var $8310 = self.val;
                                                var self = $8309;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8312 = self.err;
                                                        var $8313 = self.nam;
                                                        var $8314 = self.ini;
                                                        var $8315 = self.idx;
                                                        var $8316 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8302, $8312), $8313, $8314, $8315, $8316);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8318 = self.err;
                                                                var _reply$36 = Kind$Parser$text$("<-", _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8320 = self.err;
                                                                        var self = $8318;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8322 = self.value;
                                                                                var $8323 = Parser$Reply$error$(Parser$Error$combine$($8322, $8320));
                                                                                var $8321 = $8323;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8324 = Parser$Reply$error$($8320);
                                                                                var $8321 = $8324;
                                                                                break;
                                                                        };
                                                                        var $8319 = $8321;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8325 = self.pst;
                                                                        var self = $8325;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8327 = self.err;
                                                                                var $8328 = self.nam;
                                                                                var $8329 = self.ini;
                                                                                var $8330 = self.idx;
                                                                                var $8331 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8318, $8327), $8328, $8329, $8330, $8331);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8333 = self.err;
                                                                                        var _reply$50 = Kind$Parser$term(_reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8335 = self.err;
                                                                                                var self = $8333;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8337 = self.value;
                                                                                                        var $8338 = Parser$Reply$error$(Parser$Error$combine$($8337, $8335));
                                                                                                        var $8336 = $8338;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8339 = Parser$Reply$error$($8335);
                                                                                                        var $8336 = $8339;
                                                                                                        break;
                                                                                                };
                                                                                                var $8334 = $8336;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8340 = self.pst;
                                                                                                var $8341 = self.val;
                                                                                                var self = $8340;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8343 = self.err;
                                                                                                        var $8344 = self.nam;
                                                                                                        var $8345 = self.ini;
                                                                                                        var $8346 = self.idx;
                                                                                                        var $8347 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8333, $8343), $8344, $8345, $8346, $8347);
                                                                                                        var $8348 = Parser$Reply$value$(_reply$pst$58, Kind$Term$set$(_term$1, $8310, $8341));
                                                                                                        var $8342 = $8348;
                                                                                                        break;
                                                                                                };
                                                                                                var $8334 = $8342;
                                                                                                break;
                                                                                        };
                                                                                        var $8332 = $8334;
                                                                                        break;
                                                                                };
                                                                                var $8326 = $8332;
                                                                                break;
                                                                        };
                                                                        var $8319 = $8326;
                                                                        break;
                                                                };
                                                                var $8317 = $8319;
                                                                break;
                                                        };
                                                        var $8311 = $8317;
                                                        break;
                                                };
                                                var $8303 = $8311;
                                                break;
                                        };
                                        var $8301 = $8303;
                                        break;
                                };
                                var $8295 = $8301;
                                break;
                        };
                        var $8288 = $8295;
                        break;
                };
                var $8286 = $8288;
                break;
        };
        return $8286;
    };
    const Kind$Parser$field_set = x0 => x1 => Kind$Parser$field_set$(x0, x1);

    function Kind$Term$get$(_expr$1, _fkey$2) {
        var $8349 = ({
            _: 'Kind.Term.get',
            'expr': _expr$1,
            'fkey': _fkey$2
        });
        return $8349;
    };
    const Kind$Term$get = x0 => x1 => Kind$Term$get$(x0, x1);

    function Kind$Parser$field_get$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8351 = self.err;
                var _reply$8 = Kind$Parser$text$("@", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8353 = self.err;
                        var self = $8351;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8355 = self.value;
                                var $8356 = Parser$Reply$error$(Parser$Error$combine$($8355, $8353));
                                var $8354 = $8356;
                                break;
                            case 'Maybe.none':
                                var $8357 = Parser$Reply$error$($8353);
                                var $8354 = $8357;
                                break;
                        };
                        var $8352 = $8354;
                        break;
                    case 'Parser.Reply.value':
                        var $8358 = self.pst;
                        var self = $8358;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8360 = self.err;
                                var $8361 = self.nam;
                                var $8362 = self.ini;
                                var $8363 = self.idx;
                                var $8364 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8351, $8360), $8361, $8362, $8363, $8364);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8366 = self.err;
                                        var _reply$22 = Kind$Parser$name1$(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8368 = self.err;
                                                var self = $8366;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8370 = self.value;
                                                        var $8371 = Parser$Reply$error$(Parser$Error$combine$($8370, $8368));
                                                        var $8369 = $8371;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8372 = Parser$Reply$error$($8368);
                                                        var $8369 = $8372;
                                                        break;
                                                };
                                                var $8367 = $8369;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8373 = self.pst;
                                                var $8374 = self.val;
                                                var self = $8373;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8376 = self.err;
                                                        var $8377 = self.nam;
                                                        var $8378 = self.ini;
                                                        var $8379 = self.idx;
                                                        var $8380 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8366, $8376), $8377, $8378, $8379, $8380);
                                                        var $8381 = Parser$Reply$value$(_reply$pst$30, Kind$Term$get$(_term$1, $8374));
                                                        var $8375 = $8381;
                                                        break;
                                                };
                                                var $8367 = $8375;
                                                break;
                                        };
                                        var $8365 = $8367;
                                        break;
                                };
                                var $8359 = $8365;
                                break;
                        };
                        var $8352 = $8359;
                        break;
                };
                var $8350 = $8352;
                break;
        };
        return $8350;
    };
    const Kind$Parser$field_get = x0 => x1 => Kind$Parser$field_get$(x0, x1);

    function Kind$Parser$arrow$(_xtyp$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8383 = self.err;
                var _reply$8 = Kind$Parser$text$("->", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8385 = self.err;
                        var self = $8383;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8387 = self.value;
                                var $8388 = Parser$Reply$error$(Parser$Error$combine$($8387, $8385));
                                var $8386 = $8388;
                                break;
                            case 'Maybe.none':
                                var $8389 = Parser$Reply$error$($8385);
                                var $8386 = $8389;
                                break;
                        };
                        var $8384 = $8386;
                        break;
                    case 'Parser.Reply.value':
                        var $8390 = self.pst;
                        var self = $8390;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8392 = self.err;
                                var $8393 = self.nam;
                                var $8394 = self.ini;
                                var $8395 = self.idx;
                                var $8396 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8383, $8392), $8393, $8394, $8395, $8396);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8398 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8400 = self.err;
                                                var self = $8398;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8402 = self.value;
                                                        var $8403 = Parser$Reply$error$(Parser$Error$combine$($8402, $8400));
                                                        var $8401 = $8403;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8404 = Parser$Reply$error$($8400);
                                                        var $8401 = $8404;
                                                        break;
                                                };
                                                var $8399 = $8401;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8405 = self.pst;
                                                var $8406 = self.val;
                                                var self = $8405;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8408 = self.err;
                                                        var $8409 = self.nam;
                                                        var $8410 = self.ini;
                                                        var $8411 = self.idx;
                                                        var $8412 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8398, $8408), $8409, $8410, $8411, $8412);
                                                        var $8413 = Parser$Reply$value$(_reply$pst$30, Kind$Term$all$(Bool$false, "", "", _xtyp$1, (_s$31 => _x$32 => {
                                                            var $8414 = $8406;
                                                            return $8414;
                                                        })));
                                                        var $8407 = $8413;
                                                        break;
                                                };
                                                var $8399 = $8407;
                                                break;
                                        };
                                        var $8397 = $8399;
                                        break;
                                };
                                var $8391 = $8397;
                                break;
                        };
                        var $8384 = $8391;
                        break;
                };
                var $8382 = $8384;
                break;
        };
        return $8382;
    };
    const Kind$Parser$arrow = x0 => x1 => Kind$Parser$arrow$(x0, x1);

    function Kind$Parser$concat$(_lst0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8416 = self.err;
                var _reply$8 = Kind$Parser$text$("++", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8418 = self.err;
                        var self = $8416;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8420 = self.value;
                                var $8421 = Parser$Reply$error$(Parser$Error$combine$($8420, $8418));
                                var $8419 = $8421;
                                break;
                            case 'Maybe.none':
                                var $8422 = Parser$Reply$error$($8418);
                                var $8419 = $8422;
                                break;
                        };
                        var $8417 = $8419;
                        break;
                    case 'Parser.Reply.value':
                        var $8423 = self.pst;
                        var self = $8423;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8425 = self.err;
                                var $8426 = self.nam;
                                var $8427 = self.ini;
                                var $8428 = self.idx;
                                var $8429 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8416, $8425), $8426, $8427, $8428, $8429);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8431 = self.err;
                                        var _reply$22 = Parser$text$(" ", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8433 = self.err;
                                                var self = $8431;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8435 = self.value;
                                                        var $8436 = Parser$Reply$error$(Parser$Error$combine$($8435, $8433));
                                                        var $8434 = $8436;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8437 = Parser$Reply$error$($8433);
                                                        var $8434 = $8437;
                                                        break;
                                                };
                                                var $8432 = $8434;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8438 = self.pst;
                                                var self = $8438;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8440 = self.err;
                                                        var $8441 = self.nam;
                                                        var $8442 = self.ini;
                                                        var $8443 = self.idx;
                                                        var $8444 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8431, $8440), $8441, $8442, $8443, $8444);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8446 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8448 = self.err;
                                                                        var self = $8446;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8450 = self.value;
                                                                                var $8451 = Parser$Reply$error$(Parser$Error$combine$($8450, $8448));
                                                                                var $8449 = $8451;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8452 = Parser$Reply$error$($8448);
                                                                                var $8449 = $8452;
                                                                                break;
                                                                        };
                                                                        var $8447 = $8449;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8453 = self.pst;
                                                                        var $8454 = self.val;
                                                                        var self = $8453;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8456 = self.err;
                                                                                var $8457 = self.nam;
                                                                                var $8458 = self.ini;
                                                                                var $8459 = self.idx;
                                                                                var $8460 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8446, $8456), $8457, $8458, $8459, $8460);
                                                                                var _term$45 = Kind$Term$ref$("List.concat");
                                                                                var _term$46 = Kind$Term$app$(_term$45, Kind$Term$hol$(Bits$e));
                                                                                var _term$47 = Kind$Term$app$(_term$46, _lst0$1);
                                                                                var _term$48 = Kind$Term$app$(_term$47, $8454);
                                                                                var $8461 = Parser$Reply$value$(_reply$pst$44, _term$48);
                                                                                var $8455 = $8461;
                                                                                break;
                                                                        };
                                                                        var $8447 = $8455;
                                                                        break;
                                                                };
                                                                var $8445 = $8447;
                                                                break;
                                                        };
                                                        var $8439 = $8445;
                                                        break;
                                                };
                                                var $8432 = $8439;
                                                break;
                                        };
                                        var $8430 = $8432;
                                        break;
                                };
                                var $8424 = $8430;
                                break;
                        };
                        var $8417 = $8424;
                        break;
                };
                var $8415 = $8417;
                break;
        };
        return $8415;
    };
    const Kind$Parser$concat = x0 => x1 => Kind$Parser$concat$(x0, x1);

    function Kind$Parser$equality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8463 = self.err;
                var _reply$8 = Kind$Parser$text$("==", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8465 = self.err;
                        var self = $8463;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8467 = self.value;
                                var $8468 = Parser$Reply$error$(Parser$Error$combine$($8467, $8465));
                                var $8466 = $8468;
                                break;
                            case 'Maybe.none':
                                var $8469 = Parser$Reply$error$($8465);
                                var $8466 = $8469;
                                break;
                        };
                        var $8464 = $8466;
                        break;
                    case 'Parser.Reply.value':
                        var $8470 = self.pst;
                        var self = $8470;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8472 = self.err;
                                var $8473 = self.nam;
                                var $8474 = self.ini;
                                var $8475 = self.idx;
                                var $8476 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8463, $8472), $8473, $8474, $8475, $8476);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8478 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8480 = self.err;
                                                var self = $8478;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8482 = self.value;
                                                        var $8483 = Parser$Reply$error$(Parser$Error$combine$($8482, $8480));
                                                        var $8481 = $8483;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8484 = Parser$Reply$error$($8480);
                                                        var $8481 = $8484;
                                                        break;
                                                };
                                                var $8479 = $8481;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8485 = self.pst;
                                                var $8486 = self.val;
                                                var self = $8485;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8488 = self.err;
                                                        var $8489 = self.nam;
                                                        var $8490 = self.ini;
                                                        var $8491 = self.idx;
                                                        var $8492 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8478, $8488), $8489, $8490, $8491, $8492);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8486);
                                                        var $8493 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8487 = $8493;
                                                        break;
                                                };
                                                var $8479 = $8487;
                                                break;
                                        };
                                        var $8477 = $8479;
                                        break;
                                };
                                var $8471 = $8477;
                                break;
                        };
                        var $8464 = $8471;
                        break;
                };
                var $8462 = $8464;
                break;
        };
        return $8462;
    };
    const Kind$Parser$equality = x0 => x1 => Kind$Parser$equality$(x0, x1);

    function Kind$Term$ope$(_name$1, _arg0$2, _arg1$3) {
        var $8494 = ({
            _: 'Kind.Term.ope',
            'name': _name$1,
            'arg0': _arg0$2,
            'arg1': _arg1$3
        });
        return $8494;
    };
    const Kind$Term$ope = x0 => x1 => x2 => Kind$Term$ope$(x0, x1, x2);

    function Kind$Parser$op$(_sym$1, _ref$2, _val0$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $8496 = self.err;
                var _reply$10 = Kind$Parser$text$(_sym$1, _pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8498 = self.err;
                        var self = $8496;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8500 = self.value;
                                var $8501 = Parser$Reply$error$(Parser$Error$combine$($8500, $8498));
                                var $8499 = $8501;
                                break;
                            case 'Maybe.none':
                                var $8502 = Parser$Reply$error$($8498);
                                var $8499 = $8502;
                                break;
                        };
                        var $8497 = $8499;
                        break;
                    case 'Parser.Reply.value':
                        var $8503 = self.pst;
                        var self = $8503;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8505 = self.err;
                                var $8506 = self.nam;
                                var $8507 = self.ini;
                                var $8508 = self.idx;
                                var $8509 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($8496, $8505), $8506, $8507, $8508, $8509);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8511 = self.err;
                                        var _reply$24 = Kind$Parser$term(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8513 = self.err;
                                                var self = $8511;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8515 = self.value;
                                                        var $8516 = Parser$Reply$error$(Parser$Error$combine$($8515, $8513));
                                                        var $8514 = $8516;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8517 = Parser$Reply$error$($8513);
                                                        var $8514 = $8517;
                                                        break;
                                                };
                                                var $8512 = $8514;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8518 = self.pst;
                                                var $8519 = self.val;
                                                var self = $8518;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8521 = self.err;
                                                        var $8522 = self.nam;
                                                        var $8523 = self.ini;
                                                        var $8524 = self.idx;
                                                        var $8525 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($8511, $8521), $8522, $8523, $8524, $8525);
                                                        var $8526 = Parser$Reply$value$(_reply$pst$32, Kind$Term$ope$(_sym$1, _val0$3, $8519));
                                                        var $8520 = $8526;
                                                        break;
                                                };
                                                var $8512 = $8520;
                                                break;
                                        };
                                        var $8510 = $8512;
                                        break;
                                };
                                var $8504 = $8510;
                                break;
                        };
                        var $8497 = $8504;
                        break;
                };
                var $8495 = $8497;
                break;
        };
        return $8495;
    };
    const Kind$Parser$op = x0 => x1 => x2 => x3 => Kind$Parser$op$(x0, x1, x2, x3);
    const Kind$Parser$add = Kind$Parser$op("+")("Nat.add");
    const Kind$Parser$sub = Kind$Parser$op("-")("Nat.sub");
    const Kind$Parser$mul = Kind$Parser$op("*")("Nat.mul");
    const Kind$Parser$div = Kind$Parser$op("/")("Nat.div");
    const Kind$Parser$mod = Kind$Parser$op("%")("Nat.mod");
    const Kind$Parser$ltn = Kind$Parser$op("<?")("Nat.ltn");
    const Kind$Parser$lte = Kind$Parser$op("<=?")("Nat.lte");
    const Kind$Parser$eql = Kind$Parser$op("=?")("Nat.eql");
    const Kind$Parser$gte = Kind$Parser$op(">=?")("Nat.gte");
    const Kind$Parser$gtn = Kind$Parser$op(">?")("Nat.gtn");
    const Kind$Parser$and = Kind$Parser$op("&&")("Bool.and");
    const Kind$Parser$or = Kind$Parser$op("||")("Bool.or");

    function Kind$Parser$default$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8528 = self.err;
                var _reply$8 = Kind$Parser$text$("<>", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8530 = self.err;
                        var self = $8528;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8532 = self.value;
                                var $8533 = Parser$Reply$error$(Parser$Error$combine$($8532, $8530));
                                var $8531 = $8533;
                                break;
                            case 'Maybe.none':
                                var $8534 = Parser$Reply$error$($8530);
                                var $8531 = $8534;
                                break;
                        };
                        var $8529 = $8531;
                        break;
                    case 'Parser.Reply.value':
                        var $8535 = self.pst;
                        var self = $8535;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8537 = self.err;
                                var $8538 = self.nam;
                                var $8539 = self.ini;
                                var $8540 = self.idx;
                                var $8541 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8528, $8537), $8538, $8539, $8540, $8541);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8543 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8545 = self.err;
                                                var self = $8543;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8547 = self.value;
                                                        var $8548 = Parser$Reply$error$(Parser$Error$combine$($8547, $8545));
                                                        var $8546 = $8548;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8549 = Parser$Reply$error$($8545);
                                                        var $8546 = $8549;
                                                        break;
                                                };
                                                var $8544 = $8546;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8550 = self.pst;
                                                var $8551 = self.val;
                                                var self = $8550;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8553 = self.err;
                                                        var $8554 = self.nam;
                                                        var $8555 = self.ini;
                                                        var $8556 = self.idx;
                                                        var $8557 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8543, $8553), $8554, $8555, $8556, $8557);
                                                        var _term$31 = Kind$Term$ref$("Maybe.default");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8551);
                                                        var $8558 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8552 = $8558;
                                                        break;
                                                };
                                                var $8544 = $8552;
                                                break;
                                        };
                                        var $8542 = $8544;
                                        break;
                                };
                                var $8536 = $8542;
                                break;
                        };
                        var $8529 = $8536;
                        break;
                };
                var $8527 = $8529;
                break;
        };
        return $8527;
    };
    const Kind$Parser$default = x0 => x1 => Kind$Parser$default$(x0, x1);

    function Kind$Parser$cons$(_head$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8560 = self.err;
                var _reply$8 = Kind$Parser$text$("&", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8562 = self.err;
                        var self = $8560;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8564 = self.value;
                                var $8565 = Parser$Reply$error$(Parser$Error$combine$($8564, $8562));
                                var $8563 = $8565;
                                break;
                            case 'Maybe.none':
                                var $8566 = Parser$Reply$error$($8562);
                                var $8563 = $8566;
                                break;
                        };
                        var $8561 = $8563;
                        break;
                    case 'Parser.Reply.value':
                        var $8567 = self.pst;
                        var self = $8567;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8569 = self.err;
                                var $8570 = self.nam;
                                var $8571 = self.ini;
                                var $8572 = self.idx;
                                var $8573 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8560, $8569), $8570, $8571, $8572, $8573);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8575 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8577 = self.err;
                                                var self = $8575;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8579 = self.value;
                                                        var $8580 = Parser$Reply$error$(Parser$Error$combine$($8579, $8577));
                                                        var $8578 = $8580;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8581 = Parser$Reply$error$($8577);
                                                        var $8578 = $8581;
                                                        break;
                                                };
                                                var $8576 = $8578;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8582 = self.pst;
                                                var $8583 = self.val;
                                                var self = $8582;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8585 = self.err;
                                                        var $8586 = self.nam;
                                                        var $8587 = self.ini;
                                                        var $8588 = self.idx;
                                                        var $8589 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8575, $8585), $8586, $8587, $8588, $8589);
                                                        var _term$31 = Kind$Term$ref$("List.cons");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _head$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8583);
                                                        var $8590 = Parser$Reply$value$(_reply$pst$30, _term$34);
                                                        var $8584 = $8590;
                                                        break;
                                                };
                                                var $8576 = $8584;
                                                break;
                                        };
                                        var $8574 = $8576;
                                        break;
                                };
                                var $8568 = $8574;
                                break;
                        };
                        var $8561 = $8568;
                        break;
                };
                var $8559 = $8561;
                break;
        };
        return $8559;
    };
    const Kind$Parser$cons = x0 => x1 => Kind$Parser$cons$(x0, x1);

    function Kind$Parser$string_concat$(_str0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8592 = self.err;
                var _reply$8 = Kind$Parser$text$("|", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8594 = self.err;
                        var self = $8592;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8596 = self.value;
                                var $8597 = Parser$Reply$error$(Parser$Error$combine$($8596, $8594));
                                var $8595 = $8597;
                                break;
                            case 'Maybe.none':
                                var $8598 = Parser$Reply$error$($8594);
                                var $8595 = $8598;
                                break;
                        };
                        var $8593 = $8595;
                        break;
                    case 'Parser.Reply.value':
                        var $8599 = self.pst;
                        var self = $8599;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8601 = self.err;
                                var $8602 = self.nam;
                                var $8603 = self.ini;
                                var $8604 = self.idx;
                                var $8605 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8592, $8601), $8602, $8603, $8604, $8605);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8607 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8609 = self.err;
                                                var self = $8607;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8611 = self.value;
                                                        var $8612 = Parser$Reply$error$(Parser$Error$combine$($8611, $8609));
                                                        var $8610 = $8612;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8613 = Parser$Reply$error$($8609);
                                                        var $8610 = $8613;
                                                        break;
                                                };
                                                var $8608 = $8610;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8614 = self.pst;
                                                var $8615 = self.val;
                                                var self = $8614;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8617 = self.err;
                                                        var $8618 = self.nam;
                                                        var $8619 = self.ini;
                                                        var $8620 = self.idx;
                                                        var $8621 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8607, $8617), $8618, $8619, $8620, $8621);
                                                        var _term$31 = Kind$Term$ref$("String.concat");
                                                        var _term$32 = Kind$Term$app$(_term$31, _str0$1);
                                                        var _term$33 = Kind$Term$app$(_term$32, $8615);
                                                        var $8622 = Parser$Reply$value$(_reply$pst$30, _term$33);
                                                        var $8616 = $8622;
                                                        break;
                                                };
                                                var $8608 = $8616;
                                                break;
                                        };
                                        var $8606 = $8608;
                                        break;
                                };
                                var $8600 = $8606;
                                break;
                        };
                        var $8593 = $8600;
                        break;
                };
                var $8591 = $8593;
                break;
        };
        return $8591;
    };
    const Kind$Parser$string_concat = x0 => x1 => Kind$Parser$string_concat$(x0, x1);

    function Kind$Parser$sigma$(_val0$1) {
        var $8623 = Kind$Parser$block("sigma")((_pst$2 => {
            var self = _pst$2;
            switch (self._) {
                case 'Parser.State.new':
                    var $8625 = self.err;
                    var _reply$8 = Kind$Parser$text$("~", _pst$2);
                    var self = _reply$8;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8627 = self.err;
                            var self = $8625;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8629 = self.value;
                                    var $8630 = Parser$Reply$error$(Parser$Error$combine$($8629, $8627));
                                    var $8628 = $8630;
                                    break;
                                case 'Maybe.none':
                                    var $8631 = Parser$Reply$error$($8627);
                                    var $8628 = $8631;
                                    break;
                            };
                            var $8626 = $8628;
                            break;
                        case 'Parser.Reply.value':
                            var $8632 = self.pst;
                            var self = $8632;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8634 = self.err;
                                    var $8635 = self.nam;
                                    var $8636 = self.ini;
                                    var $8637 = self.idx;
                                    var $8638 = self.str;
                                    var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8625, $8634), $8635, $8636, $8637, $8638);
                                    var self = _reply$pst$16;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8640 = self.err;
                                            var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                            var self = _reply$22;
                                            switch (self._) {
                                                case 'Parser.Reply.error':
                                                    var $8642 = self.err;
                                                    var self = $8640;
                                                    switch (self._) {
                                                        case 'Maybe.some':
                                                            var $8644 = self.value;
                                                            var $8645 = Parser$Reply$error$(Parser$Error$combine$($8644, $8642));
                                                            var $8643 = $8645;
                                                            break;
                                                        case 'Maybe.none':
                                                            var $8646 = Parser$Reply$error$($8642);
                                                            var $8643 = $8646;
                                                            break;
                                                    };
                                                    var $8641 = $8643;
                                                    break;
                                                case 'Parser.Reply.value':
                                                    var $8647 = self.pst;
                                                    var $8648 = self.val;
                                                    var self = $8647;
                                                    switch (self._) {
                                                        case 'Parser.State.new':
                                                            var $8650 = self.err;
                                                            var $8651 = self.nam;
                                                            var $8652 = self.ini;
                                                            var $8653 = self.idx;
                                                            var $8654 = self.str;
                                                            var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8640, $8650), $8651, $8652, $8653, $8654);
                                                            var _term$31 = Kind$Term$ref$("Sigma.new");
                                                            var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                            var _term$33 = Kind$Term$app$(_term$32, Kind$Term$hol$(Bits$e));
                                                            var _term$34 = Kind$Term$app$(_term$33, _val0$1);
                                                            var _term$35 = Kind$Term$app$(_term$34, $8648);
                                                            var $8655 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                            var $8649 = $8655;
                                                            break;
                                                    };
                                                    var $8641 = $8649;
                                                    break;
                                            };
                                            var $8639 = $8641;
                                            break;
                                    };
                                    var $8633 = $8639;
                                    break;
                            };
                            var $8626 = $8633;
                            break;
                    };
                    var $8624 = $8626;
                    break;
            };
            return $8624;
        }));
        return $8623;
    };
    const Kind$Parser$sigma = x0 => Kind$Parser$sigma$(x0);

    function Kind$Parser$inequality$(_val0$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8657 = self.err;
                var _reply$8 = Kind$Parser$text$("!=", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8659 = self.err;
                        var self = $8657;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8661 = self.value;
                                var $8662 = Parser$Reply$error$(Parser$Error$combine$($8661, $8659));
                                var $8660 = $8662;
                                break;
                            case 'Maybe.none':
                                var $8663 = Parser$Reply$error$($8659);
                                var $8660 = $8663;
                                break;
                        };
                        var $8658 = $8660;
                        break;
                    case 'Parser.Reply.value':
                        var $8664 = self.pst;
                        var self = $8664;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8666 = self.err;
                                var $8667 = self.nam;
                                var $8668 = self.ini;
                                var $8669 = self.idx;
                                var $8670 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8657, $8666), $8667, $8668, $8669, $8670);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8672 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8674 = self.err;
                                                var self = $8672;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8676 = self.value;
                                                        var $8677 = Parser$Reply$error$(Parser$Error$combine$($8676, $8674));
                                                        var $8675 = $8677;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8678 = Parser$Reply$error$($8674);
                                                        var $8675 = $8678;
                                                        break;
                                                };
                                                var $8673 = $8675;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8679 = self.pst;
                                                var $8680 = self.val;
                                                var self = $8679;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8682 = self.err;
                                                        var $8683 = self.nam;
                                                        var $8684 = self.ini;
                                                        var $8685 = self.idx;
                                                        var $8686 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8672, $8682), $8683, $8684, $8685, $8686);
                                                        var _term$31 = Kind$Term$ref$("Equal");
                                                        var _term$32 = Kind$Term$app$(_term$31, Kind$Term$hol$(Bits$e));
                                                        var _term$33 = Kind$Term$app$(_term$32, _val0$1);
                                                        var _term$34 = Kind$Term$app$(_term$33, $8680);
                                                        var _term$35 = Kind$Term$app$(Kind$Term$ref$("Not"), _term$34);
                                                        var $8687 = Parser$Reply$value$(_reply$pst$30, _term$35);
                                                        var $8681 = $8687;
                                                        break;
                                                };
                                                var $8673 = $8681;
                                                break;
                                        };
                                        var $8671 = $8673;
                                        break;
                                };
                                var $8665 = $8671;
                                break;
                        };
                        var $8658 = $8665;
                        break;
                };
                var $8656 = $8658;
                break;
        };
        return $8656;
    };
    const Kind$Parser$inequality = x0 => x1 => Kind$Parser$inequality$(x0, x1);

    function Kind$Parser$rewrite$(_subt$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8689 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8691 = self.err;
                        var self = $8689;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8693 = self.value;
                                var $8694 = Parser$Reply$error$(Parser$Error$combine$($8693, $8691));
                                var $8692 = $8694;
                                break;
                            case 'Maybe.none':
                                var $8695 = Parser$Reply$error$($8691);
                                var $8692 = $8695;
                                break;
                        };
                        var $8690 = $8692;
                        break;
                    case 'Parser.Reply.value':
                        var $8696 = self.pst;
                        var self = $8696;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8698 = self.err;
                                var $8699 = self.nam;
                                var $8700 = self.ini;
                                var $8701 = self.idx;
                                var $8702 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8689, $8698), $8699, $8700, $8701, $8702);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8704 = self.err;
                                        var _reply$22 = Kind$Parser$text$("rewrite", _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8706 = self.err;
                                                var self = $8704;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8708 = self.value;
                                                        var $8709 = Parser$Reply$error$(Parser$Error$combine$($8708, $8706));
                                                        var $8707 = $8709;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8710 = Parser$Reply$error$($8706);
                                                        var $8707 = $8710;
                                                        break;
                                                };
                                                var $8705 = $8707;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8711 = self.pst;
                                                var self = $8711;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8713 = self.err;
                                                        var $8714 = self.nam;
                                                        var $8715 = self.ini;
                                                        var $8716 = self.idx;
                                                        var $8717 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8704, $8713), $8714, $8715, $8716, $8717);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8719 = self.err;
                                                                var _reply$36 = Kind$Parser$name1$(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8721 = self.err;
                                                                        var self = $8719;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8723 = self.value;
                                                                                var $8724 = Parser$Reply$error$(Parser$Error$combine$($8723, $8721));
                                                                                var $8722 = $8724;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8725 = Parser$Reply$error$($8721);
                                                                                var $8722 = $8725;
                                                                                break;
                                                                        };
                                                                        var $8720 = $8722;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8726 = self.pst;
                                                                        var $8727 = self.val;
                                                                        var self = $8726;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8729 = self.err;
                                                                                var $8730 = self.nam;
                                                                                var $8731 = self.ini;
                                                                                var $8732 = self.idx;
                                                                                var $8733 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8719, $8729), $8730, $8731, $8732, $8733);
                                                                                var self = _reply$pst$44;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $8735 = self.err;
                                                                                        var _reply$50 = Kind$Parser$text$("in", _reply$pst$44);
                                                                                        var self = _reply$50;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $8737 = self.err;
                                                                                                var self = $8735;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $8739 = self.value;
                                                                                                        var $8740 = Parser$Reply$error$(Parser$Error$combine$($8739, $8737));
                                                                                                        var $8738 = $8740;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $8741 = Parser$Reply$error$($8737);
                                                                                                        var $8738 = $8741;
                                                                                                        break;
                                                                                                };
                                                                                                var $8736 = $8738;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $8742 = self.pst;
                                                                                                var self = $8742;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $8744 = self.err;
                                                                                                        var $8745 = self.nam;
                                                                                                        var $8746 = self.ini;
                                                                                                        var $8747 = self.idx;
                                                                                                        var $8748 = self.str;
                                                                                                        var _reply$pst$58 = Parser$State$new$(Parser$Error$maybe_combine$($8735, $8744), $8745, $8746, $8747, $8748);
                                                                                                        var self = _reply$pst$58;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $8750 = self.err;
                                                                                                                var _reply$64 = Kind$Parser$term(_reply$pst$58);
                                                                                                                var self = _reply$64;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $8752 = self.err;
                                                                                                                        var self = $8750;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $8754 = self.value;
                                                                                                                                var $8755 = Parser$Reply$error$(Parser$Error$combine$($8754, $8752));
                                                                                                                                var $8753 = $8755;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $8756 = Parser$Reply$error$($8752);
                                                                                                                                var $8753 = $8756;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8751 = $8753;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $8757 = self.pst;
                                                                                                                        var $8758 = self.val;
                                                                                                                        var self = $8757;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $8760 = self.err;
                                                                                                                                var $8761 = self.nam;
                                                                                                                                var $8762 = self.ini;
                                                                                                                                var $8763 = self.idx;
                                                                                                                                var $8764 = self.str;
                                                                                                                                var _reply$pst$72 = Parser$State$new$(Parser$Error$maybe_combine$($8750, $8760), $8761, $8762, $8763, $8764);
                                                                                                                                var self = _reply$pst$72;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $8766 = self.err;
                                                                                                                                        var _reply$78 = Kind$Parser$text$("with", _reply$pst$72);
                                                                                                                                        var self = _reply$78;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $8768 = self.err;
                                                                                                                                                var self = $8766;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $8770 = self.value;
                                                                                                                                                        var $8771 = Parser$Reply$error$(Parser$Error$combine$($8770, $8768));
                                                                                                                                                        var $8769 = $8771;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $8772 = Parser$Reply$error$($8768);
                                                                                                                                                        var $8769 = $8772;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8767 = $8769;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $8773 = self.pst;
                                                                                                                                                var self = $8773;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $8775 = self.err;
                                                                                                                                                        var $8776 = self.nam;
                                                                                                                                                        var $8777 = self.ini;
                                                                                                                                                        var $8778 = self.idx;
                                                                                                                                                        var $8779 = self.str;
                                                                                                                                                        var _reply$pst$86 = Parser$State$new$(Parser$Error$maybe_combine$($8766, $8775), $8776, $8777, $8778, $8779);
                                                                                                                                                        var self = _reply$pst$86;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $8781 = self.err;
                                                                                                                                                                var _reply$92 = Kind$Parser$term(_reply$pst$86);
                                                                                                                                                                var self = _reply$92;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $8783 = self.err;
                                                                                                                                                                        var self = $8781;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $8785 = self.value;
                                                                                                                                                                                var $8786 = Parser$Reply$error$(Parser$Error$combine$($8785, $8783));
                                                                                                                                                                                var $8784 = $8786;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $8787 = Parser$Reply$error$($8783);
                                                                                                                                                                                var $8784 = $8787;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8782 = $8784;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $8788 = self.pst;
                                                                                                                                                                        var $8789 = self.val;
                                                                                                                                                                        var self = $8788;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $8791 = self.err;
                                                                                                                                                                                var $8792 = self.nam;
                                                                                                                                                                                var $8793 = self.ini;
                                                                                                                                                                                var $8794 = self.idx;
                                                                                                                                                                                var $8795 = self.str;
                                                                                                                                                                                var _reply$pst$100 = Parser$State$new$(Parser$Error$maybe_combine$($8781, $8791), $8792, $8793, $8794, $8795);
                                                                                                                                                                                var _term$101 = Kind$Term$ref$("Equal.rewrite");
                                                                                                                                                                                var _term$102 = Kind$Term$app$(_term$101, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$103 = Kind$Term$app$(_term$102, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$104 = Kind$Term$app$(_term$103, Kind$Term$hol$(Bits$e));
                                                                                                                                                                                var _term$105 = Kind$Term$app$(_term$104, $8789);
                                                                                                                                                                                var _term$106 = Kind$Term$app$(_term$105, Kind$Term$lam$($8727, (_x$106 => {
                                                                                                                                                                                    var $8797 = $8758;
                                                                                                                                                                                    return $8797;
                                                                                                                                                                                })));
                                                                                                                                                                                var _term$107 = Kind$Term$app$(_term$106, _subt$1);
                                                                                                                                                                                var $8796 = Parser$Reply$value$(_reply$pst$100, _term$107);
                                                                                                                                                                                var $8790 = $8796;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $8782 = $8790;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $8780 = $8782;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $8774 = $8780;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $8767 = $8774;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $8765 = $8767;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $8759 = $8765;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $8751 = $8759;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $8749 = $8751;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $8743 = $8749;
                                                                                                        break;
                                                                                                };
                                                                                                var $8736 = $8743;
                                                                                                break;
                                                                                        };
                                                                                        var $8734 = $8736;
                                                                                        break;
                                                                                };
                                                                                var $8728 = $8734;
                                                                                break;
                                                                        };
                                                                        var $8720 = $8728;
                                                                        break;
                                                                };
                                                                var $8718 = $8720;
                                                                break;
                                                        };
                                                        var $8712 = $8718;
                                                        break;
                                                };
                                                var $8705 = $8712;
                                                break;
                                        };
                                        var $8703 = $8705;
                                        break;
                                };
                                var $8697 = $8703;
                                break;
                        };
                        var $8690 = $8697;
                        break;
                };
                var $8688 = $8690;
                break;
        };
        return $8688;
    };
    const Kind$Parser$rewrite = x0 => x1 => Kind$Parser$rewrite$(x0, x1);

    function Kind$Parser$annotation$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8799 = self.err;
                var _reply$8 = Kind$Parser$text$("::", _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8801 = self.err;
                        var self = $8799;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8803 = self.value;
                                var $8804 = Parser$Reply$error$(Parser$Error$combine$($8803, $8801));
                                var $8802 = $8804;
                                break;
                            case 'Maybe.none':
                                var $8805 = Parser$Reply$error$($8801);
                                var $8802 = $8805;
                                break;
                        };
                        var $8800 = $8802;
                        break;
                    case 'Parser.Reply.value':
                        var $8806 = self.pst;
                        var self = $8806;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8808 = self.err;
                                var $8809 = self.nam;
                                var $8810 = self.ini;
                                var $8811 = self.idx;
                                var $8812 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8799, $8808), $8809, $8810, $8811, $8812);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8814 = self.err;
                                        var _reply$22 = Kind$Parser$term(_reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8816 = self.err;
                                                var self = $8814;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8818 = self.value;
                                                        var $8819 = Parser$Reply$error$(Parser$Error$combine$($8818, $8816));
                                                        var $8817 = $8819;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8820 = Parser$Reply$error$($8816);
                                                        var $8817 = $8820;
                                                        break;
                                                };
                                                var $8815 = $8817;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8821 = self.pst;
                                                var $8822 = self.val;
                                                var self = $8821;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8824 = self.err;
                                                        var $8825 = self.nam;
                                                        var $8826 = self.ini;
                                                        var $8827 = self.idx;
                                                        var $8828 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8814, $8824), $8825, $8826, $8827, $8828);
                                                        var $8829 = Parser$Reply$value$(_reply$pst$30, Kind$Term$ann$(Bool$false, _term$1, $8822));
                                                        var $8823 = $8829;
                                                        break;
                                                };
                                                var $8815 = $8823;
                                                break;
                                        };
                                        var $8813 = $8815;
                                        break;
                                };
                                var $8807 = $8813;
                                break;
                        };
                        var $8800 = $8807;
                        break;
                };
                var $8798 = $8800;
                break;
        };
        return $8798;
    };
    const Kind$Parser$annotation = x0 => x1 => Kind$Parser$annotation$(x0, x1);

    function Kind$Parser$application$hole$(_term$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8831 = self.err;
                var _reply$8 = Kind$Parser$text_now$("!")(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8833 = self.err;
                        var self = $8831;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8835 = self.value;
                                var $8836 = Parser$Reply$error$(Parser$Error$combine$($8835, $8833));
                                var $8834 = $8836;
                                break;
                            case 'Maybe.none':
                                var $8837 = Parser$Reply$error$($8833);
                                var $8834 = $8837;
                                break;
                        };
                        var $8832 = $8834;
                        break;
                    case 'Parser.Reply.value':
                        var $8838 = self.pst;
                        var self = $8838;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8840 = self.err;
                                var $8841 = self.nam;
                                var $8842 = self.ini;
                                var $8843 = self.idx;
                                var $8844 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8831, $8840), $8841, $8842, $8843, $8844);
                                var $8845 = Parser$Reply$value$(_reply$pst$16, Kind$Term$app$(_term$1, Kind$Term$hol$(Bits$e)));
                                var $8839 = $8845;
                                break;
                        };
                        var $8832 = $8839;
                        break;
                };
                var $8830 = $8832;
                break;
        };
        return $8830;
    };
    const Kind$Parser$application$hole = x0 => x1 => Kind$Parser$application$hole$(x0, x1);

    function Kind$Parser$term$suffix$(_term$1, _pst$2) {
        var Kind$Parser$term$suffix$ = (_term$1, _pst$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _pst$2]
        });
        var Kind$Parser$term$suffix = _term$1 => _pst$2 => Kind$Parser$term$suffix$(_term$1, _pst$2);
        var arg = [_term$1, _pst$2];
        while (true) {
            let [_term$1, _pst$2] = arg;
            var R = (() => {
                var self = _pst$2;
                switch (self._) {
                    case 'Parser.State.new':
                        var $8846 = self.err;
                        var $8847 = self.nam;
                        var $8848 = self.ini;
                        var $8849 = self.idx;
                        var $8850 = self.str;
                        var _suffix_parser$8 = Parser$choice(List$cons$(Kind$Parser$application(_term$1), List$cons$(Kind$Parser$application$erased(_term$1), List$cons$(Kind$Parser$list_set(_term$1), List$cons$(Kind$Parser$list_get(_term$1), List$cons$(Kind$Parser$map_set(_term$1), List$cons$(Kind$Parser$map_get(_term$1), List$cons$(Kind$Parser$field_set(_term$1), List$cons$(Kind$Parser$field_get(_term$1), List$cons$(Kind$Parser$arrow(_term$1), List$cons$(Kind$Parser$concat(_term$1), List$cons$(Kind$Parser$equality(_term$1), List$cons$(Kind$Parser$add(_term$1), List$cons$(Kind$Parser$sub(_term$1), List$cons$(Kind$Parser$mul(_term$1), List$cons$(Kind$Parser$div(_term$1), List$cons$(Kind$Parser$mod(_term$1), List$cons$(Kind$Parser$ltn(_term$1), List$cons$(Kind$Parser$lte(_term$1), List$cons$(Kind$Parser$eql(_term$1), List$cons$(Kind$Parser$gte(_term$1), List$cons$(Kind$Parser$gtn(_term$1), List$cons$(Kind$Parser$and(_term$1), List$cons$(Kind$Parser$or(_term$1), List$cons$(Kind$Parser$default(_term$1), List$cons$(Kind$Parser$cons(_term$1), List$cons$(Kind$Parser$string_concat(_term$1), List$cons$(Kind$Parser$sigma$(_term$1), List$cons$(Kind$Parser$inequality(_term$1), List$cons$(Kind$Parser$rewrite(_term$1), List$cons$(Kind$Parser$annotation(_term$1), List$cons$(Kind$Parser$application$hole(_term$1), List$nil))))))))))))))))))))))))))))))));
                        var self = _suffix_parser$8(_pst$2);
                        switch (self._) {
                            case 'Parser.Reply.error':
                                var $8852 = self.err;
                                var self = $8852;
                                switch (self._) {
                                    case 'Parser.Error.new':
                                        var _err$14 = Parser$Error$maybe_combine$($8846, Maybe$some$($8852));
                                        var _pst$15 = Parser$State$new$(_err$14, $8847, $8848, $8849, $8850);
                                        var $8854 = Parser$Reply$value$(_pst$15, _term$1);
                                        var $8853 = $8854;
                                        break;
                                };
                                var $8851 = $8853;
                                break;
                            case 'Parser.Reply.value':
                                var $8855 = self.pst;
                                var $8856 = self.val;
                                var $8857 = Kind$Parser$term$suffix$($8856, $8855);
                                var $8851 = $8857;
                                break;
                        };
                        return $8851;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Parser$term$suffix = x0 => x1 => Kind$Parser$term$suffix$(x0, x1);
    const Kind$Parser$term = Kind$Parser$block("term")((_pst$1 => {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $8859 = self.err;
                var _reply$7 = Parser$choice$(List$cons$(Kind$Parser$dom, List$cons$(Kind$Parser$forall, List$cons$(Kind$Parser$lambda, List$cons$(Kind$Parser$lambda$erased, List$cons$(Kind$Parser$parenthesis, List$cons$(Kind$Parser$letforrange$u32$((_x$7 => {
                    var $8861 = Kind$Parser$term;
                    return $8861;
                })), List$cons$(Kind$Parser$letforrange$u32$with$((_x$7 => {
                    var $8862 = Kind$Parser$term;
                    return $8862;
                })), List$cons$(Kind$Parser$letforrange$nat$((_x$7 => {
                    var $8863 = Kind$Parser$term;
                    return $8863;
                })), List$cons$(Kind$Parser$letforrange$nat$with$((_x$7 => {
                    var $8864 = Kind$Parser$term;
                    return $8864;
                })), List$cons$(Kind$Parser$letforin$((_x$7 => {
                    var $8865 = Kind$Parser$term;
                    return $8865;
                })), List$cons$(Kind$Parser$letforin$with$((_x$7 => {
                    var $8866 = Kind$Parser$term;
                    return $8866;
                })), List$cons$(Kind$Parser$letwhile$((_x$7 => {
                    var $8867 = Kind$Parser$term;
                    return $8867;
                })), List$cons$(Kind$Parser$letwhile$with$((_x$7 => {
                    var $8868 = Kind$Parser$term;
                    return $8868;
                })), List$cons$(Kind$Parser$let$((_x$7 => {
                    var $8869 = Kind$Parser$term;
                    return $8869;
                })), List$cons$(Kind$Parser$let$omit$((_x$7 => {
                    var $8870 = Kind$Parser$term;
                    return $8870;
                })), List$cons$(Kind$Parser$getwhile$((_x$7 => {
                    var $8871 = Kind$Parser$term;
                    return $8871;
                })), List$cons$(Kind$Parser$getwhile$with((_x$7 => {
                    var $8872 = Kind$Parser$term;
                    return $8872;
                })), List$cons$(Kind$Parser$get$((_x$7 => {
                    var $8873 = Kind$Parser$term;
                    return $8873;
                })), List$cons$(Kind$Parser$get$omit$((_x$7 => {
                    var $8874 = Kind$Parser$term;
                    return $8874;
                })), List$cons$(Kind$Parser$def$((_x$7 => {
                    var $8875 = Kind$Parser$term;
                    return $8875;
                })), List$cons$(Kind$Parser$goal_rewrite, List$cons$(Kind$Parser$if, List$cons$(Kind$Parser$char, List$cons$(Kind$Parser$string$(34), List$cons$(Kind$Parser$string$(96), List$cons$(Kind$Parser$new, List$cons$(Kind$Parser$sigma$type, List$cons$(Kind$Parser$some, List$cons$(Kind$Parser$not, List$cons$(Kind$Parser$left, List$cons$(Kind$Parser$right, List$cons$(Kind$Parser$apply, List$cons$(Kind$Parser$chain, List$cons$(Kind$Parser$mirror, List$cons$(Kind$Parser$list, List$cons$(Kind$Parser$map, List$cons$(Kind$Parser$log$((_x$7 => {
                    var $8876 = Kind$Parser$term;
                    return $8876;
                })), List$cons$(Kind$Parser$do, List$cons$(Kind$Parser$case, List$cons$(Kind$Parser$open$((_x$7 => {
                    var $8877 = Kind$Parser$term;
                    return $8877;
                })), List$cons$(Kind$Parser$without, List$cons$(Kind$Parser$switch, List$cons$(Kind$Parser$goal, List$cons$(Kind$Parser$hole, List$cons$(Kind$Parser$float$64, List$cons$(Kind$Parser$float$32, List$cons$(Kind$Parser$machine_integer$signed$(256n), List$cons$(Kind$Parser$machine_integer$signed$(128n), List$cons$(Kind$Parser$machine_integer$signed$(64n), List$cons$(Kind$Parser$machine_integer$signed$(32n), List$cons$(Kind$Parser$machine_integer$signed$(16n), List$cons$(Kind$Parser$machine_integer$signed$(8n), List$cons$(Kind$Parser$machine_integer$unsigned$(256n), List$cons$(Kind$Parser$machine_integer$unsigned$(128n), List$cons$(Kind$Parser$machine_integer$unsigned$(64n), List$cons$(Kind$Parser$machine_integer$unsigned$(32n), List$cons$(Kind$Parser$machine_integer$unsigned$(16n), List$cons$(Kind$Parser$machine_integer$unsigned$(8n), List$cons$(Kind$Parser$u64, List$cons$(Kind$Parser$u32, List$cons$(Kind$Parser$u16, List$cons$(Kind$Parser$u8, List$cons$(Kind$Parser$num, List$cons$(Kind$Parser$reference, List$cons$((_pst$7 => {
                    var self = _pst$7;
                    switch (self._) {
                        case 'Parser.State.new':
                            var $8879 = self.err;
                            var _reply$13 = Kind$Parser$spaces(_pst$7);
                            var self = _reply$13;
                            switch (self._) {
                                case 'Parser.Reply.error':
                                    var $8881 = self.err;
                                    var self = $8879;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $8883 = self.value;
                                            var $8884 = Parser$Reply$error$(Parser$Error$combine$($8883, $8881));
                                            var $8882 = $8884;
                                            break;
                                        case 'Maybe.none':
                                            var $8885 = Parser$Reply$error$($8881);
                                            var $8882 = $8885;
                                            break;
                                    };
                                    var $8880 = $8882;
                                    break;
                                case 'Parser.Reply.value':
                                    var $8886 = self.pst;
                                    var self = $8886;
                                    switch (self._) {
                                        case 'Parser.State.new':
                                            var $8888 = self.err;
                                            var $8889 = self.nam;
                                            var $8890 = self.ini;
                                            var $8891 = self.idx;
                                            var $8892 = self.str;
                                            var _reply$pst$21 = Parser$State$new$(Parser$Error$maybe_combine$($8879, $8888), $8889, $8890, $8891, $8892);
                                            var $8893 = Parser$fail$("Expected a term.", _reply$pst$21);
                                            var $8887 = $8893;
                                            break;
                                    };
                                    var $8880 = $8887;
                                    break;
                            };
                            var $8878 = $8880;
                            break;
                    };
                    return $8878;
                }), List$nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))), _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8894 = self.err;
                        var self = $8859;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8896 = self.value;
                                var $8897 = Parser$Reply$error$(Parser$Error$combine$($8896, $8894));
                                var $8895 = $8897;
                                break;
                            case 'Maybe.none':
                                var $8898 = Parser$Reply$error$($8894);
                                var $8895 = $8898;
                                break;
                        };
                        var $8860 = $8895;
                        break;
                    case 'Parser.Reply.value':
                        var $8899 = self.pst;
                        var $8900 = self.val;
                        var self = $8899;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8902 = self.err;
                                var $8903 = self.nam;
                                var $8904 = self.ini;
                                var $8905 = self.idx;
                                var $8906 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($8859, $8902), $8903, $8904, $8905, $8906);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8908 = self.err;
                                        var _reply$21 = Kind$Parser$term$suffix$($8900, _reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8910 = self.err;
                                                var self = $8908;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8912 = self.value;
                                                        var $8913 = Parser$Reply$error$(Parser$Error$combine$($8912, $8910));
                                                        var $8911 = $8913;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8914 = Parser$Reply$error$($8910);
                                                        var $8911 = $8914;
                                                        break;
                                                };
                                                var $8909 = $8911;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8915 = self.pst;
                                                var $8916 = self.val;
                                                var self = $8915;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8918 = self.err;
                                                        var $8919 = self.nam;
                                                        var $8920 = self.ini;
                                                        var $8921 = self.idx;
                                                        var $8922 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($8908, $8918), $8919, $8920, $8921, $8922);
                                                        var $8923 = Parser$Reply$value$(_reply$pst$29, $8916);
                                                        var $8917 = $8923;
                                                        break;
                                                };
                                                var $8909 = $8917;
                                                break;
                                        };
                                        var $8907 = $8909;
                                        break;
                                };
                                var $8901 = $8907;
                                break;
                        };
                        var $8860 = $8901;
                        break;
                };
                var $8858 = $8860;
                break;
        };
        return $8858;
    }));

    function Kind$Parser$name_term$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $8925 = self.err;
                var _reply$8 = Kind$Parser$name$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $8927 = self.err;
                        var self = $8925;
                        switch (self._) {
                            case 'Maybe.some':
                                var $8929 = self.value;
                                var $8930 = Parser$Reply$error$(Parser$Error$combine$($8929, $8927));
                                var $8928 = $8930;
                                break;
                            case 'Maybe.none':
                                var $8931 = Parser$Reply$error$($8927);
                                var $8928 = $8931;
                                break;
                        };
                        var $8926 = $8928;
                        break;
                    case 'Parser.Reply.value':
                        var $8932 = self.pst;
                        var $8933 = self.val;
                        var self = $8932;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $8935 = self.err;
                                var $8936 = self.nam;
                                var $8937 = self.ini;
                                var $8938 = self.idx;
                                var $8939 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($8925, $8935), $8936, $8937, $8938, $8939);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $8941 = self.err;
                                        var _reply$22 = Kind$Parser$text$(_sep$1, _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $8943 = self.err;
                                                var self = $8941;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $8945 = self.value;
                                                        var $8946 = Parser$Reply$error$(Parser$Error$combine$($8945, $8943));
                                                        var $8944 = $8946;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $8947 = Parser$Reply$error$($8943);
                                                        var $8944 = $8947;
                                                        break;
                                                };
                                                var $8942 = $8944;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $8948 = self.pst;
                                                var self = $8948;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $8950 = self.err;
                                                        var $8951 = self.nam;
                                                        var $8952 = self.ini;
                                                        var $8953 = self.idx;
                                                        var $8954 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($8941, $8950), $8951, $8952, $8953, $8954);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $8956 = self.err;
                                                                var _reply$36 = Kind$Parser$term(_reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $8958 = self.err;
                                                                        var self = $8956;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $8960 = self.value;
                                                                                var $8961 = Parser$Reply$error$(Parser$Error$combine$($8960, $8958));
                                                                                var $8959 = $8961;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $8962 = Parser$Reply$error$($8958);
                                                                                var $8959 = $8962;
                                                                                break;
                                                                        };
                                                                        var $8957 = $8959;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $8963 = self.pst;
                                                                        var $8964 = self.val;
                                                                        var self = $8963;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $8966 = self.err;
                                                                                var $8967 = self.nam;
                                                                                var $8968 = self.ini;
                                                                                var $8969 = self.idx;
                                                                                var $8970 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($8956, $8966), $8967, $8968, $8969, $8970);
                                                                                var $8971 = Parser$Reply$value$(_reply$pst$44, Pair$new$($8933, $8964));
                                                                                var $8965 = $8971;
                                                                                break;
                                                                        };
                                                                        var $8957 = $8965;
                                                                        break;
                                                                };
                                                                var $8955 = $8957;
                                                                break;
                                                        };
                                                        var $8949 = $8955;
                                                        break;
                                                };
                                                var $8942 = $8949;
                                                break;
                                        };
                                        var $8940 = $8942;
                                        break;
                                };
                                var $8934 = $8940;
                                break;
                        };
                        var $8926 = $8934;
                        break;
                };
                var $8924 = $8926;
                break;
        };
        return $8924;
    };
    const Kind$Parser$name_term = x0 => x1 => Kind$Parser$name_term$(x0, x1);

    function Kind$Binder$new$(_eras$1, _name$2, _term$3) {
        var $8972 = ({
            _: 'Kind.Binder.new',
            'eras': _eras$1,
            'name': _name$2,
            'term': _term$3
        });
        return $8972;
    };
    const Kind$Binder$new = x0 => x1 => x2 => Kind$Binder$new$(x0, x1, x2);

    function Kind$Parser$binder$homo$(_sep$1, _eras$2) {
        var self = _eras$2;
        if (self) {
            var $8974 = "<";
            var _open$3 = $8974;
        } else {
            var $8975 = "(";
            var _open$3 = $8975;
        };
        var self = _eras$2;
        if (self) {
            var $8976 = ">";
            var _clos$4 = $8976;
        } else {
            var $8977 = ")";
            var _clos$4 = $8977;
        };
        var $8973 = (_pst$5 => {
            var self = _pst$5;
            switch (self._) {
                case 'Parser.State.new':
                    var $8979 = self.err;
                    var _reply$11 = Kind$Parser$items1$(_open$3, Kind$Parser$name_term(_sep$1), _clos$4)(_pst$5);
                    var self = _reply$11;
                    switch (self._) {
                        case 'Parser.Reply.error':
                            var $8981 = self.err;
                            var self = $8979;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $8983 = self.value;
                                    var $8984 = Parser$Reply$error$(Parser$Error$combine$($8983, $8981));
                                    var $8982 = $8984;
                                    break;
                                case 'Maybe.none':
                                    var $8985 = Parser$Reply$error$($8981);
                                    var $8982 = $8985;
                                    break;
                            };
                            var $8980 = $8982;
                            break;
                        case 'Parser.Reply.value':
                            var $8986 = self.pst;
                            var $8987 = self.val;
                            var self = $8986;
                            switch (self._) {
                                case 'Parser.State.new':
                                    var $8989 = self.err;
                                    var $8990 = self.nam;
                                    var $8991 = self.ini;
                                    var $8992 = self.idx;
                                    var $8993 = self.str;
                                    var _reply$pst$19 = Parser$State$new$(Parser$Error$maybe_combine$($8979, $8989), $8990, $8991, $8992, $8993);
                                    var $8994 = Parser$Reply$value$(_reply$pst$19, List$mapped$($8987, (_pair$20 => {
                                        var self = _pair$20;
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $8996 = self.fst;
                                                var $8997 = self.snd;
                                                var $8998 = Kind$Binder$new$(_eras$2, $8996, $8997);
                                                var $8995 = $8998;
                                                break;
                                        };
                                        return $8995;
                                    })));
                                    var $8988 = $8994;
                                    break;
                            };
                            var $8980 = $8988;
                            break;
                    };
                    var $8978 = $8980;
                    break;
            };
            return $8978;
        });
        return $8973;
    };
    const Kind$Parser$binder$homo = x0 => x1 => Kind$Parser$binder$homo$(x0, x1);

    function List$concat$(_as$2, _bs$3) {
        var self = _as$2;
        switch (self._) {
            case 'List.cons':
                var $9000 = self.head;
                var $9001 = self.tail;
                var $9002 = List$cons$($9000, List$concat$($9001, _bs$3));
                var $8999 = $9002;
                break;
            case 'List.nil':
                var $9003 = _bs$3;
                var $8999 = $9003;
                break;
        };
        return $8999;
    };
    const List$concat = x0 => x1 => List$concat$(x0, x1);

    function List$flatten$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $9005 = self.head;
                var $9006 = self.tail;
                var $9007 = List$concat$($9005, List$flatten$($9006));
                var $9004 = $9007;
                break;
            case 'List.nil':
                var $9008 = List$nil;
                var $9004 = $9008;
                break;
        };
        return $9004;
    };
    const List$flatten = x0 => List$flatten$(x0);

    function Kind$Parser$binder$(_sep$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9010 = self.err;
                var _reply$8 = Parser$many1$(Parser$choice(List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$true), List$cons$(Kind$Parser$binder$homo$(_sep$1, Bool$false), List$nil))), _pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9012 = self.err;
                        var self = $9010;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9014 = self.value;
                                var $9015 = Parser$Reply$error$(Parser$Error$combine$($9014, $9012));
                                var $9013 = $9015;
                                break;
                            case 'Maybe.none':
                                var $9016 = Parser$Reply$error$($9012);
                                var $9013 = $9016;
                                break;
                        };
                        var $9011 = $9013;
                        break;
                    case 'Parser.Reply.value':
                        var $9017 = self.pst;
                        var $9018 = self.val;
                        var self = $9017;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9020 = self.err;
                                var $9021 = self.nam;
                                var $9022 = self.ini;
                                var $9023 = self.idx;
                                var $9024 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9010, $9020), $9021, $9022, $9023, $9024);
                                var $9025 = Parser$Reply$value$(_reply$pst$16, List$flatten$($9018));
                                var $9019 = $9025;
                                break;
                        };
                        var $9011 = $9019;
                        break;
                };
                var $9009 = $9011;
                break;
        };
        return $9009;
    };
    const Kind$Parser$binder = x0 => x1 => Kind$Parser$binder$(x0, x1);
    const List$length = a0 => (list_length(a0));

    function Kind$Parser$forall$make$(_binds$1, _body$2) {
        var self = _binds$1;
        switch (self._) {
            case 'List.cons':
                var $9027 = self.head;
                var $9028 = self.tail;
                var self = $9027;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9030 = self.eras;
                        var $9031 = self.name;
                        var $9032 = self.term;
                        var $9033 = Kind$Term$all$($9030, "", $9031, $9032, (_s$8 => _x$9 => {
                            var $9034 = Kind$Parser$forall$make$($9028, _body$2);
                            return $9034;
                        }));
                        var $9029 = $9033;
                        break;
                };
                var $9026 = $9029;
                break;
            case 'List.nil':
                var $9035 = _body$2;
                var $9026 = $9035;
                break;
        };
        return $9026;
    };
    const Kind$Parser$forall$make = x0 => x1 => Kind$Parser$forall$make$(x0, x1);

    function List$at_last$(_index$2, _list$3) {
        var $9036 = List$at$(_index$2, List$reverse$(_list$3));
        return $9036;
    };
    const List$at_last = x0 => x1 => List$at_last$(x0, x1);

    function Kind$Term$var$(_name$1, _indx$2) {
        var $9037 = ({
            _: 'Kind.Term.var',
            'name': _name$1,
            'indx': _indx$2
        });
        return $9037;
    };
    const Kind$Term$var = x0 => x1 => Kind$Term$var$(x0, x1);

    function Kind$Context$get_name_skips$(_name$1) {
        var self = _name$1;
        if (self.length === 0) {
            var $9039 = Pair$new$("", 0n);
            var $9038 = $9039;
        } else {
            var $9040 = self.charCodeAt(0);
            var $9041 = self.slice(1);
            var _name_skips$4 = Kind$Context$get_name_skips$($9041);
            var self = _name_skips$4;
            switch (self._) {
                case 'Pair.new':
                    var $9043 = self.fst;
                    var $9044 = self.snd;
                    var self = ($9040 === 94);
                    if (self) {
                        var $9046 = Pair$new$($9043, Nat$succ$($9044));
                        var $9045 = $9046;
                    } else {
                        var $9047 = Pair$new$(String$cons$($9040, $9043), $9044);
                        var $9045 = $9047;
                    };
                    var $9042 = $9045;
                    break;
            };
            var $9038 = $9042;
        };
        return $9038;
    };
    const Kind$Context$get_name_skips = x0 => Kind$Context$get_name_skips$(x0);

    function Kind$Name$eql$(_a$1, _b$2) {
        var $9048 = (_a$1 === _b$2);
        return $9048;
    };
    const Kind$Name$eql = x0 => x1 => Kind$Name$eql$(x0, x1);

    function Kind$Context$find$go$(_name$1, _skip$2, _ctx$3) {
        var Kind$Context$find$go$ = (_name$1, _skip$2, _ctx$3) => ({
            ctr: 'TCO',
            arg: [_name$1, _skip$2, _ctx$3]
        });
        var Kind$Context$find$go = _name$1 => _skip$2 => _ctx$3 => Kind$Context$find$go$(_name$1, _skip$2, _ctx$3);
        var arg = [_name$1, _skip$2, _ctx$3];
        while (true) {
            let [_name$1, _skip$2, _ctx$3] = arg;
            var R = (() => {
                var self = _ctx$3;
                switch (self._) {
                    case 'List.cons':
                        var $9049 = self.head;
                        var $9050 = self.tail;
                        var self = $9049;
                        switch (self._) {
                            case 'Pair.new':
                                var $9052 = self.fst;
                                var $9053 = self.snd;
                                var self = Kind$Name$eql$(_name$1, $9052);
                                if (self) {
                                    var self = _skip$2;
                                    if (self === 0n) {
                                        var $9056 = Maybe$some$($9053);
                                        var $9055 = $9056;
                                    } else {
                                        var $9057 = (self - 1n);
                                        var $9058 = Kind$Context$find$go$(_name$1, $9057, $9050);
                                        var $9055 = $9058;
                                    };
                                    var $9054 = $9055;
                                } else {
                                    var $9059 = Kind$Context$find$go$(_name$1, _skip$2, $9050);
                                    var $9054 = $9059;
                                };
                                var $9051 = $9054;
                                break;
                        };
                        return $9051;
                    case 'List.nil':
                        var $9060 = Maybe$none;
                        return $9060;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Context$find$go = x0 => x1 => x2 => Kind$Context$find$go$(x0, x1, x2);

    function Kind$Context$find$(_name$1, _ctx$2) {
        var self = Kind$Context$get_name_skips$(_name$1);
        switch (self._) {
            case 'Pair.new':
                var $9062 = self.fst;
                var $9063 = self.snd;
                var $9064 = Kind$Context$find$go$($9062, $9063, _ctx$2);
                var $9061 = $9064;
                break;
        };
        return $9061;
    };
    const Kind$Context$find = x0 => x1 => Kind$Context$find$(x0, x1);

    function Kind$Path$o$(_path$1, _x$2) {
        var $9065 = _path$1((_x$2 + '0'));
        return $9065;
    };
    const Kind$Path$o = x0 => x1 => Kind$Path$o$(x0, x1);

    function Kind$Path$i$(_path$1, _x$2) {
        var $9066 = _path$1((_x$2 + '1'));
        return $9066;
    };
    const Kind$Path$i = x0 => x1 => Kind$Path$i$(x0, x1);

    function Kind$Path$to_bits$(_path$1) {
        var $9067 = _path$1(Bits$e);
        return $9067;
    };
    const Kind$Path$to_bits = x0 => Kind$Path$to_bits$(x0);

    function Kind$Term$bind$(_vars$1, _path$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.var':
                var $9069 = self.name;
                var $9070 = self.indx;
                var self = List$at_last$($9070, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9072 = self.value;
                        var $9073 = Pair$snd$($9072);
                        var $9071 = $9073;
                        break;
                    case 'Maybe.none':
                        var $9074 = Kind$Term$var$($9069, $9070);
                        var $9071 = $9074;
                        break;
                };
                var $9068 = $9071;
                break;
            case 'Kind.Term.ref':
                var $9075 = self.name;
                var self = Kind$Context$find$($9075, _vars$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $9077 = self.value;
                        var $9078 = $9077;
                        var $9076 = $9078;
                        break;
                    case 'Maybe.none':
                        var $9079 = Kind$Term$ref$($9075);
                        var $9076 = $9079;
                        break;
                };
                var $9068 = $9076;
                break;
            case 'Kind.Term.all':
                var $9080 = self.eras;
                var $9081 = self.self;
                var $9082 = self.name;
                var $9083 = self.xtyp;
                var $9084 = self.body;
                var _vlen$9 = (list_length(_vars$1));
                var $9085 = Kind$Term$all$($9080, $9081, $9082, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9083), (_s$10 => _x$11 => {
                    var $9086 = Kind$Term$bind$(List$cons$(Pair$new$($9082, _x$11), List$cons$(Pair$new$($9081, _s$10), _vars$1)), Kind$Path$i(_path$2), $9084(Kind$Term$var$($9081, _vlen$9))(Kind$Term$var$($9082, Nat$succ$(_vlen$9))));
                    return $9086;
                }));
                var $9068 = $9085;
                break;
            case 'Kind.Term.lam':
                var $9087 = self.name;
                var $9088 = self.body;
                var _vlen$6 = (list_length(_vars$1));
                var $9089 = Kind$Term$lam$($9087, (_x$7 => {
                    var $9090 = Kind$Term$bind$(List$cons$(Pair$new$($9087, _x$7), _vars$1), Kind$Path$o(_path$2), $9088(Kind$Term$var$($9087, _vlen$6)));
                    return $9090;
                }));
                var $9068 = $9089;
                break;
            case 'Kind.Term.app':
                var $9091 = self.func;
                var $9092 = self.argm;
                var $9093 = Kind$Term$app$(Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9091), Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9092));
                var $9068 = $9093;
                break;
            case 'Kind.Term.let':
                var $9094 = self.name;
                var $9095 = self.expr;
                var $9096 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9097 = Kind$Term$let$($9094, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9095), (_x$8 => {
                    var $9098 = Kind$Term$bind$(List$cons$(Pair$new$($9094, _x$8), _vars$1), Kind$Path$i(_path$2), $9096(Kind$Term$var$($9094, _vlen$7)));
                    return $9098;
                }));
                var $9068 = $9097;
                break;
            case 'Kind.Term.def':
                var $9099 = self.name;
                var $9100 = self.expr;
                var $9101 = self.body;
                var _vlen$7 = (list_length(_vars$1));
                var $9102 = Kind$Term$def$($9099, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9100), (_x$8 => {
                    var $9103 = Kind$Term$bind$(List$cons$(Pair$new$($9099, _x$8), _vars$1), Kind$Path$i(_path$2), $9101(Kind$Term$var$($9099, _vlen$7)));
                    return $9103;
                }));
                var $9068 = $9102;
                break;
            case 'Kind.Term.ann':
                var $9104 = self.done;
                var $9105 = self.term;
                var $9106 = self.type;
                var $9107 = Kind$Term$ann$($9104, Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9105), Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9106));
                var $9068 = $9107;
                break;
            case 'Kind.Term.gol':
                var $9108 = self.name;
                var $9109 = self.dref;
                var $9110 = self.verb;
                var $9111 = Kind$Term$gol$($9108, $9109, $9110);
                var $9068 = $9111;
                break;
            case 'Kind.Term.nat':
                var $9112 = self.natx;
                var $9113 = Kind$Term$nat$($9112);
                var $9068 = $9113;
                break;
            case 'Kind.Term.chr':
                var $9114 = self.chrx;
                var $9115 = Kind$Term$chr$($9114);
                var $9068 = $9115;
                break;
            case 'Kind.Term.str':
                var $9116 = self.strx;
                var $9117 = Kind$Term$str$($9116);
                var $9068 = $9117;
                break;
            case 'Kind.Term.num':
                var $9118 = self.sign;
                var $9119 = self.numb;
                var $9120 = self.frac;
                var $9121 = Kind$Term$num$($9118, $9119, $9120);
                var $9068 = $9121;
                break;
            case 'Kind.Term.cse':
                var $9122 = self.expr;
                var $9123 = self.name;
                var $9124 = self.with;
                var $9125 = self.cses;
                var $9126 = self.moti;
                var _expr$10 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9122);
                var _name$11 = $9123;
                var _wyth$12 = List$mapped$($9124, (_with_var$12 => {
                    var self = _with_var$12;
                    switch (self._) {
                        case 'Kind.Ann.new':
                            var $9129 = self.name;
                            var $9130 = self.term;
                            var $9131 = self.type;
                            var _with_var_term$16 = Kind$Term$bind$(_vars$1, _path$2, $9130);
                            var self = $9131;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $9133 = self.value;
                                    var $9134 = Maybe$some$(Kind$Term$bind$(_vars$1, _path$2, $9133));
                                    var _with_var_type$17 = $9134;
                                    break;
                                case 'Maybe.none':
                                    var $9135 = Maybe$none;
                                    var _with_var_type$17 = $9135;
                                    break;
                            };
                            var $9132 = Kind$Ann$new$($9129, _with_var_term$16, _with_var_type$17);
                            var $9128 = $9132;
                            break;
                    };
                    return $9128;
                }));
                var _cses$13 = $9125;
                var _moti$14 = $9126;
                var $9127 = Kind$Term$cse$(Kind$Path$to_bits$(_path$2), _expr$10, _name$11, _wyth$12, _cses$13, _moti$14);
                var $9068 = $9127;
                break;
            case 'Kind.Term.new':
                var $9136 = self.args;
                var _args$5 = List$fold$($9136, (_path$5 => {
                    var $9138 = List$nil;
                    return $9138;
                }), (_arg$5 => _res$6 => _path$7 => {
                    var $9139 = List$cons$(Kind$Term$bind$(_vars$1, _path$7, _arg$5), _res$6(Kind$Path$o(_path$7)));
                    return $9139;
                }))(_path$2);
                var $9137 = Kind$Term$new$(_args$5);
                var $9068 = $9137;
                break;
            case 'Kind.Term.get':
                var $9140 = self.expr;
                var $9141 = self.fkey;
                var _expr$6 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9140);
                var $9142 = Kind$Term$get$(_expr$6, $9141);
                var $9068 = $9142;
                break;
            case 'Kind.Term.set':
                var $9143 = self.expr;
                var $9144 = self.fkey;
                var $9145 = self.fval;
                var _expr$7 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9143);
                var _fval$8 = Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9145);
                var $9146 = Kind$Term$set$(_expr$7, $9144, _fval$8);
                var $9068 = $9146;
                break;
            case 'Kind.Term.ope':
                var $9147 = self.name;
                var $9148 = self.arg0;
                var $9149 = self.arg1;
                var _arg0$7 = Kind$Term$bind$(_vars$1, Kind$Path$o(_path$2), $9148);
                var _arg1$8 = Kind$Term$bind$(_vars$1, Kind$Path$i(_path$2), $9149);
                var $9150 = Kind$Term$ope$($9147, _arg0$7, _arg1$8);
                var $9068 = $9150;
                break;
            case 'Kind.Term.ori':
                var $9151 = self.orig;
                var $9152 = self.expr;
                var $9153 = Kind$Term$ori$($9151, Kind$Term$bind$(_vars$1, _path$2, $9152));
                var $9068 = $9153;
                break;
            case 'Kind.Term.typ':
                var $9154 = Kind$Term$typ;
                var $9068 = $9154;
                break;
            case 'Kind.Term.hol':
                var $9155 = Kind$Term$hol$(Kind$Path$to_bits$(_path$2));
                var $9068 = $9155;
                break;
        };
        return $9068;
    };
    const Kind$Term$bind = x0 => x1 => x2 => Kind$Term$bind$(x0, x1, x2);

    function Trampoline$call$(_t$2) {
        var Trampoline$call$ = (_t$2) => ({
            ctr: 'TCO',
            arg: [_t$2]
        });
        var Trampoline$call = _t$2 => Trampoline$call$(_t$2);
        var arg = [_t$2];
        while (true) {
            let [_t$2] = arg;
            var R = (() => {
                var self = _t$2;
                switch (self._) {
                    case 'Trampoline.done':
                        var $9156 = self.value;
                        var $9157 = $9156;
                        return $9157;
                    case 'Trampoline.wrap':
                        var $9158 = self.value;
                        var $9159 = Trampoline$call$($9158(Unit$new));
                        return $9159;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Trampoline$call = x0 => Trampoline$call$(x0);

    function Trampoline$(_A$1) {
        var $9160 = null;
        return $9160;
    };
    const Trampoline = x0 => Trampoline$(x0);

    function Trampoline$wrap$(_value$2) {
        var $9161 = ({
            _: 'Trampoline.wrap',
            'value': _value$2
        });
        return $9161;
    };
    const Trampoline$wrap = x0 => Trampoline$wrap$(x0);

    function BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5) {
        var BitsMap$set_if_empty$cps$go$ = (_bits$2, _val$3, _map$4, _cont$5) => ({
            ctr: 'TCO',
            arg: [_bits$2, _val$3, _map$4, _cont$5]
        });
        var BitsMap$set_if_empty$cps$go = _bits$2 => _val$3 => _map$4 => _cont$5 => BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, _cont$5);
        var arg = [_bits$2, _val$3, _map$4, _cont$5];
        while (true) {
            let [_bits$2, _val$3, _map$4, _cont$5] = arg;
            var R = (() => {
                var self = _bits$2;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $9162 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9164 = self.val;
                                var $9165 = self.lft;
                                var $9166 = self.rgt;
                                var $9167 = BitsMap$set_if_empty$cps$go$($9162, _val$3, $9165, (_lft$10 => {
                                    var $9168 = Trampoline$wrap$((_$11 => {
                                        var $9169 = _cont$5(BitsMap$tie$($9164, _lft$10, $9166));
                                        return $9169;
                                    }));
                                    return $9168;
                                }));
                                var $9163 = $9167;
                                break;
                            case 'BitsMap.new':
                                var $9170 = BitsMap$set_if_empty$cps$go$($9162, _val$3, BitsMap$new, (_lft$7 => {
                                    var $9171 = Trampoline$wrap$((_$8 => {
                                        var $9172 = _cont$5(BitsMap$tie$(Maybe$none, _lft$7, BitsMap$new));
                                        return $9172;
                                    }));
                                    return $9171;
                                }));
                                var $9163 = $9170;
                                break;
                        };
                        return $9163;
                    case 'i':
                        var $9173 = self.slice(0, -1);
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9175 = self.val;
                                var $9176 = self.lft;
                                var $9177 = self.rgt;
                                var $9178 = BitsMap$set_if_empty$cps$go$($9173, _val$3, $9177, (_rgt$10 => {
                                    var $9179 = Trampoline$wrap$((_$11 => {
                                        var $9180 = _cont$5(BitsMap$tie$($9175, $9176, _rgt$10));
                                        return $9180;
                                    }));
                                    return $9179;
                                }));
                                var $9174 = $9178;
                                break;
                            case 'BitsMap.new':
                                var $9181 = BitsMap$set_if_empty$cps$go$($9173, _val$3, BitsMap$new, (_rgt$7 => {
                                    var $9182 = Trampoline$wrap$((_$8 => {
                                        var $9183 = _cont$5(BitsMap$tie$(Maybe$none, BitsMap$new, _rgt$7));
                                        return $9183;
                                    }));
                                    return $9182;
                                }));
                                var $9174 = $9181;
                                break;
                        };
                        return $9174;
                    case 'e':
                        var self = _map$4;
                        switch (self._) {
                            case 'BitsMap.tie':
                                var $9185 = self.val;
                                var $9186 = self.lft;
                                var $9187 = self.rgt;
                                var $9188 = _cont$5(BitsMap$tie$((() => {
                                    var self = $9185;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $9189 = self.value;
                                            var $9190 = Maybe$some$($9189);
                                            return $9190;
                                        case 'Maybe.none':
                                            var $9191 = Maybe$some$(_val$3);
                                            return $9191;
                                    };
                                })(), $9186, $9187));
                                var $9184 = $9188;
                                break;
                            case 'BitsMap.new':
                                var $9192 = _cont$5(BitsMap$tie$(Maybe$some$(_val$3), BitsMap$new, BitsMap$new));
                                var $9184 = $9192;
                                break;
                        };
                        return $9184;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const BitsMap$set_if_empty$cps$go = x0 => x1 => x2 => x3 => BitsMap$set_if_empty$cps$go$(x0, x1, x2, x3);

    function Trampoline$done$(_value$2) {
        var $9193 = ({
            _: 'Trampoline.done',
            'value': _value$2
        });
        return $9193;
    };
    const Trampoline$done = x0 => Trampoline$done$(x0);

    function BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4) {
        var $9194 = Trampoline$call$(BitsMap$set_if_empty$cps$go$(_bits$2, _val$3, _map$4, Trampoline$done));
        return $9194;
    };
    const BitsMap$set_if_empty$cps = x0 => x1 => x2 => BitsMap$set_if_empty$cps$(x0, x1, x2);

    function BitsMap$set_if_empty$(_bits$2, _val$3, _map$4) {
        var $9195 = BitsMap$set_if_empty$cps$(_bits$2, _val$3, _map$4);
        return $9195;
    };
    const BitsMap$set_if_empty = x0 => x1 => x2 => BitsMap$set_if_empty$(x0, x1, x2);

    function Kind$Map$set_if_empty$(_name$2, _val$3, _map$4) {
        var $9196 = BitsMap$set_if_empty$((kind_name_to_bits(_name$2)), _val$3, _map$4);
        return $9196;
    };
    const Kind$Map$set_if_empty = x0 => x1 => x2 => Kind$Map$set_if_empty$(x0, x1, x2);
    const Kind$Status$init = ({
        _: 'Kind.Status.init'
    });

    function Kind$Map$def$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _done$9, _defs$10) {
        var _defn$11 = Kind$Def$new(_file$1)(_code$2)(_orig$3)(_name$4)(_term$5)(_type$6)(_isct$7)(_arit$8);
        var self = _done$9;
        if (self) {
            var $9198 = Kind$Map$set$(_name$4, _defn$11(Kind$Status$done$(Bool$false)), _defs$10);
            var $9197 = $9198;
        } else {
            var $9199 = Kind$Map$set_if_empty$(_name$4, _defn$11(Kind$Status$init), _defs$10);
            var $9197 = $9199;
        };
        return $9197;
    };
    const Kind$Map$def = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => Kind$Map$def$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9);

    function Kind$Parser$file$def$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $9201 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9203 = self.err;
                        var self = $9201;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9205 = self.value;
                                var $9206 = Parser$Reply$error$(Parser$Error$combine$($9205, $9203));
                                var $9204 = $9206;
                                break;
                            case 'Maybe.none':
                                var $9207 = Parser$Reply$error$($9203);
                                var $9204 = $9207;
                                break;
                        };
                        var $9202 = $9204;
                        break;
                    case 'Parser.Reply.value':
                        var $9208 = self.pst;
                        var self = $9208;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9210 = self.err;
                                var $9211 = self.nam;
                                var $9212 = self.ini;
                                var $9213 = self.idx;
                                var $9214 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($9201, $9210), $9211, $9212, $9213, $9214);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9216 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9218 = self.err;
                                                var self = $9216;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9220 = self.value;
                                                        var $9221 = Parser$Reply$error$(Parser$Error$combine$($9220, $9218));
                                                        var $9219 = $9221;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9222 = Parser$Reply$error$($9218);
                                                        var $9219 = $9222;
                                                        break;
                                                };
                                                var $9217 = $9219;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9223 = self.pst;
                                                var $9224 = self.val;
                                                var self = $9223;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9226 = self.err;
                                                        var $9227 = self.nam;
                                                        var $9228 = self.ini;
                                                        var $9229 = self.idx;
                                                        var $9230 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($9216, $9226), $9227, $9228, $9229, $9230);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9232 = self.err;
                                                                var _reply$38 = Kind$Parser$name1$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9234 = self.err;
                                                                        var self = $9232;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9236 = self.value;
                                                                                var $9237 = Parser$Reply$error$(Parser$Error$combine$($9236, $9234));
                                                                                var $9235 = $9237;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9238 = Parser$Reply$error$($9234);
                                                                                var $9235 = $9238;
                                                                                break;
                                                                        };
                                                                        var $9233 = $9235;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9239 = self.pst;
                                                                        var $9240 = self.val;
                                                                        var self = $9239;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9242 = self.err;
                                                                                var $9243 = self.nam;
                                                                                var $9244 = self.ini;
                                                                                var $9245 = self.idx;
                                                                                var $9246 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($9232, $9242), $9243, $9244, $9245, $9246);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9248 = self.err;
                                                                                        var _reply$52 = Parser$many$(Kind$Parser$binder(":"))(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9250 = self.err;
                                                                                                var self = $9248;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9252 = self.value;
                                                                                                        var $9253 = Parser$Reply$error$(Parser$Error$combine$($9252, $9250));
                                                                                                        var $9251 = $9253;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9254 = Parser$Reply$error$($9250);
                                                                                                        var $9251 = $9254;
                                                                                                        break;
                                                                                                };
                                                                                                var $9249 = $9251;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9255 = self.pst;
                                                                                                var $9256 = self.val;
                                                                                                var self = $9255;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9258 = self.err;
                                                                                                        var $9259 = self.nam;
                                                                                                        var $9260 = self.ini;
                                                                                                        var $9261 = self.idx;
                                                                                                        var $9262 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($9248, $9258), $9259, $9260, $9261, $9262);
                                                                                                        var _args$61 = List$flatten$($9256);
                                                                                                        var self = _reply$pst$60;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9264 = self.err;
                                                                                                                var _reply$67 = Kind$Parser$text$(":", _reply$pst$60);
                                                                                                                var self = _reply$67;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9266 = self.err;
                                                                                                                        var self = $9264;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9268 = self.value;
                                                                                                                                var $9269 = Parser$Reply$error$(Parser$Error$combine$($9268, $9266));
                                                                                                                                var $9267 = $9269;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9270 = Parser$Reply$error$($9266);
                                                                                                                                var $9267 = $9270;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9265 = $9267;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9271 = self.pst;
                                                                                                                        var self = $9271;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9273 = self.err;
                                                                                                                                var $9274 = self.nam;
                                                                                                                                var $9275 = self.ini;
                                                                                                                                var $9276 = self.idx;
                                                                                                                                var $9277 = self.str;
                                                                                                                                var _reply$pst$75 = Parser$State$new$(Parser$Error$maybe_combine$($9264, $9273), $9274, $9275, $9276, $9277);
                                                                                                                                var self = _reply$pst$75;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9279 = self.err;
                                                                                                                                        var _reply$81 = Kind$Parser$term(_reply$pst$75);
                                                                                                                                        var self = _reply$81;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9281 = self.err;
                                                                                                                                                var self = $9279;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9283 = self.value;
                                                                                                                                                        var $9284 = Parser$Reply$error$(Parser$Error$combine$($9283, $9281));
                                                                                                                                                        var $9282 = $9284;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9285 = Parser$Reply$error$($9281);
                                                                                                                                                        var $9282 = $9285;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9280 = $9282;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9286 = self.pst;
                                                                                                                                                var $9287 = self.val;
                                                                                                                                                var self = $9286;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9289 = self.err;
                                                                                                                                                        var $9290 = self.nam;
                                                                                                                                                        var $9291 = self.ini;
                                                                                                                                                        var $9292 = self.idx;
                                                                                                                                                        var $9293 = self.str;
                                                                                                                                                        var _reply$pst$89 = Parser$State$new$(Parser$Error$maybe_combine$($9279, $9289), $9290, $9291, $9292, $9293);
                                                                                                                                                        var self = _reply$pst$89;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                var $9295 = self.err;
                                                                                                                                                                var _reply$95 = Kind$Parser$term(_reply$pst$89);
                                                                                                                                                                var self = _reply$95;
                                                                                                                                                                switch (self._) {
                                                                                                                                                                    case 'Parser.Reply.error':
                                                                                                                                                                        var $9297 = self.err;
                                                                                                                                                                        var self = $9295;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                                var $9299 = self.value;
                                                                                                                                                                                var $9300 = Parser$Reply$error$(Parser$Error$combine$($9299, $9297));
                                                                                                                                                                                var $9298 = $9300;
                                                                                                                                                                                break;
                                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                                var $9301 = Parser$Reply$error$($9297);
                                                                                                                                                                                var $9298 = $9301;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9296 = $9298;
                                                                                                                                                                        break;
                                                                                                                                                                    case 'Parser.Reply.value':
                                                                                                                                                                        var $9302 = self.pst;
                                                                                                                                                                        var $9303 = self.val;
                                                                                                                                                                        var self = $9302;
                                                                                                                                                                        switch (self._) {
                                                                                                                                                                            case 'Parser.State.new':
                                                                                                                                                                                var $9305 = self.err;
                                                                                                                                                                                var $9306 = self.nam;
                                                                                                                                                                                var $9307 = self.ini;
                                                                                                                                                                                var $9308 = self.idx;
                                                                                                                                                                                var $9309 = self.str;
                                                                                                                                                                                var _reply$pst$103 = Parser$State$new$(Parser$Error$maybe_combine$($9295, $9305), $9306, $9307, $9308, $9309);
                                                                                                                                                                                var self = _reply$pst$103;
                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                        var $9311 = self.err;
                                                                                                                                                                                        var _reply$109 = Parser$get_idx$(_reply$pst$103);
                                                                                                                                                                                        var self = _reply$109;
                                                                                                                                                                                        switch (self._) {
                                                                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                                                                var $9313 = self.err;
                                                                                                                                                                                                var self = $9311;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                                                                        var $9315 = self.value;
                                                                                                                                                                                                        var $9316 = Parser$Reply$error$(Parser$Error$combine$($9315, $9313));
                                                                                                                                                                                                        var $9314 = $9316;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                                                                        var $9317 = Parser$Reply$error$($9313);
                                                                                                                                                                                                        var $9314 = $9317;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9312 = $9314;
                                                                                                                                                                                                break;
                                                                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                                                                var $9318 = self.pst;
                                                                                                                                                                                                var $9319 = self.val;
                                                                                                                                                                                                var self = $9318;
                                                                                                                                                                                                switch (self._) {
                                                                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                                                                        var $9321 = self.err;
                                                                                                                                                                                                        var $9322 = self.nam;
                                                                                                                                                                                                        var $9323 = self.ini;
                                                                                                                                                                                                        var $9324 = self.idx;
                                                                                                                                                                                                        var $9325 = self.str;
                                                                                                                                                                                                        var _reply$pst$117 = Parser$State$new$(Parser$Error$maybe_combine$($9311, $9321), $9322, $9323, $9324, $9325);
                                                                                                                                                                                                        var _orig$118 = Pair$new$($9224, $9319);
                                                                                                                                                                                                        var _arit$119 = (list_length(_args$61));
                                                                                                                                                                                                        var _type$120 = Kind$Parser$forall$make$(_args$61, $9287);
                                                                                                                                                                                                        var _term$121 = Kind$Parser$lambda$make$(List$mapped$(_args$61, (_x$121 => {
                                                                                                                                                                                                            var self = _x$121;
                                                                                                                                                                                                            switch (self._) {
                                                                                                                                                                                                                case 'Kind.Binder.new':
                                                                                                                                                                                                                    var $9328 = self.name;
                                                                                                                                                                                                                    var $9329 = $9328;
                                                                                                                                                                                                                    var $9327 = $9329;
                                                                                                                                                                                                                    break;
                                                                                                                                                                                                            };
                                                                                                                                                                                                            return $9327;
                                                                                                                                                                                                        })), $9303);
                                                                                                                                                                                                        var _type$122 = Kind$Term$bind$(List$nil, (_x$122 => {
                                                                                                                                                                                                            var $9330 = (_x$122 + '1');
                                                                                                                                                                                                            return $9330;
                                                                                                                                                                                                        }), _type$120);
                                                                                                                                                                                                        var _term$123 = Kind$Term$bind$(List$nil, (_x$123 => {
                                                                                                                                                                                                            var $9331 = (_x$123 + '0');
                                                                                                                                                                                                            return $9331;
                                                                                                                                                                                                        }), _term$121);
                                                                                                                                                                                                        var _defs$124 = Kind$Map$def$(_file$1, _code$2, _orig$118, $9240, _term$123, _type$122, Bool$false, _arit$119, Bool$false, _defs$3);
                                                                                                                                                                                                        var $9326 = Parser$Reply$value$(_reply$pst$117, _defs$124);
                                                                                                                                                                                                        var $9320 = $9326;
                                                                                                                                                                                                        break;
                                                                                                                                                                                                };
                                                                                                                                                                                                var $9312 = $9320;
                                                                                                                                                                                                break;
                                                                                                                                                                                        };
                                                                                                                                                                                        var $9310 = $9312;
                                                                                                                                                                                        break;
                                                                                                                                                                                };
                                                                                                                                                                                var $9304 = $9310;
                                                                                                                                                                                break;
                                                                                                                                                                        };
                                                                                                                                                                        var $9296 = $9304;
                                                                                                                                                                        break;
                                                                                                                                                                };
                                                                                                                                                                var $9294 = $9296;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9288 = $9294;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9280 = $9288;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9278 = $9280;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9272 = $9278;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9265 = $9272;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9263 = $9265;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9257 = $9263;
                                                                                                        break;
                                                                                                };
                                                                                                var $9249 = $9257;
                                                                                                break;
                                                                                        };
                                                                                        var $9247 = $9249;
                                                                                        break;
                                                                                };
                                                                                var $9241 = $9247;
                                                                                break;
                                                                        };
                                                                        var $9233 = $9241;
                                                                        break;
                                                                };
                                                                var $9231 = $9233;
                                                                break;
                                                        };
                                                        var $9225 = $9231;
                                                        break;
                                                };
                                                var $9217 = $9225;
                                                break;
                                        };
                                        var $9215 = $9217;
                                        break;
                                };
                                var $9209 = $9215;
                                break;
                        };
                        var $9202 = $9209;
                        break;
                };
                var $9200 = $9202;
                break;
        };
        return $9200;
    };
    const Kind$Parser$file$def = x0 => x1 => x2 => x3 => Kind$Parser$file$def$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Constructor$new$(_name$1, _args$2, _inds$3) {
        var $9332 = ({
            _: 'Kind.Parser.ADT.Constructor.new',
            'name': _name$1,
            'args': _args$2,
            'inds': _inds$3
        });
        return $9332;
    };
    const Kind$Parser$ADT$Constructor$new = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$new$(x0, x1, x2);

    function Kind$Parser$ADT$ctor$(_namespace$1, _pst$2) {
        var self = _pst$2;
        switch (self._) {
            case 'Parser.State.new':
                var $9334 = self.err;
                var _reply$8 = Kind$Parser$name1$(_pst$2);
                var self = _reply$8;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9336 = self.err;
                        var self = $9334;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9338 = self.value;
                                var $9339 = Parser$Reply$error$(Parser$Error$combine$($9338, $9336));
                                var $9337 = $9339;
                                break;
                            case 'Maybe.none':
                                var $9340 = Parser$Reply$error$($9336);
                                var $9337 = $9340;
                                break;
                        };
                        var $9335 = $9337;
                        break;
                    case 'Parser.Reply.value':
                        var $9341 = self.pst;
                        var $9342 = self.val;
                        var self = $9341;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9344 = self.err;
                                var $9345 = self.nam;
                                var $9346 = self.ini;
                                var $9347 = self.idx;
                                var $9348 = self.str;
                                var _reply$pst$16 = Parser$State$new$(Parser$Error$maybe_combine$($9334, $9344), $9345, $9346, $9347, $9348);
                                var self = _reply$pst$16;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9350 = self.err;
                                        var _reply$22 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$16);
                                        var self = _reply$22;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9352 = self.err;
                                                var self = $9350;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9354 = self.value;
                                                        var $9355 = Parser$Reply$error$(Parser$Error$combine$($9354, $9352));
                                                        var $9353 = $9355;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9356 = Parser$Reply$error$($9352);
                                                        var $9353 = $9356;
                                                        break;
                                                };
                                                var $9351 = $9353;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9357 = self.pst;
                                                var $9358 = self.val;
                                                var self = $9357;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9360 = self.err;
                                                        var $9361 = self.nam;
                                                        var $9362 = self.ini;
                                                        var $9363 = self.idx;
                                                        var $9364 = self.str;
                                                        var _reply$pst$30 = Parser$State$new$(Parser$Error$maybe_combine$($9350, $9360), $9361, $9362, $9363, $9364);
                                                        var self = _reply$pst$30;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9366 = self.err;
                                                                var _reply$36 = Parser$maybe$((_pst$36 => {
                                                                    var self = _pst$36;
                                                                    switch (self._) {
                                                                        case 'Parser.State.new':
                                                                            var $9369 = self.err;
                                                                            var _reply$42 = Kind$Parser$text$("~", _pst$36);
                                                                            var self = _reply$42;
                                                                            switch (self._) {
                                                                                case 'Parser.Reply.error':
                                                                                    var $9371 = self.err;
                                                                                    var self = $9369;
                                                                                    switch (self._) {
                                                                                        case 'Maybe.some':
                                                                                            var $9373 = self.value;
                                                                                            var $9374 = Parser$Reply$error$(Parser$Error$combine$($9373, $9371));
                                                                                            var $9372 = $9374;
                                                                                            break;
                                                                                        case 'Maybe.none':
                                                                                            var $9375 = Parser$Reply$error$($9371);
                                                                                            var $9372 = $9375;
                                                                                            break;
                                                                                    };
                                                                                    var $9370 = $9372;
                                                                                    break;
                                                                                case 'Parser.Reply.value':
                                                                                    var $9376 = self.pst;
                                                                                    var self = $9376;
                                                                                    switch (self._) {
                                                                                        case 'Parser.State.new':
                                                                                            var $9378 = self.err;
                                                                                            var $9379 = self.nam;
                                                                                            var $9380 = self.ini;
                                                                                            var $9381 = self.idx;
                                                                                            var $9382 = self.str;
                                                                                            var _reply$pst$50 = Parser$State$new$(Parser$Error$maybe_combine$($9369, $9378), $9379, $9380, $9381, $9382);
                                                                                            var $9383 = Kind$Parser$binder$("=", _reply$pst$50);
                                                                                            var $9377 = $9383;
                                                                                            break;
                                                                                    };
                                                                                    var $9370 = $9377;
                                                                                    break;
                                                                            };
                                                                            var $9368 = $9370;
                                                                            break;
                                                                    };
                                                                    return $9368;
                                                                }), _reply$pst$30);
                                                                var self = _reply$36;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9384 = self.err;
                                                                        var self = $9366;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9386 = self.value;
                                                                                var $9387 = Parser$Reply$error$(Parser$Error$combine$($9386, $9384));
                                                                                var $9385 = $9387;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9388 = Parser$Reply$error$($9384);
                                                                                var $9385 = $9388;
                                                                                break;
                                                                        };
                                                                        var $9367 = $9385;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9389 = self.pst;
                                                                        var $9390 = self.val;
                                                                        var self = $9389;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9392 = self.err;
                                                                                var $9393 = self.nam;
                                                                                var $9394 = self.ini;
                                                                                var $9395 = self.idx;
                                                                                var $9396 = self.str;
                                                                                var _reply$pst$44 = Parser$State$new$(Parser$Error$maybe_combine$($9366, $9392), $9393, $9394, $9395, $9396);
                                                                                var _args$45 = Maybe$default$($9358, List$nil);
                                                                                var _inds$46 = Maybe$default$($9390, List$nil);
                                                                                var $9397 = Parser$Reply$value$(_reply$pst$44, Kind$Parser$ADT$Constructor$new$($9342, _args$45, _inds$46));
                                                                                var $9391 = $9397;
                                                                                break;
                                                                        };
                                                                        var $9367 = $9391;
                                                                        break;
                                                                };
                                                                var $9365 = $9367;
                                                                break;
                                                        };
                                                        var $9359 = $9365;
                                                        break;
                                                };
                                                var $9351 = $9359;
                                                break;
                                        };
                                        var $9349 = $9351;
                                        break;
                                };
                                var $9343 = $9349;
                                break;
                        };
                        var $9335 = $9343;
                        break;
                };
                var $9333 = $9335;
                break;
        };
        return $9333;
    };
    const Kind$Parser$ADT$ctor = x0 => x1 => Kind$Parser$ADT$ctor$(x0, x1);

    function Kind$Parser$ADT$Datatype$new$(_name$1, _pars$2, _inds$3, _ctrs$4, _deri$5) {
        var $9398 = ({
            _: 'Kind.Parser.ADT.Datatype.new',
            'name': _name$1,
            'pars': _pars$2,
            'inds': _inds$3,
            'ctrs': _ctrs$4,
            'deri': _deri$5
        });
        return $9398;
    };
    const Kind$Parser$ADT$Datatype$new = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Datatype$new$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$adt$(_pst$1) {
        var self = _pst$1;
        switch (self._) {
            case 'Parser.State.new':
                var $9400 = self.err;
                var _reply$7 = Kind$Parser$text$("type ", _pst$1);
                var self = _reply$7;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $9402 = self.err;
                        var self = $9400;
                        switch (self._) {
                            case 'Maybe.some':
                                var $9404 = self.value;
                                var $9405 = Parser$Reply$error$(Parser$Error$combine$($9404, $9402));
                                var $9403 = $9405;
                                break;
                            case 'Maybe.none':
                                var $9406 = Parser$Reply$error$($9402);
                                var $9403 = $9406;
                                break;
                        };
                        var $9401 = $9403;
                        break;
                    case 'Parser.Reply.value':
                        var $9407 = self.pst;
                        var self = $9407;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $9409 = self.err;
                                var $9410 = self.nam;
                                var $9411 = self.ini;
                                var $9412 = self.idx;
                                var $9413 = self.str;
                                var _reply$pst$15 = Parser$State$new$(Parser$Error$maybe_combine$($9400, $9409), $9410, $9411, $9412, $9413);
                                var self = _reply$pst$15;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $9415 = self.err;
                                        var _reply$21 = Kind$Parser$name1$(_reply$pst$15);
                                        var self = _reply$21;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $9417 = self.err;
                                                var self = $9415;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $9419 = self.value;
                                                        var $9420 = Parser$Reply$error$(Parser$Error$combine$($9419, $9417));
                                                        var $9418 = $9420;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $9421 = Parser$Reply$error$($9417);
                                                        var $9418 = $9421;
                                                        break;
                                                };
                                                var $9416 = $9418;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $9422 = self.pst;
                                                var $9423 = self.val;
                                                var self = $9422;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $9425 = self.err;
                                                        var $9426 = self.nam;
                                                        var $9427 = self.ini;
                                                        var $9428 = self.idx;
                                                        var $9429 = self.str;
                                                        var _reply$pst$29 = Parser$State$new$(Parser$Error$maybe_combine$($9415, $9425), $9426, $9427, $9428, $9429);
                                                        var self = _reply$pst$29;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $9431 = self.err;
                                                                var _reply$35 = Parser$maybe$(Kind$Parser$binder(":"), _reply$pst$29);
                                                                var self = _reply$35;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $9433 = self.err;
                                                                        var self = $9431;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $9435 = self.value;
                                                                                var $9436 = Parser$Reply$error$(Parser$Error$combine$($9435, $9433));
                                                                                var $9434 = $9436;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $9437 = Parser$Reply$error$($9433);
                                                                                var $9434 = $9437;
                                                                                break;
                                                                        };
                                                                        var $9432 = $9434;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $9438 = self.pst;
                                                                        var $9439 = self.val;
                                                                        var self = $9438;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $9441 = self.err;
                                                                                var $9442 = self.nam;
                                                                                var $9443 = self.ini;
                                                                                var $9444 = self.idx;
                                                                                var $9445 = self.str;
                                                                                var _reply$pst$43 = Parser$State$new$(Parser$Error$maybe_combine$($9431, $9441), $9442, $9443, $9444, $9445);
                                                                                var self = _reply$pst$43;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $9447 = self.err;
                                                                                        var _reply$49 = Parser$maybe$((_pst$49 => {
                                                                                            var self = _pst$49;
                                                                                            switch (self._) {
                                                                                                case 'Parser.State.new':
                                                                                                    var $9450 = self.err;
                                                                                                    var _reply$55 = Kind$Parser$text$("~", _pst$49);
                                                                                                    var self = _reply$55;
                                                                                                    switch (self._) {
                                                                                                        case 'Parser.Reply.error':
                                                                                                            var $9452 = self.err;
                                                                                                            var self = $9450;
                                                                                                            switch (self._) {
                                                                                                                case 'Maybe.some':
                                                                                                                    var $9454 = self.value;
                                                                                                                    var $9455 = Parser$Reply$error$(Parser$Error$combine$($9454, $9452));
                                                                                                                    var $9453 = $9455;
                                                                                                                    break;
                                                                                                                case 'Maybe.none':
                                                                                                                    var $9456 = Parser$Reply$error$($9452);
                                                                                                                    var $9453 = $9456;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9451 = $9453;
                                                                                                            break;
                                                                                                        case 'Parser.Reply.value':
                                                                                                            var $9457 = self.pst;
                                                                                                            var self = $9457;
                                                                                                            switch (self._) {
                                                                                                                case 'Parser.State.new':
                                                                                                                    var $9459 = self.err;
                                                                                                                    var $9460 = self.nam;
                                                                                                                    var $9461 = self.ini;
                                                                                                                    var $9462 = self.idx;
                                                                                                                    var $9463 = self.str;
                                                                                                                    var _reply$pst$63 = Parser$State$new$(Parser$Error$maybe_combine$($9450, $9459), $9460, $9461, $9462, $9463);
                                                                                                                    var $9464 = Kind$Parser$binder$(":", _reply$pst$63);
                                                                                                                    var $9458 = $9464;
                                                                                                                    break;
                                                                                                            };
                                                                                                            var $9451 = $9458;
                                                                                                            break;
                                                                                                    };
                                                                                                    var $9449 = $9451;
                                                                                                    break;
                                                                                            };
                                                                                            return $9449;
                                                                                        }), _reply$pst$43);
                                                                                        var self = _reply$49;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $9465 = self.err;
                                                                                                var self = $9447;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $9467 = self.value;
                                                                                                        var $9468 = Parser$Reply$error$(Parser$Error$combine$($9467, $9465));
                                                                                                        var $9466 = $9468;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $9469 = Parser$Reply$error$($9465);
                                                                                                        var $9466 = $9469;
                                                                                                        break;
                                                                                                };
                                                                                                var $9448 = $9466;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $9470 = self.pst;
                                                                                                var $9471 = self.val;
                                                                                                var self = $9470;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $9473 = self.err;
                                                                                                        var $9474 = self.nam;
                                                                                                        var $9475 = self.ini;
                                                                                                        var $9476 = self.idx;
                                                                                                        var $9477 = self.str;
                                                                                                        var _reply$pst$57 = Parser$State$new$(Parser$Error$maybe_combine$($9447, $9473), $9474, $9475, $9476, $9477);
                                                                                                        var _pars$58 = Maybe$default$($9439, List$nil);
                                                                                                        var _inds$59 = Maybe$default$($9471, List$nil);
                                                                                                        var self = _reply$pst$57;
                                                                                                        switch (self._) {
                                                                                                            case 'Parser.State.new':
                                                                                                                var $9479 = self.err;
                                                                                                                var _reply$65 = Kind$Parser$items$("{", Kind$Parser$ADT$ctor($9423), "}")(_reply$pst$57);
                                                                                                                var self = _reply$65;
                                                                                                                switch (self._) {
                                                                                                                    case 'Parser.Reply.error':
                                                                                                                        var $9481 = self.err;
                                                                                                                        var self = $9479;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Maybe.some':
                                                                                                                                var $9483 = self.value;
                                                                                                                                var $9484 = Parser$Reply$error$(Parser$Error$combine$($9483, $9481));
                                                                                                                                var $9482 = $9484;
                                                                                                                                break;
                                                                                                                            case 'Maybe.none':
                                                                                                                                var $9485 = Parser$Reply$error$($9481);
                                                                                                                                var $9482 = $9485;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9480 = $9482;
                                                                                                                        break;
                                                                                                                    case 'Parser.Reply.value':
                                                                                                                        var $9486 = self.pst;
                                                                                                                        var $9487 = self.val;
                                                                                                                        var self = $9486;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Parser.State.new':
                                                                                                                                var $9489 = self.err;
                                                                                                                                var $9490 = self.nam;
                                                                                                                                var $9491 = self.ini;
                                                                                                                                var $9492 = self.idx;
                                                                                                                                var $9493 = self.str;
                                                                                                                                var _reply$pst$73 = Parser$State$new$(Parser$Error$maybe_combine$($9479, $9489), $9490, $9491, $9492, $9493);
                                                                                                                                var self = _reply$pst$73;
                                                                                                                                switch (self._) {
                                                                                                                                    case 'Parser.State.new':
                                                                                                                                        var $9495 = self.err;
                                                                                                                                        var _reply$79 = Parser$maybe$((_pst$79 => {
                                                                                                                                            var self = _pst$79;
                                                                                                                                            switch (self._) {
                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                    var $9498 = self.err;
                                                                                                                                                    var _reply$85 = Kind$Parser$text$("deriving", _pst$79);
                                                                                                                                                    var self = _reply$85;
                                                                                                                                                    switch (self._) {
                                                                                                                                                        case 'Parser.Reply.error':
                                                                                                                                                            var $9500 = self.err;
                                                                                                                                                            var self = $9498;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Maybe.some':
                                                                                                                                                                    var $9502 = self.value;
                                                                                                                                                                    var $9503 = Parser$Reply$error$(Parser$Error$combine$($9502, $9500));
                                                                                                                                                                    var $9501 = $9503;
                                                                                                                                                                    break;
                                                                                                                                                                case 'Maybe.none':
                                                                                                                                                                    var $9504 = Parser$Reply$error$($9500);
                                                                                                                                                                    var $9501 = $9504;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9499 = $9501;
                                                                                                                                                            break;
                                                                                                                                                        case 'Parser.Reply.value':
                                                                                                                                                            var $9505 = self.pst;
                                                                                                                                                            var self = $9505;
                                                                                                                                                            switch (self._) {
                                                                                                                                                                case 'Parser.State.new':
                                                                                                                                                                    var $9507 = self.err;
                                                                                                                                                                    var $9508 = self.nam;
                                                                                                                                                                    var $9509 = self.ini;
                                                                                                                                                                    var $9510 = self.idx;
                                                                                                                                                                    var $9511 = self.str;
                                                                                                                                                                    var _reply$pst$93 = Parser$State$new$(Parser$Error$maybe_combine$($9498, $9507), $9508, $9509, $9510, $9511);
                                                                                                                                                                    var $9512 = Kind$Parser$items$("(", Kind$Parser$name1, ")")(_reply$pst$93);
                                                                                                                                                                    var $9506 = $9512;
                                                                                                                                                                    break;
                                                                                                                                                            };
                                                                                                                                                            var $9499 = $9506;
                                                                                                                                                            break;
                                                                                                                                                    };
                                                                                                                                                    var $9497 = $9499;
                                                                                                                                                    break;
                                                                                                                                            };
                                                                                                                                            return $9497;
                                                                                                                                        }), _reply$pst$73);
                                                                                                                                        var self = _reply$79;
                                                                                                                                        switch (self._) {
                                                                                                                                            case 'Parser.Reply.error':
                                                                                                                                                var $9513 = self.err;
                                                                                                                                                var self = $9495;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Maybe.some':
                                                                                                                                                        var $9515 = self.value;
                                                                                                                                                        var $9516 = Parser$Reply$error$(Parser$Error$combine$($9515, $9513));
                                                                                                                                                        var $9514 = $9516;
                                                                                                                                                        break;
                                                                                                                                                    case 'Maybe.none':
                                                                                                                                                        var $9517 = Parser$Reply$error$($9513);
                                                                                                                                                        var $9514 = $9517;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9496 = $9514;
                                                                                                                                                break;
                                                                                                                                            case 'Parser.Reply.value':
                                                                                                                                                var $9518 = self.pst;
                                                                                                                                                var $9519 = self.val;
                                                                                                                                                var self = $9518;
                                                                                                                                                switch (self._) {
                                                                                                                                                    case 'Parser.State.new':
                                                                                                                                                        var $9521 = self.err;
                                                                                                                                                        var $9522 = self.nam;
                                                                                                                                                        var $9523 = self.ini;
                                                                                                                                                        var $9524 = self.idx;
                                                                                                                                                        var $9525 = self.str;
                                                                                                                                                        var _reply$pst$87 = Parser$State$new$(Parser$Error$maybe_combine$($9495, $9521), $9522, $9523, $9524, $9525);
                                                                                                                                                        var self = $9519;
                                                                                                                                                        switch (self._) {
                                                                                                                                                            case 'Maybe.some':
                                                                                                                                                                var $9527 = self.value;
                                                                                                                                                                var $9528 = $9527;
                                                                                                                                                                var _deri$88 = $9528;
                                                                                                                                                                break;
                                                                                                                                                            case 'Maybe.none':
                                                                                                                                                                var $9529 = List$nil;
                                                                                                                                                                var _deri$88 = $9529;
                                                                                                                                                                break;
                                                                                                                                                        };
                                                                                                                                                        var $9526 = Parser$Reply$value$(_reply$pst$87, Kind$Parser$ADT$Datatype$new$($9423, _pars$58, _inds$59, $9487, _deri$88));
                                                                                                                                                        var $9520 = $9526;
                                                                                                                                                        break;
                                                                                                                                                };
                                                                                                                                                var $9496 = $9520;
                                                                                                                                                break;
                                                                                                                                        };
                                                                                                                                        var $9494 = $9496;
                                                                                                                                        break;
                                                                                                                                };
                                                                                                                                var $9488 = $9494;
                                                                                                                                break;
                                                                                                                        };
                                                                                                                        var $9480 = $9488;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $9478 = $9480;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $9472 = $9478;
                                                                                                        break;
                                                                                                };
                                                                                                var $9448 = $9472;
                                                                                                break;
                                                                                        };
                                                                                        var $9446 = $9448;
                                                                                        break;
                                                                                };
                                                                                var $9440 = $9446;
                                                                                break;
                                                                        };
                                                                        var $9432 = $9440;
                                                                        break;
                                                                };
                                                                var $9430 = $9432;
                                                                break;
                                                        };
                                                        var $9424 = $9430;
                                                        break;
                                                };
                                                var $9416 = $9424;
                                                break;
                                        };
                                        var $9414 = $9416;
                                        break;
                                };
                                var $9408 = $9414;
                                break;
                        };
                        var $9401 = $9408;
                        break;
                };
                var $9399 = $9401;
                break;
        };
        return $9399;
    };
    const Kind$Parser$ADT$adt = x0 => Kind$Parser$ADT$adt$(x0);

    function Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, _inds$3) {
        var self = _inds$3;
        switch (self._) {
            case 'List.cons':
                var $9531 = self.head;
                var $9532 = self.tail;
                var self = $9531;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9534 = self.eras;
                        var $9535 = self.name;
                        var $9536 = self.term;
                        var $9537 = Kind$Term$all$($9534, "", $9535, $9536, (_s$9 => _x$10 => {
                            var $9538 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, _name$2, $9532);
                            return $9538;
                        }));
                        var $9533 = $9537;
                        break;
                };
                var $9530 = $9533;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9540 = self.pars;
                        var $9541 = self.inds;
                        var _slf$9 = Kind$Term$ref$(_name$2);
                        var _slf$10 = (() => {
                            var $9544 = _slf$9;
                            var $9545 = $9540;
                            let _slf$11 = $9544;
                            let _v$10;
                            while ($9545._ === 'List.cons') {
                                _v$10 = $9545.head;
                                var $9544 = Kind$Term$app$(_slf$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9546 = self.name;
                                            var $9547 = $9546;
                                            return $9547;
                                    };
                                })()));
                                _slf$11 = $9544;
                                $9545 = $9545.tail;
                            }
                            return _slf$11;
                        })();
                        var _slf$11 = (() => {
                            var $9549 = _slf$10;
                            var $9550 = $9541;
                            let _slf$12 = $9549;
                            let _v$11;
                            while ($9550._ === 'List.cons') {
                                _v$11 = $9550.head;
                                var $9549 = Kind$Term$app$(_slf$12, Kind$Term$ref$((() => {
                                    var self = _v$11;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9551 = self.name;
                                            var $9552 = $9551;
                                            return $9552;
                                    };
                                })()));
                                _slf$12 = $9549;
                                $9550 = $9550.tail;
                            }
                            return _slf$12;
                        })();
                        var $9542 = Kind$Term$all$(Bool$false, "", "", _slf$11, (_s$12 => _x$13 => {
                            var $9553 = Kind$Term$typ;
                            return $9553;
                        }));
                        var $9539 = $9542;
                        break;
                };
                var $9530 = $9539;
                break;
        };
        return $9530;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$motive$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$motive$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9555 = self.name;
                var $9556 = self.inds;
                var $9557 = Kind$Parser$ADT$Datatype$build_term$motive$go$(_type$1, $9555, $9556);
                var $9554 = $9557;
                break;
        };
        return $9554;
    };
    const Kind$Parser$ADT$Datatype$build_term$motive = x0 => Kind$Parser$ADT$Datatype$build_term$motive$(x0);

    function String$flatten$go$(_xs$1, _res$2) {
        var String$flatten$go$ = (_xs$1, _res$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _res$2]
        });
        var String$flatten$go = _xs$1 => _res$2 => String$flatten$go$(_xs$1, _res$2);
        var arg = [_xs$1, _res$2];
        while (true) {
            let [_xs$1, _res$2] = arg;
            var R = (() => {
                var self = _xs$1;
                switch (self._) {
                    case 'List.cons':
                        var $9558 = self.head;
                        var $9559 = self.tail;
                        var $9560 = String$flatten$go$($9559, (_res$2 + $9558));
                        return $9560;
                    case 'List.nil':
                        var $9561 = _res$2;
                        return $9561;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$flatten$go = x0 => x1 => String$flatten$go$(x0, x1);

    function String$flatten$(_xs$1) {
        var $9562 = String$flatten$go$(_xs$1, "");
        return $9562;
    };
    const String$flatten = x0 => String$flatten$(x0);

    function Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, _args$3) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9564 = self.head;
                var $9565 = self.tail;
                var self = $9564;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9567 = self.eras;
                        var $9568 = self.name;
                        var $9569 = self.term;
                        var _eras$9 = $9567;
                        var _name$10 = $9568;
                        var _xtyp$11 = $9569;
                        var _body$12 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9565);
                        var $9570 = Kind$Term$all$(_eras$9, "", _name$10, _xtyp$11, (_s$13 => _x$14 => {
                            var $9571 = _body$12;
                            return $9571;
                        }));
                        var $9566 = $9570;
                        break;
                };
                var $9563 = $9566;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9573 = self.name;
                        var $9574 = self.pars;
                        var self = _ctor$2;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9576 = self.name;
                                var $9577 = self.args;
                                var $9578 = self.inds;
                                var _ret$12 = Kind$Term$ref$(Kind$Name$read$("P"));
                                var _ret$13 = (() => {
                                    var $9581 = _ret$12;
                                    var $9582 = $9578;
                                    let _ret$14 = $9581;
                                    let _v$13;
                                    while ($9582._ === 'List.cons') {
                                        _v$13 = $9582.head;
                                        var $9581 = Kind$Term$app$(_ret$14, (() => {
                                            var self = _v$13;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9583 = self.term;
                                                    var $9584 = $9583;
                                                    return $9584;
                                            };
                                        })());
                                        _ret$14 = $9581;
                                        $9582 = $9582.tail;
                                    }
                                    return _ret$14;
                                })();
                                var _ctr$14 = String$flatten$(List$cons$($9573, List$cons$(Kind$Name$read$("."), List$cons$($9576, List$nil))));
                                var _slf$15 = Kind$Term$ref$(_ctr$14);
                                var _slf$16 = (() => {
                                    var $9586 = _slf$15;
                                    var $9587 = $9574;
                                    let _slf$17 = $9586;
                                    let _v$16;
                                    while ($9587._ === 'List.cons') {
                                        _v$16 = $9587.head;
                                        var $9586 = Kind$Term$app$(_slf$17, Kind$Term$ref$((() => {
                                            var self = _v$16;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9588 = self.name;
                                                    var $9589 = $9588;
                                                    return $9589;
                                            };
                                        })()));
                                        _slf$17 = $9586;
                                        $9587 = $9587.tail;
                                    }
                                    return _slf$17;
                                })();
                                var _slf$17 = (() => {
                                    var $9591 = _slf$16;
                                    var $9592 = $9577;
                                    let _slf$18 = $9591;
                                    let _v$17;
                                    while ($9592._ === 'List.cons') {
                                        _v$17 = $9592.head;
                                        var $9591 = Kind$Term$app$(_slf$18, Kind$Term$ref$((() => {
                                            var self = _v$17;
                                            switch (self._) {
                                                case 'Kind.Binder.new':
                                                    var $9593 = self.name;
                                                    var $9594 = $9593;
                                                    return $9594;
                                            };
                                        })()));
                                        _slf$18 = $9591;
                                        $9592 = $9592.tail;
                                    }
                                    return _slf$18;
                                })();
                                var $9579 = Kind$Term$app$(_ret$13, _slf$17);
                                var $9575 = $9579;
                                break;
                        };
                        var $9572 = $9575;
                        break;
                };
                var $9563 = $9572;
                break;
        };
        return $9563;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructor$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, _ctor$2) {
        var self = _ctor$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9596 = self.args;
                var $9597 = Kind$Parser$ADT$Datatype$build_term$constructor$go$(_type$1, _ctor$2, $9596);
                var $9595 = $9597;
                break;
        };
        return $9595;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructor = x0 => x1 => Kind$Parser$ADT$Datatype$build_term$constructor$(x0, x1);

    function Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9599 = self.head;
                var $9600 = self.tail;
                var self = $9599;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9602 = self.name;
                        var $9603 = Kind$Term$all$(Bool$false, "", $9602, Kind$Parser$ADT$Datatype$build_term$constructor$(_type$1, $9599), (_s$9 => _x$10 => {
                            var $9604 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, _name$2, $9600);
                            return $9604;
                        }));
                        var $9601 = $9603;
                        break;
                };
                var $9598 = $9601;
                break;
            case 'List.nil':
                var self = _type$1;
                switch (self._) {
                    case 'Kind.Parser.ADT.Datatype.new':
                        var $9606 = self.inds;
                        var _ret$9 = Kind$Term$ref$(Kind$Name$read$("P"));
                        var _ret$10 = (() => {
                            var $9609 = _ret$9;
                            var $9610 = $9606;
                            let _ret$11 = $9609;
                            let _v$10;
                            while ($9610._ === 'List.cons') {
                                _v$10 = $9610.head;
                                var $9609 = Kind$Term$app$(_ret$11, Kind$Term$ref$((() => {
                                    var self = _v$10;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9611 = self.name;
                                            var $9612 = $9611;
                                            return $9612;
                                    };
                                })()));
                                _ret$11 = $9609;
                                $9610 = $9610.tail;
                            }
                            return _ret$11;
                        })();
                        var $9607 = Kind$Term$app$(_ret$10, Kind$Term$ref$((_name$2 + ".Self")));
                        var $9605 = $9607;
                        break;
                };
                var $9598 = $9605;
                break;
        };
        return $9598;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors$go = x0 => x1 => x2 => Kind$Parser$ADT$Datatype$build_term$constructors$go$(x0, x1, x2);

    function Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9614 = self.name;
                var $9615 = self.ctrs;
                var $9616 = Kind$Parser$ADT$Datatype$build_term$constructors$go$(_type$1, $9614, $9615);
                var $9613 = $9616;
                break;
        };
        return $9613;
    };
    const Kind$Parser$ADT$Datatype$build_term$constructors = x0 => Kind$Parser$ADT$Datatype$build_term$constructors$(x0);

    function Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9618 = self.head;
                var $9619 = self.tail;
                var self = $9618;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9621 = self.name;
                        var $9622 = Kind$Term$lam$($9621, (_x$10 => {
                            var $9623 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, $9619, _inds$4);
                            return $9623;
                        }));
                        var $9620 = $9622;
                        break;
                };
                var $9617 = $9620;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9625 = self.head;
                        var $9626 = self.tail;
                        var self = $9625;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9628 = self.name;
                                var $9629 = Kind$Term$lam$($9628, (_x$10 => {
                                    var $9630 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, _name$2, _pars$3, $9626);
                                    return $9630;
                                }));
                                var $9627 = $9629;
                                break;
                        };
                        var $9624 = $9627;
                        break;
                    case 'List.nil':
                        var $9631 = Kind$Term$all$(Bool$true, (_name$2 + ".Self"), Kind$Name$read$("P"), Kind$Parser$ADT$Datatype$build_term$motive$(_type$1), (_s$5 => _x$6 => {
                            var $9632 = Kind$Parser$ADT$Datatype$build_term$constructors$(_type$1);
                            return $9632;
                        }));
                        var $9624 = $9631;
                        break;
                };
                var $9617 = $9624;
                break;
        };
        return $9617;
    };
    const Kind$Parser$ADT$Datatype$build_term$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_term$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_term$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9634 = self.name;
                var $9635 = self.pars;
                var $9636 = self.inds;
                var $9637 = Kind$Parser$ADT$Datatype$build_term$go$(_type$1, $9634, $9635, $9636);
                var $9633 = $9637;
                break;
        };
        return $9633;
    };
    const Kind$Parser$ADT$Datatype$build_term = x0 => Kind$Parser$ADT$Datatype$build_term$(x0);

    function Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, _inds$4) {
        var self = _pars$3;
        switch (self._) {
            case 'List.cons':
                var $9639 = self.head;
                var $9640 = self.tail;
                var self = $9639;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9642 = self.name;
                        var $9643 = self.term;
                        var $9644 = Kind$Term$all$(Bool$false, "", $9642, $9643, (_s$10 => _x$11 => {
                            var $9645 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, $9640, _inds$4);
                            return $9645;
                        }));
                        var $9641 = $9644;
                        break;
                };
                var $9638 = $9641;
                break;
            case 'List.nil':
                var self = _inds$4;
                switch (self._) {
                    case 'List.cons':
                        var $9647 = self.head;
                        var $9648 = self.tail;
                        var self = $9647;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9650 = self.name;
                                var $9651 = self.term;
                                var $9652 = Kind$Term$all$(Bool$false, "", $9650, $9651, (_s$10 => _x$11 => {
                                    var $9653 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, _name$2, _pars$3, $9648);
                                    return $9653;
                                }));
                                var $9649 = $9652;
                                break;
                        };
                        var $9646 = $9649;
                        break;
                    case 'List.nil':
                        var $9654 = Kind$Term$typ;
                        var $9646 = $9654;
                        break;
                };
                var $9638 = $9646;
                break;
        };
        return $9638;
    };
    const Kind$Parser$ADT$Datatype$build_type$go = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Datatype$build_type$go$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Datatype$build_type$(_type$1) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9656 = self.name;
                var $9657 = self.pars;
                var $9658 = self.inds;
                var $9659 = Kind$Parser$ADT$Datatype$build_type$go$(_type$1, $9656, $9657, $9658);
                var $9655 = $9659;
                break;
        };
        return $9655;
    };
    const Kind$Parser$ADT$Datatype$build_type = x0 => Kind$Parser$ADT$Datatype$build_type$(x0);

    function Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, _ctrs$3) {
        var self = _ctrs$3;
        switch (self._) {
            case 'List.cons':
                var $9661 = self.head;
                var $9662 = self.tail;
                var self = $9661;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9664 = self.name;
                        var $9665 = Kind$Term$lam$($9664, (_x$9 => {
                            var $9666 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9662);
                            return $9666;
                        }));
                        var $9663 = $9665;
                        break;
                };
                var $9660 = $9663;
                break;
            case 'List.nil':
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9668 = self.name;
                        var $9669 = self.args;
                        var _ret$7 = Kind$Term$ref$($9668);
                        var _ret$8 = (() => {
                            var $9672 = _ret$7;
                            var $9673 = $9669;
                            let _ret$9 = $9672;
                            let _arg$8;
                            while ($9673._ === 'List.cons') {
                                _arg$8 = $9673.head;
                                var $9672 = Kind$Term$app$(_ret$9, Kind$Term$ref$((() => {
                                    var self = _arg$8;
                                    switch (self._) {
                                        case 'Kind.Binder.new':
                                            var $9674 = self.name;
                                            var $9675 = $9674;
                                            return $9675;
                                    };
                                })()));
                                _ret$9 = $9672;
                                $9673 = $9673.tail;
                            }
                            return _ret$9;
                        })();
                        var $9670 = _ret$8;
                        var $9667 = $9670;
                        break;
                };
                var $9660 = $9667;
                break;
        };
        return $9660;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt$go = x0 => x1 => x2 => Kind$Parser$ADT$Constructor$build_term$opt$go$(x0, x1, x2);

    function Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9677 = self.ctrs;
                var $9678 = Kind$Parser$ADT$Constructor$build_term$opt$go$(_type$1, _ctor$2, $9677);
                var $9676 = $9678;
                break;
        };
        return $9676;
    };
    const Kind$Parser$ADT$Constructor$build_term$opt = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$opt$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9680 = self.head;
                var $9681 = self.tail;
                var self = $9680;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9683 = self.name;
                        var $9684 = Kind$Term$lam$($9683, (_x$11 => {
                            var $9685 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, $9681, _args$5);
                            return $9685;
                        }));
                        var $9682 = $9684;
                        break;
                };
                var $9679 = $9682;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9687 = self.head;
                        var $9688 = self.tail;
                        var self = $9687;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9690 = self.name;
                                var $9691 = Kind$Term$lam$($9690, (_x$11 => {
                                    var $9692 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, _name$3, _pars$4, $9688);
                                    return $9692;
                                }));
                                var $9689 = $9691;
                                break;
                        };
                        var $9686 = $9689;
                        break;
                    case 'List.nil':
                        var $9693 = Kind$Term$lam$(Kind$Name$read$("P"), (_x$6 => {
                            var $9694 = Kind$Parser$ADT$Constructor$build_term$opt$(_type$1, _ctor$2);
                            return $9694;
                        }));
                        var $9686 = $9693;
                        break;
                };
                var $9679 = $9686;
                break;
        };
        return $9679;
    };
    const Kind$Parser$ADT$Constructor$build_term$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_term$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_term$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9696 = self.name;
                var $9697 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9699 = self.args;
                        var $9700 = Kind$Parser$ADT$Constructor$build_term$go$(_type$1, _ctor$2, $9696, $9697, $9699);
                        var $9698 = $9700;
                        break;
                };
                var $9695 = $9698;
                break;
        };
        return $9695;
    };
    const Kind$Parser$ADT$Constructor$build_term = x0 => x1 => Kind$Parser$ADT$Constructor$build_term$(x0, x1);

    function Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, _args$5) {
        var self = _pars$4;
        switch (self._) {
            case 'List.cons':
                var $9702 = self.head;
                var $9703 = self.tail;
                var self = $9702;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9705 = self.eras;
                        var $9706 = self.name;
                        var $9707 = self.term;
                        var $9708 = Kind$Term$all$($9705, "", $9706, $9707, (_s$11 => _x$12 => {
                            var $9709 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, $9703, _args$5);
                            return $9709;
                        }));
                        var $9704 = $9708;
                        break;
                };
                var $9701 = $9704;
                break;
            case 'List.nil':
                var self = _args$5;
                switch (self._) {
                    case 'List.cons':
                        var $9711 = self.head;
                        var $9712 = self.tail;
                        var self = $9711;
                        switch (self._) {
                            case 'Kind.Binder.new':
                                var $9714 = self.eras;
                                var $9715 = self.name;
                                var $9716 = self.term;
                                var $9717 = Kind$Term$all$($9714, "", $9715, $9716, (_s$11 => _x$12 => {
                                    var $9718 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, _name$3, _pars$4, $9712);
                                    return $9718;
                                }));
                                var $9713 = $9717;
                                break;
                        };
                        var $9710 = $9713;
                        break;
                    case 'List.nil':
                        var self = _type$1;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Datatype.new':
                                var $9720 = self.pars;
                                var self = _ctor$2;
                                switch (self._) {
                                    case 'Kind.Parser.ADT.Constructor.new':
                                        var $9722 = self.inds;
                                        var _type$14 = Kind$Term$ref$(_name$3);
                                        var _type$15 = (() => {
                                            var $9725 = _type$14;
                                            var $9726 = $9720;
                                            let _type$16 = $9725;
                                            let _v$15;
                                            while ($9726._ === 'List.cons') {
                                                _v$15 = $9726.head;
                                                var $9725 = Kind$Term$app$(_type$16, Kind$Term$ref$((() => {
                                                    var self = _v$15;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9727 = self.name;
                                                            var $9728 = $9727;
                                                            return $9728;
                                                    };
                                                })()));
                                                _type$16 = $9725;
                                                $9726 = $9726.tail;
                                            }
                                            return _type$16;
                                        })();
                                        var _type$16 = (() => {
                                            var $9730 = _type$15;
                                            var $9731 = $9722;
                                            let _type$17 = $9730;
                                            let _v$16;
                                            while ($9731._ === 'List.cons') {
                                                _v$16 = $9731.head;
                                                var $9730 = Kind$Term$app$(_type$17, (() => {
                                                    var self = _v$16;
                                                    switch (self._) {
                                                        case 'Kind.Binder.new':
                                                            var $9732 = self.term;
                                                            var $9733 = $9732;
                                                            return $9733;
                                                    };
                                                })());
                                                _type$17 = $9730;
                                                $9731 = $9731.tail;
                                            }
                                            return _type$17;
                                        })();
                                        var $9723 = _type$16;
                                        var $9721 = $9723;
                                        break;
                                };
                                var $9719 = $9721;
                                break;
                        };
                        var $9710 = $9719;
                        break;
                };
                var $9701 = $9710;
                break;
        };
        return $9701;
    };
    const Kind$Parser$ADT$Constructor$build_type$go = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Constructor$build_type$go$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Constructor$build_type$(_type$1, _ctor$2) {
        var self = _type$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9735 = self.name;
                var $9736 = self.pars;
                var self = _ctor$2;
                switch (self._) {
                    case 'Kind.Parser.ADT.Constructor.new':
                        var $9738 = self.args;
                        var $9739 = Kind$Parser$ADT$Constructor$build_type$go$(_type$1, _ctor$2, $9735, $9736, $9738);
                        var $9737 = $9739;
                        break;
                };
                var $9734 = $9737;
                break;
        };
        return $9734;
    };
    const Kind$Parser$ADT$Constructor$build_type = x0 => x1 => Kind$Parser$ADT$Constructor$build_type$(x0, x1);

    function List$is_empty$(_list$2) {
        var self = _list$2;
        switch (self._) {
            case 'List.nil':
                var $9741 = Bool$true;
                var $9740 = $9741;
                break;
            case 'List.cons':
                var $9742 = Bool$false;
                var $9740 = $9742;
                break;
        };
        return $9740;
    };
    const List$is_empty = x0 => List$is_empty$(x0);

    function Kind$Term$get_args$go$(_term$1, _args$2) {
        var Kind$Term$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Term$get_args$go = _term$1 => _args$2 => Kind$Term$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $9743 = self.func;
                        var $9744 = self.argm;
                        var $9745 = Kind$Term$get_args$go$($9743, List$cons$($9744, _args$2));
                        return $9745;
                    case 'Kind.Term.ori':
                        var $9746 = self.expr;
                        var $9747 = Kind$Term$get_args$go$($9746, _args$2);
                        return $9747;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $9748 = Pair$new$(_term$1, _args$2);
                        return $9748;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$get_args$go = x0 => x1 => Kind$Term$get_args$go$(x0, x1);

    function Kind$Term$get_args$(_term$1) {
        var $9749 = Kind$Term$get_args$go$(_term$1, List$nil);
        return $9749;
    };
    const Kind$Term$get_args = x0 => Kind$Term$get_args$(x0);

    function Kind$Parser$ADT$Derive$stringifier$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9751 = self.fst;
                var $9752 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9751) + ".stringifier"));
                var _term$6 = (() => {
                    var $9755 = _term$5;
                    var $9756 = $9752;
                    let _term$7 = $9755;
                    let _par$6;
                    while ($9756._ === 'List.cons') {
                        _par$6 = $9756.head;
                        var $9755 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9755;
                        $9756 = $9756.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9758 = _term$6;
                    var $9759 = $9752;
                    let _term$8 = $9758;
                    let _par$7;
                    while ($9759._ === 'List.cons') {
                        _par$7 = $9759.head;
                        var $9758 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$stringifier$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9758;
                        $9759 = $9759.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9760 = self.value;
                        var self = $9760;
                        switch (self._) {
                            case 'Pair.new':
                                var $9762 = self.fst;
                                var $9763 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9762));
                                var _term$12 = Kind$Term$app$(_term$11, $9763);
                                var $9764 = _term$12;
                                var $9761 = $9764;
                                break;
                        };
                        var $9753 = $9761;
                        break;
                    case 'Maybe.none':
                        var $9765 = _term$7;
                        var $9753 = $9765;
                        break;
                };
                var $9750 = $9753;
                break;
        };
        return $9750;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$args$(_args$1, _fst$2) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9767 = self.head;
                var $9768 = self.tail;
                var self = $9767;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9770 = self.name;
                        var $9771 = self.term;
                        var self = Kind$Term$get_args$($9771);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$10 = Kind$Parser$ADT$Derive$stringifier$term$args$($9768, Bool$false);
                                var _term$11 = Kind$Parser$ADT$Derive$stringifier$term$cont$($9771, Maybe$some$(Pair$new$(("x." + $9770), _rest$10)));
                                var _term$12 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$((() => {
                                    var self = _fst$2;
                                    if (self) {
                                        var $9774 = "(";
                                        return $9774;
                                    } else {
                                        var $9775 = ",";
                                        return $9775;
                                    };
                                })())), _term$11);
                                var $9773 = _term$12;
                                var $9772 = $9773;
                                break;
                        };
                        var $9769 = $9772;
                        break;
                };
                var $9766 = $9769;
                break;
            case 'List.nil':
                var _term$3 = Kind$Term$ref$("str");
                var self = _fst$2;
                if (self) {
                    var $9777 = _term$3;
                    var _term$4 = $9777;
                } else {
                    var $9778 = Kind$Term$app$(Kind$Term$app$(Kind$Term$ref$("Stringifier.text"), Kind$Term$str$(")")), _term$3);
                    var _term$4 = $9778;
                };
                var $9776 = _term$4;
                var $9766 = $9776;
                break;
        };
        return $9766;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$args = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$args$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, _ctr$2) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9780 = self.name;
                var $9781 = self.args;
                var _term$6 = Kind$Term$ref$("Stringifier.text");
                var _term$7 = Kind$Term$app$(_term$6, Kind$Term$str$((_adt_name$1 + ("." + $9780))));
                var _term$8 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$stringifier$term$args$($9781, Bool$true));
                var $9782 = Pair$new$($9780, _term$8);
                var $9779 = $9782;
                break;
        };
        return $9779;
    };
    const Kind$Parser$ADT$Derive$stringifier$ctr = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$ctr$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, _ctrs$2) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $9784 = self.head;
                var $9785 = self.tail;
                var $9786 = List$cons$(Kind$Parser$ADT$Derive$stringifier$ctr$(_adt_name$1, $9784), Kind$Parser$ADT$Derive$stringifier$term$ctrs$(_adt_name$1, $9785));
                var $9783 = $9786;
                break;
            case 'List.nil':
                var $9787 = List$nil;
                var $9783 = $9787;
                break;
        };
        return $9783;
    };
    const Kind$Parser$ADT$Derive$stringifier$term$ctrs = x0 => x1 => Kind$Parser$ADT$Derive$stringifier$term$ctrs$(x0, x1);

    function Kind$Parser$ADT$Derive$stringifier$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9789 = self.name;
                var $9790 = self.pars;
                var $9791 = self.inds;
                var $9792 = self.ctrs;
                var self = (List$is_empty$($9790) && List$is_empty$($9791));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $9795 = Kind$Term$lam$("str", (_str$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$stringifier$term$ctrs$($9789, $9792);
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $9798 = _cses$10;
                                var $9799 = _ctrs$9;
                                let _cses$12 = $9798;
                                let _ctr$11;
                                while ($9799._ === 'List.cons') {
                                    _ctr$11 = $9799.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $9800 = self.fst;
                                            var $9801 = self.snd;
                                            var $9802 = Kind$Map$set$($9800, $9801, _cses$12);
                                            var $9798 = $9802;
                                            break;
                                    };
                                    _cses$12 = $9798;
                                    $9799 = $9799.tail;
                                }
                                return _cses$12;
                            })();
                            var $9796 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $9796;
                        }));
                        return $9795;
                    }));
                    var $9794 = Maybe$some$(_term$7);
                    var $9793 = $9794;
                } else {
                    var $9803 = Maybe$none;
                    var $9793 = $9803;
                };
                var $9788 = $9793;
                break;
        };
        return $9788;
    };
    const Kind$Parser$ADT$Derive$stringifier$term = x0 => Kind$Parser$ADT$Derive$stringifier$term$(x0);

    function Kind$Parser$ADT$Derive$stringifier$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9805 = self.name;
                var $9806 = self.pars;
                var $9807 = self.inds;
                var self = (List$is_empty$($9806) && List$is_empty$($9807));
                if (self) {
                    var $9809 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Stringifier"), Kind$Term$ref$($9805)));
                    var $9808 = $9809;
                } else {
                    var $9810 = Maybe$none;
                    var $9808 = $9810;
                };
                var $9804 = $9808;
                break;
        };
        return $9804;
    };
    const Kind$Parser$ADT$Derive$stringifier$type = x0 => Kind$Parser$ADT$Derive$stringifier$type$(x0);

    function Kind$Parser$ADT$Derived$new$(_name$1, _arit$2, _term$3, _type$4) {
        var $9811 = ({
            _: 'Kind.Parser.ADT.Derived.new',
            'name': _name$1,
            'arit': _arit$2,
            'term': _term$3,
            'type': _type$4
        });
        return $9811;
    };
    const Kind$Parser$ADT$Derived$new = x0 => x1 => x2 => x3 => Kind$Parser$ADT$Derived$new$(x0, x1, x2, x3);

    function Kind$Parser$ADT$Derive$parser$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9813 = self.fst;
                var $9814 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($9813) + ".parser"));
                var _term$5 = (() => {
                    var $9817 = _term$4;
                    var $9818 = $9814;
                    let _term$6 = $9817;
                    let _par$5;
                    while ($9818._ === 'List.cons') {
                        _par$5 = $9818.head;
                        var $9817 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $9817;
                        $9818 = $9818.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $9820 = _term$5;
                    var $9821 = $9814;
                    let _term$7 = $9820;
                    let _par$6;
                    while ($9821._ === 'List.cons') {
                        _par$6 = $9821.head;
                        var $9820 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$parser$term$cont$(_par$6));
                        _term$7 = $9820;
                        $9821 = $9821.tail;
                    }
                    return _term$7;
                })();
                var $9815 = _term$6;
                var $9812 = $9815;
                break;
        };
        return $9812;
    };
    const Kind$Parser$ADT$Derive$parser$term$cont = x0 => Kind$Parser$ADT$Derive$parser$term$cont$(x0);

    function Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9823 = self.head;
                var $9824 = self.tail;
                var self = $9823;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9826 = self.name;
                        var $9827 = self.term;
                        var _term$11 = Kind$Term$ref$("Parser.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _cont$14 = Kind$Term$ref$("Parser.prefix");
                        var _cont$15 = Kind$Term$app$(_cont$14, Kind$Term$hol$(Bits$e));
                        var _cont$16 = Kind$Term$app$(_cont$15, Kind$Term$str$((() => {
                            var self = _fst$5;
                            if (self) {
                                var $9829 = "(";
                                return $9829;
                            } else {
                                var $9830 = ",";
                                return $9830;
                            };
                        })()));
                        var _cont$17 = Kind$Term$app$(_cont$16, Kind$Parser$ADT$Derive$parser$term$cont$($9827));
                        var _term$18 = Kind$Term$app$(_term$13, _cont$17);
                        var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$($9826, (_x$19 => {
                            var $9831 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$2, $9824, List$cons$(_x$19, _vars$4), Bool$false);
                            return $9831;
                        })));
                        var $9828 = _term$19;
                        var $9825 = $9828;
                        break;
                };
                var $9822 = $9825;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Parser.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $9833 = Kind$Term$app$(_func$10, _var$9);
                    return $9833;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var self = _fst$5;
                if (self) {
                    var $9834 = _body$10;
                    var $9832 = $9834;
                } else {
                    var _term$11 = Kind$Term$ref$("Parser.bind");
                    var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                    var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                    var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(")")));
                    var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$("", (_x$15 => {
                        var $9836 = _body$10;
                        return $9836;
                    })));
                    var $9835 = _term$15;
                    var $9832 = $9835;
                };
                var $9822 = $9832;
                break;
        };
        return $9822;
    };
    const Kind$Parser$ADT$Derive$parser$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$parser$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, _cses$2) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9838 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $9840 = self.head;
                        var $9841 = self.tail;
                        var self = $9840;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9843 = self.name;
                                var $9844 = self.args;
                                var _cnam$13 = ($9838 + ("." + $9843));
                                var _term$14 = Kind$Term$ref$("Parser.bind");
                                var _term$15 = Kind$Term$app$(_term$14, Kind$Term$hol$(Bits$e));
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$app$(Kind$Term$ref$("Parser.text"), Kind$Term$str$(_cnam$13)));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$lam$("", (_x$18 => {
                                    var $9846 = Kind$Parser$ADT$Derive$parser$term$args$(_adt$1, _cnam$13, $9844, List$nil, Bool$true);
                                    return $9846;
                                })));
                                var _list$19 = Kind$Term$ref$("List.cons");
                                var _list$20 = Kind$Term$app$(_list$19, Kind$Term$hol$(Bits$e));
                                var _list$21 = Kind$Term$app$(_list$20, _term$18);
                                var _list$22 = Kind$Term$app$(_list$21, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $9841));
                                var $9845 = _list$22;
                                var $9842 = $9845;
                                break;
                        };
                        var $9839 = $9842;
                        break;
                    case 'List.nil':
                        var _fail$8 = Kind$Term$ref$("Parser.fail");
                        var _fail$9 = Kind$Term$app$(_fail$8, Kind$Term$hol$(Bits$e));
                        var _fail$10 = Kind$Term$app$(_fail$9, Kind$Term$str$(""));
                        var _term$11 = Kind$Term$ref$("List.cons");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, _fail$10);
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e)));
                        var $9847 = _term$14;
                        var $9839 = $9847;
                        break;
                };
                var $9837 = $9839;
                break;
        };
        return $9837;
    };
    const Kind$Parser$ADT$Derive$parser$term$cses = x0 => x1 => Kind$Parser$ADT$Derive$parser$term$cses$(x0, x1);

    function Kind$Parser$ADT$Derive$parser$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9849 = self.pars;
                var $9850 = self.inds;
                var $9851 = self.ctrs;
                var self = (List$is_empty$($9849) && List$is_empty$($9850));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Parser.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$parser$term$cses$(_adt$1, $9851));
                    var $9853 = Maybe$some$(_term$9);
                    var $9852 = $9853;
                } else {
                    var $9854 = Maybe$none;
                    var $9852 = $9854;
                };
                var $9848 = $9852;
                break;
        };
        return $9848;
    };
    const Kind$Parser$ADT$Derive$parser$term = x0 => Kind$Parser$ADT$Derive$parser$term$(x0);

    function Kind$Parser$ADT$Derive$parser$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9856 = self.name;
                var $9857 = self.pars;
                var $9858 = self.inds;
                var self = (List$is_empty$($9857) && List$is_empty$($9858));
                if (self) {
                    var $9860 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Parser"), Kind$Term$ref$($9856)));
                    var $9859 = $9860;
                } else {
                    var $9861 = Maybe$none;
                    var $9859 = $9861;
                };
                var $9855 = $9859;
                break;
        };
        return $9855;
    };
    const Kind$Parser$ADT$Derive$parser$type = x0 => Kind$Parser$ADT$Derive$parser$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$cont$(_call$1, _rest$2) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9863 = self.fst;
                var $9864 = self.snd;
                var _term$5 = Kind$Term$ref$((Kind$Term$extract_name$($9863) + ".serializer"));
                var _term$6 = (() => {
                    var $9867 = _term$5;
                    var $9868 = $9864;
                    let _term$7 = $9867;
                    let _par$6;
                    while ($9868._ === 'List.cons') {
                        _par$6 = $9868.head;
                        var $9867 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                        _term$7 = $9867;
                        $9868 = $9868.tail;
                    }
                    return _term$7;
                })();
                var _term$7 = (() => {
                    var $9870 = _term$6;
                    var $9871 = $9864;
                    let _term$8 = $9870;
                    let _par$7;
                    while ($9871._ === 'List.cons') {
                        _par$7 = $9871.head;
                        var $9870 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$serializer$term$cont$(_par$7, Maybe$none));
                        _term$8 = $9870;
                        $9871 = $9871.tail;
                    }
                    return _term$8;
                })();
                var self = _rest$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $9872 = self.value;
                        var self = $9872;
                        switch (self._) {
                            case 'Pair.new':
                                var $9874 = self.fst;
                                var $9875 = self.snd;
                                var _term$11 = Kind$Term$app$(_term$7, Kind$Term$ref$($9874));
                                var _term$12 = Kind$Term$app$(_term$11, $9875);
                                var $9876 = _term$12;
                                var $9873 = $9876;
                                break;
                        };
                        var $9865 = $9873;
                        break;
                    case 'Maybe.none':
                        var $9877 = _term$7;
                        var $9865 = $9877;
                        break;
                };
                var $9862 = $9865;
                break;
        };
        return $9862;
    };
    const Kind$Parser$ADT$Derive$serializer$term$cont = x0 => x1 => Kind$Parser$ADT$Derive$serializer$term$cont$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$term$args$(_args$1) {
        var self = _args$1;
        switch (self._) {
            case 'List.cons':
                var $9879 = self.head;
                var $9880 = self.tail;
                var self = $9879;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9882 = self.name;
                        var $9883 = self.term;
                        var self = Kind$Term$get_args$($9883);
                        switch (self._) {
                            case 'Pair.new':
                                var _rest$9 = Kind$Parser$ADT$Derive$serializer$term$args$($9880);
                                var _term$10 = Kind$Parser$ADT$Derive$serializer$term$cont$($9883, Maybe$some$(Pair$new$(("x." + $9882), _rest$9)));
                                var $9885 = _term$10;
                                var $9884 = $9885;
                                break;
                        };
                        var $9881 = $9884;
                        break;
                };
                var $9878 = $9881;
                break;
            case 'List.nil':
                var $9886 = Kind$Term$ref$("bs");
                var $9878 = $9886;
                break;
        };
        return $9878;
    };
    const Kind$Parser$ADT$Derive$serializer$term$args = x0 => Kind$Parser$ADT$Derive$serializer$term$args$(x0);

    function Kind$Parser$ADT$Derive$serializer$ctr$bits$(_bs$1, _rest$2) {
        var self = _bs$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $9888 = self.slice(0, -1);
                var $9889 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($9888, _rest$2));
                var $9887 = $9889;
                break;
            case 'i':
                var $9890 = self.slice(0, -1);
                var $9891 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$ctr$bits$($9890, _rest$2));
                var $9887 = $9891;
                break;
            case 'e':
                var $9892 = _rest$2;
                var $9887 = $9892;
                break;
        };
        return $9887;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr$bits = x0 => x1 => Kind$Parser$ADT$Derive$serializer$ctr$bits$(x0, x1);

    function Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, _ctr$2, _header$3) {
        var self = _ctr$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Constructor.new':
                var $9894 = self.name;
                var $9895 = self.args;
                var _term$7 = Kind$Parser$ADT$Derive$serializer$term$args$($9895);
                var _term$8 = Kind$Parser$ADT$Derive$serializer$ctr$bits$(_header$3, _term$7);
                var $9896 = Pair$new$($9894, _term$8);
                var $9893 = $9896;
                break;
        };
        return $9893;
    };
    const Kind$Parser$ADT$Derive$serializer$ctr = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$ctr$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, _ctrs$2, _header$3) {
        var self = _ctrs$2;
        switch (self._) {
            case 'List.cons':
                var $9898 = self.head;
                var $9899 = self.tail;
                var $9900 = List$cons$(Kind$Parser$ADT$Derive$serializer$ctr$(_adt_name$1, $9898, _header$3), Kind$Parser$ADT$Derive$serializer$term$ctrs$(_adt_name$1, $9899, Bits$inc$(_header$3)));
                var $9897 = $9900;
                break;
            case 'List.nil':
                var $9901 = List$nil;
                var $9897 = $9901;
                break;
        };
        return $9897;
    };
    const Kind$Parser$ADT$Derive$serializer$term$ctrs = x0 => x1 => x2 => Kind$Parser$ADT$Derive$serializer$term$ctrs$(x0, x1, x2);

    function Bits$zeros$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $9903 = Bits$e;
            var $9902 = $9903;
        } else {
            var $9904 = (self - 1n);
            var $9905 = (Bits$zeros$($9904) + '0');
            var $9902 = $9905;
        };
        return $9902;
    };
    const Bits$zeros = x0 => Bits$zeros$(x0);
    const Nat$div = a0 => a1 => (a0 / a1);

    function Nat$bitlen$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $9907 = 0n;
            var $9906 = $9907;
        } else {
            var $9908 = (self - 1n);
            var $9909 = Nat$succ$(Nat$bitlen$((_n$1 / 2n)));
            var $9906 = $9909;
        };
        return $9906;
    };
    const Nat$bitlen = x0 => Nat$bitlen$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9911 = self.name;
                var $9912 = self.pars;
                var $9913 = self.inds;
                var $9914 = self.ctrs;
                var self = (List$is_empty$($9912) && List$is_empty$($9913));
                if (self) {
                    var _term$7 = Kind$Term$lam$("x", (_x$7 => {
                        var $9917 = Kind$Term$lam$("bs", (_bs$8 => {
                            var _ctrs$9 = Kind$Parser$ADT$Derive$serializer$term$ctrs$($9911, $9914, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($9914))))));
                            var _cses$10 = Kind$Map$new;
                            var _cses$11 = (() => {
                                var $9920 = _cses$10;
                                var $9921 = _ctrs$9;
                                let _cses$12 = $9920;
                                let _ctr$11;
                                while ($9921._ === 'List.cons') {
                                    _ctr$11 = $9921.head;
                                    var self = _ctr$11;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $9922 = self.fst;
                                            var $9923 = self.snd;
                                            var $9924 = Kind$Map$set$($9922, $9923, _cses$12);
                                            var $9920 = $9924;
                                            break;
                                    };
                                    _cses$12 = $9920;
                                    $9921 = $9921.tail;
                                }
                                return _cses$12;
                            })();
                            var $9918 = Kind$Term$cse$(Bits$e, _x$7, "x", List$nil, _cses$11, Maybe$none);
                            return $9918;
                        }));
                        return $9917;
                    }));
                    var $9916 = Maybe$some$(_term$7);
                    var $9915 = $9916;
                } else {
                    var $9925 = Maybe$none;
                    var $9915 = $9925;
                };
                var $9910 = $9915;
                break;
        };
        return $9910;
    };
    const Kind$Parser$ADT$Derive$serializer$term = x0 => Kind$Parser$ADT$Derive$serializer$term$(x0);

    function Kind$Parser$ADT$Derive$serializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9927 = self.name;
                var $9928 = self.pars;
                var $9929 = self.inds;
                var self = (List$is_empty$($9928) && List$is_empty$($9929));
                if (self) {
                    var $9931 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Serializer"), Kind$Term$ref$($9927)));
                    var $9930 = $9931;
                } else {
                    var $9932 = Maybe$none;
                    var $9930 = $9932;
                };
                var $9926 = $9930;
                break;
        };
        return $9926;
    };
    const Kind$Parser$ADT$Derive$serializer$type = x0 => Kind$Parser$ADT$Derive$serializer$type$(x0);

    function Kind$Parser$ADT$Derive$serializer$term$bits$(_bits$1) {
        var self = _bits$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $9934 = self.slice(0, -1);
                var $9935 = Kind$Term$app$(Kind$Term$ref$("Bits.o"), Kind$Parser$ADT$Derive$serializer$term$bits$($9934));
                var $9933 = $9935;
                break;
            case 'i':
                var $9936 = self.slice(0, -1);
                var $9937 = Kind$Term$app$(Kind$Term$ref$("Bits.i"), Kind$Parser$ADT$Derive$serializer$term$bits$($9936));
                var $9933 = $9937;
                break;
            case 'e':
                var $9938 = Kind$Term$ref$("Bits.e");
                var $9933 = $9938;
                break;
        };
        return $9933;
    };
    const Kind$Parser$ADT$Derive$serializer$term$bits = x0 => Kind$Parser$ADT$Derive$serializer$term$bits$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$cont$(_call$1) {
        var self = Kind$Term$get_args$(_call$1);
        switch (self._) {
            case 'Pair.new':
                var $9940 = self.fst;
                var $9941 = self.snd;
                var _term$4 = Kind$Term$ref$((Kind$Term$extract_name$($9940) + ".deserializer"));
                var _term$5 = (() => {
                    var $9944 = _term$4;
                    var $9945 = $9941;
                    let _term$6 = $9944;
                    let _par$5;
                    while ($9945._ === 'List.cons') {
                        _par$5 = $9945.head;
                        var $9944 = Kind$Term$app$(_term$6, Kind$Term$hol$(Bits$e));
                        _term$6 = $9944;
                        $9945 = $9945.tail;
                    }
                    return _term$6;
                })();
                var _term$6 = (() => {
                    var $9947 = _term$5;
                    var $9948 = $9941;
                    let _term$7 = $9947;
                    let _par$6;
                    while ($9948._ === 'List.cons') {
                        _par$6 = $9948.head;
                        var $9947 = Kind$Term$app$(_term$7, Kind$Parser$ADT$Derive$deserializer$term$cont$(_par$6));
                        _term$7 = $9947;
                        $9948 = $9948.tail;
                    }
                    return _term$7;
                })();
                var $9942 = _term$6;
                var $9939 = $9942;
                break;
        };
        return $9939;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cont = x0 => Kind$Parser$ADT$Derive$deserializer$term$cont$(x0);

    function Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, _args$3, _vars$4, _fst$5) {
        var self = _args$3;
        switch (self._) {
            case 'List.cons':
                var $9950 = self.head;
                var $9951 = self.tail;
                var self = $9950;
                switch (self._) {
                    case 'Kind.Binder.new':
                        var $9953 = self.name;
                        var $9954 = self.term;
                        var _term$11 = Kind$Term$ref$("Deserializer.bind");
                        var _term$12 = Kind$Term$app$(_term$11, Kind$Term$hol$(Bits$e));
                        var _term$13 = Kind$Term$app$(_term$12, Kind$Term$hol$(Bits$e));
                        var _term$14 = Kind$Term$app$(_term$13, Kind$Parser$ADT$Derive$deserializer$term$cont$($9954));
                        var _term$15 = Kind$Term$app$(_term$14, Kind$Term$lam$($9953, (_x$15 => {
                            var $9956 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$2, $9951, List$cons$(_x$15, _vars$4), Bool$false);
                            return $9956;
                        })));
                        var $9955 = _term$15;
                        var $9952 = $9955;
                        break;
                };
                var $9949 = $9952;
                break;
            case 'List.nil':
                var _body$6 = Kind$Term$ref$("Deserializer.pure");
                var _body$7 = Kind$Term$app$(_body$6, Kind$Term$hol$(Bits$e));
                var _func$8 = Kind$Term$ref$(_cnam$2);
                var _func$9 = List$fold$(_vars$4, _func$8, (_var$9 => _func$10 => {
                    var $9958 = Kind$Term$app$(_func$10, _var$9);
                    return $9958;
                }));
                var _body$10 = Kind$Term$app$(_body$7, _func$9);
                var $9957 = _body$10;
                var $9949 = $9957;
                break;
        };
        return $9949;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$args = x0 => x1 => x2 => x3 => x4 => Kind$Parser$ADT$Derive$deserializer$term$args$(x0, x1, x2, x3, x4);

    function Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, _cses$2, _header$3) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9960 = self.name;
                var self = _cses$2;
                switch (self._) {
                    case 'List.cons':
                        var $9962 = self.head;
                        var $9963 = self.tail;
                        var self = $9962;
                        switch (self._) {
                            case 'Kind.Parser.ADT.Constructor.new':
                                var $9965 = self.name;
                                var $9966 = self.args;
                                var _cnam$14 = ($9960 + ("." + $9965));
                                var _term$15 = Kind$Term$ref$("Deserializer.bind");
                                var _term$16 = Kind$Term$app$(_term$15, Kind$Term$hol$(Bits$e));
                                var _term$17 = Kind$Term$app$(_term$16, Kind$Term$hol$(Bits$e));
                                var _term$18 = Kind$Term$app$(_term$17, Kind$Term$app$(Kind$Term$ref$("Deserializer.bits"), Kind$Parser$ADT$Derive$serializer$term$bits$(_header$3)));
                                var _term$19 = Kind$Term$app$(_term$18, Kind$Term$lam$("", (_x$19 => {
                                    var $9968 = Kind$Parser$ADT$Derive$deserializer$term$args$(_adt$1, _cnam$14, $9966, List$nil, Bool$true);
                                    return $9968;
                                })));
                                var _list$20 = Kind$Term$ref$("List.cons");
                                var _list$21 = Kind$Term$app$(_list$20, Kind$Term$hol$(Bits$e));
                                var _list$22 = Kind$Term$app$(_list$21, _term$19);
                                var _list$23 = Kind$Term$app$(_list$22, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $9963, Bits$inc$(_header$3)));
                                var $9967 = _list$23;
                                var $9964 = $9967;
                                break;
                        };
                        var $9961 = $9964;
                        break;
                    case 'List.nil':
                        var $9969 = Kind$Term$app$(Kind$Term$ref$("List.nil"), Kind$Term$hol$(Bits$e));
                        var $9961 = $9969;
                        break;
                };
                var $9959 = $9961;
                break;
        };
        return $9959;
    };
    const Kind$Parser$ADT$Derive$deserializer$term$cses = x0 => x1 => x2 => Kind$Parser$ADT$Derive$deserializer$term$cses$(x0, x1, x2);

    function Kind$Parser$ADT$Derive$deserializer$term$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9971 = self.pars;
                var $9972 = self.inds;
                var $9973 = self.ctrs;
                var self = (List$is_empty$($9971) && List$is_empty$($9972));
                if (self) {
                    var _term$7 = Kind$Term$ref$("Deserializer.choice");
                    var _term$8 = Kind$Term$app$(_term$7, Kind$Term$hol$(Bits$e));
                    var _term$9 = Kind$Term$app$(_term$8, Kind$Parser$ADT$Derive$deserializer$term$cses$(_adt$1, $9973, Bits$zeros$(Nat$bitlen$(Nat$pred$((list_length($9973)))))));
                    var $9975 = Maybe$some$(_term$9);
                    var $9974 = $9975;
                } else {
                    var $9976 = Maybe$none;
                    var $9974 = $9976;
                };
                var $9970 = $9974;
                break;
        };
        return $9970;
    };
    const Kind$Parser$ADT$Derive$deserializer$term = x0 => Kind$Parser$ADT$Derive$deserializer$term$(x0);

    function Kind$Parser$ADT$Derive$deserializer$type$(_adt$1) {
        var self = _adt$1;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9978 = self.name;
                var $9979 = self.pars;
                var $9980 = self.inds;
                var self = (List$is_empty$($9979) && List$is_empty$($9980));
                if (self) {
                    var $9982 = Maybe$some$(Kind$Term$app$(Kind$Term$ref$("Deserializer"), Kind$Term$ref$($9978)));
                    var $9981 = $9982;
                } else {
                    var $9983 = Maybe$none;
                    var $9981 = $9983;
                };
                var $9977 = $9981;
                break;
        };
        return $9977;
    };
    const Kind$Parser$ADT$Derive$deserializer$type = x0 => Kind$Parser$ADT$Derive$deserializer$type$(x0);

    function Kind$Parser$ADT$Derive$by_name$(_deri$1, _adt$2) {
        var self = _adt$2;
        switch (self._) {
            case 'Kind.Parser.ADT.Datatype.new':
                var $9985 = self.name;
                var self = (_deri$1 === "stringifier");
                if (self) {
                    var _name$8 = ($9985 + ("." + _deri$1));
                    var $9987 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                        var $9988 = _m$bind$9;
                        return $9988;
                    }))(Kind$Parser$ADT$Derive$stringifier$term$(_adt$2))((_term$9 => {
                        var $9989 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                            var $9990 = _m$bind$10;
                            return $9990;
                        }))(Kind$Parser$ADT$Derive$stringifier$type$(_adt$2))((_type$10 => {
                            var $9991 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                var $9992 = _m$pure$12;
                                return $9992;
                            }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                            return $9991;
                        }));
                        return $9989;
                    }));
                    var $9986 = $9987;
                } else {
                    var self = (_deri$1 === "parser");
                    if (self) {
                        var _name$8 = ($9985 + ("." + _deri$1));
                        var $9994 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                            var $9995 = _m$bind$9;
                            return $9995;
                        }))(Kind$Parser$ADT$Derive$parser$term$(_adt$2))((_term$9 => {
                            var $9996 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                var $9997 = _m$bind$10;
                                return $9997;
                            }))(Kind$Parser$ADT$Derive$parser$type$(_adt$2))((_type$10 => {
                                var $9998 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                    var $9999 = _m$pure$12;
                                    return $9999;
                                }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                return $9998;
                            }));
                            return $9996;
                        }));
                        var $9993 = $9994;
                    } else {
                        var self = (_deri$1 === "serializer");
                        if (self) {
                            var _name$8 = ($9985 + ("." + _deri$1));
                            var $10001 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                var $10002 = _m$bind$9;
                                return $10002;
                            }))(Kind$Parser$ADT$Derive$serializer$term$(_adt$2))((_term$9 => {
                                var $10003 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                    var $10004 = _m$bind$10;
                                    return $10004;
                                }))(Kind$Parser$ADT$Derive$serializer$type$(_adt$2))((_type$10 => {
                                    var $10005 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10006 = _m$pure$12;
                                        return $10006;
                                    }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                    return $10005;
                                }));
                                return $10003;
                            }));
                            var $10000 = $10001;
                        } else {
                            var self = (_deri$1 === "deserializer");
                            if (self) {
                                var _name$8 = ($9985 + ("." + _deri$1));
                                var $10008 = Maybe$monad$((_m$bind$9 => _m$pure$10 => {
                                    var $10009 = _m$bind$9;
                                    return $10009;
                                }))(Kind$Parser$ADT$Derive$deserializer$term$(_adt$2))((_term$9 => {
                                    var $10010 = Maybe$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $10011 = _m$bind$10;
                                        return $10011;
                                    }))(Kind$Parser$ADT$Derive$deserializer$type$(_adt$2))((_type$10 => {
                                        var $10012 = Maybe$monad$((_m$bind$11 => _m$pure$12 => {
                                            var $10013 = _m$pure$12;
                                            return $10013;
                                        }))(Kind$Parser$ADT$Derived$new$(_name$8, 0n, _term$9, _type$10));
                                        return $10012;
                                    }));
                                    return $10010;
                                }));
                                var $10007 = $10008;
                            } else {
                                var $10014 = Maybe$none;
                                var $10007 = $10014;
                            };
                            var $10000 = $10007;
                        };
                        var $9993 = $10000;
                    };
                    var $9986 = $9993;
                };
                var $9984 = $9986;
                break;
        };
        return $9984;
    };
    const Kind$Parser$ADT$Derive$by_name = x0 => x1 => Kind$Parser$ADT$Derive$by_name$(x0, x1);

    function Kind$Parser$file$adt$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10016 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10018 = self.err;
                        var self = $10016;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10020 = self.value;
                                var $10021 = Parser$Reply$error$(Parser$Error$combine$($10020, $10018));
                                var $10019 = $10021;
                                break;
                            case 'Maybe.none':
                                var $10022 = Parser$Reply$error$($10018);
                                var $10019 = $10022;
                                break;
                        };
                        var $10017 = $10019;
                        break;
                    case 'Parser.Reply.value':
                        var $10023 = self.pst;
                        var self = $10023;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10025 = self.err;
                                var $10026 = self.nam;
                                var $10027 = self.ini;
                                var $10028 = self.idx;
                                var $10029 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10016, $10025), $10026, $10027, $10028, $10029);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10031 = self.err;
                                        var _reply$24 = Parser$get_idx$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10033 = self.err;
                                                var self = $10031;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10035 = self.value;
                                                        var $10036 = Parser$Reply$error$(Parser$Error$combine$($10035, $10033));
                                                        var $10034 = $10036;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10037 = Parser$Reply$error$($10033);
                                                        var $10034 = $10037;
                                                        break;
                                                };
                                                var $10032 = $10034;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10038 = self.pst;
                                                var $10039 = self.val;
                                                var self = $10038;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10041 = self.err;
                                                        var $10042 = self.nam;
                                                        var $10043 = self.ini;
                                                        var $10044 = self.idx;
                                                        var $10045 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10031, $10041), $10042, $10043, $10044, $10045);
                                                        var self = _reply$pst$32;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10047 = self.err;
                                                                var _reply$38 = Kind$Parser$ADT$adt$(_reply$pst$32);
                                                                var self = _reply$38;
                                                                switch (self._) {
                                                                    case 'Parser.Reply.error':
                                                                        var $10049 = self.err;
                                                                        var self = $10047;
                                                                        switch (self._) {
                                                                            case 'Maybe.some':
                                                                                var $10051 = self.value;
                                                                                var $10052 = Parser$Reply$error$(Parser$Error$combine$($10051, $10049));
                                                                                var $10050 = $10052;
                                                                                break;
                                                                            case 'Maybe.none':
                                                                                var $10053 = Parser$Reply$error$($10049);
                                                                                var $10050 = $10053;
                                                                                break;
                                                                        };
                                                                        var $10048 = $10050;
                                                                        break;
                                                                    case 'Parser.Reply.value':
                                                                        var $10054 = self.pst;
                                                                        var $10055 = self.val;
                                                                        var self = $10054;
                                                                        switch (self._) {
                                                                            case 'Parser.State.new':
                                                                                var $10057 = self.err;
                                                                                var $10058 = self.nam;
                                                                                var $10059 = self.ini;
                                                                                var $10060 = self.idx;
                                                                                var $10061 = self.str;
                                                                                var _reply$pst$46 = Parser$State$new$(Parser$Error$maybe_combine$($10047, $10057), $10058, $10059, $10060, $10061);
                                                                                var self = _reply$pst$46;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10063 = self.err;
                                                                                        var _reply$52 = Parser$get_idx$(_reply$pst$46);
                                                                                        var self = _reply$52;
                                                                                        switch (self._) {
                                                                                            case 'Parser.Reply.error':
                                                                                                var $10065 = self.err;
                                                                                                var self = $10063;
                                                                                                switch (self._) {
                                                                                                    case 'Maybe.some':
                                                                                                        var $10067 = self.value;
                                                                                                        var $10068 = Parser$Reply$error$(Parser$Error$combine$($10067, $10065));
                                                                                                        var $10066 = $10068;
                                                                                                        break;
                                                                                                    case 'Maybe.none':
                                                                                                        var $10069 = Parser$Reply$error$($10065);
                                                                                                        var $10066 = $10069;
                                                                                                        break;
                                                                                                };
                                                                                                var $10064 = $10066;
                                                                                                break;
                                                                                            case 'Parser.Reply.value':
                                                                                                var $10070 = self.pst;
                                                                                                var $10071 = self.val;
                                                                                                var self = $10070;
                                                                                                switch (self._) {
                                                                                                    case 'Parser.State.new':
                                                                                                        var $10073 = self.err;
                                                                                                        var $10074 = self.nam;
                                                                                                        var $10075 = self.ini;
                                                                                                        var $10076 = self.idx;
                                                                                                        var $10077 = self.str;
                                                                                                        var _reply$pst$60 = Parser$State$new$(Parser$Error$maybe_combine$($10063, $10073), $10074, $10075, $10076, $10077);
                                                                                                        var _orig$61 = Pair$new$($10039, $10071);
                                                                                                        var self = $10055;
                                                                                                        switch (self._) {
                                                                                                            case 'Kind.Parser.ADT.Datatype.new':
                                                                                                                var $10079 = self.name;
                                                                                                                var $10080 = self.pars;
                                                                                                                var $10081 = self.inds;
                                                                                                                var $10082 = self.ctrs;
                                                                                                                var $10083 = self.deri;
                                                                                                                var _term$67 = Kind$Parser$ADT$Datatype$build_term$($10055);
                                                                                                                var _term$68 = Kind$Term$bind$(List$nil, (_x$68 => {
                                                                                                                    var $10085 = (_x$68 + '1');
                                                                                                                    return $10085;
                                                                                                                }), _term$67);
                                                                                                                var _type$69 = Kind$Parser$ADT$Datatype$build_type$($10055);
                                                                                                                var _type$70 = Kind$Term$bind$(List$nil, (_x$70 => {
                                                                                                                    var $10086 = (_x$70 + '0');
                                                                                                                    return $10086;
                                                                                                                }), _type$69);
                                                                                                                var _arit$71 = ((list_length($10080)) + (list_length($10081)));
                                                                                                                var _defs$72 = Kind$Map$def$(_file$1, _code$2, _orig$61, $10079, _term$68, _type$70, Bool$false, _arit$71, Bool$false, _defs$3);
                                                                                                                var _defs$73 = List$fold$($10082, _defs$72, (_ctr$73 => _defs$74 => {
                                                                                                                    var _typ_name$75 = $10079;
                                                                                                                    var _ctr_arit$76 = (_arit$71 + (list_length((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10088 = self.args;
                                                                                                                                var $10089 = $10088;
                                                                                                                                return $10089;
                                                                                                                        };
                                                                                                                    })())));
                                                                                                                    var _ctr_name$77 = String$flatten$(List$cons$(_typ_name$75, List$cons$(Kind$Name$read$("."), List$cons$((() => {
                                                                                                                        var self = _ctr$73;
                                                                                                                        switch (self._) {
                                                                                                                            case 'Kind.Parser.ADT.Constructor.new':
                                                                                                                                var $10090 = self.name;
                                                                                                                                var $10091 = $10090;
                                                                                                                                return $10091;
                                                                                                                        };
                                                                                                                    })(), List$nil))));
                                                                                                                    var _ctr_term$78 = Kind$Parser$ADT$Constructor$build_term$($10055, _ctr$73);
                                                                                                                    var _ctr_term$79 = Kind$Term$bind$(List$nil, (_x$79 => {
                                                                                                                        var $10092 = (_x$79 + '1');
                                                                                                                        return $10092;
                                                                                                                    }), _ctr_term$78);
                                                                                                                    var _ctr_type$80 = Kind$Parser$ADT$Constructor$build_type$($10055, _ctr$73);
                                                                                                                    var _ctr_type$81 = Kind$Term$bind$(List$nil, (_x$81 => {
                                                                                                                        var $10093 = (_x$81 + '0');
                                                                                                                        return $10093;
                                                                                                                    }), _ctr_type$80);
                                                                                                                    var $10087 = Kind$Map$def$(_file$1, _code$2, _orig$61, _ctr_name$77, _ctr_term$79, _ctr_type$81, Bool$true, _ctr_arit$76, Bool$false, _defs$74);
                                                                                                                    return $10087;
                                                                                                                }));
                                                                                                                var _defs$74 = List$fold$($10083, Either$right$(_defs$73), (_deri$74 => _defs$75 => {
                                                                                                                    var self = _defs$75;
                                                                                                                    switch (self._) {
                                                                                                                        case 'Either.left':
                                                                                                                            var $10095 = self.value;
                                                                                                                            var $10096 = Either$left$($10095);
                                                                                                                            var $10094 = $10096;
                                                                                                                            break;
                                                                                                                        case 'Either.right':
                                                                                                                            var $10097 = self.value;
                                                                                                                            var self = Kind$Parser$ADT$Derive$by_name$(_deri$74, $10055);
                                                                                                                            switch (self._) {
                                                                                                                                case 'Maybe.some':
                                                                                                                                    var $10099 = self.value;
                                                                                                                                    var self = $10099;
                                                                                                                                    switch (self._) {
                                                                                                                                        case 'Kind.Parser.ADT.Derived.new':
                                                                                                                                            var $10101 = self.name;
                                                                                                                                            var $10102 = self.arit;
                                                                                                                                            var $10103 = self.term;
                                                                                                                                            var $10104 = self.type;
                                                                                                                                            var _name$82 = $10101;
                                                                                                                                            var _term$83 = $10103;
                                                                                                                                            var _term$84 = Kind$Term$bind$(List$nil, (_x$84 => {
                                                                                                                                                var $10106 = (_x$84 + '1');
                                                                                                                                                return $10106;
                                                                                                                                            }), _term$83);
                                                                                                                                            var _type$85 = $10104;
                                                                                                                                            var _type$86 = Kind$Term$bind$(List$nil, (_x$86 => {
                                                                                                                                                var $10107 = (_x$86 + '0');
                                                                                                                                                return $10107;
                                                                                                                                            }), _type$85);
                                                                                                                                            var _arit$87 = $10102;
                                                                                                                                            var $10105 = Either$right$(Kind$Map$def$(_file$1, _code$2, _orig$61, _name$82, _term$84, _type$86, Bool$false, _arit$87, Bool$false, $10097));
                                                                                                                                            var $10100 = $10105;
                                                                                                                                            break;
                                                                                                                                    };
                                                                                                                                    var $10098 = $10100;
                                                                                                                                    break;
                                                                                                                                case 'Maybe.none':
                                                                                                                                    var $10108 = Either$left$(("Can\'t derive \'" + (_deri$74 + ("\' for \'" + ($10079 + "\' type.")))));
                                                                                                                                    var $10098 = $10108;
                                                                                                                                    break;
                                                                                                                            };
                                                                                                                            var $10094 = $10098;
                                                                                                                            break;
                                                                                                                    };
                                                                                                                    return $10094;
                                                                                                                }));
                                                                                                                var self = _defs$74;
                                                                                                                switch (self._) {
                                                                                                                    case 'Either.left':
                                                                                                                        var $10109 = self.value;
                                                                                                                        var $10110 = Parser$fail($10109);
                                                                                                                        var $10084 = $10110;
                                                                                                                        break;
                                                                                                                    case 'Either.right':
                                                                                                                        var $10111 = self.value;
                                                                                                                        var $10112 = (_pst$76 => {
                                                                                                                            var $10113 = Parser$Reply$value$(_pst$76, $10111);
                                                                                                                            return $10113;
                                                                                                                        });
                                                                                                                        var $10084 = $10112;
                                                                                                                        break;
                                                                                                                };
                                                                                                                var $10078 = $10084;
                                                                                                                break;
                                                                                                        };
                                                                                                        var $10078 = $10078(_reply$pst$60);
                                                                                                        var $10072 = $10078;
                                                                                                        break;
                                                                                                };
                                                                                                var $10064 = $10072;
                                                                                                break;
                                                                                        };
                                                                                        var $10062 = $10064;
                                                                                        break;
                                                                                };
                                                                                var $10056 = $10062;
                                                                                break;
                                                                        };
                                                                        var $10048 = $10056;
                                                                        break;
                                                                };
                                                                var $10046 = $10048;
                                                                break;
                                                        };
                                                        var $10040 = $10046;
                                                        break;
                                                };
                                                var $10032 = $10040;
                                                break;
                                        };
                                        var $10030 = $10032;
                                        break;
                                };
                                var $10024 = $10030;
                                break;
                        };
                        var $10017 = $10024;
                        break;
                };
                var $10015 = $10017;
                break;
        };
        return $10015;
    };
    const Kind$Parser$file$adt = x0 => x1 => x2 => x3 => Kind$Parser$file$adt$(x0, x1, x2, x3);

    function Kind$Parser$file$end$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10115 = self.err;
                var _reply$10 = Kind$Parser$spaces(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10117 = self.err;
                        var self = $10115;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10119 = self.value;
                                var $10120 = Parser$Reply$error$(Parser$Error$combine$($10119, $10117));
                                var $10118 = $10120;
                                break;
                            case 'Maybe.none':
                                var $10121 = Parser$Reply$error$($10117);
                                var $10118 = $10121;
                                break;
                        };
                        var $10116 = $10118;
                        break;
                    case 'Parser.Reply.value':
                        var $10122 = self.pst;
                        var self = $10122;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10124 = self.err;
                                var $10125 = self.nam;
                                var $10126 = self.ini;
                                var $10127 = self.idx;
                                var $10128 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10115, $10124), $10125, $10126, $10127, $10128);
                                var self = _reply$pst$18;
                                switch (self._) {
                                    case 'Parser.State.new':
                                        var $10130 = self.err;
                                        var _reply$24 = Parser$eof$(_reply$pst$18);
                                        var self = _reply$24;
                                        switch (self._) {
                                            case 'Parser.Reply.error':
                                                var $10132 = self.err;
                                                var self = $10130;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10134 = self.value;
                                                        var $10135 = Parser$Reply$error$(Parser$Error$combine$($10134, $10132));
                                                        var $10133 = $10135;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10136 = Parser$Reply$error$($10132);
                                                        var $10133 = $10136;
                                                        break;
                                                };
                                                var $10131 = $10133;
                                                break;
                                            case 'Parser.Reply.value':
                                                var $10137 = self.pst;
                                                var self = $10137;
                                                switch (self._) {
                                                    case 'Parser.State.new':
                                                        var $10139 = self.err;
                                                        var $10140 = self.nam;
                                                        var $10141 = self.ini;
                                                        var $10142 = self.idx;
                                                        var $10143 = self.str;
                                                        var _reply$pst$32 = Parser$State$new$(Parser$Error$maybe_combine$($10130, $10139), $10140, $10141, $10142, $10143);
                                                        var $10144 = Parser$Reply$value$(_reply$pst$32, _defs$3);
                                                        var $10138 = $10144;
                                                        break;
                                                };
                                                var $10131 = $10138;
                                                break;
                                        };
                                        var $10129 = $10131;
                                        break;
                                };
                                var $10123 = $10129;
                                break;
                        };
                        var $10116 = $10123;
                        break;
                };
                var $10114 = $10116;
                break;
        };
        return $10114;
    };
    const Kind$Parser$file$end = x0 => x1 => x2 => x3 => Kind$Parser$file$end$(x0, x1, x2, x3);

    function Kind$Parser$file$(_file$1, _code$2, _defs$3, _pst$4) {
        var self = _pst$4;
        switch (self._) {
            case 'Parser.State.new':
                var $10146 = self.err;
                var _reply$10 = Parser$is_eof$(_pst$4);
                var self = _reply$10;
                switch (self._) {
                    case 'Parser.Reply.error':
                        var $10148 = self.err;
                        var self = $10146;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10150 = self.value;
                                var $10151 = Parser$Reply$error$(Parser$Error$combine$($10150, $10148));
                                var $10149 = $10151;
                                break;
                            case 'Maybe.none':
                                var $10152 = Parser$Reply$error$($10148);
                                var $10149 = $10152;
                                break;
                        };
                        var $10147 = $10149;
                        break;
                    case 'Parser.Reply.value':
                        var $10153 = self.pst;
                        var $10154 = self.val;
                        var self = $10153;
                        switch (self._) {
                            case 'Parser.State.new':
                                var $10156 = self.err;
                                var $10157 = self.nam;
                                var $10158 = self.ini;
                                var $10159 = self.idx;
                                var $10160 = self.str;
                                var _reply$pst$18 = Parser$State$new$(Parser$Error$maybe_combine$($10146, $10156), $10157, $10158, $10159, $10160);
                                var self = $10154;
                                if (self) {
                                    var $10162 = (_pst$19 => {
                                        var $10163 = Parser$Reply$value$(_pst$19, _defs$3);
                                        return $10163;
                                    });
                                    var $10161 = $10162;
                                } else {
                                    var $10164 = (_pst$19 => {
                                        var self = _pst$19;
                                        switch (self._) {
                                            case 'Parser.State.new':
                                                var $10166 = self.err;
                                                var _reply$25 = Parser$choice$(List$cons$(Kind$Parser$file$def(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$adt(_file$1)(_code$2)(_defs$3), List$cons$(Kind$Parser$file$end(_file$1)(_code$2)(_defs$3), List$cons$(Parser$fail("Expected a top-level definition or a type declaration."), List$nil)))), _pst$19);
                                                var self = _reply$25;
                                                switch (self._) {
                                                    case 'Parser.Reply.error':
                                                        var $10168 = self.err;
                                                        var self = $10166;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $10170 = self.value;
                                                                var $10171 = Parser$Reply$error$(Parser$Error$combine$($10170, $10168));
                                                                var $10169 = $10171;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $10172 = Parser$Reply$error$($10168);
                                                                var $10169 = $10172;
                                                                break;
                                                        };
                                                        var $10167 = $10169;
                                                        break;
                                                    case 'Parser.Reply.value':
                                                        var $10173 = self.pst;
                                                        var $10174 = self.val;
                                                        var self = $10173;
                                                        switch (self._) {
                                                            case 'Parser.State.new':
                                                                var $10176 = self.err;
                                                                var $10177 = self.nam;
                                                                var $10178 = self.ini;
                                                                var $10179 = self.idx;
                                                                var $10180 = self.str;
                                                                var _reply$pst$33 = Parser$State$new$(Parser$Error$maybe_combine$($10166, $10176), $10177, $10178, $10179, $10180);
                                                                var self = _reply$pst$33;
                                                                switch (self._) {
                                                                    case 'Parser.State.new':
                                                                        var $10182 = self.err;
                                                                        var _reply$39 = Kind$Parser$file$(_file$1, _code$2, $10174, _reply$pst$33);
                                                                        var self = _reply$39;
                                                                        switch (self._) {
                                                                            case 'Parser.Reply.error':
                                                                                var $10184 = self.err;
                                                                                var self = $10182;
                                                                                switch (self._) {
                                                                                    case 'Maybe.some':
                                                                                        var $10186 = self.value;
                                                                                        var $10187 = Parser$Reply$error$(Parser$Error$combine$($10186, $10184));
                                                                                        var $10185 = $10187;
                                                                                        break;
                                                                                    case 'Maybe.none':
                                                                                        var $10188 = Parser$Reply$error$($10184);
                                                                                        var $10185 = $10188;
                                                                                        break;
                                                                                };
                                                                                var $10183 = $10185;
                                                                                break;
                                                                            case 'Parser.Reply.value':
                                                                                var $10189 = self.pst;
                                                                                var $10190 = self.val;
                                                                                var self = $10189;
                                                                                switch (self._) {
                                                                                    case 'Parser.State.new':
                                                                                        var $10192 = self.err;
                                                                                        var $10193 = self.nam;
                                                                                        var $10194 = self.ini;
                                                                                        var $10195 = self.idx;
                                                                                        var $10196 = self.str;
                                                                                        var _reply$pst$47 = Parser$State$new$(Parser$Error$maybe_combine$($10182, $10192), $10193, $10194, $10195, $10196);
                                                                                        var $10197 = Parser$Reply$value$(_reply$pst$47, $10190);
                                                                                        var $10191 = $10197;
                                                                                        break;
                                                                                };
                                                                                var $10183 = $10191;
                                                                                break;
                                                                        };
                                                                        var $10181 = $10183;
                                                                        break;
                                                                };
                                                                var $10175 = $10181;
                                                                break;
                                                        };
                                                        var $10167 = $10175;
                                                        break;
                                                };
                                                var $10165 = $10167;
                                                break;
                                        };
                                        return $10165;
                                    });
                                    var $10161 = $10164;
                                };
                                var $10161 = $10161(_reply$pst$18);
                                var $10155 = $10161;
                                break;
                        };
                        var $10147 = $10155;
                        break;
                };
                var $10145 = $10147;
                break;
        };
        return $10145;
    };
    const Kind$Parser$file = x0 => x1 => x2 => x3 => Kind$Parser$file$(x0, x1, x2, x3);

    function String$join$go$(_sep$1, _list$2, _fst$3) {
        var self = _list$2;
        switch (self._) {
            case 'List.cons':
                var $10199 = self.head;
                var $10200 = self.tail;
                var $10201 = String$flatten$(List$cons$((() => {
                    var self = _fst$3;
                    if (self) {
                        var $10202 = "";
                        return $10202;
                    } else {
                        var $10203 = _sep$1;
                        return $10203;
                    };
                })(), List$cons$($10199, List$cons$(String$join$go$(_sep$1, $10200, Bool$false), List$nil))));
                var $10198 = $10201;
                break;
            case 'List.nil':
                var $10204 = "";
                var $10198 = $10204;
                break;
        };
        return $10198;
    };
    const String$join$go = x0 => x1 => x2 => String$join$go$(x0, x1, x2);

    function String$join$(_sep$1, _list$2) {
        var $10205 = String$join$go$(_sep$1, _list$2, Bool$true);
        return $10205;
    };
    const String$join = x0 => x1 => String$join$(x0, x1);

    function Kind$Code$highlight$end$(_col$1, _row$2, _res$3) {
        var $10206 = String$join$("\u{a}", _res$3);
        return $10206;
    };
    const Kind$Code$highlight$end = x0 => x1 => x2 => Kind$Code$highlight$end$(x0, x1, x2);

    function Maybe$extract$(_m$2, _a$4, _f$5) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10208 = self.value;
                var $10209 = _f$5($10208);
                var $10207 = $10209;
                break;
            case 'Maybe.none':
                var $10210 = _a$4;
                var $10207 = $10210;
                break;
        };
        return $10207;
    };
    const Maybe$extract = x0 => x1 => x2 => Maybe$extract$(x0, x1, x2);

    function Nat$is_zero$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10212 = Bool$true;
            var $10211 = $10212;
        } else {
            var $10213 = (self - 1n);
            var $10214 = Bool$false;
            var $10211 = $10214;
        };
        return $10211;
    };
    const Nat$is_zero = x0 => Nat$is_zero$(x0);

    function Nat$double$(_n$1) {
        var self = _n$1;
        if (self === 0n) {
            var $10216 = Nat$zero;
            var $10215 = $10216;
        } else {
            var $10217 = (self - 1n);
            var $10218 = Nat$succ$(Nat$succ$(Nat$double$($10217)));
            var $10215 = $10218;
        };
        return $10215;
    };
    const Nat$double = x0 => Nat$double$(x0);

    function String$pad_right$(_size$1, _chr$2, _str$3) {
        var self = _size$1;
        if (self === 0n) {
            var $10220 = _str$3;
            var $10219 = $10220;
        } else {
            var $10221 = (self - 1n);
            var self = _str$3;
            if (self.length === 0) {
                var $10223 = String$cons$(_chr$2, String$pad_right$($10221, _chr$2, ""));
                var $10222 = $10223;
            } else {
                var $10224 = self.charCodeAt(0);
                var $10225 = self.slice(1);
                var $10226 = String$cons$($10224, String$pad_right$($10221, _chr$2, $10225));
                var $10222 = $10226;
            };
            var $10219 = $10222;
        };
        return $10219;
    };
    const String$pad_right = x0 => x1 => x2 => String$pad_right$(x0, x1, x2);

    function String$pad_left$(_size$1, _chr$2, _str$3) {
        var $10227 = String$reverse$(String$pad_right$(_size$1, _chr$2, String$reverse$(_str$3)));
        return $10227;
    };
    const String$pad_left = x0 => x1 => x2 => String$pad_left$(x0, x1, x2);

    function Kind$Code$color$(_col$1, _str$2) {
        var $10228 = String$cons$(27, String$cons$(91, (_col$1 + String$cons$(109, (_str$2 + String$cons$(27, String$cons$(91, String$cons$(48, String$cons$(109, String$nil)))))))));
        return $10228;
    };
    const Kind$Code$color = x0 => x1 => Kind$Code$color$(x0, x1);

    function List$take$(_n$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $10230 = self.head;
                var $10231 = self.tail;
                var self = _n$2;
                if (self === 0n) {
                    var $10233 = List$nil;
                    var $10232 = $10233;
                } else {
                    var $10234 = (self - 1n);
                    var $10235 = List$cons$($10230, List$take$($10234, $10231));
                    var $10232 = $10235;
                };
                var $10229 = $10232;
                break;
            case 'List.nil':
                var $10236 = List$nil;
                var $10229 = $10236;
                break;
        };
        return $10229;
    };
    const List$take = x0 => x1 => List$take$(x0, x1);

    function Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) {
        var Kind$Code$highlight$go$ = (_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9) => ({
            ctr: 'TCO',
            arg: [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9]
        });
        var Kind$Code$highlight$go = _code$1 => _ixi$2 => _ix0$3 => _ix1$4 => _col$5 => _row$6 => _lft$7 => _lin$8 => _res$9 => Kind$Code$highlight$go$(_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9);
        var arg = [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9];
        while (true) {
            let [_code$1, _ixi$2, _ix0$3, _ix1$4, _col$5, _row$6, _lft$7, _lin$8, _res$9] = arg;
            var R = (() => {
                var _spa$10 = 3n;
                var self = _code$1;
                if (self.length === 0) {
                    var $10238 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                    var $10237 = $10238;
                } else {
                    var $10239 = self.charCodeAt(0);
                    var $10240 = self.slice(1);
                    var self = ($10239 === 10);
                    if (self) {
                        var _stp$13 = Maybe$extract$(_lft$7, Bool$false, Nat$is_zero);
                        var self = _stp$13;
                        if (self) {
                            var $10243 = Kind$Code$highlight$end$(_col$5, _row$6, List$reverse$(_res$9));
                            var $10242 = $10243;
                        } else {
                            var _siz$14 = Nat$succ$(Nat$double$(_spa$10));
                            var self = _ix1$4;
                            if (self === 0n) {
                                var self = _lft$7;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10246 = self.value;
                                        var $10247 = Maybe$some$(Nat$pred$($10246));
                                        var $10245 = $10247;
                                        break;
                                    case 'Maybe.none':
                                        var $10248 = Maybe$some$(_spa$10);
                                        var $10245 = $10248;
                                        break;
                                };
                                var _lft$15 = $10245;
                            } else {
                                var $10249 = (self - 1n);
                                var $10250 = _lft$7;
                                var _lft$15 = $10250;
                            };
                            var _ixi$16 = Nat$pred$(_ixi$2);
                            var _ix0$17 = Nat$pred$(_ix0$3);
                            var _ix1$18 = Nat$pred$(_ix1$4);
                            var _col$19 = 0n;
                            var _row$20 = Nat$succ$(_row$6);
                            var _res$21 = List$cons$(String$reverse$(_lin$8), _res$9);
                            var _lin$22 = String$reverse$(String$flatten$(List$cons$(String$pad_left$(4n, 32, Nat$show$(_row$20)), List$cons$(" | ", List$nil))));
                            var $10244 = Kind$Code$highlight$go$($10240, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$20, _lft$15, _lin$22, _res$21);
                            var $10242 = $10244;
                        };
                        var $10241 = $10242;
                    } else {
                        var _chr$13 = String$cons$($10239, String$nil);
                        var self = (Nat$is_zero$(_ix0$3) && (!Nat$is_zero$(_ix1$4)));
                        if (self) {
                            var $10252 = String$reverse$(Kind$Code$color$("41", Kind$Code$color$("37", _chr$13)));
                            var _chr$14 = $10252;
                        } else {
                            var self = (Nat$is_zero$(_ixi$2) && (!Nat$is_zero$(_ix1$4)));
                            if (self) {
                                var $10254 = String$reverse$(Kind$Code$color$("31", Kind$Code$color$("4", _chr$13)));
                                var $10253 = $10254;
                            } else {
                                var $10255 = _chr$13;
                                var $10253 = $10255;
                            };
                            var _chr$14 = $10253;
                        };
                        var self = (_ix0$3 === 1n);
                        if (self) {
                            var $10256 = List$take$(_spa$10, _res$9);
                            var _res$15 = $10256;
                        } else {
                            var $10257 = _res$9;
                            var _res$15 = $10257;
                        };
                        var _ixi$16 = Nat$pred$(_ixi$2);
                        var _ix0$17 = Nat$pred$(_ix0$3);
                        var _ix1$18 = Nat$pred$(_ix1$4);
                        var _col$19 = Nat$succ$(_col$5);
                        var _lin$20 = String$flatten$(List$cons$(_chr$14, List$cons$(_lin$8, List$nil)));
                        var $10251 = Kind$Code$highlight$go$($10240, _ixi$16, _ix0$17, _ix1$18, _col$19, _row$6, _lft$7, _lin$20, _res$15);
                        var $10241 = $10251;
                    };
                    var $10237 = $10241;
                };
                return $10237;
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$highlight$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Code$highlight$go$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Code$highlight$(_code$1, _init$2, _idx0$3, _idx1$4) {
        var $10258 = Kind$Code$highlight$go$((_code$1 + " \u{a}"), _init$2, _idx0$3, _idx1$4, 0n, 1n, Maybe$none, String$reverse$("   1 | "), List$nil);
        return $10258;
    };
    const Kind$Code$highlight = x0 => x1 => x2 => x3 => Kind$Code$highlight$(x0, x1, x2, x3);

    function Kind$Defs$read$(_file$1, _code$2, _defs$3) {
        var self = Kind$Parser$file$(_file$1, _code$2, _defs$3, Parser$State$new$(Maybe$none, "", 0n, 0n, _code$2));
        switch (self._) {
            case 'Parser.Reply.error':
                var $10260 = self.err;
                var self = $10260;
                switch (self._) {
                    case 'Parser.Error.new':
                        var $10262 = self.nam;
                        var $10263 = self.ini;
                        var $10264 = self.idx;
                        var $10265 = self.msg;
                        var _err$9 = ($10265 + (() => {
                            var self = $10262;
                            if (self.length === 0) {
                                var $10267 = "";
                                return $10267;
                            } else {
                                var $10268 = self.charCodeAt(0);
                                var $10269 = self.slice(1);
                                var $10270 = (" Inside " + ($10262 + ":"));
                                return $10270;
                            };
                        })());
                        var _hig$10 = Kind$Code$highlight$(_code$2, $10263, $10264, Nat$succ$($10264));
                        var _str$11 = String$flatten$(List$cons$(_err$9, List$cons$("\u{a}", List$cons$(_hig$10, List$nil))));
                        var $10266 = Either$left$(_str$11);
                        var $10261 = $10266;
                        break;
                };
                var $10259 = $10261;
                break;
            case 'Parser.Reply.value':
                var $10271 = self.val;
                var $10272 = Either$right$($10271);
                var $10259 = $10272;
                break;
        };
        return $10259;
    };
    const Kind$Defs$read = x0 => x1 => x2 => Kind$Defs$read$(x0, x1, x2);

    function Kind$Synth$load$go$(_name$1, _files$2, _defs$3) {
        var self = _files$2;
        switch (self._) {
            case 'List.cons':
                var $10274 = self.head;
                var $10275 = self.tail;
                var $10276 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                    var $10277 = _m$bind$6;
                    return $10277;
                }))(Kind$Synth$get_kind_code$($10274))((_code$6 => {
                    var _read$7 = Kind$Defs$read$($10274, _code$6, _defs$3);
                    var self = _read$7;
                    switch (self._) {
                        case 'Either.right':
                            var $10279 = self.value;
                            var _defs$9 = $10279;
                            var self = Kind$Map$get$(_name$1, _defs$9);
                            switch (self._) {
                                case 'Maybe.none':
                                    var $10281 = Kind$Synth$load$go$(_name$1, $10275, _defs$9);
                                    var $10280 = $10281;
                                    break;
                                case 'Maybe.some':
                                    var $10282 = IO$monad$((_m$bind$11 => _m$pure$12 => {
                                        var $10283 = _m$pure$12;
                                        return $10283;
                                    }))(Maybe$some$(_defs$9));
                                    var $10280 = $10282;
                                    break;
                            };
                            var $10278 = $10280;
                            break;
                        case 'Either.left':
                            var $10284 = Kind$Synth$load$go$(_name$1, $10275, _defs$3);
                            var $10278 = $10284;
                            break;
                    };
                    return $10278;
                }));
                var $10273 = $10276;
                break;
            case 'List.nil':
                var $10285 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                    var $10286 = _m$pure$5;
                    return $10286;
                }))(Maybe$none);
                var $10273 = $10285;
                break;
        };
        return $10273;
    };
    const Kind$Synth$load$go = x0 => x1 => x2 => Kind$Synth$load$go$(x0, x1, x2);

    function Kind$Synth$files_of$make$(_names$1, _last$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $10288 = self.head;
                var $10289 = self.tail;
                var _head$5 = (_last$2 + ($10288 + ".kind"));
                var _tail$6 = Kind$Synth$files_of$make$($10289, (_last$2 + ($10288 + "/")));
                var $10290 = List$cons$(_head$5, _tail$6);
                var $10287 = $10290;
                break;
            case 'List.nil':
                var $10291 = List$nil;
                var $10287 = $10291;
                break;
        };
        return $10287;
    };
    const Kind$Synth$files_of$make = x0 => x1 => Kind$Synth$files_of$make$(x0, x1);

    function String$length$go$(_xs$1, _n$2) {
        var String$length$go$ = (_xs$1, _n$2) => ({
            ctr: 'TCO',
            arg: [_xs$1, _n$2]
        });
        var String$length$go = _xs$1 => _n$2 => String$length$go$(_xs$1, _n$2);
        var arg = [_xs$1, _n$2];
        while (true) {
            let [_xs$1, _n$2] = arg;
            var R = (() => {
                var self = _xs$1;
                if (self.length === 0) {
                    var $10292 = _n$2;
                    return $10292;
                } else {
                    var $10293 = self.charCodeAt(0);
                    var $10294 = self.slice(1);
                    var $10295 = String$length$go$($10294, Nat$succ$(_n$2));
                    return $10295;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$length$go = x0 => x1 => String$length$go$(x0, x1);

    function String$length$(_xs$1) {
        var $10296 = String$length$go$(_xs$1, 0n);
        return $10296;
    };
    const String$length = x0 => String$length$(x0);

    function String$split$go$(_xs$1, _match$2, _last$3) {
        var self = _xs$1;
        if (self.length === 0) {
            var $10298 = List$cons$(_last$3, List$nil);
            var $10297 = $10298;
        } else {
            var $10299 = self.charCodeAt(0);
            var $10300 = self.slice(1);
            var self = String$starts_with$(_xs$1, _match$2);
            if (self) {
                var _rest$6 = String$drop$(String$length$(_match$2), _xs$1);
                var $10302 = List$cons$(_last$3, String$split$go$(_rest$6, _match$2, ""));
                var $10301 = $10302;
            } else {
                var _next$6 = String$cons$($10299, String$nil);
                var $10303 = String$split$go$($10300, _match$2, (_last$3 + _next$6));
                var $10301 = $10303;
            };
            var $10297 = $10301;
        };
        return $10297;
    };
    const String$split$go = x0 => x1 => x2 => String$split$go$(x0, x1, x2);

    function String$split$(_xs$1, _match$2) {
        var $10304 = String$split$go$(_xs$1, _match$2, "");
        return $10304;
    };
    const String$split = x0 => x1 => String$split$(x0, x1);

    function Kind$Synth$files_of$(_name$1) {
        var $10305 = List$reverse$(Kind$Synth$files_of$make$(String$split$(_name$1, "."), ""));
        return $10305;
    };
    const Kind$Synth$files_of = x0 => Kind$Synth$files_of$(x0);

    function Kind$Synth$load$(_name$1, _defs$2) {
        var $10306 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $10307 = _m$bind$3;
            return $10307;
        }))(Kind$Synth$load$cached$(List$cons$(_name$1, List$nil), _defs$2))((_cached_defs$3 => {
            var self = _cached_defs$3;
            switch (self._) {
                case 'Maybe.some':
                    var $10309 = self.value;
                    var $10310 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $10311 = _m$pure$6;
                        return $10311;
                    }))(Maybe$some$($10309));
                    var $10308 = $10310;
                    break;
                case 'Maybe.none':
                    var $10312 = Kind$Synth$load$go$(_name$1, Kind$Synth$files_of$(_name$1), _defs$2);
                    var $10308 = $10312;
                    break;
            };
            return $10308;
        }));
        return $10306;
    };
    const Kind$Synth$load = x0 => x1 => Kind$Synth$load$(x0, x1);
    const Kind$Status$wait = ({
        _: 'Kind.Status.wait'
    });

    function Kind$Check$(_V$1) {
        var $10313 = null;
        return $10313;
    };
    const Kind$Check = x0 => Kind$Check$(x0);

    function Kind$Check$result$(_value$2, _errors$3) {
        var $10314 = ({
            _: 'Kind.Check.result',
            'value': _value$2,
            'errors': _errors$3
        });
        return $10314;
    };
    const Kind$Check$result = x0 => x1 => Kind$Check$result$(x0, x1);

    function Kind$Error$undefined_reference$(_origin$1, _name$2) {
        var $10315 = ({
            _: 'Kind.Error.undefined_reference',
            'origin': _origin$1,
            'name': _name$2
        });
        return $10315;
    };
    const Kind$Error$undefined_reference = x0 => x1 => Kind$Error$undefined_reference$(x0, x1);

    function Kind$Error$waiting$(_name$1) {
        var $10316 = ({
            _: 'Kind.Error.waiting',
            'name': _name$1
        });
        return $10316;
    };
    const Kind$Error$waiting = x0 => Kind$Error$waiting$(x0);

    function Kind$Error$indirect$(_name$1) {
        var $10317 = ({
            _: 'Kind.Error.indirect',
            'name': _name$1
        });
        return $10317;
    };
    const Kind$Error$indirect = x0 => Kind$Error$indirect$(x0);

    function Maybe$mapped$(_m$2, _f$4) {
        var self = _m$2;
        switch (self._) {
            case 'Maybe.some':
                var $10319 = self.value;
                var $10320 = Maybe$some$(_f$4($10319));
                var $10318 = $10320;
                break;
            case 'Maybe.none':
                var $10321 = Maybe$none;
                var $10318 = $10321;
                break;
        };
        return $10318;
    };
    const Maybe$mapped = x0 => x1 => Maybe$mapped$(x0, x1);

    function Kind$MPath$o$(_path$1) {
        var $10322 = Maybe$mapped$(_path$1, Kind$Path$o);
        return $10322;
    };
    const Kind$MPath$o = x0 => Kind$MPath$o$(x0);

    function Kind$MPath$i$(_path$1) {
        var $10323 = Maybe$mapped$(_path$1, Kind$Path$i);
        return $10323;
    };
    const Kind$MPath$i = x0 => Kind$MPath$i$(x0);

    function Kind$Error$patch$(_path$1, _term$2) {
        var $10324 = ({
            _: 'Kind.Error.patch',
            'path': _path$1,
            'term': _term$2
        });
        return $10324;
    };
    const Kind$Error$patch = x0 => x1 => Kind$Error$patch$(x0, x1);

    function Kind$MPath$to_bits$(_path$1) {
        var self = _path$1;
        switch (self._) {
            case 'Maybe.some':
                var $10326 = self.value;
                var $10327 = $10326(Bits$e);
                var $10325 = $10327;
                break;
            case 'Maybe.none':
                var $10328 = Bits$e;
                var $10325 = $10328;
                break;
        };
        return $10325;
    };
    const Kind$MPath$to_bits = x0 => Kind$MPath$to_bits$(x0);

    function Kind$Term$check$patch$(_term$1, _type$2, _path$3) {
        var $10329 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$patch$(Kind$MPath$to_bits$(_path$3), _term$1), List$nil));
        return $10329;
    };
    const Kind$Term$check$patch = x0 => x1 => x2 => Kind$Term$check$patch$(x0, x1, x2);

    function Kind$Error$type_mismatch$(_origin$1, _expected$2, _detected$3, _context$4) {
        var $10330 = ({
            _: 'Kind.Error.type_mismatch',
            'origin': _origin$1,
            'expected': _expected$2,
            'detected': _detected$3,
            'context': _context$4
        });
        return $10330;
    };
    const Kind$Error$type_mismatch = x0 => x1 => x2 => x3 => Kind$Error$type_mismatch$(x0, x1, x2, x3);

    function Kind$Error$show_goal$(_name$1, _dref$2, _verb$3, _goal$4, _context$5) {
        var $10331 = ({
            _: 'Kind.Error.show_goal',
            'name': _name$1,
            'dref': _dref$2,
            'verb': _verb$3,
            'goal': _goal$4,
            'context': _context$5
        });
        return $10331;
    };
    const Kind$Error$show_goal = x0 => x1 => x2 => x3 => x4 => Kind$Error$show_goal$(x0, x1, x2, x3, x4);

    function Kind$Path$nil$(_x$1) {
        var $10332 = _x$1;
        return $10332;
    };
    const Kind$Path$nil = x0 => Kind$Path$nil$(x0);
    const Kind$MPath$nil = Maybe$some$(Kind$Path$nil);

    function Kind$Term$check$direct$(_term$1, _defs$2) {
        var self = Kind$Term$check$(_term$1, Maybe$none, _defs$2, List$nil, Kind$MPath$nil, Maybe$none);
        switch (self._) {
            case 'Kind.Check.result':
                var $10334 = self.value;
                var $10335 = self.errors;
                var self = $10334;
                switch (self._) {
                    case 'Maybe.none':
                        var $10337 = Kind$Check$result$(Maybe$none, $10335);
                        var $10336 = $10337;
                        break;
                    case 'Maybe.some':
                        var self = Kind$Check$result$(Maybe$some$(_term$1), List$nil);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10339 = self.value;
                                var $10340 = self.errors;
                                var $10341 = Kind$Check$result$($10339, List$concat$($10335, $10340));
                                var $10338 = $10341;
                                break;
                        };
                        var $10336 = $10338;
                        break;
                };
                var $10333 = $10336;
                break;
        };
        return $10333;
    };
    const Kind$Term$check$direct = x0 => x1 => Kind$Term$check$direct$(x0, x1);

    function Kind$Term$check$get_name_of_self_type$slice$(_self$1) {
        var _len$2 = String$length$(_self$1);
        var _ini$3 = String$slice$(0n, (_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _self$1);
        var _end$4 = String$slice$((_len$2 - 5n <= 0n ? 0n : _len$2 - 5n), _len$2, _self$1);
        var self = (_end$4 === ".Self");
        if (self) {
            var $10343 = Maybe$some$(_ini$3);
            var $10342 = $10343;
        } else {
            var $10344 = Maybe$none;
            var $10342 = $10344;
        };
        return $10342;
    };
    const Kind$Term$check$get_name_of_self_type$slice = x0 => Kind$Term$check$get_name_of_self_type$slice$(x0);

    function Kind$Term$check$get_name_of_self_type$(_type$1, _defs$2) {
        var self = Kind$Term$reduce$(_type$1, Kind$Map$new);
        switch (self._) {
            case 'Kind.Term.ref':
                var $10346 = self.name;
                var $10347 = Maybe$some$($10346);
                var $10345 = $10347;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10349 = self.name;
                        var $10350 = Maybe$some$($10349);
                        var $10348 = $10350;
                        break;
                    case 'Kind.Term.all':
                        var $10351 = self.self;
                        var $10352 = Kind$Term$check$get_name_of_self_type$slice$($10351);
                        var $10348 = $10352;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10353 = Maybe$none;
                        var $10348 = $10353;
                        break;
                };
                var $10345 = $10348;
                break;
            case 'Kind.Term.typ':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10355 = self.name;
                        var $10356 = Maybe$some$($10355);
                        var $10354 = $10356;
                        break;
                    case 'Kind.Term.all':
                        var $10357 = self.self;
                        var $10358 = Kind$Term$check$get_name_of_self_type$slice$($10357);
                        var $10354 = $10358;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10359 = Maybe$none;
                        var $10354 = $10359;
                        break;
                };
                var $10345 = $10354;
                break;
            case 'Kind.Term.all':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10361 = self.name;
                        var $10362 = Maybe$some$($10361);
                        var $10360 = $10362;
                        break;
                    case 'Kind.Term.all':
                        var $10363 = self.self;
                        var $10364 = Kind$Term$check$get_name_of_self_type$slice$($10363);
                        var $10360 = $10364;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10365 = Maybe$none;
                        var $10360 = $10365;
                        break;
                };
                var $10345 = $10360;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10367 = self.name;
                        var $10368 = Maybe$some$($10367);
                        var $10366 = $10368;
                        break;
                    case 'Kind.Term.all':
                        var $10369 = self.self;
                        var $10370 = Kind$Term$check$get_name_of_self_type$slice$($10369);
                        var $10366 = $10370;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10371 = Maybe$none;
                        var $10366 = $10371;
                        break;
                };
                var $10345 = $10366;
                break;
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10373 = self.name;
                        var $10374 = Maybe$some$($10373);
                        var $10372 = $10374;
                        break;
                    case 'Kind.Term.all':
                        var $10375 = self.self;
                        var $10376 = Kind$Term$check$get_name_of_self_type$slice$($10375);
                        var $10372 = $10376;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10377 = Maybe$none;
                        var $10372 = $10377;
                        break;
                };
                var $10345 = $10372;
                break;
            case 'Kind.Term.cse':
                var self = Kind$Term$reduce$(_type$1, _defs$2);
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $10379 = self.name;
                        var $10380 = Maybe$some$($10379);
                        var $10378 = $10380;
                        break;
                    case 'Kind.Term.all':
                        var $10381 = self.self;
                        var $10382 = Kind$Term$check$get_name_of_self_type$slice$($10381);
                        var $10378 = $10382;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10383 = Maybe$none;
                        var $10378 = $10383;
                        break;
                };
                var $10345 = $10378;
                break;
        };
        return $10345;
    };
    const Kind$Term$check$get_name_of_self_type = x0 => x1 => Kind$Term$check$get_name_of_self_type$(x0, x1);

    function Kind$Term$check$expand$num$nat$(_numb$1) {
        var $10384 = Kind$Term$nat$(_numb$1);
        return $10384;
    };
    const Kind$Term$check$expand$num$nat = x0 => Kind$Term$check$expand$num$nat$(x0);

    function Kind$Term$check$expand$num$int$(_sign$1, _numb$2) {
        var _term$3 = Kind$Term$nat$(_numb$2);
        var _term$4 = Kind$Term$app$(Kind$Term$ref$("Int.from_nat"), _term$3);
        var self = _sign$1;
        switch (self._) {
            case 'Maybe.some':
                var $10386 = self.value;
                var self = $10386;
                if (self) {
                    var $10388 = _term$4;
                    var $10387 = $10388;
                } else {
                    var $10389 = Kind$Term$app$(Kind$Term$ref$("Int.neg"), _term$4);
                    var $10387 = $10389;
                };
                var _term$5 = $10387;
                break;
            case 'Maybe.none':
                var $10390 = _term$4;
                var _term$5 = $10390;
                break;
        };
        var $10385 = _term$5;
        return $10385;
    };
    const Kind$Term$check$expand$num$int = x0 => x1 => Kind$Term$check$expand$num$int$(x0, x1);

    function Kind$Term$check$expand$num$other$(_name$1, _sign$2, _numb$3, _frac$4) {
        var self = _sign$2;
        switch (self._) {
            case 'Maybe.some':
                var $10392 = self.value;
                var self = $10392;
                if (self) {
                    var $10394 = "+";
                    var $10393 = $10394;
                } else {
                    var $10395 = "-";
                    var $10393 = $10395;
                };
                var _text$5 = $10393;
                break;
            case 'Maybe.none':
                var $10396 = "";
                var _text$5 = $10396;
                break;
        };
        var _text$6 = (_text$5 + Nat$show$(_numb$3));
        var _text$7 = (_text$6 + (() => {
            var self = _frac$4;
            switch (self._) {
                case 'Maybe.some':
                    var $10397 = self.value;
                    var $10398 = ("." + Nat$show$($10397));
                    return $10398;
                case 'Maybe.none':
                    var $10399 = "";
                    return $10399;
            };
        })());
        var $10391 = Kind$Term$app$(Kind$Term$ref$((_name$1 + ".read")), Kind$Term$str$(_text$7));
        return $10391;
    };
    const Kind$Term$check$expand$num$other = x0 => x1 => x2 => x3 => Kind$Term$check$expand$num$other$(x0, x1, x2, x3);

    function Kind$Term$check$expand$num$(_sign$1, _numb$2, _frac$3, _type$4, _defs$5) {
        var self = _type$4;
        switch (self._) {
            case 'Maybe.some':
                var $10401 = self.value;
                var self = Kind$Term$check$get_name_of_self_type$($10401, _defs$5);
                switch (self._) {
                    case 'Maybe.some':
                        var $10403 = self.value;
                        var self = ($10403 === "Nat");
                        if (self) {
                            var $10405 = Maybe$some$(Kind$Term$check$expand$num$nat$(_numb$2));
                            var $10404 = $10405;
                        } else {
                            var self = ($10403 === "Int");
                            if (self) {
                                var $10407 = Maybe$some$(Kind$Term$check$expand$num$int$(_sign$1, _numb$2));
                                var $10406 = $10407;
                            } else {
                                var $10408 = Maybe$some$(Kind$Term$check$expand$num$other$($10403, _sign$1, _numb$2, _frac$3));
                                var $10406 = $10408;
                            };
                            var $10404 = $10406;
                        };
                        var $10402 = $10404;
                        break;
                    case 'Maybe.none':
                        var $10409 = Maybe$none;
                        var $10402 = $10409;
                        break;
                };
                var _got$6 = $10402;
                break;
            case 'Maybe.none':
                var $10410 = Maybe$none;
                var _got$6 = $10410;
                break;
        };
        var self = _got$6;
        switch (self._) {
            case 'Maybe.some':
                var $10411 = self.value;
                var $10412 = $10411;
                var $10400 = $10412;
                break;
            case 'Maybe.none':
                var self = _frac$3;
                switch (self._) {
                    case 'Maybe.none':
                        var self = _sign$1;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10415 = Kind$Term$check$expand$num$nat$(_numb$2);
                                var $10414 = $10415;
                                break;
                            case 'Maybe.some':
                                var $10416 = Kind$Term$check$expand$num$int$(_sign$1, _numb$2);
                                var $10414 = $10416;
                                break;
                        };
                        var $10413 = $10414;
                        break;
                    case 'Maybe.some':
                        var $10417 = Kind$Term$check$expand$num$other$("F64", _sign$1, _numb$2, _frac$3);
                        var $10413 = $10417;
                        break;
                };
                var $10400 = $10413;
                break;
        };
        return $10400;
    };
    const Kind$Term$check$expand$num = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$num$(x0, x1, x2, x3, x4);

    function Kind$Term$check$infer_types_of_with$(_vars$1, _defs$2, _ctx$3, _path$4, _orig$5) {
        var self = _vars$1;
        switch (self._) {
            case 'List.cons':
                var $10419 = self.head;
                var $10420 = self.tail;
                var self = $10419;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10422 = self.name;
                        var $10423 = self.term;
                        var $10424 = self.type;
                        var self = $10424;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10426 = self.value;
                                var $10427 = Kind$Check$result$(Maybe$some$(Maybe$some$($10426)), List$nil);
                                var self = $10427;
                                break;
                            case 'Maybe.none':
                                var self = Kind$Term$check$($10423, Maybe$none, _defs$2, _ctx$3, _path$4, _orig$5);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10429 = self.value;
                                        var $10430 = self.errors;
                                        var self = $10429;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $10432 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$(Maybe$some$($10432)), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $10434 = self.value;
                                                        var $10435 = self.errors;
                                                        var $10436 = Kind$Check$result$($10434, List$concat$($10430, $10435));
                                                        var $10433 = $10436;
                                                        break;
                                                };
                                                var $10431 = $10433;
                                                break;
                                            case 'Maybe.none':
                                                var $10437 = Kind$Check$result$(Maybe$none, $10430);
                                                var $10431 = $10437;
                                                break;
                                        };
                                        var $10428 = $10431;
                                        break;
                                };
                                var self = $10428;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10438 = self.value;
                                var $10439 = self.errors;
                                var self = $10438;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $10441 = self.value;
                                        var self = Kind$Term$check$infer_types_of_with$($10420, _defs$2, _ctx$3, _path$4, _orig$5);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10443 = self.value;
                                                var $10444 = self.errors;
                                                var self = $10443;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $10446 = self.value;
                                                        var self = Kind$Check$result$(Maybe$some$(List$cons$(Kind$Ann$new$($10422, $10423, $10441), $10446)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $10448 = self.value;
                                                                var $10449 = self.errors;
                                                                var $10450 = Kind$Check$result$($10448, List$concat$($10444, $10449));
                                                                var $10447 = $10450;
                                                                break;
                                                        };
                                                        var $10445 = $10447;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $10451 = Kind$Check$result$(Maybe$none, $10444);
                                                        var $10445 = $10451;
                                                        break;
                                                };
                                                var self = $10445;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10452 = self.value;
                                                var $10453 = self.errors;
                                                var $10454 = Kind$Check$result$($10452, List$concat$($10439, $10453));
                                                var $10442 = $10454;
                                                break;
                                        };
                                        var $10440 = $10442;
                                        break;
                                    case 'Maybe.none':
                                        var $10455 = Kind$Check$result$(Maybe$none, $10439);
                                        var $10440 = $10455;
                                        break;
                                };
                                var $10425 = $10440;
                                break;
                        };
                        var $10421 = $10425;
                        break;
                };
                var $10418 = $10421;
                break;
            case 'List.nil':
                var $10456 = Kind$Check$result$(Maybe$some$(List$nil), List$nil);
                var $10418 = $10456;
                break;
        };
        return $10418;
    };
    const Kind$Term$check$infer_types_of_with = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$infer_types_of_with$(x0, x1, x2, x3, x4);

    function Kind$Term$normalize$(_term$1, _defs$2) {
        var self = Kind$Term$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $10458 = self.name;
                var $10459 = self.indx;
                var $10460 = Kind$Term$var$($10458, $10459);
                var $10457 = $10460;
                break;
            case 'Kind.Term.ref':
                var $10461 = self.name;
                var $10462 = Kind$Term$ref$($10461);
                var $10457 = $10462;
                break;
            case 'Kind.Term.all':
                var $10463 = self.eras;
                var $10464 = self.self;
                var $10465 = self.name;
                var $10466 = self.xtyp;
                var $10467 = self.body;
                var $10468 = Kind$Term$all$($10463, $10464, $10465, Kind$Term$normalize$($10466, _defs$2), (_s$8 => _x$9 => {
                    var $10469 = Kind$Term$normalize$($10467(_s$8)(_x$9), _defs$2);
                    return $10469;
                }));
                var $10457 = $10468;
                break;
            case 'Kind.Term.lam':
                var $10470 = self.name;
                var $10471 = self.body;
                var $10472 = Kind$Term$lam$($10470, (_x$5 => {
                    var $10473 = Kind$Term$normalize$($10471(_x$5), _defs$2);
                    return $10473;
                }));
                var $10457 = $10472;
                break;
            case 'Kind.Term.app':
                var $10474 = self.func;
                var $10475 = self.argm;
                var $10476 = Kind$Term$app$(Kind$Term$normalize$($10474, _defs$2), Kind$Term$normalize$($10475, _defs$2));
                var $10457 = $10476;
                break;
            case 'Kind.Term.let':
                var $10477 = self.name;
                var $10478 = self.expr;
                var $10479 = self.body;
                var $10480 = Kind$Term$let$($10477, Kind$Term$normalize$($10478, _defs$2), (_x$6 => {
                    var $10481 = Kind$Term$normalize$($10479(_x$6), _defs$2);
                    return $10481;
                }));
                var $10457 = $10480;
                break;
            case 'Kind.Term.def':
                var $10482 = self.name;
                var $10483 = self.expr;
                var $10484 = self.body;
                var $10485 = Kind$Term$def$($10482, Kind$Term$normalize$($10483, _defs$2), (_x$6 => {
                    var $10486 = Kind$Term$normalize$($10484(_x$6), _defs$2);
                    return $10486;
                }));
                var $10457 = $10485;
                break;
            case 'Kind.Term.ann':
                var $10487 = self.done;
                var $10488 = self.term;
                var $10489 = self.type;
                var $10490 = Kind$Term$ann$($10487, Kind$Term$normalize$($10488, _defs$2), Kind$Term$normalize$($10489, _defs$2));
                var $10457 = $10490;
                break;
            case 'Kind.Term.gol':
                var $10491 = self.name;
                var $10492 = self.dref;
                var $10493 = self.verb;
                var $10494 = Kind$Term$gol$($10491, $10492, $10493);
                var $10457 = $10494;
                break;
            case 'Kind.Term.hol':
                var $10495 = self.path;
                var $10496 = Kind$Term$hol$($10495);
                var $10457 = $10496;
                break;
            case 'Kind.Term.nat':
                var $10497 = self.natx;
                var $10498 = Kind$Term$nat$($10497);
                var $10457 = $10498;
                break;
            case 'Kind.Term.chr':
                var $10499 = self.chrx;
                var $10500 = Kind$Term$chr$($10499);
                var $10457 = $10500;
                break;
            case 'Kind.Term.str':
                var $10501 = self.strx;
                var $10502 = Kind$Term$str$($10501);
                var $10457 = $10502;
                break;
            case 'Kind.Term.ori':
                var $10503 = self.expr;
                var $10504 = Kind$Term$normalize$($10503, _defs$2);
                var $10457 = $10504;
                break;
            case 'Kind.Term.typ':
                var $10505 = Kind$Term$typ;
                var $10457 = $10505;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10506 = _term$1;
                var $10457 = $10506;
                break;
        };
        return $10457;
    };
    const Kind$Term$normalize = x0 => x1 => Kind$Term$normalize$(x0, x1);

    function Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var self = _wyth$1;
        switch (self._) {
            case 'List.cons':
                var $10508 = self.head;
                var $10509 = self.tail;
                var self = $10508;
                switch (self._) {
                    case 'Kind.Ann.new':
                        var $10511 = self.name;
                        var $10512 = self.type;
                        var $10513 = Kind$Term$all$(Bool$false, "", $10511, Maybe$default$($10512, Kind$Term$hol$(Bits$e)), (_s$14 => _x$15 => {
                            var $10514 = Kind$Term$check$expand$cse$motive$($10509, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, Nat$succ$(Nat$succ$(_size$8)));
                            return $10514;
                        }));
                        var $10510 = $10513;
                        break;
                };
                var $10507 = $10510;
                break;
            case 'List.nil':
                var self = _moti$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $10516 = self.value;
                        var $10517 = $10516;
                        var $10515 = $10517;
                        break;
                    case 'Maybe.none':
                        var self = _rtyp$6;
                        switch (self._) {
                            case 'Maybe.some':
                                var $10519 = self.value;
                                var $10520 = Kind$Term$normalize$($10519, Kind$Map$new);
                                var $10518 = $10520;
                                break;
                            case 'Maybe.none':
                                var $10521 = Kind$Term$hol$(Bits$e);
                                var $10518 = $10521;
                                break;
                        };
                        var $10515 = $10518;
                        break;
                };
                var $10507 = $10515;
                break;
        };
        return $10507;
    };
    const Kind$Term$check$expand$cse$motive$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$go$(x0, x1, x2, x3, x4, x5, x6, x7);

    function List$tail$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $10523 = self.tail;
                var $10524 = $10523;
                var $10522 = $10524;
                break;
            case 'List.nil':
                var $10525 = List$nil;
                var $10522 = $10525;
                break;
        };
        return $10522;
    };
    const List$tail = x0 => List$tail$(x0);

    function Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4) {
        var Kind$Term$SmartMotive$vals$cont$ = (_expr$1, _term$2, _args$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_expr$1, _term$2, _args$3, _defs$4]
        });
        var Kind$Term$SmartMotive$vals$cont = _expr$1 => _term$2 => _args$3 => _defs$4 => Kind$Term$SmartMotive$vals$cont$(_expr$1, _term$2, _args$3, _defs$4);
        var arg = [_expr$1, _term$2, _args$3, _defs$4];
        while (true) {
            let [_expr$1, _term$2, _args$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10526 = self.func;
                        var $10527 = self.argm;
                        var $10528 = Kind$Term$SmartMotive$vals$cont$(_expr$1, $10526, List$cons$($10527, _args$3), _defs$4);
                        return $10528;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10529 = List$cons$(_expr$1, List$tail$(List$reverse$(_args$3)));
                        return $10529;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$vals$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3) {
        var Kind$Term$SmartMotive$vals$ = (_expr$1, _type$2, _defs$3) => ({
            ctr: 'TCO',
            arg: [_expr$1, _type$2, _defs$3]
        });
        var Kind$Term$SmartMotive$vals = _expr$1 => _type$2 => _defs$3 => Kind$Term$SmartMotive$vals$(_expr$1, _type$2, _defs$3);
        var arg = [_expr$1, _type$2, _defs$3];
        while (true) {
            let [_expr$1, _type$2, _defs$3] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$2, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10530 = self.body;
                        var $10531 = Kind$Term$SmartMotive$vals$(_expr$1, $10530(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        return $10531;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10532 = Kind$Term$SmartMotive$vals$cont$(_expr$1, _type$2, List$nil, _defs$3);
                        return $10532;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$vals = x0 => x1 => x2 => Kind$Term$SmartMotive$vals$(x0, x1, x2);

    function Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4) {
        var Kind$Term$SmartMotive$nams$cont$ = (_name$1, _term$2, _binds$3, _defs$4) => ({
            ctr: 'TCO',
            arg: [_name$1, _term$2, _binds$3, _defs$4]
        });
        var Kind$Term$SmartMotive$nams$cont = _name$1 => _term$2 => _binds$3 => _defs$4 => Kind$Term$SmartMotive$nams$cont$(_name$1, _term$2, _binds$3, _defs$4);
        var arg = [_name$1, _term$2, _binds$3, _defs$4];
        while (true) {
            let [_name$1, _term$2, _binds$3, _defs$4] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_term$2, _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10533 = self.self;
                        var $10534 = self.name;
                        var $10535 = self.body;
                        var $10536 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10535(Kind$Term$ref$($10533))(Kind$Term$ref$($10534)), List$cons$(String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10534, List$nil)))), _binds$3), _defs$4);
                        return $10536;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10537 = List$cons$(_name$1, List$tail$(_binds$3));
                        return $10537;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$SmartMotive$nams$cont = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$nams$cont$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$nams$(_name$1, _type$2, _defs$3) {
        var self = Kind$Term$reduce$(_type$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10539 = self.xtyp;
                var $10540 = Kind$Term$SmartMotive$nams$cont$(_name$1, $10539, List$nil, _defs$3);
                var $10538 = $10540;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10541 = List$nil;
                var $10538 = $10541;
                break;
        };
        return $10538;
    };
    const Kind$Term$SmartMotive$nams = x0 => x1 => x2 => Kind$Term$SmartMotive$nams$(x0, x1, x2);

    function List$zip$(_as$3, _bs$4) {
        var self = _as$3;
        switch (self._) {
            case 'List.cons':
                var $10543 = self.head;
                var $10544 = self.tail;
                var self = _bs$4;
                switch (self._) {
                    case 'List.cons':
                        var $10546 = self.head;
                        var $10547 = self.tail;
                        var $10548 = List$cons$(Pair$new$($10543, $10546), List$zip$($10544, $10547));
                        var $10545 = $10548;
                        break;
                    case 'List.nil':
                        var $10549 = List$nil;
                        var $10545 = $10549;
                        break;
                };
                var $10542 = $10545;
                break;
            case 'List.nil':
                var $10550 = List$nil;
                var $10542 = $10550;
                break;
        };
        return $10542;
    };
    const List$zip = x0 => x1 => List$zip$(x0, x1);
    const Nat$gte = a0 => a1 => (a0 >= a1);
    const Bits$concat = a0 => a1 => (a1 + a0);

    function Kind$Term$serialize$go$(_term$1, _depth$2, _init$3, _diff$4, _x$5) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $10552 = self.indx;
                var self = ($10552 >= _init$3);
                if (self) {
                    var _name$8 = a1 => (a1 + (nat_to_bits(Nat$pred$((_depth$2 - $10552 <= 0n ? 0n : _depth$2 - $10552)))));
                    var $10554 = (((_name$8(_x$5) + '1') + '0') + '0');
                    var $10553 = $10554;
                } else {
                    var _name$8 = a1 => (a1 + (nat_to_bits($10552)));
                    var $10555 = (((_name$8(_x$5) + '0') + '1') + '0');
                    var $10553 = $10555;
                };
                var $10551 = $10553;
                break;
            case 'Kind.Term.ref':
                var $10556 = self.name;
                var _name$7 = a1 => (a1 + (kind_name_to_bits($10556)));
                var $10557 = (((_name$7(_x$5) + '0') + '0') + '0');
                var $10551 = $10557;
                break;
            case 'Kind.Term.all':
                var $10558 = self.eras;
                var $10559 = self.self;
                var $10560 = self.name;
                var $10561 = self.xtyp;
                var $10562 = self.body;
                var self = $10558;
                if (self) {
                    var $10564 = Bits$i;
                    var _eras$11 = $10564;
                } else {
                    var $10565 = Bits$o;
                    var _eras$11 = $10565;
                };
                var _self$12 = a1 => (a1 + (kind_name_to_bits($10559)));
                var _xtyp$13 = Kind$Term$serialize$go($10561)(_depth$2)(_init$3)(_diff$4);
                var _body$14 = Kind$Term$serialize$go($10562(Kind$Term$var$($10559, _depth$2))(Kind$Term$var$($10560, Nat$succ$(_depth$2))))(Nat$succ$(Nat$succ$(_depth$2)))(_init$3)(_diff$4);
                var $10563 = (((_eras$11(_self$12(_xtyp$13(_body$14(_x$5)))) + '0') + '0') + '1');
                var $10551 = $10563;
                break;
            case 'Kind.Term.lam':
                var $10566 = self.name;
                var $10567 = self.body;
                var _body$8 = Kind$Term$serialize$go($10567(Kind$Term$var$($10566, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10568 = (((_body$8(_x$5) + '1') + '0') + '1');
                var $10551 = $10568;
                break;
            case 'Kind.Term.app':
                var $10569 = self.func;
                var $10570 = self.argm;
                var _func$8 = Kind$Term$serialize$go($10569)(_depth$2)(_init$3)(_diff$4);
                var _argm$9 = Kind$Term$serialize$go($10570)(_depth$2)(_init$3)(_diff$4);
                var $10571 = (((_func$8(_argm$9(_x$5)) + '0') + '1') + '1');
                var $10551 = $10571;
                break;
            case 'Kind.Term.let':
                var $10572 = self.name;
                var $10573 = self.expr;
                var $10574 = self.body;
                var _expr$9 = Kind$Term$serialize$go($10573)(_depth$2)(_init$3)(_diff$4);
                var _body$10 = Kind$Term$serialize$go($10574(Kind$Term$var$($10572, _depth$2)))(Nat$succ$(_depth$2))(_init$3)(_diff$4);
                var $10575 = (((_expr$9(_body$10(_x$5)) + '1') + '1') + '1');
                var $10551 = $10575;
                break;
            case 'Kind.Term.def':
                var $10576 = self.expr;
                var $10577 = self.body;
                var $10578 = Kind$Term$serialize$go$($10577($10576), _depth$2, _init$3, _diff$4, _x$5);
                var $10551 = $10578;
                break;
            case 'Kind.Term.ann':
                var $10579 = self.term;
                var $10580 = Kind$Term$serialize$go$($10579, _depth$2, _init$3, _diff$4, _x$5);
                var $10551 = $10580;
                break;
            case 'Kind.Term.gol':
                var $10581 = self.name;
                var _name$9 = a1 => (a1 + (kind_name_to_bits($10581)));
                var $10582 = (((_name$9(_x$5) + '0') + '0') + '0');
                var $10551 = $10582;
                break;
            case 'Kind.Term.nat':
                var $10583 = self.natx;
                var $10584 = Kind$Term$serialize$go$(Kind$Term$unroll_nat$($10583), _depth$2, _init$3, _diff$4, _x$5);
                var $10551 = $10584;
                break;
            case 'Kind.Term.chr':
                var $10585 = self.chrx;
                var $10586 = Kind$Term$serialize$go$(Kind$Term$unroll_chr$($10585), _depth$2, _init$3, _diff$4, _x$5);
                var $10551 = $10586;
                break;
            case 'Kind.Term.str':
                var $10587 = self.strx;
                var $10588 = Kind$Term$serialize$go$(Kind$Term$unroll_str$($10587), _depth$2, _init$3, _diff$4, _x$5);
                var $10551 = $10588;
                break;
            case 'Kind.Term.ori':
                var $10589 = self.expr;
                var $10590 = Kind$Term$serialize$go$($10589, _depth$2, _init$3, _diff$4, _x$5);
                var $10551 = $10590;
                break;
            case 'Kind.Term.typ':
                var $10591 = (((_x$5 + '1') + '1') + '0');
                var $10551 = $10591;
                break;
            case 'Kind.Term.hol':
                var $10592 = _x$5;
                var $10551 = $10592;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10593 = _diff$4(_x$5);
                var $10551 = $10593;
                break;
        };
        return $10551;
    };
    const Kind$Term$serialize$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$serialize$go$(x0, x1, x2, x3, x4);

    function Kind$Term$serialize$(_term$1, _depth$2, _side$3) {
        var self = _side$3;
        if (self) {
            var $10595 = Bits$o;
            var _diff$4 = $10595;
        } else {
            var $10596 = Bits$i;
            var _diff$4 = $10596;
        };
        var $10594 = Kind$Term$serialize$go$(_term$1, _depth$2, _depth$2, _diff$4, Bits$e);
        return $10594;
    };
    const Kind$Term$serialize = x0 => x1 => x2 => Kind$Term$serialize$(x0, x1, x2);
    const Bits$eql = a0 => a1 => (a1 === a0);

    function Kind$Term$identical$(_a$1, _b$2, _lv$3) {
        var _ah$4 = Kind$Term$serialize$(_a$1, _lv$3, Bool$false);
        var _bh$5 = Kind$Term$serialize$(_b$2, _lv$3, Bool$true);
        var $10597 = (_bh$5 === _ah$4);
        return $10597;
    };
    const Kind$Term$identical = x0 => x1 => x2 => Kind$Term$identical$(x0, x1, x2);

    function Kind$Term$SmartMotive$replace$(_term$1, _from$2, _to$3, _lv$4) {
        var self = Kind$Term$identical$(_term$1, _from$2, _lv$4);
        if (self) {
            var $10599 = _to$3;
            var $10598 = $10599;
        } else {
            var self = _term$1;
            switch (self._) {
                case 'Kind.Term.var':
                    var $10601 = self.name;
                    var $10602 = self.indx;
                    var $10603 = Kind$Term$var$($10601, $10602);
                    var $10600 = $10603;
                    break;
                case 'Kind.Term.ref':
                    var $10604 = self.name;
                    var $10605 = Kind$Term$ref$($10604);
                    var $10600 = $10605;
                    break;
                case 'Kind.Term.all':
                    var $10606 = self.eras;
                    var $10607 = self.self;
                    var $10608 = self.name;
                    var $10609 = self.xtyp;
                    var $10610 = self.body;
                    var _xtyp$10 = Kind$Term$SmartMotive$replace$($10609, _from$2, _to$3, _lv$4);
                    var _body$11 = $10610(Kind$Term$ref$($10607))(Kind$Term$ref$($10608));
                    var _body$12 = Kind$Term$SmartMotive$replace$(_body$11, _from$2, _to$3, Nat$succ$(Nat$succ$(_lv$4)));
                    var $10611 = Kind$Term$all$($10606, $10607, $10608, _xtyp$10, (_s$13 => _x$14 => {
                        var $10612 = _body$12;
                        return $10612;
                    }));
                    var $10600 = $10611;
                    break;
                case 'Kind.Term.lam':
                    var $10613 = self.name;
                    var $10614 = self.body;
                    var _body$7 = $10614(Kind$Term$ref$($10613));
                    var _body$8 = Kind$Term$SmartMotive$replace$(_body$7, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10615 = Kind$Term$lam$($10613, (_x$9 => {
                        var $10616 = _body$8;
                        return $10616;
                    }));
                    var $10600 = $10615;
                    break;
                case 'Kind.Term.app':
                    var $10617 = self.func;
                    var $10618 = self.argm;
                    var _func$7 = Kind$Term$SmartMotive$replace$($10617, _from$2, _to$3, _lv$4);
                    var _argm$8 = Kind$Term$SmartMotive$replace$($10618, _from$2, _to$3, _lv$4);
                    var $10619 = Kind$Term$app$(_func$7, _argm$8);
                    var $10600 = $10619;
                    break;
                case 'Kind.Term.let':
                    var $10620 = self.name;
                    var $10621 = self.expr;
                    var $10622 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10621, _from$2, _to$3, _lv$4);
                    var _body$9 = $10622(Kind$Term$ref$($10620));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10623 = Kind$Term$let$($10620, _expr$8, (_x$11 => {
                        var $10624 = _body$10;
                        return $10624;
                    }));
                    var $10600 = $10623;
                    break;
                case 'Kind.Term.def':
                    var $10625 = self.name;
                    var $10626 = self.expr;
                    var $10627 = self.body;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10626, _from$2, _to$3, _lv$4);
                    var _body$9 = $10627(Kind$Term$ref$($10625));
                    var _body$10 = Kind$Term$SmartMotive$replace$(_body$9, _from$2, _to$3, Nat$succ$(_lv$4));
                    var $10628 = Kind$Term$def$($10625, _expr$8, (_x$11 => {
                        var $10629 = _body$10;
                        return $10629;
                    }));
                    var $10600 = $10628;
                    break;
                case 'Kind.Term.ann':
                    var $10630 = self.done;
                    var $10631 = self.term;
                    var $10632 = self.type;
                    var _term$8 = Kind$Term$SmartMotive$replace$($10631, _from$2, _to$3, _lv$4);
                    var _type$9 = Kind$Term$SmartMotive$replace$($10632, _from$2, _to$3, _lv$4);
                    var $10633 = Kind$Term$ann$($10630, _term$8, _type$9);
                    var $10600 = $10633;
                    break;
                case 'Kind.Term.get':
                    var $10634 = self.expr;
                    var $10635 = self.fkey;
                    var _expr$7 = Kind$Term$SmartMotive$replace$($10634, _from$2, _to$3, _lv$4);
                    var _fkey$8 = $10635;
                    var $10636 = Kind$Term$get$(_expr$7, _fkey$8);
                    var $10600 = $10636;
                    break;
                case 'Kind.Term.set':
                    var $10637 = self.expr;
                    var $10638 = self.fkey;
                    var $10639 = self.fval;
                    var _expr$8 = Kind$Term$SmartMotive$replace$($10637, _from$2, _to$3, _lv$4);
                    var _fkey$9 = $10638;
                    var _fval$10 = Kind$Term$SmartMotive$replace$($10639, _from$2, _to$3, _lv$4);
                    var $10640 = Kind$Term$set$(_expr$8, _fkey$9, _fval$10);
                    var $10600 = $10640;
                    break;
                case 'Kind.Term.ope':
                    var $10641 = self.name;
                    var $10642 = self.arg0;
                    var $10643 = self.arg1;
                    var _arg0$8 = Kind$Term$SmartMotive$replace$($10642, _from$2, _to$3, _lv$4);
                    var _arg1$9 = Kind$Term$SmartMotive$replace$($10643, _from$2, _to$3, _lv$4);
                    var $10644 = Kind$Term$ope$($10641, _arg0$8, _arg1$9);
                    var $10600 = $10644;
                    break;
                case 'Kind.Term.ori':
                    var $10645 = self.expr;
                    var $10646 = Kind$Term$SmartMotive$replace$($10645, _from$2, _to$3, _lv$4);
                    var $10600 = $10646;
                    break;
                case 'Kind.Term.typ':
                    var $10647 = Kind$Term$typ;
                    var $10600 = $10647;
                    break;
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                    var $10648 = _term$1;
                    var $10600 = $10648;
                    break;
            };
            var $10598 = $10600;
        };
        return $10598;
    };
    const Kind$Term$SmartMotive$replace = x0 => x1 => x2 => x3 => Kind$Term$SmartMotive$replace$(x0, x1, x2, x3);

    function Kind$Term$SmartMotive$make$(_name$1, _expr$2, _type$3, _moti$4, _size$5, _defs$6) {
        var _vals$7 = Kind$Term$SmartMotive$vals$(_expr$2, _type$3, _defs$6);
        var _nams$8 = Kind$Term$SmartMotive$nams$(_name$1, _type$3, _defs$6);
        var _subs$9 = List$zip$(_nams$8, _vals$7);
        var $10649 = List$fold$(_subs$9, _moti$4, (_sub$10 => _moti$11 => {
            var self = _sub$10;
            switch (self._) {
                case 'Pair.new':
                    var $10651 = self.fst;
                    var $10652 = self.snd;
                    var $10653 = Kind$Term$SmartMotive$replace$(_moti$11, $10652, Kind$Term$ref$($10651), _size$5);
                    var $10650 = $10653;
                    break;
            };
            return $10650;
        }));
        return $10649;
    };
    const Kind$Term$SmartMotive$make = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$SmartMotive$make$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$check$expand$cse$motive$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8) {
        var _done$9 = Kind$Term$check$expand$cse$motive$go$(_wyth$1, _moti$2, _name$3, _expr$4, _etyp$5, _rtyp$6, _defs$7, _size$8);
        var self = _moti$2;
        switch (self._) {
            case 'Maybe.none':
                var $10655 = Kind$Term$SmartMotive$make$(_name$3, _expr$4, _etyp$5, _done$9, _size$8, _defs$7);
                var $10654 = $10655;
                break;
            case 'Maybe.some':
                var $10656 = _done$9;
                var $10654 = $10656;
                break;
        };
        return $10654;
    };
    const Kind$Term$check$expand$cse$motive = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => Kind$Term$check$expand$cse$motive$(x0, x1, x2, x3, x4, x5, x6, x7);

    function Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, _type$3, _body$4, _defs$5) {
        var self = Kind$Term$reduce$(_type$3, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10658 = self.self;
                var $10659 = self.name;
                var $10660 = self.body;
                var $10661 = Kind$Term$lam$((() => {
                    var self = String$is_empty$($10659);
                    if (self) {
                        var $10662 = _name$1;
                        return $10662;
                    } else {
                        var $10663 = String$flatten$(List$cons$(_name$1, List$cons$(".", List$cons$($10659, List$nil))));
                        return $10663;
                    };
                })(), (_x$11 => {
                    var $10664 = Kind$Term$check$expand$cse$argument$(_name$1, _wyth$2, $10660(Kind$Term$var$($10658, 0n))(Kind$Term$var$($10659, 0n)), _body$4, _defs$5);
                    return $10664;
                }));
                var $10657 = $10661;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.get':
            case 'Kind.Term.ori':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10666 = self.head;
                        var $10667 = self.tail;
                        var self = $10666;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10669 = self.name;
                                var $10670 = Kind$Term$lam$($10669, (_x$13 => {
                                    var $10671 = Kind$Term$check$expand$cse$argument$(_name$1, $10667, _type$3, _body$4, _defs$5);
                                    return $10671;
                                }));
                                var $10668 = $10670;
                                break;
                        };
                        var $10665 = $10668;
                        break;
                    case 'List.nil':
                        var $10672 = _body$4;
                        var $10665 = $10672;
                        break;
                };
                var $10657 = $10665;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10674 = self.head;
                        var $10675 = self.tail;
                        var self = $10674;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10677 = self.name;
                                var $10678 = Kind$Term$lam$($10677, (_x$12 => {
                                    var $10679 = Kind$Term$check$expand$cse$argument$(_name$1, $10675, _type$3, _body$4, _defs$5);
                                    return $10679;
                                }));
                                var $10676 = $10678;
                                break;
                        };
                        var $10673 = $10676;
                        break;
                    case 'List.nil':
                        var $10680 = _body$4;
                        var $10673 = $10680;
                        break;
                };
                var $10657 = $10673;
                break;
            case 'Kind.Term.typ':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10682 = self.head;
                        var $10683 = self.tail;
                        var self = $10682;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10685 = self.name;
                                var $10686 = Kind$Term$lam$($10685, (_x$11 => {
                                    var $10687 = Kind$Term$check$expand$cse$argument$(_name$1, $10683, _type$3, _body$4, _defs$5);
                                    return $10687;
                                }));
                                var $10684 = $10686;
                                break;
                        };
                        var $10681 = $10684;
                        break;
                    case 'List.nil':
                        var $10688 = _body$4;
                        var $10681 = $10688;
                        break;
                };
                var $10657 = $10681;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10690 = self.head;
                        var $10691 = self.tail;
                        var self = $10690;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10693 = self.name;
                                var $10694 = Kind$Term$lam$($10693, (_x$14 => {
                                    var $10695 = Kind$Term$check$expand$cse$argument$(_name$1, $10691, _type$3, _body$4, _defs$5);
                                    return $10695;
                                }));
                                var $10692 = $10694;
                                break;
                        };
                        var $10689 = $10692;
                        break;
                    case 'List.nil':
                        var $10696 = _body$4;
                        var $10689 = $10696;
                        break;
                };
                var $10657 = $10689;
                break;
            case 'Kind.Term.cse':
                var self = _wyth$2;
                switch (self._) {
                    case 'List.cons':
                        var $10698 = self.head;
                        var $10699 = self.tail;
                        var self = $10698;
                        switch (self._) {
                            case 'Kind.Ann.new':
                                var $10701 = self.name;
                                var $10702 = Kind$Term$lam$($10701, (_x$17 => {
                                    var $10703 = Kind$Term$check$expand$cse$argument$(_name$1, $10699, _type$3, _body$4, _defs$5);
                                    return $10703;
                                }));
                                var $10700 = $10702;
                                break;
                        };
                        var $10697 = $10700;
                        break;
                    case 'List.nil':
                        var $10704 = _body$4;
                        var $10697 = $10704;
                        break;
                };
                var $10657 = $10697;
                break;
        };
        return $10657;
    };
    const Kind$Term$check$expand$cse$argument = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$cse$argument$(x0, x1, x2, x3, x4);

    function Maybe$or$(_a$2, _b$3) {
        var self = _a$2;
        switch (self._) {
            case 'Maybe.some':
                var $10706 = self.value;
                var $10707 = Maybe$some$($10706);
                var $10705 = $10707;
                break;
            case 'Maybe.none':
                var $10708 = _b$3;
                var $10705 = $10708;
                break;
        };
        return $10705;
    };
    const Maybe$or = x0 => x1 => Maybe$or$(x0, x1);

    function Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) {
        var Kind$Term$check$expand$cse$cases$ = (_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7) => ({
            ctr: 'TCO',
            arg: [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7]
        });
        var Kind$Term$check$expand$cse$cases = _expr$1 => _name$2 => _wyth$3 => _cses$4 => _type$5 => _defs$6 => _ctxt$7 => Kind$Term$check$expand$cse$cases$(_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7);
        var arg = [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7];
        while (true) {
            let [_expr$1, _name$2, _wyth$3, _cses$4, _type$5, _defs$6, _ctxt$7] = arg;
            var R = (() => {
                var self = Kind$Term$reduce$(_type$5, _defs$6);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10709 = self.self;
                        var $10710 = self.name;
                        var $10711 = self.xtyp;
                        var $10712 = self.body;
                        var _argm$13 = Maybe$or$(Kind$Map$get$($10710, _cses$4), Kind$Map$get$("_", _cses$4));
                        var _argm$14 = Maybe$default$(_argm$13, Kind$Term$ref$((_name$2 + ("_" + ($10710 + "_case")))));
                        var _argm$15 = Kind$Term$check$expand$cse$argument$(_name$2, _wyth$3, $10711, _argm$14, _defs$6);
                        var _expr$16 = Kind$Term$app$(_expr$1, _argm$15);
                        var _type$17 = $10712(Kind$Term$var$($10709, 0n))(Kind$Term$var$($10710, 0n));
                        var $10713 = Kind$Term$check$expand$cse$cases$(_expr$16, _name$2, _wyth$3, _cses$4, _type$17, _defs$6, _ctxt$7);
                        return $10713;
                    case 'Kind.Term.var':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                    case 'Kind.Term.ori':
                        var _expr$10 = (() => {
                            var $10716 = _expr$1;
                            var $10717 = _wyth$3;
                            let _expr$11 = $10716;
                            let _defn$10;
                            while ($10717._ === 'List.cons') {
                                _defn$10 = $10717.head;
                                var $10716 = Kind$Term$app$(_expr$11, (() => {
                                    var self = _defn$10;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10718 = self.term;
                                            var $10719 = $10718;
                                            return $10719;
                                    };
                                })());
                                _expr$11 = $10716;
                                $10717 = $10717.tail;
                            }
                            return _expr$11;
                        })();
                        var $10714 = _expr$10;
                        return $10714;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var _expr$9 = (() => {
                            var $10722 = _expr$1;
                            var $10723 = _wyth$3;
                            let _expr$10 = $10722;
                            let _defn$9;
                            while ($10723._ === 'List.cons') {
                                _defn$9 = $10723.head;
                                var $10722 = Kind$Term$app$(_expr$10, (() => {
                                    var self = _defn$9;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10724 = self.term;
                                            var $10725 = $10724;
                                            return $10725;
                                    };
                                })());
                                _expr$10 = $10722;
                                $10723 = $10723.tail;
                            }
                            return _expr$10;
                        })();
                        var $10720 = _expr$9;
                        return $10720;
                    case 'Kind.Term.typ':
                        var _expr$8 = (() => {
                            var $10728 = _expr$1;
                            var $10729 = _wyth$3;
                            let _expr$9 = $10728;
                            let _defn$8;
                            while ($10729._ === 'List.cons') {
                                _defn$8 = $10729.head;
                                var $10728 = Kind$Term$app$(_expr$9, (() => {
                                    var self = _defn$8;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10730 = self.term;
                                            var $10731 = $10730;
                                            return $10731;
                                    };
                                })());
                                _expr$9 = $10728;
                                $10729 = $10729.tail;
                            }
                            return _expr$9;
                        })();
                        var $10726 = _expr$8;
                        return $10726;
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var _expr$11 = (() => {
                            var $10734 = _expr$1;
                            var $10735 = _wyth$3;
                            let _expr$12 = $10734;
                            let _defn$11;
                            while ($10735._ === 'List.cons') {
                                _defn$11 = $10735.head;
                                var $10734 = Kind$Term$app$(_expr$12, (() => {
                                    var self = _defn$11;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10736 = self.term;
                                            var $10737 = $10736;
                                            return $10737;
                                    };
                                })());
                                _expr$12 = $10734;
                                $10735 = $10735.tail;
                            }
                            return _expr$12;
                        })();
                        var $10732 = _expr$11;
                        return $10732;
                    case 'Kind.Term.cse':
                        var _expr$14 = (() => {
                            var $10740 = _expr$1;
                            var $10741 = _wyth$3;
                            let _expr$15 = $10740;
                            let _defn$14;
                            while ($10741._ === 'List.cons') {
                                _defn$14 = $10741.head;
                                var $10740 = Kind$Term$app$(_expr$15, (() => {
                                    var self = _defn$14;
                                    switch (self._) {
                                        case 'Kind.Ann.new':
                                            var $10742 = self.term;
                                            var $10743 = $10742;
                                            return $10743;
                                    };
                                })());
                                _expr$15 = $10740;
                                $10741 = $10741.tail;
                            }
                            return _expr$15;
                        })();
                        var $10738 = _expr$14;
                        return $10738;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$check$expand$cse$cases = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Term$check$expand$cse$cases$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Term$check$expand$cse$(_expr$1, _name$2, _wyth$3, _cses$4, _moti$5, _etyp$6, _rtyp$7, _defs$8, _ctxt$9) {
        var self = Kind$Term$reduce$(_etyp$6, _defs$8);
        switch (self._) {
            case 'Kind.Term.all':
                var $10745 = self.self;
                var $10746 = self.name;
                var $10747 = self.xtyp;
                var $10748 = self.body;
                var _moti$15 = Kind$Term$check$expand$cse$motive$(_wyth$3, _moti$5, _name$2, _expr$1, _etyp$6, _rtyp$7, _defs$8, (list_length(_ctxt$9)));
                var _argm$16 = Kind$Term$check$expand$cse$argument$(_name$2, List$nil, $10747, _moti$15, _defs$8);
                var _expr$17 = Kind$Term$app$(_expr$1, _argm$16);
                var _type$18 = $10748(Kind$Term$var$($10745, 0n))(Kind$Term$var$($10746, 0n));
                var $10749 = Maybe$some$(Kind$Term$check$expand$cse$cases$(_expr$17, _name$2, _wyth$3, _cses$4, _type$18, _defs$8, _ctxt$9));
                var $10744 = $10749;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10750 = Maybe$none;
                var $10744 = $10750;
                break;
        };
        return $10744;
    };
    const Kind$Term$check$expand$cse = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => Kind$Term$check$expand$cse$(x0, x1, x2, x3, x4, x5, x6, x7, x8);

    function Kind$Error$cant_infer$(_origin$1, _term$2, _context$3) {
        var $10751 = ({
            _: 'Kind.Error.cant_infer',
            'origin': _origin$1,
            'term': _term$2,
            'context': _context$3
        });
        return $10751;
    };
    const Kind$Error$cant_infer = x0 => x1 => x2 => Kind$Error$cant_infer$(x0, x1, x2);

    function Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$3, _orig$4) {
        var $10752 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$cant_infer$(_orig$4, _term$1, _ctx$3), List$nil));
        return $10752;
    };
    const Kind$Term$check$cant_infer = x0 => x1 => x2 => x3 => Kind$Term$check$cant_infer$(x0, x1, x2, x3);

    function Kind$Term$get_bnds$(_term$1, _depth$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10754 = self.self;
                var $10755 = self.name;
                var $10756 = self.xtyp;
                var $10757 = self.body;
                var _b$8 = $10757(Kind$Term$var$($10754, _depth$2))(Kind$Term$var$($10755, Nat$succ$(_depth$2)));
                var self = Kind$Term$get_bnds$(_b$8, Nat$succ$(Nat$succ$(_depth$2)));
                switch (self._) {
                    case 'Pair.new':
                        var $10759 = self.fst;
                        var $10760 = self.snd;
                        var $10761 = Pair$new$(List$cons$(Pair$new$($10755, $10756), $10759), $10760);
                        var $10758 = $10761;
                        break;
                };
                var $10753 = $10758;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10762 = Pair$new$(List$nil, _term$1);
                var $10753 = $10762;
                break;
        };
        return $10753;
    };
    const Kind$Term$get_bnds = x0 => x1 => Kind$Term$get_bnds$(x0, x1);

    function List$last$go$(_xs$2, _last$3) {
        var List$last$go$ = (_xs$2, _last$3) => ({
            ctr: 'TCO',
            arg: [_xs$2, _last$3]
        });
        var List$last$go = _xs$2 => _last$3 => List$last$go$(_xs$2, _last$3);
        var arg = [_xs$2, _last$3];
        while (true) {
            let [_xs$2, _last$3] = arg;
            var R = (() => {
                var self = _xs$2;
                switch (self._) {
                    case 'List.cons':
                        var $10763 = self.head;
                        var $10764 = self.tail;
                        var $10765 = List$last$go$($10764, Maybe$some$($10763));
                        return $10765;
                    case 'List.nil':
                        var $10766 = _last$3;
                        return $10766;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$last$go = x0 => x1 => List$last$go$(x0, x1);

    function List$last$(_xs$2) {
        var $10767 = List$last$go$(_xs$2, Maybe$none);
        return $10767;
    };
    const List$last = x0 => List$last$(x0);

    function Kind$Term$check$expand$set$count_params$(_xtyp$1) {
        var self = Kind$Term$get_bnds$(_xtyp$1, 0n);
        switch (self._) {
            case 'Pair.new':
                var $10769 = self.fst;
                var self = Kind$Term$get_args$(Pair$snd$(Maybe$default$(List$last$($10769), Pair$new$("", Kind$Term$typ))));
                switch (self._) {
                    case 'Pair.new':
                        var $10771 = self.snd;
                        var _indexs$6 = Nat$pred$((list_length($10769)));
                        var _params$7 = ((list_length($10771)) - _indexs$6 <= 0n ? 0n : (list_length($10771)) - _indexs$6);
                        var $10772 = _params$7;
                        var $10770 = $10772;
                        break;
                };
                var $10768 = $10770;
                break;
        };
        return $10768;
    };
    const Kind$Term$check$expand$set$count_params = x0 => Kind$Term$check$expand$set$count_params$(x0);

    function Nat$for$(_state$2, _from$3, _til$4, _func$5) {
        var Nat$for$ = (_state$2, _from$3, _til$4, _func$5) => ({
            ctr: 'TCO',
            arg: [_state$2, _from$3, _til$4, _func$5]
        });
        var Nat$for = _state$2 => _from$3 => _til$4 => _func$5 => Nat$for$(_state$2, _from$3, _til$4, _func$5);
        var arg = [_state$2, _from$3, _til$4, _func$5];
        while (true) {
            let [_state$2, _from$3, _til$4, _func$5] = arg;
            var R = (() => {
                var self = (_from$3 === _til$4);
                if (self) {
                    var $10773 = _state$2;
                    return $10773;
                } else {
                    var $10774 = Nat$for$(_func$5(_from$3)(_state$2), Nat$succ$(_from$3), _til$4, _func$5);
                    return $10774;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Nat$for = x0 => x1 => x2 => x3 => Nat$for$(x0, x1, x2, x3);

    function List$get$(_index$2, _list$3) {
        var List$get$ = (_index$2, _list$3) => ({
            ctr: 'TCO',
            arg: [_index$2, _list$3]
        });
        var List$get = _index$2 => _list$3 => List$get$(_index$2, _list$3);
        var arg = [_index$2, _list$3];
        while (true) {
            let [_index$2, _list$3] = arg;
            var R = (() => {
                var self = _list$3;
                switch (self._) {
                    case 'List.cons':
                        var $10775 = self.head;
                        var $10776 = self.tail;
                        var self = _index$2;
                        if (self === 0n) {
                            var $10778 = Maybe$some$($10775);
                            var $10777 = $10778;
                        } else {
                            var $10779 = (self - 1n);
                            var $10780 = List$get$($10779, $10776);
                            var $10777 = $10780;
                        };
                        return $10777;
                    case 'List.nil':
                        var $10781 = Maybe$none;
                        return $10781;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$get = x0 => x1 => List$get$(x0, x1);

    function Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3) {
        var self = ((list_length(_args$1)) === 2n);
        if (self) {
            var _term$4 = Kind$Term$ref$("Pair.new");
            var _term$5 = Kind$Term$app$(_term$4, Kind$Term$hol$(Bits$e));
            var _term$6 = Kind$Term$app$(_term$5, Kind$Term$hol$(Bits$e));
            var _term$7 = Kind$Term$app$(_term$6, Maybe$default$(List$get$(0n, _args$1), Kind$Term$ref$("pair_fst")));
            var _term$8 = Kind$Term$app$(_term$7, Maybe$default$(List$get$(1n, _args$1), Kind$Term$ref$("pair_snd")));
            var $10783 = Maybe$some$(_term$8);
            var $10782 = $10783;
        } else {
            var $10784 = Maybe$none;
            var $10782 = $10784;
        };
        return $10782;
    };
    const Kind$Term$check$expand$new$pair = x0 => x1 => x2 => Kind$Term$check$expand$new$pair$(x0, x1, x2);

    function Kind$Term$check$expand$new$(_args$1, _type$2, _defs$3) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $10786 = self.value;
                var self = Kind$Term$reduce$($10786, _defs$3);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10788 = self.self;
                        var $10789 = self.xtyp;
                        var $10790 = self.body;
                        var self = Kind$Term$reduce$($10790(Kind$Term$typ)(Kind$Term$typ), _defs$3);
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $10792 = self.name;
                                var _tnam$15 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($10788), "");
                                var _term$16 = Kind$Term$ref$((_tnam$15 + ("." + $10792)));
                                var _pars$17 = Kind$Term$check$expand$set$count_params$($10789);
                                var _term$18 = Nat$for$(_term$16, 0n, _pars$17, (_i$18 => _term$19 => {
                                    var $10794 = Kind$Term$app$(_term$19, Kind$Term$hol$(Bits$e));
                                    return $10794;
                                }));
                                var _term$19 = (() => {
                                    var $10796 = _term$18;
                                    var $10797 = _args$1;
                                    let _term$20 = $10796;
                                    let _arg$19;
                                    while ($10797._ === 'List.cons') {
                                        _arg$19 = $10797.head;
                                        var $10796 = Kind$Term$app$(_term$20, _arg$19);
                                        _term$20 = $10796;
                                        $10797 = $10797.tail;
                                    }
                                    return _term$20;
                                })();
                                var $10793 = Maybe$some$(_term$19);
                                var $10791 = $10793;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $10798 = Maybe$none;
                                var $10791 = $10798;
                                break;
                        };
                        var $10787 = $10791;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10799 = Maybe$none;
                        var $10787 = $10799;
                        break;
                };
                var _got$4 = $10787;
                break;
            case 'Maybe.none':
                var $10800 = Maybe$none;
                var _got$4 = $10800;
                break;
        };
        var self = _got$4;
        switch (self._) {
            case 'Maybe.some':
                var $10801 = self.value;
                var $10802 = Maybe$some$($10801);
                var $10785 = $10802;
                break;
            case 'Maybe.none':
                var $10803 = Kind$Term$check$expand$new$pair$(_args$1, _type$2, _defs$3);
                var $10785 = $10803;
                break;
        };
        return $10785;
    };
    const Kind$Term$check$expand$new = x0 => x1 => x2 => Kind$Term$check$expand$new$(x0, x1, x2);

    function Kind$Term$check$expand$get$selector$(_fkey$1, _ctor$2, _defs$3, _rett$4) {
        var self = Kind$Term$reduce$(_ctor$2, _defs$3);
        switch (self._) {
            case 'Kind.Term.all':
                var $10805 = self.name;
                var $10806 = self.body;
                var $10807 = Kind$Term$lam$($10805, (_x$10 => {
                    var _body$11 = $10806(Kind$Term$typ)(Kind$Term$typ);
                    var self = ($10805 === _fkey$1);
                    if (self) {
                        var $10809 = _x$10;
                        var _rett$12 = $10809;
                    } else {
                        var $10810 = _rett$4;
                        var _rett$12 = $10810;
                    };
                    var $10808 = Kind$Term$check$expand$get$selector$(_fkey$1, _body$11, _defs$3, _rett$12);
                    return $10808;
                }));
                var $10804 = $10807;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10811 = _rett$4;
                var $10804 = $10811;
                break;
        };
        return $10804;
    };
    const Kind$Term$check$expand$get$selector = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$selector$(x0, x1, x2, x3);

    function Kind$Term$check$expand$get$(_expr$1, _fkey$2, _etyp$3, _defs$4) {
        var self = Kind$Term$reduce$(_etyp$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $10813 = self.body;
                var self = Kind$Term$reduce$($10813(Kind$Term$typ)(Kind$Term$typ), _defs$4);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10815 = self.xtyp;
                        var _term$15 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$15 => {
                            var $10817 = Kind$Term$hol$(Bits$e);
                            return $10817;
                        })));
                        var _rett$16 = Kind$Term$ref$((_fkey$2 + "_field"));
                        var _sele$17 = Kind$Term$check$expand$get$selector$(_fkey$2, $10815, _defs$4, _rett$16);
                        var $10816 = Maybe$some$(Kind$Term$app$(_term$15, _sele$17));
                        var $10814 = $10816;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10818 = Maybe$none;
                        var $10814 = $10818;
                        break;
                };
                var $10812 = $10814;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10819 = Maybe$none;
                var $10812 = $10819;
                break;
        };
        return $10812;
    };
    const Kind$Term$check$expand$get = x0 => x1 => x2 => x3 => Kind$Term$check$expand$get$(x0, x1, x2, x3);

    function Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _ctor$3, _defs$4, _rett$5) {
        var self = Kind$Term$reduce$(_ctor$3, _defs$4);
        switch (self._) {
            case 'Kind.Term.all':
                var $10821 = self.name;
                var $10822 = self.body;
                var $10823 = Kind$Term$lam$($10821, (_x$11 => {
                    var _body$12 = $10822(Kind$Term$typ)(Kind$Term$typ);
                    var _rett$13 = Kind$Term$app$(_rett$5, (() => {
                        var self = ($10821 === _fkey$1);
                        if (self) {
                            var $10825 = _fval$2;
                            return $10825;
                        } else {
                            var $10826 = _x$11;
                            return $10826;
                        };
                    })());
                    var $10824 = Kind$Term$check$expand$set$selector$(_fkey$1, _fval$2, _body$12, _defs$4, _rett$13);
                    return $10824;
                }));
                var $10820 = $10823;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10827 = _rett$5;
                var $10820 = $10827;
                break;
        };
        return $10820;
    };
    const Kind$Term$check$expand$set$selector = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$selector$(x0, x1, x2, x3, x4);

    function Kind$Term$check$expand$set$(_expr$1, _fkey$2, _fval$3, _etyp$4, _defs$5) {
        var self = Kind$Term$reduce$(_etyp$4, _defs$5);
        switch (self._) {
            case 'Kind.Term.all':
                var $10829 = self.self;
                var $10830 = self.xtyp;
                var $10831 = self.body;
                var self = Kind$Term$reduce$($10831(Kind$Term$typ)(Kind$Term$typ), _defs$5);
                switch (self._) {
                    case 'Kind.Term.all':
                        var $10833 = self.name;
                        var $10834 = self.xtyp;
                        var _term$16 = Kind$Term$app$(_expr$1, Kind$Term$lam$("", (_$16 => {
                            var $10836 = Kind$Term$hol$(Bits$e);
                            return $10836;
                        })));
                        var _tnam$17 = Maybe$default$(Kind$Term$check$get_name_of_self_type$slice$($10829), "");
                        var _rett$18 = Kind$Term$ref$((_tnam$17 + ("." + $10833)));
                        var _pars$19 = Kind$Term$check$expand$set$count_params$($10830);
                        var _rett$20 = Nat$for$(_rett$18, 0n, _pars$19, (_i$20 => _rett$21 => {
                            var $10837 = Kind$Term$app$(_rett$21, Kind$Term$hol$(Bits$e));
                            return $10837;
                        }));
                        var _sele$21 = Kind$Term$check$expand$set$selector$(_fkey$2, _fval$3, $10834, _defs$5, _rett$20);
                        var $10835 = Maybe$some$(Kind$Term$app$(_term$16, _sele$21));
                        var $10832 = $10835;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $10838 = Maybe$none;
                        var $10832 = $10838;
                        break;
                };
                var $10828 = $10832;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $10839 = Maybe$none;
                var $10828 = $10839;
                break;
        };
        return $10828;
    };
    const Kind$Term$check$expand$set = x0 => x1 => x2 => x3 => x4 => Kind$Term$check$expand$set$(x0, x1, x2, x3, x4);

    function String$at$(_index$1, _str$2) {
        var String$at$ = (_index$1, _str$2) => ({
            ctr: 'TCO',
            arg: [_index$1, _str$2]
        });
        var String$at = _index$1 => _str$2 => String$at$(_index$1, _str$2);
        var arg = [_index$1, _str$2];
        while (true) {
            let [_index$1, _str$2] = arg;
            var R = (() => {
                var self = _str$2;
                if (self.length === 0) {
                    var $10840 = Maybe$none;
                    return $10840;
                } else {
                    var $10841 = self.charCodeAt(0);
                    var $10842 = self.slice(1);
                    var self = _index$1;
                    if (self === 0n) {
                        var $10844 = Maybe$some$($10841);
                        var $10843 = $10844;
                    } else {
                        var $10845 = (self - 1n);
                        var $10846 = String$at$($10845, $10842);
                        var $10843 = $10846;
                    };
                    return $10843;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$at = x0 => x1 => String$at$(x0, x1);

    function String$last$(_xs$1) {
        var $10847 = String$at$(Nat$pred$(String$length$(_xs$1)), _xs$1);
        return $10847;
    };
    const String$last = x0 => String$last$(x0);

    function Kind$Term$check$expand$ope$(_skip_cmp$1, _oper$2, _arg0$3, _arg1$4, _otyp$5, _defs$6) {
        var self = ((Maybe$default$(String$last$(_oper$2), 120) === 63) && _skip_cmp$1);
        if (self) {
            var $10849 = Maybe$none;
            var $10848 = $10849;
        } else {
            var _type_name$7 = Kind$Term$check$get_name_of_self_type$(_otyp$5, _defs$6);
            var self = _type_name$7;
            switch (self._) {
                case 'Maybe.some':
                    var $10851 = self.value;
                    var self = (_oper$2 === "+");
                    if (self) {
                        var $10853 = Maybe$some$("add");
                        var _oper_name$9 = $10853;
                    } else {
                        var self = (_oper$2 === "-");
                        if (self) {
                            var $10855 = Maybe$some$("sub");
                            var $10854 = $10855;
                        } else {
                            var self = (_oper$2 === "*");
                            if (self) {
                                var $10857 = Maybe$some$("mul");
                                var $10856 = $10857;
                            } else {
                                var self = (_oper$2 === "/");
                                if (self) {
                                    var $10859 = Maybe$some$("div");
                                    var $10858 = $10859;
                                } else {
                                    var self = (_oper$2 === "**");
                                    if (self) {
                                        var $10861 = Maybe$some$("pow");
                                        var $10860 = $10861;
                                    } else {
                                        var self = (_oper$2 === "%");
                                        if (self) {
                                            var $10863 = Maybe$some$("mod");
                                            var $10862 = $10863;
                                        } else {
                                            var self = (_oper$2 === "<?");
                                            if (self) {
                                                var $10865 = Maybe$some$("ltn");
                                                var $10864 = $10865;
                                            } else {
                                                var self = (_oper$2 === "<=?");
                                                if (self) {
                                                    var $10867 = Maybe$some$("lte");
                                                    var $10866 = $10867;
                                                } else {
                                                    var self = (_oper$2 === "=?");
                                                    if (self) {
                                                        var $10869 = Maybe$some$("eql");
                                                        var $10868 = $10869;
                                                    } else {
                                                        var self = (_oper$2 === ">=?");
                                                        if (self) {
                                                            var $10871 = Maybe$some$("gte");
                                                            var $10870 = $10871;
                                                        } else {
                                                            var self = (_oper$2 === ">?");
                                                            if (self) {
                                                                var $10873 = Maybe$some$("gtn");
                                                                var $10872 = $10873;
                                                            } else {
                                                                var self = (_oper$2 === "&&");
                                                                if (self) {
                                                                    var $10875 = Maybe$some$("and");
                                                                    var $10874 = $10875;
                                                                } else {
                                                                    var self = (_oper$2 === "||");
                                                                    if (self) {
                                                                        var $10877 = Maybe$some$("or");
                                                                        var $10876 = $10877;
                                                                    } else {
                                                                        var $10878 = Maybe$none;
                                                                        var $10876 = $10878;
                                                                    };
                                                                    var $10874 = $10876;
                                                                };
                                                                var $10872 = $10874;
                                                            };
                                                            var $10870 = $10872;
                                                        };
                                                        var $10868 = $10870;
                                                    };
                                                    var $10866 = $10868;
                                                };
                                                var $10864 = $10866;
                                            };
                                            var $10862 = $10864;
                                        };
                                        var $10860 = $10862;
                                    };
                                    var $10858 = $10860;
                                };
                                var $10856 = $10858;
                            };
                            var $10854 = $10856;
                        };
                        var _oper_name$9 = $10854;
                    };
                    var self = _oper_name$9;
                    switch (self._) {
                        case 'Maybe.some':
                            var $10879 = self.value;
                            var _term$11 = Kind$Term$ref$(($10851 + ("." + $10879)));
                            var _term$12 = Kind$Term$app$(_term$11, _arg0$3);
                            var _term$13 = Kind$Term$app$(_term$12, _arg1$4);
                            var $10880 = Maybe$some$(_term$13);
                            var $10852 = $10880;
                            break;
                        case 'Maybe.none':
                            var $10881 = Maybe$none;
                            var $10852 = $10881;
                            break;
                    };
                    var $10850 = $10852;
                    break;
                case 'Maybe.none':
                    var $10882 = Maybe$none;
                    var $10850 = $10882;
                    break;
            };
            var $10848 = $10850;
        };
        return $10848;
    };
    const Kind$Term$check$expand$ope = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$expand$ope$(x0, x1, x2, x3, x4, x5);

    function BitsSet$has$(_bits$1, _set$2) {
        var self = (bitsmap_get(_bits$1, _set$2));
        switch (self._) {
            case 'Maybe.none':
                var $10884 = Bool$false;
                var $10883 = $10884;
                break;
            case 'Maybe.some':
                var $10885 = Bool$true;
                var $10883 = $10885;
                break;
        };
        return $10883;
    };
    const BitsSet$has = x0 => x1 => BitsSet$has$(x0, x1);

    function BitsSet$mut$has$(_bits$1, _set$2) {
        var $10886 = BitsSet$has$(_bits$1, _set$2);
        return $10886;
    };
    const BitsSet$mut$has = x0 => x1 => BitsSet$mut$has$(x0, x1);

    function Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2) {
        var Kind$Term$equal$extra_holes$funari$ = (_term$1, _arity$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _arity$2]
        });
        var Kind$Term$equal$extra_holes$funari = _term$1 => _arity$2 => Kind$Term$equal$extra_holes$funari$(_term$1, _arity$2);
        var arg = [_term$1, _arity$2];
        while (true) {
            let [_term$1, _arity$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $10887 = self.name;
                        var $10888 = Maybe$some$(Pair$new$($10887, _arity$2));
                        return $10888;
                    case 'Kind.Term.ref':
                        var $10889 = self.name;
                        var $10890 = Maybe$some$(Pair$new$($10889, _arity$2));
                        return $10890;
                    case 'Kind.Term.app':
                        var $10891 = self.func;
                        var $10892 = Kind$Term$equal$extra_holes$funari$($10891, Nat$succ$(_arity$2));
                        return $10892;
                    case 'Kind.Term.ori':
                        var $10893 = self.expr;
                        var $10894 = Kind$Term$equal$extra_holes$funari$($10893, _arity$2);
                        return $10894;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10895 = Maybe$none;
                        return $10895;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$equal$extra_holes$funari = x0 => x1 => Kind$Term$equal$extra_holes$funari$(x0, x1);

    function Kind$Term$has_holes$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $10897 = self.xtyp;
                var $10898 = self.body;
                var $10899 = (Kind$Term$has_holes$($10897) || Kind$Term$has_holes$($10898(Kind$Term$typ)(Kind$Term$typ)));
                var $10896 = $10899;
                break;
            case 'Kind.Term.lam':
                var $10900 = self.body;
                var $10901 = Kind$Term$has_holes$($10900(Kind$Term$typ));
                var $10896 = $10901;
                break;
            case 'Kind.Term.app':
                var $10902 = self.func;
                var $10903 = self.argm;
                var $10904 = (Kind$Term$has_holes$($10902) || Kind$Term$has_holes$($10903));
                var $10896 = $10904;
                break;
            case 'Kind.Term.let':
                var $10905 = self.expr;
                var $10906 = self.body;
                var $10907 = (Kind$Term$has_holes$($10905) || Kind$Term$has_holes$($10906(Kind$Term$typ)));
                var $10896 = $10907;
                break;
            case 'Kind.Term.def':
                var $10908 = self.expr;
                var $10909 = self.body;
                var $10910 = (Kind$Term$has_holes$($10908) || Kind$Term$has_holes$($10909(Kind$Term$typ)));
                var $10896 = $10910;
                break;
            case 'Kind.Term.ann':
                var $10911 = self.term;
                var $10912 = self.type;
                var $10913 = (Kind$Term$has_holes$($10911) || Kind$Term$has_holes$($10912));
                var $10896 = $10913;
                break;
            case 'Kind.Term.ori':
                var $10914 = self.expr;
                var $10915 = Kind$Term$has_holes$($10914);
                var $10896 = $10915;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $10916 = Bool$false;
                var $10896 = $10916;
                break;
            case 'Kind.Term.hol':
                var $10917 = Bool$true;
                var $10896 = $10917;
                break;
        };
        return $10896;
    };
    const Kind$Term$has_holes = x0 => Kind$Term$has_holes$(x0);

    function Kind$Term$equal$hole$(_path$1, _term$2) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var self = Kind$Term$has_holes$(_term$2);
                if (self) {
                    var $10920 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                    var $10919 = $10920;
                } else {
                    var $10921 = Kind$Check$result$(Maybe$some$(Bool$true), List$cons$(Kind$Error$patch$(_path$1, Kind$Term$normalize$(_term$2, Kind$Map$new)), List$nil));
                    var $10919 = $10921;
                };
                var $10918 = $10919;
                break;
            case 'Kind.Term.hol':
                var $10922 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $10918 = $10922;
                break;
        };
        return $10918;
    };
    const Kind$Term$equal$hole = x0 => x1 => Kind$Term$equal$hole$(x0, x1);

    function Kind$Term$equal$extra_holes$filler$(_a$1, _b$2) {
        var self = _a$1;
        switch (self._) {
            case 'Kind.Term.app':
                var $10924 = self.func;
                var $10925 = self.argm;
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $10927 = self.func;
                        var $10928 = self.argm;
                        var self = Kind$Term$equal$extra_holes$filler$($10924, $10927);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10930 = self.value;
                                var $10931 = self.errors;
                                var self = $10930;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10933 = Kind$Check$result$(Maybe$none, $10931);
                                        var $10932 = $10933;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Term$equal$extra_holes$filler$($10925, $10928);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10935 = self.value;
                                                var $10936 = self.errors;
                                                var $10937 = Kind$Check$result$($10935, List$concat$($10931, $10936));
                                                var $10934 = $10937;
                                                break;
                                        };
                                        var $10932 = $10934;
                                        break;
                                };
                                var $10929 = $10932;
                                break;
                        };
                        var $10926 = $10929;
                        break;
                    case 'Kind.Term.hol':
                        var $10938 = self.path;
                        var self = Kind$Term$equal$hole$($10938, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10940 = self.value;
                                var $10941 = self.errors;
                                var self = $10940;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10943 = Kind$Check$result$(Maybe$none, $10941);
                                        var $10942 = $10943;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10945 = self.value;
                                                var $10946 = self.errors;
                                                var $10947 = Kind$Check$result$($10945, List$concat$($10941, $10946));
                                                var $10944 = $10947;
                                                break;
                                        };
                                        var $10942 = $10944;
                                        break;
                                };
                                var $10939 = $10942;
                                break;
                        };
                        var $10926 = $10939;
                        break;
                    case 'Kind.Term.ori':
                        var $10948 = self.expr;
                        var $10949 = Kind$Term$equal$extra_holes$filler$(_a$1, $10948);
                        var $10926 = $10949;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10950 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10926 = $10950;
                        break;
                };
                var $10923 = $10926;
                break;
            case 'Kind.Term.hol':
                var $10951 = self.path;
                var self = Kind$Term$equal$hole$($10951, _b$2);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $10953 = self.value;
                        var $10954 = self.errors;
                        var self = $10953;
                        switch (self._) {
                            case 'Maybe.none':
                                var $10956 = Kind$Check$result$(Maybe$none, $10954);
                                var $10955 = $10956;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $10958 = self.value;
                                        var $10959 = self.errors;
                                        var $10960 = Kind$Check$result$($10958, List$concat$($10954, $10959));
                                        var $10957 = $10960;
                                        break;
                                };
                                var $10955 = $10957;
                                break;
                        };
                        var $10952 = $10955;
                        break;
                };
                var $10923 = $10952;
                break;
            case 'Kind.Term.ori':
                var $10961 = self.expr;
                var $10962 = Kind$Term$equal$extra_holes$filler$($10961, _b$2);
                var $10923 = $10962;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.lam':
            case 'Kind.Term.get':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $10964 = self.path;
                        var self = Kind$Term$equal$hole$($10964, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10966 = self.value;
                                var $10967 = self.errors;
                                var self = $10966;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10969 = Kind$Check$result$(Maybe$none, $10967);
                                        var $10968 = $10969;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10971 = self.value;
                                                var $10972 = self.errors;
                                                var $10973 = Kind$Check$result$($10971, List$concat$($10967, $10972));
                                                var $10970 = $10973;
                                                break;
                                        };
                                        var $10968 = $10970;
                                        break;
                                };
                                var $10965 = $10968;
                                break;
                        };
                        var $10963 = $10965;
                        break;
                    case 'Kind.Term.ori':
                        var $10974 = self.expr;
                        var $10975 = Kind$Term$equal$extra_holes$filler$(_a$1, $10974);
                        var $10963 = $10975;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10976 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10963 = $10976;
                        break;
                };
                var $10923 = $10963;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $10978 = self.path;
                        var self = Kind$Term$equal$hole$($10978, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10980 = self.value;
                                var $10981 = self.errors;
                                var self = $10980;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10983 = Kind$Check$result$(Maybe$none, $10981);
                                        var $10982 = $10983;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10985 = self.value;
                                                var $10986 = self.errors;
                                                var $10987 = Kind$Check$result$($10985, List$concat$($10981, $10986));
                                                var $10984 = $10987;
                                                break;
                                        };
                                        var $10982 = $10984;
                                        break;
                                };
                                var $10979 = $10982;
                                break;
                        };
                        var $10977 = $10979;
                        break;
                    case 'Kind.Term.ori':
                        var $10988 = self.expr;
                        var $10989 = Kind$Term$equal$extra_holes$filler$(_a$1, $10988);
                        var $10977 = $10989;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $10990 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10977 = $10990;
                        break;
                };
                var $10923 = $10977;
                break;
            case 'Kind.Term.typ':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $10992 = self.path;
                        var self = Kind$Term$equal$hole$($10992, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $10994 = self.value;
                                var $10995 = self.errors;
                                var self = $10994;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $10997 = Kind$Check$result$(Maybe$none, $10995);
                                        var $10996 = $10997;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $10999 = self.value;
                                                var $11000 = self.errors;
                                                var $11001 = Kind$Check$result$($10999, List$concat$($10995, $11000));
                                                var $10998 = $11001;
                                                break;
                                        };
                                        var $10996 = $10998;
                                        break;
                                };
                                var $10993 = $10996;
                                break;
                        };
                        var $10991 = $10993;
                        break;
                    case 'Kind.Term.ori':
                        var $11002 = self.expr;
                        var $11003 = Kind$Term$equal$extra_holes$filler$(_a$1, $11002);
                        var $10991 = $11003;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11004 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $10991 = $11004;
                        break;
                };
                var $10923 = $10991;
                break;
            case 'Kind.Term.all':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11006 = self.path;
                        var self = Kind$Term$equal$hole$($11006, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11008 = self.value;
                                var $11009 = self.errors;
                                var self = $11008;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11011 = Kind$Check$result$(Maybe$none, $11009);
                                        var $11010 = $11011;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11013 = self.value;
                                                var $11014 = self.errors;
                                                var $11015 = Kind$Check$result$($11013, List$concat$($11009, $11014));
                                                var $11012 = $11015;
                                                break;
                                        };
                                        var $11010 = $11012;
                                        break;
                                };
                                var $11007 = $11010;
                                break;
                        };
                        var $11005 = $11007;
                        break;
                    case 'Kind.Term.ori':
                        var $11016 = self.expr;
                        var $11017 = Kind$Term$equal$extra_holes$filler$(_a$1, $11016);
                        var $11005 = $11017;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11018 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11005 = $11018;
                        break;
                };
                var $10923 = $11005;
                break;
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11020 = self.path;
                        var self = Kind$Term$equal$hole$($11020, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11022 = self.value;
                                var $11023 = self.errors;
                                var self = $11022;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11025 = Kind$Check$result$(Maybe$none, $11023);
                                        var $11024 = $11025;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11027 = self.value;
                                                var $11028 = self.errors;
                                                var $11029 = Kind$Check$result$($11027, List$concat$($11023, $11028));
                                                var $11026 = $11029;
                                                break;
                                        };
                                        var $11024 = $11026;
                                        break;
                                };
                                var $11021 = $11024;
                                break;
                        };
                        var $11019 = $11021;
                        break;
                    case 'Kind.Term.ori':
                        var $11030 = self.expr;
                        var $11031 = Kind$Term$equal$extra_holes$filler$(_a$1, $11030);
                        var $11019 = $11031;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11032 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11019 = $11032;
                        break;
                };
                var $10923 = $11019;
                break;
            case 'Kind.Term.cse':
                var self = _b$2;
                switch (self._) {
                    case 'Kind.Term.hol':
                        var $11034 = self.path;
                        var self = Kind$Term$equal$hole$($11034, _a$1);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11036 = self.value;
                                var $11037 = self.errors;
                                var self = $11036;
                                switch (self._) {
                                    case 'Maybe.none':
                                        var $11039 = Kind$Check$result$(Maybe$none, $11037);
                                        var $11038 = $11039;
                                        break;
                                    case 'Maybe.some':
                                        var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11041 = self.value;
                                                var $11042 = self.errors;
                                                var $11043 = Kind$Check$result$($11041, List$concat$($11037, $11042));
                                                var $11040 = $11043;
                                                break;
                                        };
                                        var $11038 = $11040;
                                        break;
                                };
                                var $11035 = $11038;
                                break;
                        };
                        var $11033 = $11035;
                        break;
                    case 'Kind.Term.ori':
                        var $11044 = self.expr;
                        var $11045 = Kind$Term$equal$extra_holes$filler$(_a$1, $11044);
                        var $11033 = $11045;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $11046 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11033 = $11046;
                        break;
                };
                var $10923 = $11033;
                break;
        };
        return $10923;
    };
    const Kind$Term$equal$extra_holes$filler = x0 => x1 => Kind$Term$equal$extra_holes$filler$(x0, x1);

    function Kind$Term$equal$extra_holes$(_a$1, _b$2) {
        var self = Kind$Term$equal$extra_holes$funari$(_a$1, 0n);
        switch (self._) {
            case 'Maybe.some':
                var $11048 = self.value;
                var self = Kind$Term$equal$extra_holes$funari$(_b$2, 0n);
                switch (self._) {
                    case 'Maybe.some':
                        var $11050 = self.value;
                        var self = $11048;
                        switch (self._) {
                            case 'Pair.new':
                                var $11052 = self.fst;
                                var $11053 = self.snd;
                                var self = $11050;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11055 = self.fst;
                                        var $11056 = self.snd;
                                        var _same_fun$9 = ($11052 === $11055);
                                        var _same_ari$10 = ($11053 === $11056);
                                        var self = (_same_fun$9 && _same_ari$10);
                                        if (self) {
                                            var $11058 = Kind$Term$equal$extra_holes$filler$(_a$1, _b$2);
                                            var $11057 = $11058;
                                        } else {
                                            var $11059 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                            var $11057 = $11059;
                                        };
                                        var $11054 = $11057;
                                        break;
                                };
                                var $11051 = $11054;
                                break;
                        };
                        var $11049 = $11051;
                        break;
                    case 'Maybe.none':
                        var $11060 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                        var $11049 = $11060;
                        break;
                };
                var $11047 = $11049;
                break;
            case 'Maybe.none':
                var $11061 = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                var $11047 = $11061;
                break;
        };
        return $11047;
    };
    const Kind$Term$equal$extra_holes = x0 => x1 => Kind$Term$equal$extra_holes$(x0, x1);

    function BitsSet$set$(_bits$1, _set$2) {
        var $11062 = (bitsmap_set(_bits$1, Unit$new, _set$2, 'set'));
        return $11062;
    };
    const BitsSet$set = x0 => x1 => BitsSet$set$(x0, x1);

    function BitsSet$mut$set$(_bits$1, _set$2) {
        var $11063 = BitsSet$set$(_bits$1, _set$2);
        return $11063;
    };
    const BitsSet$mut$set = x0 => x1 => BitsSet$mut$set$(x0, x1);

    function Bool$eql$(_a$1, _b$2) {
        var self = _a$1;
        if (self) {
            var $11065 = _b$2;
            var $11064 = $11065;
        } else {
            var $11066 = (!_b$2);
            var $11064 = $11066;
        };
        return $11064;
    };
    const Bool$eql = x0 => x1 => Bool$eql$(x0, x1);

    function Kind$Term$equal$go$(_a$1, _b$2, _defs$3, _lv$4, _seen$5) {
        var _ah$6 = Kind$Term$serialize$(Kind$Term$reduce$(_a$1, Kind$Map$new), _lv$4, Bool$false);
        var _bh$7 = Kind$Term$serialize$(Kind$Term$reduce$(_b$2, Kind$Map$new), _lv$4, Bool$true);
        var self = (_bh$7 === _ah$6);
        if (self) {
            var $11068 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
            var $11067 = $11068;
        } else {
            var _a1$8 = Kind$Term$reduce$(_a$1, _defs$3);
            var _b1$9 = Kind$Term$reduce$(_b$2, _defs$3);
            var _ah$10 = Kind$Term$serialize$(_a1$8, _lv$4, Bool$false);
            var _bh$11 = Kind$Term$serialize$(_b1$9, _lv$4, Bool$true);
            var self = (_bh$11 === _ah$10);
            if (self) {
                var $11070 = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                var $11069 = $11070;
            } else {
                var _id$12 = (_bh$11 + _ah$10);
                var self = BitsSet$mut$has$(_id$12, _seen$5);
                if (self) {
                    var self = Kind$Term$equal$extra_holes$(_a$1, _b$2);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11073 = self.value;
                            var $11074 = self.errors;
                            var self = $11073;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11076 = Kind$Check$result$(Maybe$none, $11074);
                                    var $11075 = $11076;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Check$result$(Maybe$some$(Bool$true), List$nil);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11078 = self.value;
                                            var $11079 = self.errors;
                                            var $11080 = Kind$Check$result$($11078, List$concat$($11074, $11079));
                                            var $11077 = $11080;
                                            break;
                                    };
                                    var $11075 = $11077;
                                    break;
                            };
                            var $11072 = $11075;
                            break;
                    };
                    var $11071 = $11072;
                } else {
                    var self = _a1$8;
                    switch (self._) {
                        case 'Kind.Term.all':
                            var $11082 = self.eras;
                            var $11083 = self.self;
                            var $11084 = self.name;
                            var $11085 = self.xtyp;
                            var $11086 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.all':
                                    var $11088 = self.eras;
                                    var $11089 = self.self;
                                    var $11090 = self.name;
                                    var $11091 = self.xtyp;
                                    var $11092 = self.body;
                                    var _seen$23 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$24 = $11086(Kind$Term$var$($11083, _lv$4))(Kind$Term$var$($11084, Nat$succ$(_lv$4)));
                                    var _b1_body$25 = $11092(Kind$Term$var$($11089, _lv$4))(Kind$Term$var$($11090, Nat$succ$(_lv$4)));
                                    var _eq_self$26 = ($11083 === $11089);
                                    var _eq_eras$27 = Bool$eql$($11082, $11088);
                                    var self = (_eq_self$26 && _eq_eras$27);
                                    if (self) {
                                        var self = Kind$Term$equal$go$($11085, $11091, _defs$3, _lv$4, _seen$23);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11095 = self.value;
                                                var $11096 = self.errors;
                                                var self = $11095;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11098 = self.value;
                                                        var self = Kind$Term$equal$go$(_a1_body$24, _b1_body$25, _defs$3, Nat$succ$(Nat$succ$(_lv$4)), _seen$23);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11100 = self.value;
                                                                var $11101 = self.errors;
                                                                var self = $11100;
                                                                switch (self._) {
                                                                    case 'Maybe.some':
                                                                        var $11103 = self.value;
                                                                        var self = Kind$Check$result$(Maybe$some$(($11098 && $11103)), List$nil);
                                                                        switch (self._) {
                                                                            case 'Kind.Check.result':
                                                                                var $11105 = self.value;
                                                                                var $11106 = self.errors;
                                                                                var $11107 = Kind$Check$result$($11105, List$concat$($11101, $11106));
                                                                                var $11104 = $11107;
                                                                                break;
                                                                        };
                                                                        var $11102 = $11104;
                                                                        break;
                                                                    case 'Maybe.none':
                                                                        var $11108 = Kind$Check$result$(Maybe$none, $11101);
                                                                        var $11102 = $11108;
                                                                        break;
                                                                };
                                                                var self = $11102;
                                                                break;
                                                        };
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11109 = self.value;
                                                                var $11110 = self.errors;
                                                                var $11111 = Kind$Check$result$($11109, List$concat$($11096, $11110));
                                                                var $11099 = $11111;
                                                                break;
                                                        };
                                                        var $11097 = $11099;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11112 = Kind$Check$result$(Maybe$none, $11096);
                                                        var $11097 = $11112;
                                                        break;
                                                };
                                                var $11094 = $11097;
                                                break;
                                        };
                                        var $11093 = $11094;
                                    } else {
                                        var $11113 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                        var $11093 = $11113;
                                    };
                                    var $11087 = $11093;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11114 = self.path;
                                    var $11115 = Kind$Term$equal$hole$($11114, _a$1);
                                    var $11087 = $11115;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11116 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11087 = $11116;
                                    break;
                            };
                            var $11081 = $11087;
                            break;
                        case 'Kind.Term.lam':
                            var $11117 = self.name;
                            var $11118 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.lam':
                                    var $11120 = self.name;
                                    var $11121 = self.body;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$18 = $11118(Kind$Term$var$($11117, _lv$4));
                                    var _b1_body$19 = $11121(Kind$Term$var$($11120, _lv$4));
                                    var self = Kind$Term$equal$go$(_a1_body$18, _b1_body$19, _defs$3, Nat$succ$(_lv$4), _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11123 = self.value;
                                            var $11124 = self.errors;
                                            var self = $11123;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11126 = self.value;
                                                    var self = Kind$Check$result$(Maybe$some$($11126), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11128 = self.value;
                                                            var $11129 = self.errors;
                                                            var $11130 = Kind$Check$result$($11128, List$concat$($11124, $11129));
                                                            var $11127 = $11130;
                                                            break;
                                                    };
                                                    var $11125 = $11127;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11131 = Kind$Check$result$(Maybe$none, $11124);
                                                    var $11125 = $11131;
                                                    break;
                                            };
                                            var $11122 = $11125;
                                            break;
                                    };
                                    var $11119 = $11122;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11132 = self.path;
                                    var $11133 = Kind$Term$equal$hole$($11132, _a$1);
                                    var $11119 = $11133;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11134 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11119 = $11134;
                                    break;
                            };
                            var $11081 = $11119;
                            break;
                        case 'Kind.Term.app':
                            var $11135 = self.func;
                            var $11136 = self.argm;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.app':
                                    var $11138 = self.func;
                                    var $11139 = self.argm;
                                    var _seen$17 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var self = Kind$Term$equal$go$($11135, $11138, _defs$3, _lv$4, _seen$17);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11141 = self.value;
                                            var $11142 = self.errors;
                                            var self = $11141;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11144 = self.value;
                                                    var self = Kind$Term$equal$go$($11136, $11139, _defs$3, _lv$4, _seen$17);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11146 = self.value;
                                                            var $11147 = self.errors;
                                                            var self = $11146;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11149 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11144 && $11149)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11151 = self.value;
                                                                            var $11152 = self.errors;
                                                                            var $11153 = Kind$Check$result$($11151, List$concat$($11147, $11152));
                                                                            var $11150 = $11153;
                                                                            break;
                                                                    };
                                                                    var $11148 = $11150;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11154 = Kind$Check$result$(Maybe$none, $11147);
                                                                    var $11148 = $11154;
                                                                    break;
                                                            };
                                                            var self = $11148;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11155 = self.value;
                                                            var $11156 = self.errors;
                                                            var $11157 = Kind$Check$result$($11155, List$concat$($11142, $11156));
                                                            var $11145 = $11157;
                                                            break;
                                                    };
                                                    var $11143 = $11145;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11158 = Kind$Check$result$(Maybe$none, $11142);
                                                    var $11143 = $11158;
                                                    break;
                                            };
                                            var $11140 = $11143;
                                            break;
                                    };
                                    var $11137 = $11140;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11159 = self.path;
                                    var $11160 = Kind$Term$equal$hole$($11159, _a$1);
                                    var $11137 = $11160;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11161 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11137 = $11161;
                                    break;
                            };
                            var $11081 = $11137;
                            break;
                        case 'Kind.Term.let':
                            var $11162 = self.name;
                            var $11163 = self.expr;
                            var $11164 = self.body;
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.let':
                                    var $11166 = self.name;
                                    var $11167 = self.expr;
                                    var $11168 = self.body;
                                    var _seen$19 = BitsSet$mut$set$(_id$12, _seen$5);
                                    var _a1_body$20 = $11164(Kind$Term$var$($11162, _lv$4));
                                    var _b1_body$21 = $11168(Kind$Term$var$($11166, _lv$4));
                                    var self = Kind$Term$equal$go$($11163, $11167, _defs$3, _lv$4, _seen$19);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11170 = self.value;
                                            var $11171 = self.errors;
                                            var self = $11170;
                                            switch (self._) {
                                                case 'Maybe.some':
                                                    var $11173 = self.value;
                                                    var self = Kind$Term$equal$go$(_a1_body$20, _b1_body$21, _defs$3, Nat$succ$(_lv$4), _seen$19);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11175 = self.value;
                                                            var $11176 = self.errors;
                                                            var self = $11175;
                                                            switch (self._) {
                                                                case 'Maybe.some':
                                                                    var $11178 = self.value;
                                                                    var self = Kind$Check$result$(Maybe$some$(($11173 && $11178)), List$nil);
                                                                    switch (self._) {
                                                                        case 'Kind.Check.result':
                                                                            var $11180 = self.value;
                                                                            var $11181 = self.errors;
                                                                            var $11182 = Kind$Check$result$($11180, List$concat$($11176, $11181));
                                                                            var $11179 = $11182;
                                                                            break;
                                                                    };
                                                                    var $11177 = $11179;
                                                                    break;
                                                                case 'Maybe.none':
                                                                    var $11183 = Kind$Check$result$(Maybe$none, $11176);
                                                                    var $11177 = $11183;
                                                                    break;
                                                            };
                                                            var self = $11177;
                                                            break;
                                                    };
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11184 = self.value;
                                                            var $11185 = self.errors;
                                                            var $11186 = Kind$Check$result$($11184, List$concat$($11171, $11185));
                                                            var $11174 = $11186;
                                                            break;
                                                    };
                                                    var $11172 = $11174;
                                                    break;
                                                case 'Maybe.none':
                                                    var $11187 = Kind$Check$result$(Maybe$none, $11171);
                                                    var $11172 = $11187;
                                                    break;
                                            };
                                            var $11169 = $11172;
                                            break;
                                    };
                                    var $11165 = $11169;
                                    break;
                                case 'Kind.Term.hol':
                                    var $11188 = self.path;
                                    var $11189 = Kind$Term$equal$hole$($11188, _a$1);
                                    var $11165 = $11189;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11190 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11165 = $11190;
                                    break;
                            };
                            var $11081 = $11165;
                            break;
                        case 'Kind.Term.hol':
                            var $11191 = self.path;
                            var $11192 = Kind$Term$equal$hole$($11191, _b$2);
                            var $11081 = $11192;
                            break;
                        case 'Kind.Term.var':
                        case 'Kind.Term.get':
                        case 'Kind.Term.ori':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11194 = self.path;
                                    var $11195 = Kind$Term$equal$hole$($11194, _a$1);
                                    var $11193 = $11195;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11196 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11193 = $11196;
                                    break;
                            };
                            var $11081 = $11193;
                            break;
                        case 'Kind.Term.ref':
                        case 'Kind.Term.nat':
                        case 'Kind.Term.chr':
                        case 'Kind.Term.str':
                        case 'Kind.Term.new':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11198 = self.path;
                                    var $11199 = Kind$Term$equal$hole$($11198, _a$1);
                                    var $11197 = $11199;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11200 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11197 = $11200;
                                    break;
                            };
                            var $11081 = $11197;
                            break;
                        case 'Kind.Term.typ':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11202 = self.path;
                                    var $11203 = Kind$Term$equal$hole$($11202, _a$1);
                                    var $11201 = $11203;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11204 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11201 = $11204;
                                    break;
                            };
                            var $11081 = $11201;
                            break;
                        case 'Kind.Term.def':
                        case 'Kind.Term.ann':
                        case 'Kind.Term.gol':
                        case 'Kind.Term.num':
                        case 'Kind.Term.set':
                        case 'Kind.Term.ope':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11206 = self.path;
                                    var $11207 = Kind$Term$equal$hole$($11206, _a$1);
                                    var $11205 = $11207;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11208 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11205 = $11208;
                                    break;
                            };
                            var $11081 = $11205;
                            break;
                        case 'Kind.Term.cse':
                            var self = _b1$9;
                            switch (self._) {
                                case 'Kind.Term.hol':
                                    var $11210 = self.path;
                                    var $11211 = Kind$Term$equal$hole$($11210, _a$1);
                                    var $11209 = $11211;
                                    break;
                                case 'Kind.Term.var':
                                case 'Kind.Term.ref':
                                case 'Kind.Term.typ':
                                case 'Kind.Term.all':
                                case 'Kind.Term.lam':
                                case 'Kind.Term.app':
                                case 'Kind.Term.let':
                                case 'Kind.Term.def':
                                case 'Kind.Term.ann':
                                case 'Kind.Term.gol':
                                case 'Kind.Term.nat':
                                case 'Kind.Term.chr':
                                case 'Kind.Term.str':
                                case 'Kind.Term.num':
                                case 'Kind.Term.cse':
                                case 'Kind.Term.new':
                                case 'Kind.Term.get':
                                case 'Kind.Term.set':
                                case 'Kind.Term.ope':
                                case 'Kind.Term.ori':
                                    var $11212 = Kind$Check$result$(Maybe$some$(Bool$false), List$nil);
                                    var $11209 = $11212;
                                    break;
                            };
                            var $11081 = $11209;
                            break;
                    };
                    var $11071 = $11081;
                };
                var $11069 = $11071;
            };
            var $11067 = $11069;
        };
        return $11067;
    };
    const Kind$Term$equal$go = x0 => x1 => x2 => x3 => x4 => Kind$Term$equal$go$(x0, x1, x2, x3, x4);
    const BitsSet$new = BitsMap$new;

    function BitsSet$mut$new$(_a$1) {
        var $11213 = BitsSet$new;
        return $11213;
    };
    const BitsSet$mut$new = x0 => BitsSet$mut$new$(x0);

    function Kind$Term$check$(_term$1, _type$2, _defs$3, _ctx$4, _path$5, _orig$6) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11215 = self.name;
                var $11216 = self.indx;
                var self = List$at_last$($11216, _ctx$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $11218 = self.value;
                        var $11219 = Kind$Check$result$(Maybe$some$((() => {
                            var self = $11218;
                            switch (self._) {
                                case 'Pair.new':
                                    var $11220 = self.snd;
                                    var $11221 = $11220;
                                    return $11221;
                            };
                        })()), List$nil);
                        var $11217 = $11219;
                        break;
                    case 'Maybe.none':
                        var $11222 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11215), List$nil));
                        var $11217 = $11222;
                        break;
                };
                var self = $11217;
                break;
            case 'Kind.Term.ref':
                var $11223 = self.name;
                var self = Kind$Map$get$($11223, _defs$3);
                switch (self._) {
                    case 'Maybe.some':
                        var $11225 = self.value;
                        var self = $11225;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $11227 = self.name;
                                var $11228 = self.term;
                                var $11229 = self.type;
                                var $11230 = self.stat;
                                var _ref_name$18 = $11227;
                                var _ref_type$19 = $11229;
                                var _ref_term$20 = $11228;
                                var _ref_stat$21 = $11230;
                                var self = _ref_stat$21;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                        var $11232 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$waiting$(_ref_name$18), List$nil));
                                        var $11231 = $11232;
                                        break;
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $11233 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$nil);
                                        var $11231 = $11233;
                                        break;
                                    case 'Kind.Status.fail':
                                        var $11234 = Kind$Check$result$(Maybe$some$(_ref_type$19), List$cons$(Kind$Error$indirect$(_ref_name$18), List$nil));
                                        var $11231 = $11234;
                                        break;
                                };
                                var $11226 = $11231;
                                break;
                        };
                        var $11224 = $11226;
                        break;
                    case 'Maybe.none':
                        var $11235 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$undefined_reference$(_orig$6, $11223), List$nil));
                        var $11224 = $11235;
                        break;
                };
                var self = $11224;
                break;
            case 'Kind.Term.all':
                var $11236 = self.self;
                var $11237 = self.name;
                var $11238 = self.xtyp;
                var $11239 = self.body;
                var _ctx_size$12 = (list_length(_ctx$4));
                var _self_var$13 = Kind$Term$var$($11236, _ctx_size$12);
                var _body_var$14 = Kind$Term$var$($11237, Nat$succ$(_ctx_size$12));
                var _body_ctx$15 = List$cons$(Pair$new$($11237, $11238), List$cons$(Pair$new$($11236, _term$1), _ctx$4));
                var self = Kind$Term$check$($11238, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11241 = self.value;
                        var $11242 = self.errors;
                        var self = $11241;
                        switch (self._) {
                            case 'Maybe.none':
                                var $11244 = Kind$Check$result$(Maybe$none, $11242);
                                var $11243 = $11244;
                                break;
                            case 'Maybe.some':
                                var self = Kind$Term$check$($11239(_self_var$13)(_body_var$14), Maybe$some$(Kind$Term$typ), _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11246 = self.value;
                                        var $11247 = self.errors;
                                        var self = $11246;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11249 = Kind$Check$result$(Maybe$none, $11247);
                                                var $11248 = $11249;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11251 = self.value;
                                                        var $11252 = self.errors;
                                                        var $11253 = Kind$Check$result$($11251, List$concat$($11247, $11252));
                                                        var $11250 = $11253;
                                                        break;
                                                };
                                                var $11248 = $11250;
                                                break;
                                        };
                                        var self = $11248;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11254 = self.value;
                                        var $11255 = self.errors;
                                        var $11256 = Kind$Check$result$($11254, List$concat$($11242, $11255));
                                        var $11245 = $11256;
                                        break;
                                };
                                var $11243 = $11245;
                                break;
                        };
                        var $11240 = $11243;
                        break;
                };
                var self = $11240;
                break;
            case 'Kind.Term.lam':
                var $11257 = self.name;
                var $11258 = self.body;
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11260 = self.value;
                        var _typv$10 = Kind$Term$reduce$($11260, _defs$3);
                        var self = _typv$10;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11262 = self.xtyp;
                                var $11263 = self.body;
                                var _ctx_size$16 = (list_length(_ctx$4));
                                var _self_var$17 = _term$1;
                                var _body_var$18 = Kind$Term$var$($11257, _ctx_size$16);
                                var _body_typ$19 = $11263(_self_var$17)(_body_var$18);
                                var _body_ctx$20 = List$cons$(Pair$new$($11257, $11262), _ctx$4);
                                var self = Kind$Term$check$($11258(_body_var$18), Maybe$some$(_body_typ$19), _defs$3, _body_ctx$20, Kind$MPath$o$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11265 = self.value;
                                        var $11266 = self.errors;
                                        var self = $11265;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11268 = Kind$Check$result$(Maybe$none, $11266);
                                                var $11267 = $11268;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Check$result$(Maybe$some$($11260), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11270 = self.value;
                                                        var $11271 = self.errors;
                                                        var $11272 = Kind$Check$result$($11270, List$concat$($11266, $11271));
                                                        var $11269 = $11272;
                                                        break;
                                                };
                                                var $11267 = $11269;
                                                break;
                                        };
                                        var $11264 = $11267;
                                        break;
                                };
                                var $11261 = $11264;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.get':
                            case 'Kind.Term.ori':
                                var _expected$13 = Either$left$("function");
                                var _detected$14 = Either$right$($11260);
                                var $11273 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$13, _detected$14, _ctx$4), List$nil));
                                var $11261 = $11273;
                                break;
                            case 'Kind.Term.ref':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.new':
                                var _expected$12 = Either$left$("function");
                                var _detected$13 = Either$right$($11260);
                                var $11274 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$12, _detected$13, _ctx$4), List$nil));
                                var $11261 = $11274;
                                break;
                            case 'Kind.Term.typ':
                                var _expected$11 = Either$left$("function");
                                var _detected$12 = Either$right$($11260);
                                var $11275 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$11, _detected$12, _ctx$4), List$nil));
                                var $11261 = $11275;
                                break;
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.num':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                                var _expected$14 = Either$left$("function");
                                var _detected$15 = Either$right$($11260);
                                var $11276 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$14, _detected$15, _ctx$4), List$nil));
                                var $11261 = $11276;
                                break;
                            case 'Kind.Term.cse':
                                var _expected$17 = Either$left$("function");
                                var _detected$18 = Either$right$($11260);
                                var $11277 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, _expected$17, _detected$18, _ctx$4), List$nil));
                                var $11261 = $11277;
                                break;
                        };
                        var $11259 = $11261;
                        break;
                    case 'Maybe.none':
                        var _lam_type$9 = Kind$Term$hol$(Bits$e);
                        var _lam_term$10 = Kind$Term$ann$(Bool$false, _term$1, _lam_type$9);
                        var $11278 = Kind$Term$check$patch$(_lam_term$10, _type$2, _path$5);
                        var $11259 = $11278;
                        break;
                };
                var self = $11259;
                break;
            case 'Kind.Term.app':
                var $11279 = self.func;
                var $11280 = self.argm;
                var self = Kind$Term$check$($11279, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11282 = self.value;
                        var $11283 = self.errors;
                        var self = $11282;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11285 = self.value;
                                var _func_typ$12 = Kind$Term$reduce$($11285, _defs$3);
                                var self = _func_typ$12;
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $11287 = self.xtyp;
                                        var $11288 = self.body;
                                        var self = Kind$Term$check$($11280, Maybe$some$($11287), _defs$3, _ctx$4, Kind$MPath$i$(_path$5), _orig$6);
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11290 = self.value;
                                                var $11291 = self.errors;
                                                var self = $11290;
                                                switch (self._) {
                                                    case 'Maybe.none':
                                                        var $11293 = Kind$Check$result$(Maybe$none, $11291);
                                                        var $11292 = $11293;
                                                        break;
                                                    case 'Maybe.some':
                                                        var self = Kind$Check$result$(Maybe$some$($11288($11279)($11280)), List$nil);
                                                        switch (self._) {
                                                            case 'Kind.Check.result':
                                                                var $11295 = self.value;
                                                                var $11296 = self.errors;
                                                                var $11297 = Kind$Check$result$($11295, List$concat$($11291, $11296));
                                                                var $11294 = $11297;
                                                                break;
                                                        };
                                                        var $11292 = $11294;
                                                        break;
                                                };
                                                var $11289 = $11292;
                                                break;
                                        };
                                        var self = $11289;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.ori':
                                        var _expected$15 = Either$left$("function");
                                        var _detected$16 = Either$right$(_func_typ$12);
                                        var self = $11279;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11299 = self.orig;
                                                var $11300 = Maybe$some$($11299);
                                                var _orig$17 = $11300;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11301 = _orig$6;
                                                var _orig$17 = $11301;
                                                break;
                                        };
                                        var $11298 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$17, _expected$15, _detected$16, _ctx$4), List$nil));
                                        var self = $11298;
                                        break;
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.new':
                                        var _expected$14 = Either$left$("function");
                                        var _detected$15 = Either$right$(_func_typ$12);
                                        var self = $11279;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11303 = self.orig;
                                                var $11304 = Maybe$some$($11303);
                                                var _orig$16 = $11304;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11305 = _orig$6;
                                                var _orig$16 = $11305;
                                                break;
                                        };
                                        var $11302 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$16, _expected$14, _detected$15, _ctx$4), List$nil));
                                        var self = $11302;
                                        break;
                                    case 'Kind.Term.typ':
                                        var _expected$13 = Either$left$("function");
                                        var _detected$14 = Either$right$(_func_typ$12);
                                        var self = $11279;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11307 = self.orig;
                                                var $11308 = Maybe$some$($11307);
                                                var _orig$15 = $11308;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11309 = _orig$6;
                                                var _orig$15 = $11309;
                                                break;
                                        };
                                        var $11306 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$15, _expected$13, _detected$14, _ctx$4), List$nil));
                                        var self = $11306;
                                        break;
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                        var _expected$16 = Either$left$("function");
                                        var _detected$17 = Either$right$(_func_typ$12);
                                        var self = $11279;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11311 = self.orig;
                                                var $11312 = Maybe$some$($11311);
                                                var _orig$18 = $11312;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11313 = _orig$6;
                                                var _orig$18 = $11313;
                                                break;
                                        };
                                        var $11310 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$18, _expected$16, _detected$17, _ctx$4), List$nil));
                                        var self = $11310;
                                        break;
                                    case 'Kind.Term.cse':
                                        var _expected$19 = Either$left$("function");
                                        var _detected$20 = Either$right$(_func_typ$12);
                                        var self = $11279;
                                        switch (self._) {
                                            case 'Kind.Term.ori':
                                                var $11315 = self.orig;
                                                var $11316 = Maybe$some$($11315);
                                                var _orig$21 = $11316;
                                                break;
                                            case 'Kind.Term.var':
                                            case 'Kind.Term.ref':
                                            case 'Kind.Term.typ':
                                            case 'Kind.Term.all':
                                            case 'Kind.Term.lam':
                                            case 'Kind.Term.app':
                                            case 'Kind.Term.let':
                                            case 'Kind.Term.def':
                                            case 'Kind.Term.ann':
                                            case 'Kind.Term.gol':
                                            case 'Kind.Term.hol':
                                            case 'Kind.Term.nat':
                                            case 'Kind.Term.chr':
                                            case 'Kind.Term.str':
                                            case 'Kind.Term.num':
                                            case 'Kind.Term.cse':
                                            case 'Kind.Term.new':
                                            case 'Kind.Term.get':
                                            case 'Kind.Term.set':
                                            case 'Kind.Term.ope':
                                                var $11317 = _orig$6;
                                                var _orig$21 = $11317;
                                                break;
                                        };
                                        var $11314 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$21, _expected$19, _detected$20, _ctx$4), List$nil));
                                        var self = $11314;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11318 = self.value;
                                        var $11319 = self.errors;
                                        var $11320 = Kind$Check$result$($11318, List$concat$($11283, $11319));
                                        var $11286 = $11320;
                                        break;
                                };
                                var $11284 = $11286;
                                break;
                            case 'Maybe.none':
                                var $11321 = Kind$Check$result$(Maybe$none, $11283);
                                var $11284 = $11321;
                                break;
                        };
                        var $11281 = $11284;
                        break;
                };
                var self = $11281;
                break;
            case 'Kind.Term.let':
                var $11322 = self.name;
                var $11323 = self.expr;
                var $11324 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11323, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11326 = self.value;
                        var $11327 = self.errors;
                        var self = $11326;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11329 = self.value;
                                var _body_val$14 = $11324(Kind$Term$var$($11322, _ctx_size$10));
                                var _body_ctx$15 = List$cons$(Pair$new$($11322, $11329), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11331 = self.value;
                                        var $11332 = self.errors;
                                        var self = $11331;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11334 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11334), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11336 = self.value;
                                                        var $11337 = self.errors;
                                                        var $11338 = Kind$Check$result$($11336, List$concat$($11332, $11337));
                                                        var $11335 = $11338;
                                                        break;
                                                };
                                                var $11333 = $11335;
                                                break;
                                            case 'Maybe.none':
                                                var $11339 = Kind$Check$result$(Maybe$none, $11332);
                                                var $11333 = $11339;
                                                break;
                                        };
                                        var self = $11333;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11340 = self.value;
                                        var $11341 = self.errors;
                                        var $11342 = Kind$Check$result$($11340, List$concat$($11327, $11341));
                                        var $11330 = $11342;
                                        break;
                                };
                                var $11328 = $11330;
                                break;
                            case 'Maybe.none':
                                var $11343 = Kind$Check$result$(Maybe$none, $11327);
                                var $11328 = $11343;
                                break;
                        };
                        var $11325 = $11328;
                        break;
                };
                var self = $11325;
                break;
            case 'Kind.Term.def':
                var $11344 = self.name;
                var $11345 = self.expr;
                var $11346 = self.body;
                var _ctx_size$10 = (list_length(_ctx$4));
                var self = Kind$Term$check$($11345, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11348 = self.value;
                        var $11349 = self.errors;
                        var self = $11348;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11351 = self.value;
                                var _body_val$14 = $11346(Kind$Term$ann$(Bool$true, $11345, $11351));
                                var _body_ctx$15 = List$cons$(Pair$new$($11344, $11351), _ctx$4);
                                var self = Kind$Term$check$(_body_val$14, _type$2, _defs$3, _body_ctx$15, Kind$MPath$i$(_path$5), _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11353 = self.value;
                                        var $11354 = self.errors;
                                        var self = $11353;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11356 = self.value;
                                                var self = Kind$Check$result$(Maybe$some$($11356), List$nil);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11358 = self.value;
                                                        var $11359 = self.errors;
                                                        var $11360 = Kind$Check$result$($11358, List$concat$($11354, $11359));
                                                        var $11357 = $11360;
                                                        break;
                                                };
                                                var $11355 = $11357;
                                                break;
                                            case 'Maybe.none':
                                                var $11361 = Kind$Check$result$(Maybe$none, $11354);
                                                var $11355 = $11361;
                                                break;
                                        };
                                        var self = $11355;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11362 = self.value;
                                        var $11363 = self.errors;
                                        var $11364 = Kind$Check$result$($11362, List$concat$($11349, $11363));
                                        var $11352 = $11364;
                                        break;
                                };
                                var $11350 = $11352;
                                break;
                            case 'Maybe.none':
                                var $11365 = Kind$Check$result$(Maybe$none, $11349);
                                var $11350 = $11365;
                                break;
                        };
                        var $11347 = $11350;
                        break;
                };
                var self = $11347;
                break;
            case 'Kind.Term.ann':
                var $11366 = self.done;
                var $11367 = self.term;
                var $11368 = self.type;
                var self = $11366;
                if (self) {
                    var $11370 = Kind$Check$result$(Maybe$some$($11368), List$nil);
                    var $11369 = $11370;
                } else {
                    var self = Kind$Term$check$($11367, Maybe$some$($11368), _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                    switch (self._) {
                        case 'Kind.Check.result':
                            var $11372 = self.value;
                            var $11373 = self.errors;
                            var self = $11372;
                            switch (self._) {
                                case 'Maybe.none':
                                    var $11375 = Kind$Check$result$(Maybe$none, $11373);
                                    var $11374 = $11375;
                                    break;
                                case 'Maybe.some':
                                    var self = Kind$Term$check$($11368, Maybe$some$(Kind$Term$typ), _defs$3, _ctx$4, Kind$MPath$i$(_path$5), _orig$6);
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11377 = self.value;
                                            var $11378 = self.errors;
                                            var self = $11377;
                                            switch (self._) {
                                                case 'Maybe.none':
                                                    var $11380 = Kind$Check$result$(Maybe$none, $11378);
                                                    var $11379 = $11380;
                                                    break;
                                                case 'Maybe.some':
                                                    var self = Kind$Check$result$(Maybe$some$($11368), List$nil);
                                                    switch (self._) {
                                                        case 'Kind.Check.result':
                                                            var $11382 = self.value;
                                                            var $11383 = self.errors;
                                                            var $11384 = Kind$Check$result$($11382, List$concat$($11378, $11383));
                                                            var $11381 = $11384;
                                                            break;
                                                    };
                                                    var $11379 = $11381;
                                                    break;
                                            };
                                            var self = $11379;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Check.result':
                                            var $11385 = self.value;
                                            var $11386 = self.errors;
                                            var $11387 = Kind$Check$result$($11385, List$concat$($11373, $11386));
                                            var $11376 = $11387;
                                            break;
                                    };
                                    var $11374 = $11376;
                                    break;
                            };
                            var $11371 = $11374;
                            break;
                    };
                    var $11369 = $11371;
                };
                var self = $11369;
                break;
            case 'Kind.Term.gol':
                var $11388 = self.name;
                var $11389 = self.dref;
                var $11390 = self.verb;
                var $11391 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$show_goal$($11388, $11389, $11390, _type$2, _ctx$4), List$nil));
                var self = $11391;
                break;
            case 'Kind.Term.num':
                var $11392 = self.sign;
                var $11393 = self.numb;
                var $11394 = self.frac;
                var _dsug$10 = Kind$Term$check$expand$num$($11392, $11393, $11394, _type$2, _defs$3);
                var $11395 = Kind$Term$check$patch$(_dsug$10, _type$2, _path$5);
                var self = $11395;
                break;
            case 'Kind.Term.cse':
                var $11396 = self.expr;
                var $11397 = self.name;
                var $11398 = self.with;
                var $11399 = self.cses;
                var $11400 = self.moti;
                var _expr$13 = $11396;
                var self = Kind$Term$check$(_expr$13, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11402 = self.value;
                        var $11403 = self.errors;
                        var self = $11402;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11405 = self.value;
                                var self = Kind$Term$check$infer_types_of_with$($11398, _defs$3, _ctx$4, _path$5, _orig$6);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11407 = self.value;
                                        var $11408 = self.errors;
                                        var self = $11407;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11410 = self.value;
                                                var _dsug$20 = Kind$Term$check$expand$cse$($11396, $11397, $11410, $11399, $11400, $11405, _type$2, _defs$3, _ctx$4);
                                                var self = _dsug$20;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11412 = self.value;
                                                        var $11413 = Kind$Term$check$patch$($11412, _type$2, _path$5);
                                                        var self = $11413;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11414 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                        var self = $11414;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11415 = self.value;
                                                        var $11416 = self.errors;
                                                        var $11417 = Kind$Check$result$($11415, List$concat$($11408, $11416));
                                                        var $11411 = $11417;
                                                        break;
                                                };
                                                var $11409 = $11411;
                                                break;
                                            case 'Maybe.none':
                                                var $11418 = Kind$Check$result$(Maybe$none, $11408);
                                                var $11409 = $11418;
                                                break;
                                        };
                                        var self = $11409;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11419 = self.value;
                                        var $11420 = self.errors;
                                        var $11421 = Kind$Check$result$($11419, List$concat$($11403, $11420));
                                        var $11406 = $11421;
                                        break;
                                };
                                var $11404 = $11406;
                                break;
                            case 'Maybe.none':
                                var $11422 = Kind$Check$result$(Maybe$none, $11403);
                                var $11404 = $11422;
                                break;
                        };
                        var $11401 = $11404;
                        break;
                };
                var self = $11401;
                break;
            case 'Kind.Term.new':
                var $11423 = self.args;
                var _dsug$8 = Kind$Term$check$expand$new$($11423, _type$2, _defs$3);
                var self = _dsug$8;
                switch (self._) {
                    case 'Maybe.some':
                        var $11425 = self.value;
                        var $11426 = Kind$Term$check$patch$($11425, _type$2, _path$5);
                        var $11424 = $11426;
                        break;
                    case 'Maybe.none':
                        var $11427 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                        var $11424 = $11427;
                        break;
                };
                var self = $11424;
                break;
            case 'Kind.Term.get':
                var $11428 = self.expr;
                var $11429 = self.fkey;
                var _expr$9 = $11428;
                var self = Kind$Term$check$(_expr$9, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11431 = self.value;
                        var $11432 = self.errors;
                        var self = $11431;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11434 = self.value;
                                var _dsug$13 = Kind$Term$check$expand$get$($11428, $11429, $11434, _defs$3);
                                var self = _dsug$13;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11436 = self.value;
                                        var $11437 = Kind$Term$check$patch$($11436, _type$2, _path$5);
                                        var self = $11437;
                                        break;
                                    case 'Maybe.none':
                                        var $11438 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11438;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11439 = self.value;
                                        var $11440 = self.errors;
                                        var $11441 = Kind$Check$result$($11439, List$concat$($11432, $11440));
                                        var $11435 = $11441;
                                        break;
                                };
                                var $11433 = $11435;
                                break;
                            case 'Maybe.none':
                                var $11442 = Kind$Check$result$(Maybe$none, $11432);
                                var $11433 = $11442;
                                break;
                        };
                        var $11430 = $11433;
                        break;
                };
                var self = $11430;
                break;
            case 'Kind.Term.set':
                var $11443 = self.expr;
                var $11444 = self.fkey;
                var $11445 = self.fval;
                var _expr$10 = $11443;
                var self = Kind$Term$check$(_expr$10, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                switch (self._) {
                    case 'Kind.Check.result':
                        var $11447 = self.value;
                        var $11448 = self.errors;
                        var self = $11447;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11450 = self.value;
                                var _dsug$14 = Kind$Term$check$expand$set$($11443, $11444, $11445, $11450, _defs$3);
                                var self = _dsug$14;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11452 = self.value;
                                        var $11453 = Kind$Term$check$patch$($11452, _type$2, _path$5);
                                        var self = $11453;
                                        break;
                                    case 'Maybe.none':
                                        var $11454 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                        var self = $11454;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11455 = self.value;
                                        var $11456 = self.errors;
                                        var $11457 = Kind$Check$result$($11455, List$concat$($11448, $11456));
                                        var $11451 = $11457;
                                        break;
                                };
                                var $11449 = $11451;
                                break;
                            case 'Maybe.none':
                                var $11458 = Kind$Check$result$(Maybe$none, $11448);
                                var $11449 = $11458;
                                break;
                        };
                        var $11446 = $11449;
                        break;
                };
                var self = $11446;
                break;
            case 'Kind.Term.ope':
                var $11459 = self.name;
                var $11460 = self.arg0;
                var $11461 = self.arg1;
                var _otyp$10 = Maybe$default$(_type$2, Kind$Term$hol$(Bits$e));
                var _dsug$11 = Kind$Term$check$expand$ope$(Bool$true, $11459, $11460, $11461, _otyp$10, _defs$3);
                var self = _dsug$11;
                switch (self._) {
                    case 'Maybe.some':
                        var $11463 = self.value;
                        var $11464 = Kind$Term$check$patch$($11463, _type$2, _path$5);
                        var $11462 = $11464;
                        break;
                    case 'Maybe.none':
                        var self = Kind$Term$check$($11460, Maybe$none, _defs$3, _ctx$4, Kind$MPath$o$(_path$5), _orig$6);
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11466 = self.value;
                                var $11467 = self.errors;
                                var self = $11466;
                                switch (self._) {
                                    case 'Maybe.some':
                                        var $11469 = self.value;
                                        var _dsug$15 = Kind$Term$check$expand$ope$(Bool$false, $11459, $11460, $11461, $11469, _defs$3);
                                        var self = _dsug$15;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11471 = self.value;
                                                var $11472 = Kind$Term$check$patch$($11471, _type$2, _path$5);
                                                var self = $11472;
                                                break;
                                            case 'Maybe.none':
                                                var $11473 = Kind$Term$check$cant_infer$(_term$1, _type$2, _ctx$4, _orig$6);
                                                var self = $11473;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Check.result':
                                                var $11474 = self.value;
                                                var $11475 = self.errors;
                                                var $11476 = Kind$Check$result$($11474, List$concat$($11467, $11475));
                                                var $11470 = $11476;
                                                break;
                                        };
                                        var $11468 = $11470;
                                        break;
                                    case 'Maybe.none':
                                        var $11477 = Kind$Check$result$(Maybe$none, $11467);
                                        var $11468 = $11477;
                                        break;
                                };
                                var $11465 = $11468;
                                break;
                        };
                        var $11462 = $11465;
                        break;
                };
                var self = $11462;
                break;
            case 'Kind.Term.ori':
                var $11478 = self.orig;
                var $11479 = self.expr;
                var $11480 = Kind$Term$check$($11479, _type$2, _defs$3, _ctx$4, _path$5, Maybe$some$($11478));
                var self = $11480;
                break;
            case 'Kind.Term.typ':
                var $11481 = Kind$Check$result$(Maybe$some$(Kind$Term$typ), List$nil);
                var self = $11481;
                break;
            case 'Kind.Term.hol':
                var $11482 = Kind$Check$result$(_type$2, List$nil);
                var self = $11482;
                break;
            case 'Kind.Term.nat':
                var self = _type$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $11484 = self.value;
                        var _tnam$9 = Kind$Term$check$get_name_of_self_type$($11484, _defs$3);
                        var self = _tnam$9;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11486 = self.value;
                                var self = ($11486 === "Nat");
                                if (self) {
                                    var $11488 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                    var $11487 = $11488;
                                } else {
                                    var _cast$11 = Kind$Term$ref$(($11486 + ".from_nat"));
                                    var _cast$12 = Kind$Term$app$(_cast$11, _term$1);
                                    var $11489 = Kind$Term$check$patch$(_cast$12, _type$2, _path$5);
                                    var $11487 = $11489;
                                };
                                var $11485 = $11487;
                                break;
                            case 'Maybe.none':
                                var $11490 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                                var $11485 = $11490;
                                break;
                        };
                        var $11483 = $11485;
                        break;
                    case 'Maybe.none':
                        var $11491 = Kind$Term$check$direct$(Kind$Term$ref$("Nat"), _defs$3);
                        var $11483 = $11491;
                        break;
                };
                var self = $11483;
                break;
            case 'Kind.Term.chr':
                var $11492 = Kind$Term$check$direct$(Kind$Term$ref$("Char"), _defs$3);
                var self = $11492;
                break;
            case 'Kind.Term.str':
                var $11493 = Kind$Term$check$direct$(Kind$Term$ref$("String"), _defs$3);
                var self = $11493;
                break;
        };
        switch (self._) {
            case 'Kind.Check.result':
                var $11494 = self.value;
                var $11495 = self.errors;
                var self = $11494;
                switch (self._) {
                    case 'Maybe.some':
                        var $11497 = self.value;
                        var self = _type$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11499 = self.value;
                                var self = Kind$Term$equal$go$($11499, $11497, _defs$3, (list_length(_ctx$4)), BitsSet$mut$new$(Unit$new));
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11501 = self.value;
                                        var $11502 = self.errors;
                                        var self = $11501;
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11504 = self.value;
                                                var self = $11504;
                                                if (self) {
                                                    var $11506 = Kind$Check$result$(Maybe$some$($11499), List$nil);
                                                    var self = $11506;
                                                } else {
                                                    var $11507 = Kind$Check$result$(_type$2, List$cons$(Kind$Error$type_mismatch$(_orig$6, Either$right$($11499), Either$right$($11497), _ctx$4), List$nil));
                                                    var self = $11507;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11508 = self.value;
                                                        var $11509 = self.errors;
                                                        var $11510 = Kind$Check$result$($11508, List$concat$($11502, $11509));
                                                        var $11505 = $11510;
                                                        break;
                                                };
                                                var $11503 = $11505;
                                                break;
                                            case 'Maybe.none':
                                                var $11511 = Kind$Check$result$(Maybe$none, $11502);
                                                var $11503 = $11511;
                                                break;
                                        };
                                        var $11500 = $11503;
                                        break;
                                };
                                var self = $11500;
                                break;
                            case 'Maybe.none':
                                var $11512 = Kind$Check$result$(Maybe$some$($11497), List$nil);
                                var self = $11512;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Check.result':
                                var $11513 = self.value;
                                var $11514 = self.errors;
                                var $11515 = Kind$Check$result$($11513, List$concat$($11495, $11514));
                                var $11498 = $11515;
                                break;
                        };
                        var $11496 = $11498;
                        break;
                    case 'Maybe.none':
                        var $11516 = Kind$Check$result$(Maybe$none, $11495);
                        var $11496 = $11516;
                        break;
                };
                var $11214 = $11496;
                break;
        };
        return $11214;
    };
    const Kind$Term$check = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Term$check$(x0, x1, x2, x3, x4, x5);

    function Kind$Term$patch_at$(_path$1, _term$2, _fn$3) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Term.all':
                var $11518 = self.eras;
                var $11519 = self.self;
                var $11520 = self.name;
                var $11521 = self.xtyp;
                var $11522 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11524 = self.slice(0, -1);
                        var $11525 = Kind$Term$all$($11518, $11519, $11520, Kind$Term$patch_at$($11524, $11521, _fn$3), $11522);
                        var $11523 = $11525;
                        break;
                    case 'i':
                        var $11526 = self.slice(0, -1);
                        var $11527 = Kind$Term$all$($11518, $11519, $11520, $11521, (_s$10 => _x$11 => {
                            var $11528 = Kind$Term$patch_at$($11526, $11522(_s$10)(_x$11), _fn$3);
                            return $11528;
                        }));
                        var $11523 = $11527;
                        break;
                    case 'e':
                        var $11529 = _fn$3(_term$2);
                        var $11523 = $11529;
                        break;
                };
                var $11517 = $11523;
                break;
            case 'Kind.Term.lam':
                var $11530 = self.name;
                var $11531 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11533 = _fn$3(_term$2);
                        var $11532 = $11533;
                        break;
                    case 'o':
                    case 'i':
                        var $11534 = Kind$Term$lam$($11530, (_x$7 => {
                            var $11535 = Kind$Term$patch_at$(Bits$tail$(_path$1), $11531(_x$7), _fn$3);
                            return $11535;
                        }));
                        var $11532 = $11534;
                        break;
                };
                var $11517 = $11532;
                break;
            case 'Kind.Term.app':
                var $11536 = self.func;
                var $11537 = self.argm;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11539 = self.slice(0, -1);
                        var $11540 = Kind$Term$app$(Kind$Term$patch_at$($11539, $11536, _fn$3), $11537);
                        var $11538 = $11540;
                        break;
                    case 'i':
                        var $11541 = self.slice(0, -1);
                        var $11542 = Kind$Term$app$($11536, Kind$Term$patch_at$($11541, $11537, _fn$3));
                        var $11538 = $11542;
                        break;
                    case 'e':
                        var $11543 = _fn$3(_term$2);
                        var $11538 = $11543;
                        break;
                };
                var $11517 = $11538;
                break;
            case 'Kind.Term.let':
                var $11544 = self.name;
                var $11545 = self.expr;
                var $11546 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11548 = self.slice(0, -1);
                        var $11549 = Kind$Term$let$($11544, Kind$Term$patch_at$($11548, $11545, _fn$3), $11546);
                        var $11547 = $11549;
                        break;
                    case 'i':
                        var $11550 = self.slice(0, -1);
                        var $11551 = Kind$Term$let$($11544, $11545, (_x$8 => {
                            var $11552 = Kind$Term$patch_at$($11550, $11546(_x$8), _fn$3);
                            return $11552;
                        }));
                        var $11547 = $11551;
                        break;
                    case 'e':
                        var $11553 = _fn$3(_term$2);
                        var $11547 = $11553;
                        break;
                };
                var $11517 = $11547;
                break;
            case 'Kind.Term.def':
                var $11554 = self.name;
                var $11555 = self.expr;
                var $11556 = self.body;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11558 = self.slice(0, -1);
                        var $11559 = Kind$Term$def$($11554, Kind$Term$patch_at$($11558, $11555, _fn$3), $11556);
                        var $11557 = $11559;
                        break;
                    case 'i':
                        var $11560 = self.slice(0, -1);
                        var $11561 = Kind$Term$def$($11554, $11555, (_x$8 => {
                            var $11562 = Kind$Term$patch_at$($11560, $11556(_x$8), _fn$3);
                            return $11562;
                        }));
                        var $11557 = $11561;
                        break;
                    case 'e':
                        var $11563 = _fn$3(_term$2);
                        var $11557 = $11563;
                        break;
                };
                var $11517 = $11557;
                break;
            case 'Kind.Term.ann':
                var $11564 = self.done;
                var $11565 = self.term;
                var $11566 = self.type;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11568 = self.slice(0, -1);
                        var $11569 = Kind$Term$ann$($11564, Kind$Term$patch_at$($11568, $11565, _fn$3), $11566);
                        var $11567 = $11569;
                        break;
                    case 'i':
                        var $11570 = self.slice(0, -1);
                        var $11571 = Kind$Term$ann$($11564, $11565, Kind$Term$patch_at$($11570, $11566, _fn$3));
                        var $11567 = $11571;
                        break;
                    case 'e':
                        var $11572 = _fn$3(_term$2);
                        var $11567 = $11572;
                        break;
                };
                var $11517 = $11567;
                break;
            case 'Kind.Term.get':
                var $11573 = self.expr;
                var $11574 = self.fkey;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11576 = self.slice(0, -1);
                        var $11577 = Kind$Term$get$(Kind$Term$patch_at$($11576, $11573, _fn$3), $11574);
                        var $11575 = $11577;
                        break;
                    case 'i':
                        var $11578 = self.slice(0, -1);
                        var $11579 = Kind$Term$get$(Kind$Term$patch_at$($11578, $11573, _fn$3), $11574);
                        var $11575 = $11579;
                        break;
                    case 'e':
                        var $11580 = _fn$3(_term$2);
                        var $11575 = $11580;
                        break;
                };
                var $11517 = $11575;
                break;
            case 'Kind.Term.set':
                var $11581 = self.expr;
                var $11582 = self.fkey;
                var $11583 = self.fval;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11585 = self.slice(0, -1);
                        var $11586 = Kind$Term$set$(Kind$Term$patch_at$($11585, $11581, _fn$3), $11582, $11583);
                        var $11584 = $11586;
                        break;
                    case 'i':
                        var $11587 = self.slice(0, -1);
                        var $11588 = Kind$Term$set$($11581, $11582, Kind$Term$patch_at$($11587, $11583, _fn$3));
                        var $11584 = $11588;
                        break;
                    case 'e':
                        var $11589 = _fn$3(_term$2);
                        var $11584 = $11589;
                        break;
                };
                var $11517 = $11584;
                break;
            case 'Kind.Term.ope':
                var $11590 = self.name;
                var $11591 = self.arg0;
                var $11592 = self.arg1;
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'o':
                        var $11594 = self.slice(0, -1);
                        var $11595 = Kind$Term$ope$($11590, Kind$Term$patch_at$($11594, $11591, _fn$3), $11592);
                        var $11593 = $11595;
                        break;
                    case 'i':
                        var $11596 = self.slice(0, -1);
                        var $11597 = Kind$Term$ope$($11590, $11591, Kind$Term$patch_at$($11596, $11592, _fn$3));
                        var $11593 = $11597;
                        break;
                    case 'e':
                        var $11598 = _fn$3(_term$2);
                        var $11593 = $11598;
                        break;
                };
                var $11517 = $11593;
                break;
            case 'Kind.Term.ori':
                var $11599 = self.orig;
                var $11600 = self.expr;
                var $11601 = Kind$Term$ori$($11599, Kind$Term$patch_at$(_path$1, $11600, _fn$3));
                var $11517 = $11601;
                break;
            case 'Kind.Term.var':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11603 = _fn$3(_term$2);
                        var $11602 = $11603;
                        break;
                    case 'o':
                    case 'i':
                        var $11604 = _term$2;
                        var $11602 = $11604;
                        break;
                };
                var $11517 = $11602;
                break;
            case 'Kind.Term.ref':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.new':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11606 = _fn$3(_term$2);
                        var $11605 = $11606;
                        break;
                    case 'o':
                    case 'i':
                        var $11607 = _term$2;
                        var $11605 = $11607;
                        break;
                };
                var $11517 = $11605;
                break;
            case 'Kind.Term.typ':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11609 = _fn$3(_term$2);
                        var $11608 = $11609;
                        break;
                    case 'o':
                    case 'i':
                        var $11610 = _term$2;
                        var $11608 = $11610;
                        break;
                };
                var $11517 = $11608;
                break;
            case 'Kind.Term.gol':
            case 'Kind.Term.num':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11612 = _fn$3(_term$2);
                        var $11611 = $11612;
                        break;
                    case 'o':
                    case 'i':
                        var $11613 = _term$2;
                        var $11611 = $11613;
                        break;
                };
                var $11517 = $11611;
                break;
            case 'Kind.Term.cse':
                var self = _path$1;
                switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                    case 'e':
                        var $11615 = _fn$3(_term$2);
                        var $11614 = $11615;
                        break;
                    case 'o':
                    case 'i':
                        var $11616 = _term$2;
                        var $11614 = $11616;
                        break;
                };
                var $11517 = $11614;
                break;
        };
        return $11517;
    };
    const Kind$Term$patch_at = x0 => x1 => x2 => Kind$Term$patch_at$(x0, x1, x2);

    function Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, _errs$10, _fixd$11) {
        var self = _errs$10;
        switch (self._) {
            case 'List.cons':
                var $11618 = self.head;
                var $11619 = self.tail;
                var self = $11618;
                switch (self._) {
                    case 'Kind.Error.waiting':
                        var $11621 = self.name;
                        var $11622 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                            var $11623 = _m$bind$15;
                            return $11623;
                        }))(Kind$Synth$one$($11621, _defs$9))((_new_defs$15 => {
                            var self = _new_defs$15;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11625 = self.value;
                                    var $11626 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11625, $11619, Bool$true);
                                    var $11624 = $11626;
                                    break;
                                case 'Maybe.none':
                                    var $11627 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11619, _fixd$11);
                                    var $11624 = $11627;
                                    break;
                            };
                            return $11624;
                        }));
                        var $11620 = $11622;
                        break;
                    case 'Kind.Error.patch':
                        var $11628 = self.path;
                        var $11629 = self.term;
                        var self = $11628;
                        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
                            case 'o':
                                var $11631 = self.slice(0, -1);
                                var _term$17 = Kind$Term$patch_at$($11631, _term$5, (_x$17 => {
                                    var $11633 = $11629;
                                    return $11633;
                                }));
                                var $11632 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$17, _type$6, _isct$7, _arit$8, _defs$9, $11619, Bool$true);
                                var $11630 = $11632;
                                break;
                            case 'i':
                                var $11634 = self.slice(0, -1);
                                var _type$17 = Kind$Term$patch_at$($11634, _type$6, (_x$17 => {
                                    var $11636 = $11629;
                                    return $11636;
                                }));
                                var $11635 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$17, _isct$7, _arit$8, _defs$9, $11619, Bool$true);
                                var $11630 = $11635;
                                break;
                            case 'e':
                                var $11637 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                    var $11638 = _m$pure$17;
                                    return $11638;
                                }))(Maybe$none);
                                var $11630 = $11637;
                                break;
                        };
                        var $11620 = $11630;
                        break;
                    case 'Kind.Error.undefined_reference':
                        var $11639 = self.name;
                        var $11640 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                            var $11641 = _m$bind$16;
                            return $11641;
                        }))(Kind$Synth$one$($11639, _defs$9))((_new_defs$16 => {
                            var self = _new_defs$16;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $11643 = self.value;
                                    var $11644 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, $11643, $11619, Bool$true);
                                    var $11642 = $11644;
                                    break;
                                case 'Maybe.none':
                                    var $11645 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11619, _fixd$11);
                                    var $11642 = $11645;
                                    break;
                            };
                            return $11642;
                        }));
                        var $11620 = $11640;
                        break;
                    case 'Kind.Error.type_mismatch':
                    case 'Kind.Error.show_goal':
                    case 'Kind.Error.indirect':
                    case 'Kind.Error.cant_infer':
                        var $11646 = Kind$Synth$fix$(_file$1, _code$2, _orig$3, _name$4, _term$5, _type$6, _isct$7, _arit$8, _defs$9, $11619, _fixd$11);
                        var $11620 = $11646;
                        break;
                };
                var $11617 = $11620;
                break;
            case 'List.nil':
                var self = _fixd$11;
                if (self) {
                    var _type$12 = Kind$Term$bind$(List$nil, (_x$12 => {
                        var $11649 = (_x$12 + '1');
                        return $11649;
                    }), _type$6);
                    var _term$13 = Kind$Term$bind$(List$nil, (_x$13 => {
                        var $11650 = (_x$13 + '0');
                        return $11650;
                    }), _term$5);
                    var _defs$14 = Kind$Map$set$(_name$4, Kind$Def$new$(_file$1, _code$2, _orig$3, _name$4, _term$13, _type$12, _isct$7, _arit$8, Kind$Status$init), _defs$9);
                    var $11648 = IO$monad$((_m$bind$15 => _m$pure$16 => {
                        var $11651 = _m$pure$16;
                        return $11651;
                    }))(Maybe$some$(_defs$14));
                    var $11647 = $11648;
                } else {
                    var $11652 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                        var $11653 = _m$pure$13;
                        return $11653;
                    }))(Maybe$none);
                    var $11647 = $11652;
                };
                var $11617 = $11647;
                break;
        };
        return $11617;
    };
    const Kind$Synth$fix = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => Kind$Synth$fix$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10);

    function Kind$Status$fail$(_errors$1) {
        var $11654 = ({
            _: 'Kind.Status.fail',
            'errors': _errors$1
        });
        return $11654;
    };
    const Kind$Status$fail = x0 => Kind$Status$fail$(x0);

    function Kind$Synth$one$(_name$1, _defs$2) {
        var self = Kind$Map$get$(_name$1, _defs$2);
        switch (self._) {
            case 'Maybe.some':
                var $11656 = self.value;
                var self = $11656;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11658 = self.file;
                        var $11659 = self.code;
                        var $11660 = self.orig;
                        var $11661 = self.name;
                        var $11662 = self.term;
                        var $11663 = self.type;
                        var $11664 = self.isct;
                        var $11665 = self.arit;
                        var $11666 = self.stat;
                        var _file$13 = $11658;
                        var _code$14 = $11659;
                        var _orig$15 = $11660;
                        var _name$16 = $11661;
                        var _term$17 = $11662;
                        var _type$18 = $11663;
                        var _isct$19 = $11664;
                        var _arit$20 = $11665;
                        var _stat$21 = $11666;
                        var self = _stat$21;
                        switch (self._) {
                            case 'Kind.Status.init':
                                var _defs$22 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Kind$Status$wait), _defs$2);
                                var self = Kind$Term$check$(_type$18, Maybe$some$(Kind$Term$typ), _defs$22, List$nil, Kind$MPath$i$(Kind$MPath$nil), Maybe$none);
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11669 = self.value;
                                        var $11670 = self.errors;
                                        var self = $11669;
                                        switch (self._) {
                                            case 'Maybe.none':
                                                var $11672 = Kind$Check$result$(Maybe$none, $11670);
                                                var $11671 = $11672;
                                                break;
                                            case 'Maybe.some':
                                                var self = Kind$Term$check$(_term$17, Maybe$some$(_type$18), _defs$22, List$nil, Kind$MPath$o$(Kind$MPath$nil), Maybe$none);
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11674 = self.value;
                                                        var $11675 = self.errors;
                                                        var self = $11674;
                                                        switch (self._) {
                                                            case 'Maybe.none':
                                                                var $11677 = Kind$Check$result$(Maybe$none, $11675);
                                                                var $11676 = $11677;
                                                                break;
                                                            case 'Maybe.some':
                                                                var self = Kind$Check$result$(Maybe$some$(Unit$new), List$nil);
                                                                switch (self._) {
                                                                    case 'Kind.Check.result':
                                                                        var $11679 = self.value;
                                                                        var $11680 = self.errors;
                                                                        var $11681 = Kind$Check$result$($11679, List$concat$($11675, $11680));
                                                                        var $11678 = $11681;
                                                                        break;
                                                                };
                                                                var $11676 = $11678;
                                                                break;
                                                        };
                                                        var self = $11676;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Check.result':
                                                        var $11682 = self.value;
                                                        var $11683 = self.errors;
                                                        var $11684 = Kind$Check$result$($11682, List$concat$($11670, $11683));
                                                        var $11673 = $11684;
                                                        break;
                                                };
                                                var $11671 = $11673;
                                                break;
                                        };
                                        var _checked$23 = $11671;
                                        break;
                                };
                                var self = _checked$23;
                                switch (self._) {
                                    case 'Kind.Check.result':
                                        var $11685 = self.errors;
                                        var self = List$is_empty$($11685);
                                        if (self) {
                                            var _defs$26 = Kind$Map$def$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, Bool$true, _defs$22);
                                            var $11687 = IO$monad$((_m$bind$27 => _m$pure$28 => {
                                                var $11688 = _m$pure$28;
                                                return $11688;
                                            }))(Maybe$some$(_defs$26));
                                            var $11686 = $11687;
                                        } else {
                                            var $11689 = IO$monad$((_m$bind$26 => _m$pure$27 => {
                                                var $11690 = _m$bind$26;
                                                return $11690;
                                            }))(Kind$Synth$fix$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _defs$22, $11685, Bool$false))((_fixed$26 => {
                                                var self = _fixed$26;
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11692 = self.value;
                                                        var $11693 = Kind$Synth$one$(_name$16, $11692);
                                                        var $11691 = $11693;
                                                        break;
                                                    case 'Maybe.none':
                                                        var _stat$27 = Kind$Status$fail$($11685);
                                                        var _defs$28 = Kind$Map$set$(_name$16, Kind$Def$new$(_file$13, _code$14, _orig$15, _name$16, _term$17, _type$18, _isct$19, _arit$20, _stat$27), _defs$22);
                                                        var $11694 = IO$monad$((_m$bind$29 => _m$pure$30 => {
                                                            var $11695 = _m$pure$30;
                                                            return $11695;
                                                        }))(Maybe$some$(_defs$28));
                                                        var $11691 = $11694;
                                                        break;
                                                };
                                                return $11691;
                                            }));
                                            var $11686 = $11689;
                                        };
                                        var $11668 = $11686;
                                        break;
                                };
                                var $11667 = $11668;
                                break;
                            case 'Kind.Status.wait':
                                var $11696 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                    var $11697 = _m$pure$23;
                                    return $11697;
                                }))(Maybe$some$(_defs$2));
                                var $11667 = $11696;
                                break;
                            case 'Kind.Status.done':
                            case 'Kind.Status.fail':
                                var $11698 = IO$monad$((_m$bind$23 => _m$pure$24 => {
                                    var $11699 = _m$pure$24;
                                    return $11699;
                                }))(Maybe$some$(_defs$2));
                                var $11667 = $11698;
                                break;
                        };
                        var $11657 = $11667;
                        break;
                };
                var $11655 = $11657;
                break;
            case 'Maybe.none':
                var $11700 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $11701 = _m$bind$3;
                    return $11701;
                }))(IO$get_time)((_time_a$3 => {
                    var $11702 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $11703 = _m$bind$4;
                        return $11703;
                    }))(Kind$Synth$load$(_name$1, _defs$2))((_loaded$4 => {
                        var self = _loaded$4;
                        switch (self._) {
                            case 'Maybe.some':
                                var $11705 = self.value;
                                var $11706 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $11707 = _m$bind$6;
                                    return $11707;
                                }))(IO$get_time)((_time_b$6 => {
                                    var $11708 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                                        var $11709 = _m$bind$7;
                                        return $11709;
                                    }))(Kind$Synth$one$(_name$1, $11705))((_result$7 => {
                                        var $11710 = IO$monad$((_m$bind$8 => _m$pure$9 => {
                                            var $11711 = _m$bind$8;
                                            return $11711;
                                        }))(IO$get_time)((_time_c$8 => {
                                            var $11712 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                                var $11713 = _m$pure$10;
                                                return $11713;
                                            }))(_result$7);
                                            return $11712;
                                        }));
                                        return $11710;
                                    }));
                                    return $11708;
                                }));
                                var $11704 = $11706;
                                break;
                            case 'Maybe.none':
                                var $11714 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                                    var $11715 = _m$pure$6;
                                    return $11715;
                                }))(Maybe$none);
                                var $11704 = $11714;
                                break;
                        };
                        return $11704;
                    }));
                    return $11702;
                }));
                var $11655 = $11700;
                break;
        };
        return $11655;
    };
    const Kind$Synth$one = x0 => x1 => Kind$Synth$one$(x0, x1);

    function BitsMap$from_list$(_xs$2) {
        var self = _xs$2;
        switch (self._) {
            case 'List.cons':
                var $11717 = self.head;
                var $11718 = self.tail;
                var self = $11717;
                switch (self._) {
                    case 'Pair.new':
                        var $11720 = self.fst;
                        var $11721 = self.snd;
                        var $11722 = (bitsmap_set($11720, $11721, BitsMap$from_list$($11718), 'set'));
                        var $11719 = $11722;
                        break;
                };
                var $11716 = $11719;
                break;
            case 'List.nil':
                var $11723 = BitsMap$new;
                var $11716 = $11723;
                break;
        };
        return $11716;
    };
    const BitsMap$from_list = x0 => BitsMap$from_list$(x0);
    const Kind$Term$inline$names = (() => {
        var _inl$1 = List$cons$("Monad.pure", List$cons$("Monad.bind", List$cons$("Monad.new", List$cons$("Parser.monad", List$cons$("Parser.bind", List$cons$("Parser.pure", List$cons$("Kind.Check.pure", List$cons$("Kind.Check.bind", List$cons$("Kind.Check.monad", List$cons$("Kind.Check.value", List$cons$("Kind.Check.none", List$nil)))))))))));
        var _kvs$2 = List$mapped$(_inl$1, (_x$2 => {
            var $11725 = Pair$new$((kind_name_to_bits(_x$2)), Unit$new);
            return $11725;
        }));
        var $11724 = BitsMap$from_list$(_kvs$2);
        return $11724;
    })();

    function Kind$Term$inline$reduce$(_term$1, _defs$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $11727 = self.name;
                var _inli$4 = BitsSet$has$((kind_name_to_bits($11727)), Kind$Term$inline$names);
                var self = _inli$4;
                if (self) {
                    var self = Kind$Map$get$($11727, _defs$2);
                    switch (self._) {
                        case 'Maybe.some':
                            var $11730 = self.value;
                            var self = $11730;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $11732 = self.term;
                                    var $11733 = Kind$Term$inline$reduce$($11732, _defs$2);
                                    var $11731 = $11733;
                                    break;
                            };
                            var $11729 = $11731;
                            break;
                        case 'Maybe.none':
                            var $11734 = Kind$Term$ref$($11727);
                            var $11729 = $11734;
                            break;
                    };
                    var $11728 = $11729;
                } else {
                    var $11735 = _term$1;
                    var $11728 = $11735;
                };
                var $11726 = $11728;
                break;
            case 'Kind.Term.app':
                var $11736 = self.func;
                var $11737 = self.argm;
                var _func$5 = Kind$Term$inline$reduce$($11736, _defs$2);
                var self = _func$5;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $11739 = self.body;
                        var $11740 = Kind$Term$inline$reduce$($11739($11737), _defs$2);
                        var $11738 = $11740;
                        break;
                    case 'Kind.Term.let':
                        var $11741 = self.name;
                        var $11742 = self.expr;
                        var $11743 = self.body;
                        var $11744 = Kind$Term$let$($11741, $11742, (_x$9 => {
                            var $11745 = Kind$Term$inline$reduce$(Kind$Term$app$($11743(_x$9), $11737), _defs$2);
                            return $11745;
                        }));
                        var $11738 = $11744;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.app':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $11746 = _term$1;
                        var $11738 = $11746;
                        break;
                };
                var $11726 = $11738;
                break;
            case 'Kind.Term.ori':
                var $11747 = self.expr;
                var $11748 = Kind$Term$inline$reduce$($11747, _defs$2);
                var $11726 = $11748;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11749 = _term$1;
                var $11726 = $11749;
                break;
        };
        return $11726;
    };
    const Kind$Term$inline$reduce = x0 => x1 => Kind$Term$inline$reduce$(x0, x1);

    function Kind$Term$inline$(_term$1, _defs$2) {
        var self = Kind$Term$inline$reduce$(_term$1, _defs$2);
        switch (self._) {
            case 'Kind.Term.var':
                var $11751 = self.name;
                var $11752 = self.indx;
                var $11753 = Kind$Term$var$($11751, $11752);
                var $11750 = $11753;
                break;
            case 'Kind.Term.ref':
                var $11754 = self.name;
                var $11755 = Kind$Term$ref$($11754);
                var $11750 = $11755;
                break;
            case 'Kind.Term.all':
                var $11756 = self.eras;
                var $11757 = self.self;
                var $11758 = self.name;
                var $11759 = self.xtyp;
                var $11760 = self.body;
                var $11761 = Kind$Term$all$($11756, $11757, $11758, Kind$Term$inline$($11759, _defs$2), (_s$8 => _x$9 => {
                    var $11762 = Kind$Term$inline$($11760(_s$8)(_x$9), _defs$2);
                    return $11762;
                }));
                var $11750 = $11761;
                break;
            case 'Kind.Term.lam':
                var $11763 = self.name;
                var $11764 = self.body;
                var $11765 = Kind$Term$lam$($11763, (_x$5 => {
                    var $11766 = Kind$Term$inline$($11764(_x$5), _defs$2);
                    return $11766;
                }));
                var $11750 = $11765;
                break;
            case 'Kind.Term.app':
                var $11767 = self.func;
                var $11768 = self.argm;
                var $11769 = Kind$Term$app$(Kind$Term$inline$($11767, _defs$2), Kind$Term$inline$($11768, _defs$2));
                var $11750 = $11769;
                break;
            case 'Kind.Term.let':
                var $11770 = self.name;
                var $11771 = self.expr;
                var $11772 = self.body;
                var $11773 = Kind$Term$let$($11770, Kind$Term$inline$($11771, _defs$2), (_x$6 => {
                    var $11774 = Kind$Term$inline$($11772(_x$6), _defs$2);
                    return $11774;
                }));
                var $11750 = $11773;
                break;
            case 'Kind.Term.def':
                var $11775 = self.name;
                var $11776 = self.expr;
                var $11777 = self.body;
                var $11778 = Kind$Term$def$($11775, Kind$Term$inline$($11776, _defs$2), (_x$6 => {
                    var $11779 = Kind$Term$inline$($11777(_x$6), _defs$2);
                    return $11779;
                }));
                var $11750 = $11778;
                break;
            case 'Kind.Term.ann':
                var $11780 = self.done;
                var $11781 = self.term;
                var $11782 = self.type;
                var $11783 = Kind$Term$ann$($11780, Kind$Term$inline$($11781, _defs$2), Kind$Term$inline$($11782, _defs$2));
                var $11750 = $11783;
                break;
            case 'Kind.Term.gol':
                var $11784 = self.name;
                var $11785 = self.dref;
                var $11786 = self.verb;
                var $11787 = Kind$Term$gol$($11784, $11785, $11786);
                var $11750 = $11787;
                break;
            case 'Kind.Term.hol':
                var $11788 = self.path;
                var $11789 = Kind$Term$hol$($11788);
                var $11750 = $11789;
                break;
            case 'Kind.Term.nat':
                var $11790 = self.natx;
                var $11791 = Kind$Term$nat$($11790);
                var $11750 = $11791;
                break;
            case 'Kind.Term.chr':
                var $11792 = self.chrx;
                var $11793 = Kind$Term$chr$($11792);
                var $11750 = $11793;
                break;
            case 'Kind.Term.str':
                var $11794 = self.strx;
                var $11795 = Kind$Term$str$($11794);
                var $11750 = $11795;
                break;
            case 'Kind.Term.ori':
                var $11796 = self.expr;
                var $11797 = Kind$Term$inline$($11796, _defs$2);
                var $11750 = $11797;
                break;
            case 'Kind.Term.typ':
                var $11798 = Kind$Term$typ;
                var $11750 = $11798;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11799 = _term$1;
                var $11750 = $11799;
                break;
        };
        return $11750;
    };
    const Kind$Term$inline = x0 => x1 => Kind$Term$inline$(x0, x1);

    function BitsMap$values$go$(_xs$2, _list$3) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $11801 = self.val;
                var $11802 = self.lft;
                var $11803 = self.rgt;
                var self = $11801;
                switch (self._) {
                    case 'Maybe.some':
                        var $11805 = self.value;
                        var $11806 = List$cons$($11805, _list$3);
                        var _list0$7 = $11806;
                        break;
                    case 'Maybe.none':
                        var $11807 = _list$3;
                        var _list0$7 = $11807;
                        break;
                };
                var _list1$8 = BitsMap$values$go$($11802, _list0$7);
                var _list2$9 = BitsMap$values$go$($11803, _list1$8);
                var $11804 = _list2$9;
                var $11800 = $11804;
                break;
            case 'BitsMap.new':
                var $11808 = _list$3;
                var $11800 = $11808;
                break;
        };
        return $11800;
    };
    const BitsMap$values$go = x0 => x1 => BitsMap$values$go$(x0, x1);

    function BitsMap$values$(_xs$2) {
        var $11809 = BitsMap$values$go$(_xs$2, List$nil);
        return $11809;
    };
    const BitsMap$values = x0 => BitsMap$values$(x0);

    function Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4) {
        var Kind$Core$var_name$ = (_indx$1, _name$2, _brui$3, _vars$4) => ({
            ctr: 'TCO',
            arg: [_indx$1, _name$2, _brui$3, _vars$4]
        });
        var Kind$Core$var_name = _indx$1 => _name$2 => _brui$3 => _vars$4 => Kind$Core$var_name$(_indx$1, _name$2, _brui$3, _vars$4);
        var arg = [_indx$1, _name$2, _brui$3, _vars$4];
        while (true) {
            let [_indx$1, _name$2, _brui$3, _vars$4] = arg;
            var R = (() => {
                var self = _indx$1;
                if (self === 0n) {
                    var self = _brui$3;
                    if (self === 0n) {
                        var $11811 = _name$2;
                        var $11810 = $11811;
                    } else {
                        var $11812 = (self - 1n);
                        var $11813 = (_name$2 + ("^" + Nat$show$(_brui$3)));
                        var $11810 = $11813;
                    };
                    return $11810;
                } else {
                    var $11814 = (self - 1n);
                    var self = _vars$4;
                    switch (self._) {
                        case 'List.cons':
                            var $11816 = self.head;
                            var $11817 = self.tail;
                            var self = (_name$2 === $11816);
                            if (self) {
                                var $11819 = Nat$succ$(_brui$3);
                                var _brui$8 = $11819;
                            } else {
                                var $11820 = _brui$3;
                                var _brui$8 = $11820;
                            };
                            var $11818 = Kind$Core$var_name$($11814, _name$2, _brui$8, $11817);
                            var $11815 = $11818;
                            break;
                        case 'List.nil':
                            var $11821 = "unbound";
                            var $11815 = $11821;
                            break;
                    };
                    return $11815;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Core$var_name = x0 => x1 => x2 => x3 => Kind$Core$var_name$(x0, x1, x2, x3);

    function Kind$Name$show$(_name$1) {
        var $11822 = _name$1;
        return $11822;
    };
    const Kind$Name$show = x0 => Kind$Name$show$(x0);

    function Bits$to_nat$(_b$1) {
        var self = _b$1;
        switch (self.length === 0 ? 'e' : self[self.length - 1] === '0' ? 'o' : 'i') {
            case 'o':
                var $11824 = self.slice(0, -1);
                var $11825 = (2n * Bits$to_nat$($11824));
                var $11823 = $11825;
                break;
            case 'i':
                var $11826 = self.slice(0, -1);
                var $11827 = Nat$succ$((2n * Bits$to_nat$($11826)));
                var $11823 = $11827;
                break;
            case 'e':
                var $11828 = 0n;
                var $11823 = $11828;
                break;
        };
        return $11823;
    };
    const Bits$to_nat = x0 => Bits$to_nat$(x0);

    function U16$show_hex$(_a$1) {
        var self = _a$1;
        switch ('u16') {
            case 'u16':
                var $11830 = u16_to_word(self);
                var $11831 = Nat$to_string_base$(16n, Bits$to_nat$(Word$to_bits$($11830)));
                var $11829 = $11831;
                break;
        };
        return $11829;
    };
    const U16$show_hex = x0 => U16$show_hex$(x0);

    function Kind$Code$escape$char$(_chr$1) {
        var self = (_chr$1 === Kind$Code$backslash);
        if (self) {
            var $11833 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
            var $11832 = $11833;
        } else {
            var self = (_chr$1 === 34);
            if (self) {
                var $11835 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                var $11834 = $11835;
            } else {
                var self = (_chr$1 === 39);
                if (self) {
                    var $11837 = String$cons$(Kind$Code$backslash, String$cons$(_chr$1, String$nil));
                    var $11836 = $11837;
                } else {
                    var self = U16$btw$(32, _chr$1, 126);
                    if (self) {
                        var $11839 = String$cons$(_chr$1, String$nil);
                        var $11838 = $11839;
                    } else {
                        var $11840 = (String$cons$(Kind$Code$backslash, String$nil) + ("u{" + (U16$show_hex$(_chr$1) + "}")));
                        var $11838 = $11840;
                    };
                    var $11836 = $11838;
                };
                var $11834 = $11836;
            };
            var $11832 = $11834;
        };
        return $11832;
    };
    const Kind$Code$escape$char = x0 => Kind$Code$escape$char$(x0);

    function Kind$Code$escape$go$(_str$1, _result$2) {
        var Kind$Code$escape$go$ = (_str$1, _result$2) => ({
            ctr: 'TCO',
            arg: [_str$1, _result$2]
        });
        var Kind$Code$escape$go = _str$1 => _result$2 => Kind$Code$escape$go$(_str$1, _result$2);
        var arg = [_str$1, _result$2];
        while (true) {
            let [_str$1, _result$2] = arg;
            var R = (() => {
                var self = _str$1;
                if (self.length === 0) {
                    var $11841 = String$reverse$(_result$2);
                    return $11841;
                } else {
                    var $11842 = self.charCodeAt(0);
                    var $11843 = self.slice(1);
                    var $11844 = Kind$Code$escape$go$($11843, (String$reverse$(Kind$Code$escape$char$($11842)) + _result$2));
                    return $11844;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Code$escape$go = x0 => x1 => Kind$Code$escape$go$(x0, x1);

    function Kind$Code$escape$(_str$1) {
        var $11845 = Kind$Code$escape$go$(_str$1, "");
        return $11845;
    };
    const Kind$Code$escape = x0 => Kind$Code$escape$(x0);

    function Kind$Core$show$go$(_term$1, _indx$2, _vars$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $11847 = self.name;
                var $11848 = self.indx;
                var $11849 = Kind$Core$var_name$(Nat$pred$((_indx$2 - $11848 <= 0n ? 0n : _indx$2 - $11848)), $11847, 0n, _vars$3);
                var $11846 = $11849;
                break;
            case 'Kind.Term.ref':
                var $11850 = self.name;
                var $11851 = Kind$Name$show$($11850);
                var $11846 = $11851;
                break;
            case 'Kind.Term.all':
                var $11852 = self.eras;
                var $11853 = self.self;
                var $11854 = self.name;
                var $11855 = self.xtyp;
                var $11856 = self.body;
                var _eras$9 = $11852;
                var self = _eras$9;
                if (self) {
                    var $11858 = "%";
                    var _init$10 = $11858;
                } else {
                    var $11859 = "@";
                    var _init$10 = $11859;
                };
                var _self$11 = Kind$Name$show$($11853);
                var _name$12 = Kind$Name$show$($11854);
                var _xtyp$13 = Kind$Core$show$go$($11855, _indx$2, _vars$3);
                var _body$14 = Kind$Core$show$go$($11856(Kind$Term$var$($11853, _indx$2))(Kind$Term$var$($11854, Nat$succ$(_indx$2))), Nat$succ$(Nat$succ$(_indx$2)), List$cons$($11854, List$cons$($11853, _vars$3)));
                var $11857 = String$flatten$(List$cons$(_init$10, List$cons$(_self$11, List$cons$("(", List$cons$(_name$12, List$cons$(":", List$cons$(_xtyp$13, List$cons$(") ", List$cons$(_body$14, List$nil)))))))));
                var $11846 = $11857;
                break;
            case 'Kind.Term.lam':
                var $11860 = self.name;
                var $11861 = self.body;
                var _name$6 = Kind$Name$show$($11860);
                var _body$7 = Kind$Core$show$go$($11861(Kind$Term$var$($11860, _indx$2)), Nat$succ$(_indx$2), List$cons$($11860, _vars$3));
                var $11862 = String$flatten$(List$cons$("#", List$cons$(_name$6, List$cons$(" ", List$cons$(_body$7, List$nil)))));
                var $11846 = $11862;
                break;
            case 'Kind.Term.app':
                var $11863 = self.func;
                var $11864 = self.argm;
                var _func$6 = Kind$Core$show$go$($11863, _indx$2, _vars$3);
                var _argm$7 = Kind$Core$show$go$($11864, _indx$2, _vars$3);
                var $11865 = String$flatten$(List$cons$("(", List$cons$(_func$6, List$cons$(" ", List$cons$(_argm$7, List$cons$(")", List$nil))))));
                var $11846 = $11865;
                break;
            case 'Kind.Term.let':
                var $11866 = self.name;
                var $11867 = self.expr;
                var $11868 = self.body;
                var _name$7 = Kind$Name$show$($11866);
                var _expr$8 = Kind$Core$show$go$($11867, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($11868(Kind$Term$var$($11866, _indx$2)), Nat$succ$(_indx$2), List$cons$($11866, _vars$3));
                var $11869 = String$flatten$(List$cons$("!", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $11846 = $11869;
                break;
            case 'Kind.Term.def':
                var $11870 = self.name;
                var $11871 = self.expr;
                var $11872 = self.body;
                var _name$7 = Kind$Name$show$($11870);
                var _expr$8 = Kind$Core$show$go$($11871, _indx$2, _vars$3);
                var _body$9 = Kind$Core$show$go$($11872(Kind$Term$var$($11870, _indx$2)), Nat$succ$(_indx$2), List$cons$($11870, _vars$3));
                var $11873 = String$flatten$(List$cons$("$", List$cons$(_name$7, List$cons$(" = ", List$cons$(_expr$8, List$cons$("; ", List$cons$(_body$9, List$nil)))))));
                var $11846 = $11873;
                break;
            case 'Kind.Term.ann':
                var $11874 = self.term;
                var $11875 = self.type;
                var _term$7 = Kind$Core$show$go$($11874, _indx$2, _vars$3);
                var _type$8 = Kind$Core$show$go$($11875, _indx$2, _vars$3);
                var $11876 = String$flatten$(List$cons$("{", List$cons$(_term$7, List$cons$(":", List$cons$(_type$8, List$cons$("}", List$nil))))));
                var $11846 = $11876;
                break;
            case 'Kind.Term.nat':
                var $11877 = self.natx;
                var $11878 = String$flatten$(List$cons$("+", List$cons$(Nat$show$($11877), List$nil)));
                var $11846 = $11878;
                break;
            case 'Kind.Term.chr':
                var $11879 = self.chrx;
                var $11880 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($11879), List$cons$("\'", List$nil))));
                var $11846 = $11880;
                break;
            case 'Kind.Term.str':
                var $11881 = self.strx;
                var $11882 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($11881), List$cons$("\"", List$nil))));
                var $11846 = $11882;
                break;
            case 'Kind.Term.ori':
                var $11883 = self.expr;
                var $11884 = Kind$Core$show$go$($11883, _indx$2, _vars$3);
                var $11846 = $11884;
                break;
            case 'Kind.Term.typ':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $11885 = "*";
                var $11846 = $11885;
                break;
        };
        return $11846;
    };
    const Kind$Core$show$go = x0 => x1 => x2 => Kind$Core$show$go$(x0, x1, x2);

    function Kind$Core$show$(_term$1) {
        var $11886 = Kind$Core$show$go$(_term$1, 0n, List$nil);
        return $11886;
    };
    const Kind$Core$show = x0 => Kind$Core$show$(x0);

    function Kind$Defs$core$(_defs$1) {
        var _result$2 = "";
        var _result$3 = (() => {
            var $11889 = _result$2;
            var $11890 = BitsMap$values$(_defs$1);
            let _result$4 = $11889;
            let _defn$3;
            while ($11890._ === 'List.cons') {
                _defn$3 = $11890.head;
                var self = _defn$3;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11891 = self.name;
                        var $11892 = self.term;
                        var $11893 = self.type;
                        var $11894 = self.stat;
                        var self = $11894;
                        switch (self._) {
                            case 'Kind.Status.init':
                            case 'Kind.Status.wait':
                            case 'Kind.Status.fail':
                                var $11896 = _result$4;
                                var $11895 = $11896;
                                break;
                            case 'Kind.Status.done':
                                var _name$15 = $11891;
                                var _term$16 = Kind$Core$show$($11892);
                                var _type$17 = Kind$Core$show$($11893);
                                var $11897 = String$flatten$(List$cons$(_result$4, List$cons$(_name$15, List$cons$(" : ", List$cons$(_type$17, List$cons$(" = ", List$cons$(_term$16, List$cons$(";\u{a}", List$nil))))))));
                                var $11895 = $11897;
                                break;
                        };
                        var $11889 = $11895;
                        break;
                };
                _result$4 = $11889;
                $11890 = $11890.tail;
            }
            return _result$4;
        })();
        var $11887 = _result$3;
        return $11887;
    };
    const Kind$Defs$core = x0 => Kind$Defs$core$(x0);

    function Kind$api$io$term_to_core$(_name$1) {
        var $11898 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $11899 = _m$bind$2;
            return $11899;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var self = _new_defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $11901 = self.value;
                    var $11902 = $11901;
                    var _defs$3 = $11902;
                    break;
                case 'Maybe.none':
                    var $11903 = Kind$Map$new;
                    var _defs$3 = $11903;
                    break;
            };
            var _defs$4 = BitsMap$map$((_defn$4 => {
                var self = _defn$4;
                switch (self._) {
                    case 'Kind.Def.new':
                        var $11905 = self.file;
                        var $11906 = self.code;
                        var $11907 = self.orig;
                        var $11908 = self.name;
                        var $11909 = self.term;
                        var $11910 = self.type;
                        var $11911 = self.isct;
                        var $11912 = self.arit;
                        var $11913 = self.stat;
                        var _term$14 = Kind$Term$inline$($11909, _defs$3);
                        var _type$15 = Kind$Term$inline$($11910, _defs$3);
                        var $11914 = Kind$Def$new$($11905, $11906, $11907, $11908, _term$14, _type$15, $11911, $11912, $11913);
                        var $11904 = $11914;
                        break;
                };
                return $11904;
            }), _defs$3);
            var $11900 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                var $11915 = _m$pure$6;
                return $11915;
            }))(Kind$Defs$core$(_defs$4));
            return $11900;
        }));
        return $11898;
    };
    const Kind$api$io$term_to_core = x0 => Kind$api$io$term_to_core$(x0);

    function Kind$Comp$Defs$compile$defn$adjust$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $11917 = self.file;
                var $11918 = self.code;
                var $11919 = self.orig;
                var $11920 = self.name;
                var $11921 = self.term;
                var $11922 = self.type;
                var $11923 = self.isct;
                var $11924 = self.arit;
                var $11925 = self.stat;
                var _term$12 = Kind$Term$inline$($11921, _defs$2);
                var _type$13 = Kind$Term$inline$($11922, _defs$2);
                var $11926 = Kind$Def$new$($11917, $11918, $11919, $11920, _term$12, _type$13, $11923, $11924, $11925);
                var $11916 = $11926;
                break;
        };
        return $11916;
    };
    const Kind$Comp$Defs$compile$defn$adjust = x0 => x1 => Kind$Comp$Defs$compile$defn$adjust$(x0, x1);

    function Kind$Comp$var$(_name$1) {
        var $11927 = ({
            _: 'Kind.Comp.var',
            'name': _name$1
        });
        return $11927;
    };
    const Kind$Comp$var = x0 => Kind$Comp$var$(x0);
    const Kind$Comp$nil = ({
        _: 'Kind.Comp.nil'
    });

    function Kind$Comp$ref$(_name$1) {
        var $11928 = ({
            _: 'Kind.Comp.ref',
            'name': _name$1
        });
        return $11928;
    };
    const Kind$Comp$ref = x0 => Kind$Comp$ref$(x0);
    const Kind$Comp$Prim$bool = ({
        _: 'Kind.Comp.Prim.bool'
    });
    const Kind$Comp$Prim$nat = ({
        _: 'Kind.Comp.Prim.nat'
    });
    const Kind$Comp$Prim$u16 = ({
        _: 'Kind.Comp.Prim.u16'
    });
    const Kind$Comp$Prim$string = ({
        _: 'Kind.Comp.Prim.string'
    });
    const Kind$Comp$Prim$natives = List$cons$(Pair$new$("Bool", Kind$Comp$Prim$bool), List$cons$(Pair$new$("Nat", Kind$Comp$Prim$nat), List$cons$(Pair$new$("U16", Kind$Comp$Prim$u16), List$cons$(Pair$new$("String", Kind$Comp$Prim$string), List$nil))));

    function Kind$Term$equal$(_a$1, _b$2, _defs$3) {
        var self = Kind$Term$equal$go$(_a$1, _b$2, _defs$3, 0n, BitsSet$new);
        switch (self._) {
            case 'Kind.Check.result':
                var $11930 = self.value;
                var $11931 = Maybe$default$($11930, Bool$false);
                var $11929 = $11931;
                break;
        };
        return $11929;
    };
    const Kind$Term$equal = x0 => x1 => x2 => Kind$Term$equal$(x0, x1, x2);

    function Kind$Comp$compile$prim_of$(_type$1, _defs$2) {
        var _result$3 = Maybe$none;
        var _result$4 = (() => {
            var $11934 = _result$3;
            var $11935 = Kind$Comp$Prim$natives;
            let _result$5 = $11934;
            let _prim$4;
            while ($11935._ === 'List.cons') {
                _prim$4 = $11935.head;
                var self = _prim$4;
                switch (self._) {
                    case 'Pair.new':
                        var $11936 = self.fst;
                        var $11937 = self.snd;
                        var self = _result$5;
                        switch (self._) {
                            case 'Maybe.none':
                                var self = Kind$Term$equal$(_type$1, Kind$Term$ref$($11936), _defs$2);
                                if (self) {
                                    var $11940 = Maybe$some$($11937);
                                    var $11939 = $11940;
                                } else {
                                    var $11941 = Maybe$none;
                                    var $11939 = $11941;
                                };
                                var $11938 = $11939;
                                break;
                            case 'Maybe.some':
                                var $11942 = _result$5;
                                var $11938 = $11942;
                                break;
                        };
                        var $11934 = $11938;
                        break;
                };
                _result$5 = $11934;
                $11935 = $11935.tail;
            }
            return _result$5;
        })();
        var $11932 = _result$4;
        return $11932;
    };
    const Kind$Comp$compile$prim_of = x0 => x1 => Kind$Comp$compile$prim_of$(x0, x1);

    function String$ends_with$(_xs$1, _match$2) {
        var _xs_reserved$3 = String$reverse$(_xs$1);
        var _match_reversed$4 = String$reverse$(_match$2);
        var $11943 = String$starts_with$(_xs_reserved$3, _match_reversed$4);
        return $11943;
    };
    const String$ends_with = x0 => x1 => String$ends_with$(x0, x1);

    function Kind$Comp$compile$adt$get_fields$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $11945 = self.eras;
                var $11946 = self.name;
                var $11947 = self.body;
                var _head$7 = $11946;
                var _tail$8 = Kind$Comp$compile$adt$get_fields$($11947(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var self = $11945;
                if (self) {
                    var $11949 = _tail$8;
                    var $11948 = $11949;
                } else {
                    var $11950 = List$cons$(_head$7, _tail$8);
                    var $11948 = $11950;
                };
                var $11944 = $11948;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11951 = List$nil;
                var $11944 = $11951;
                break;
        };
        return $11944;
    };
    const Kind$Comp$compile$adt$get_fields = x0 => Kind$Comp$compile$adt$get_fields$(x0);

    function Kind$Comp$compile$adt$get_constructors$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.all':
                var $11953 = self.name;
                var $11954 = self.xtyp;
                var $11955 = self.body;
                var _tail$7 = Kind$Comp$compile$adt$get_constructors$($11955(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n)));
                var _name$8 = $11953;
                var _flds$9 = Kind$Comp$compile$adt$get_fields$($11954);
                var $11956 = List$cons$(Pair$new$(_name$8, _flds$9), _tail$7);
                var $11952 = $11956;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11957 = List$nil;
                var $11952 = $11957;
                break;
        };
        return $11952;
    };
    const Kind$Comp$compile$adt$get_constructors = x0 => Kind$Comp$compile$adt$get_constructors$(x0);

    function Kind$Comp$Prim$data$(_name$1, _ctrs$2) {
        var $11958 = ({
            _: 'Kind.Comp.Prim.data',
            'name': _name$1,
            'ctrs': _ctrs$2
        });
        return $11958;
    };
    const Kind$Comp$Prim$data = x0 => x1 => Kind$Comp$Prim$data$(x0, x1);

    function Kind$Comp$compile$adt$(_term$1, _defs$2) {
        var _term$3 = Kind$Term$reduce$(_term$1, _defs$2);
        var self = _term$3;
        switch (self._) {
            case 'Kind.Term.all':
                var $11960 = self.self;
                var $11961 = self.body;
                var self = String$ends_with$($11960, ".Self");
                if (self) {
                    var _body$9 = $11961(Kind$Term$var$("", 0n))(Kind$Term$var$("", 0n));
                    var _data$10 = Kind$Comp$compile$adt$get_constructors$(_body$9);
                    var _name$11 = String$take$((String$length$($11960) - 5n <= 0n ? 0n : String$length$($11960) - 5n), $11960);
                    var $11963 = Maybe$some$(Kind$Comp$Prim$data$(_name$11, _data$10));
                    var $11962 = $11963;
                } else {
                    var $11964 = Maybe$none;
                    var $11962 = $11964;
                };
                var $11959 = $11962;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.ref':
            case 'Kind.Term.typ':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $11965 = Maybe$none;
                var $11959 = $11965;
                break;
        };
        return $11959;
    };
    const Kind$Comp$compile$adt = x0 => x1 => Kind$Comp$compile$adt$(x0, x1);

    function Kind$Comp$eli$(_prim$1, _expr$2) {
        var $11966 = ({
            _: 'Kind.Comp.eli',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $11966;
    };
    const Kind$Comp$eli = x0 => x1 => Kind$Comp$eli$(x0, x1);

    function Kind$Comp$app$(_func$1, _argm$2) {
        var $11967 = ({
            _: 'Kind.Comp.app',
            'func': _func$1,
            'argm': _argm$2
        });
        return $11967;
    };
    const Kind$Comp$app = x0 => x1 => Kind$Comp$app$(x0, x1);

    function Kind$Comp$let$(_name$1, _expr$2, _body$3) {
        var $11968 = ({
            _: 'Kind.Comp.let',
            'name': _name$1,
            'expr': _expr$2,
            'body': _body$3
        });
        return $11968;
    };
    const Kind$Comp$let = x0 => x1 => x2 => Kind$Comp$let$(x0, x1, x2);

    function Kind$Comp$nat$(_natx$1) {
        var $11969 = ({
            _: 'Kind.Comp.nat',
            'natx': _natx$1
        });
        return $11969;
    };
    const Kind$Comp$nat = x0 => Kind$Comp$nat$(x0);

    function Kind$Comp$chr$(_chrx$1) {
        var $11970 = ({
            _: 'Kind.Comp.chr',
            'chrx': _chrx$1
        });
        return $11970;
    };
    const Kind$Comp$chr = x0 => Kind$Comp$chr$(x0);

    function Kind$Comp$str$(_strx$1) {
        var $11971 = ({
            _: 'Kind.Comp.str',
            'strx': _strx$1
        });
        return $11971;
    };
    const Kind$Comp$str = x0 => Kind$Comp$str$(x0);

    function Kind$Comp$lam$(_name$1, _body$2) {
        var $11972 = ({
            _: 'Kind.Comp.lam',
            'name': _name$1,
            'body': _body$2
        });
        return $11972;
    };
    const Kind$Comp$lam = x0 => x1 => Kind$Comp$lam$(x0, x1);

    function Kind$Comp$ins$(_prim$1, _expr$2) {
        var $11973 = ({
            _: 'Kind.Comp.ins',
            'prim': _prim$1,
            'expr': _expr$2
        });
        return $11973;
    };
    const Kind$Comp$ins = x0 => x1 => Kind$Comp$ins$(x0, x1);

    function Kind$Comp$compile$(_term$1, _type$2, _defs$3, _size$4) {
        var self = _type$2;
        switch (self._) {
            case 'Maybe.some':
                var $11975 = self.value;
                var _typv$6 = Kind$Term$reduce$($11975, _defs$3);
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.lam':
                        var $11977 = self.name;
                        var $11978 = self.body;
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.all':
                                var $11980 = self.eras;
                                var $11981 = self.xtyp;
                                var $11982 = self.body;
                                var _self_var$14 = Kind$Term$ann$(Bool$true, _term$1, $11975);
                                var _name_uid$15 = ($11977 + ("$" + Nat$show$(_size$4)));
                                var _name_var$16 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$15, (_size$4 + 1n)), $11981);
                                var _body_typ$17 = $11982(_self_var$14)(_name_var$16);
                                var self = Kind$Comp$compile$($11978(_name_var$16), Maybe$some$(_body_typ$17), _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $11984 = self.fst;
                                        var self = $11980;
                                        if (self) {
                                            var $11986 = $11984;
                                            var _term_cmp$20 = $11986;
                                        } else {
                                            var $11987 = Kind$Comp$lam$(_name_uid$15, $11984);
                                            var _term_cmp$20 = $11987;
                                        };
                                        var self = Kind$Comp$compile$prim_of$($11975, _defs$3);
                                        switch (self._) {
                                            case 'Maybe.some':
                                                var $11988 = self.value;
                                                var $11989 = Kind$Comp$ins$($11988, _term_cmp$20);
                                                var _term_cmp$21 = $11989;
                                                break;
                                            case 'Maybe.none':
                                                var self = Kind$Comp$compile$adt$($11975, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $11991 = self.value;
                                                        var $11992 = Kind$Comp$ins$($11991, _term_cmp$20);
                                                        var $11990 = $11992;
                                                        break;
                                                    case 'Maybe.none':
                                                        var $11993 = _term_cmp$20;
                                                        var $11990 = $11993;
                                                        break;
                                                };
                                                var _term_cmp$21 = $11990;
                                                break;
                                        };
                                        var $11985 = Pair$new$(_term_cmp$21, $11975);
                                        var $11983 = $11985;
                                        break;
                                };
                                var $11979 = $11983;
                                break;
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.typ':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $11994 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $11979 = $11994;
                                break;
                        };
                        var $11976 = $11979;
                        break;
                    case 'Kind.Term.let':
                        var $11995 = self.name;
                        var $11996 = self.expr;
                        var $11997 = self.body;
                        var self = Kind$Comp$compile$($11996, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $11999 = self.fst;
                                var $12000 = self.snd;
                                var _name_uid$12 = ($11995 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$13 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$12, (_size$4 + 1n)), $12000);
                                var self = Kind$Comp$compile$($11997(_expr_var$13), _type$2, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12002 = self.fst;
                                        var $12003 = self.snd;
                                        var _term_cmp$16 = Kind$Comp$let$(_name_uid$12, $11999, $12002);
                                        var _term_typ$17 = $12003;
                                        var $12004 = Pair$new$(_term_cmp$16, _term_typ$17);
                                        var $12001 = $12004;
                                        break;
                                };
                                var $11998 = $12001;
                                break;
                        };
                        var $11976 = $11998;
                        break;
                    case 'Kind.Term.ori':
                        var $12005 = self.expr;
                        var $12006 = Kind$Comp$compile$($12005, _type$2, _defs$3, _size$4);
                        var $11976 = $12006;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.app':
                    case 'Kind.Term.get':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12008 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11975);
                                var $12007 = $12008;
                                break;
                            case 'Kind.Term.typ':
                                var $12009 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12007 = $12009;
                                break;
                        };
                        var $11976 = $12007;
                        break;
                    case 'Kind.Term.ref':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.new':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12011 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11975);
                                var $12010 = $12011;
                                break;
                            case 'Kind.Term.typ':
                                var $12012 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12010 = $12012;
                                break;
                        };
                        var $11976 = $12010;
                        break;
                    case 'Kind.Term.typ':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12014 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11975);
                                var $12013 = $12014;
                                break;
                            case 'Kind.Term.typ':
                                var $12015 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12013 = $12015;
                                break;
                        };
                        var $11976 = $12013;
                        break;
                    case 'Kind.Term.all':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12017 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11975);
                                var $12016 = $12017;
                                break;
                            case 'Kind.Term.typ':
                                var $12018 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12016 = $12018;
                                break;
                        };
                        var $11976 = $12016;
                        break;
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12020 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11975);
                                var $12019 = $12020;
                                break;
                            case 'Kind.Term.typ':
                                var $12021 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12019 = $12021;
                                break;
                        };
                        var $11976 = $12019;
                        break;
                    case 'Kind.Term.cse':
                        var self = _typv$6;
                        switch (self._) {
                            case 'Kind.Term.var':
                            case 'Kind.Term.ref':
                            case 'Kind.Term.all':
                            case 'Kind.Term.lam':
                            case 'Kind.Term.app':
                            case 'Kind.Term.let':
                            case 'Kind.Term.def':
                            case 'Kind.Term.ann':
                            case 'Kind.Term.gol':
                            case 'Kind.Term.hol':
                            case 'Kind.Term.nat':
                            case 'Kind.Term.chr':
                            case 'Kind.Term.str':
                            case 'Kind.Term.num':
                            case 'Kind.Term.cse':
                            case 'Kind.Term.new':
                            case 'Kind.Term.get':
                            case 'Kind.Term.set':
                            case 'Kind.Term.ope':
                            case 'Kind.Term.ori':
                                var $12023 = Pair$new$(Pair$fst$(Kind$Comp$compile$(_term$1, Maybe$none, _defs$3, _size$4)), $11975);
                                var $12022 = $12023;
                                break;
                            case 'Kind.Term.typ':
                                var $12024 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12022 = $12024;
                                break;
                        };
                        var $11976 = $12022;
                        break;
                };
                var $11974 = $11976;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12026 = self.name;
                        var $12027 = self.indx;
                        var $12028 = Pair$new$(Kind$Comp$var$($12026), Kind$Term$var$($12026, $12027));
                        var $12025 = $12028;
                        break;
                    case 'Kind.Term.ref':
                        var $12029 = self.name;
                        var self = Kind$Map$get$($12029, _defs$3);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12031 = self.value;
                                var $12032 = Pair$new$(Kind$Comp$ref$($12029), (() => {
                                    var self = $12031;
                                    switch (self._) {
                                        case 'Kind.Def.new':
                                            var $12033 = self.type;
                                            var $12034 = $12033;
                                            return $12034;
                                    };
                                })());
                                var $12030 = $12032;
                                break;
                            case 'Maybe.none':
                                var $12035 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                var $12030 = $12035;
                                break;
                        };
                        var $12025 = $12030;
                        break;
                    case 'Kind.Term.app':
                        var $12036 = self.func;
                        var $12037 = self.argm;
                        var self = Kind$Comp$compile$($12036, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12039 = self.fst;
                                var $12040 = self.snd;
                                var self = Kind$Term$reduce$($12040, _defs$3);
                                switch (self._) {
                                    case 'Kind.Term.all':
                                        var $12042 = self.eras;
                                        var $12043 = self.xtyp;
                                        var $12044 = self.body;
                                        var self = Kind$Comp$compile$($12037, Maybe$some$($12043), _defs$3, _size$4);
                                        switch (self._) {
                                            case 'Pair.new':
                                                var $12046 = self.fst;
                                                var _term_typ$16 = $12044($12036)($12037);
                                                var self = Kind$Comp$compile$prim_of$($12040, _defs$3);
                                                switch (self._) {
                                                    case 'Maybe.some':
                                                        var $12048 = self.value;
                                                        var $12049 = Kind$Comp$eli$($12048, $12039);
                                                        var _term_cmp$17 = $12049;
                                                        break;
                                                    case 'Maybe.none':
                                                        var self = Kind$Comp$compile$adt$($12040, _defs$3);
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $12051 = self.value;
                                                                var $12052 = Kind$Comp$eli$($12051, $12039);
                                                                var $12050 = $12052;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $12053 = $12039;
                                                                var $12050 = $12053;
                                                                break;
                                                        };
                                                        var _term_cmp$17 = $12050;
                                                        break;
                                                };
                                                var self = $12042;
                                                if (self) {
                                                    var $12054 = _term_cmp$17;
                                                    var _term_cmp$18 = $12054;
                                                } else {
                                                    var $12055 = Kind$Comp$app$(_term_cmp$17, $12046);
                                                    var _term_cmp$18 = $12055;
                                                };
                                                var $12047 = Pair$new$(_term_cmp$18, _term_typ$16);
                                                var $12045 = $12047;
                                                break;
                                        };
                                        var $12041 = $12045;
                                        break;
                                    case 'Kind.Term.var':
                                    case 'Kind.Term.ref':
                                    case 'Kind.Term.typ':
                                    case 'Kind.Term.lam':
                                    case 'Kind.Term.app':
                                    case 'Kind.Term.let':
                                    case 'Kind.Term.def':
                                    case 'Kind.Term.ann':
                                    case 'Kind.Term.gol':
                                    case 'Kind.Term.hol':
                                    case 'Kind.Term.nat':
                                    case 'Kind.Term.chr':
                                    case 'Kind.Term.str':
                                    case 'Kind.Term.num':
                                    case 'Kind.Term.cse':
                                    case 'Kind.Term.new':
                                    case 'Kind.Term.get':
                                    case 'Kind.Term.set':
                                    case 'Kind.Term.ope':
                                    case 'Kind.Term.ori':
                                        var $12056 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                                        var $12041 = $12056;
                                        break;
                                };
                                var $12038 = $12041;
                                break;
                        };
                        var $12025 = $12038;
                        break;
                    case 'Kind.Term.let':
                        var $12057 = self.name;
                        var $12058 = self.expr;
                        var $12059 = self.body;
                        var self = Kind$Comp$compile$($12058, Maybe$none, _defs$3, _size$4);
                        switch (self._) {
                            case 'Pair.new':
                                var $12061 = self.fst;
                                var $12062 = self.snd;
                                var _name_uid$10 = ($12057 + ("$" + Nat$show$(_size$4)));
                                var _expr_var$11 = Kind$Term$ann$(Bool$true, Kind$Term$var$(_name_uid$10, (_size$4 + 1n)), $12062);
                                var self = Kind$Comp$compile$($12059(_expr_var$11), Maybe$none, _defs$3, (_size$4 + 1n));
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12064 = self.fst;
                                        var $12065 = self.snd;
                                        var $12066 = Pair$new$(Kind$Comp$let$(_name_uid$10, $12061, $12064), $12065);
                                        var $12063 = $12066;
                                        break;
                                };
                                var $12060 = $12063;
                                break;
                        };
                        var $12025 = $12060;
                        break;
                    case 'Kind.Term.def':
                        var $12067 = self.expr;
                        var $12068 = self.body;
                        var $12069 = Kind$Comp$compile$($12068($12067), Maybe$none, _defs$3, _size$4);
                        var $12025 = $12069;
                        break;
                    case 'Kind.Term.ann':
                        var $12070 = self.term;
                        var $12071 = self.type;
                        var $12072 = Kind$Comp$compile$($12070, Maybe$some$($12071), _defs$3, _size$4);
                        var $12025 = $12072;
                        break;
                    case 'Kind.Term.nat':
                        var $12073 = self.natx;
                        var $12074 = Pair$new$(Kind$Comp$nat$($12073), Kind$Term$ref$("Nat"));
                        var $12025 = $12074;
                        break;
                    case 'Kind.Term.chr':
                        var $12075 = self.chrx;
                        var $12076 = Pair$new$(Kind$Comp$chr$($12075), Kind$Term$ref$("Char"));
                        var $12025 = $12076;
                        break;
                    case 'Kind.Term.str':
                        var $12077 = self.strx;
                        var $12078 = Pair$new$(Kind$Comp$str$($12077), Kind$Term$ref$("String"));
                        var $12025 = $12078;
                        break;
                    case 'Kind.Term.ori':
                        var $12079 = self.expr;
                        var $12080 = Kind$Comp$compile$($12079, Maybe$none, _defs$3, _size$4);
                        var $12025 = $12080;
                        break;
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12081 = Pair$new$(Kind$Comp$nil, Kind$Term$typ);
                        var $12025 = $12081;
                        break;
                };
                var $11974 = $12025;
                break;
        };
        return $11974;
    };
    const Kind$Comp$compile = x0 => x1 => x2 => x3 => Kind$Comp$compile$(x0, x1, x2, x3);

    function Kind$Comp$Defs$compile$defn$(_defn$1, _defs$2) {
        var self = _defn$1;
        switch (self._) {
            case 'Kind.Def.new':
                var $12083 = self.term;
                var $12084 = self.type;
                var self = Kind$Comp$compile$($12083, Maybe$some$($12084), _defs$2, 0n);
                switch (self._) {
                    case 'Pair.new':
                        var $12086 = self.fst;
                        var $12087 = $12086;
                        var $12085 = $12087;
                        break;
                };
                var $12082 = $12085;
                break;
        };
        return $12082;
    };
    const Kind$Comp$Defs$compile$defn = x0 => x1 => Kind$Comp$Defs$compile$defn$(x0, x1);

    function Kind$Comp$Defs$compile$(_defs$1) {
        var _defs$2 = BitsMap$map$((_x$2 => {
            var $12089 = Kind$Comp$Defs$compile$defn$adjust$(_x$2, _defs$1);
            return $12089;
        }), _defs$1);
        var _defs$3 = BitsMap$map$((_x$3 => {
            var $12090 = Kind$Comp$Defs$compile$defn$(_x$3, _defs$2);
            return $12090;
        }), _defs$2);
        var $12088 = _defs$3;
        return $12088;
    };
    const Kind$Comp$Defs$compile = x0 => Kind$Comp$Defs$compile$(x0);

    function Kind$Comp$dependency_sort$go$(_term$1, _defs$2, _seen$3, _list$4) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.ref':
                var $12092 = self.name;
                var self = Kind$Map$get$($12092, _seen$3);
                switch (self._) {
                    case 'Maybe.none':
                        var self = Kind$Map$get$($12092, _defs$2);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12095 = self.value;
                                var _term$7 = $12095;
                                var _seen$8 = Kind$Map$set$($12092, Unit$new, _seen$3);
                                var self = Kind$Comp$dependency_sort$go$(_term$7, _defs$2, _seen$8, _list$4);
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12097 = self.fst;
                                        var $12098 = self.snd;
                                        var _list$11 = List$cons$(Pair$new$($12092, $12095), $12098);
                                        var $12099 = Pair$new$($12097, _list$11);
                                        var $12096 = $12099;
                                        break;
                                };
                                var $12094 = $12096;
                                break;
                            case 'Maybe.none':
                                var $12100 = Pair$new$(_seen$3, _list$4);
                                var $12094 = $12100;
                                break;
                        };
                        var $12093 = $12094;
                        break;
                    case 'Maybe.some':
                        var $12101 = Pair$new$(_seen$3, _list$4);
                        var $12093 = $12101;
                        break;
                };
                var $12091 = $12093;
                break;
            case 'Kind.Comp.lam':
                var $12102 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12102, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12104 = self.fst;
                        var $12105 = self.snd;
                        var $12106 = Pair$new$($12104, $12105);
                        var $12103 = $12106;
                        break;
                };
                var $12091 = $12103;
                break;
            case 'Kind.Comp.app':
                var $12107 = self.func;
                var $12108 = self.argm;
                var self = Kind$Comp$dependency_sort$go$($12107, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12110 = self.fst;
                        var $12111 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12108, _defs$2, $12110, $12111);
                        switch (self._) {
                            case 'Pair.new':
                                var $12113 = self.fst;
                                var $12114 = self.snd;
                                var $12115 = Pair$new$($12113, $12114);
                                var $12112 = $12115;
                                break;
                        };
                        var $12109 = $12112;
                        break;
                };
                var $12091 = $12109;
                break;
            case 'Kind.Comp.let':
                var $12116 = self.expr;
                var $12117 = self.body;
                var self = Kind$Comp$dependency_sort$go$($12116, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12119 = self.fst;
                        var $12120 = self.snd;
                        var self = Kind$Comp$dependency_sort$go$($12117, _defs$2, $12119, $12120);
                        switch (self._) {
                            case 'Pair.new':
                                var $12122 = self.fst;
                                var $12123 = self.snd;
                                var $12124 = Pair$new$($12122, $12123);
                                var $12121 = $12124;
                                break;
                        };
                        var $12118 = $12121;
                        break;
                };
                var $12091 = $12118;
                break;
            case 'Kind.Comp.eli':
                var $12125 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12125, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12127 = self.fst;
                        var $12128 = self.snd;
                        var $12129 = Pair$new$($12127, $12128);
                        var $12126 = $12129;
                        break;
                };
                var $12091 = $12126;
                break;
            case 'Kind.Comp.ins':
                var $12130 = self.expr;
                var self = Kind$Comp$dependency_sort$go$($12130, _defs$2, _seen$3, _list$4);
                switch (self._) {
                    case 'Pair.new':
                        var $12132 = self.fst;
                        var $12133 = self.snd;
                        var $12134 = Pair$new$($12132, $12133);
                        var $12131 = $12134;
                        break;
                };
                var $12091 = $12131;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12135 = Pair$new$(_seen$3, _list$4);
                var $12091 = $12135;
                break;
        };
        return $12091;
    };
    const Kind$Comp$dependency_sort$go = x0 => x1 => x2 => x3 => Kind$Comp$dependency_sort$go$(x0, x1, x2, x3);

    function Kind$Comp$dependency_sort$(_main$1, _defs$2) {
        var _term$3 = Kind$Comp$ref$(_main$1);
        var _seen$4 = Kind$Map$new;
        var _list$5 = List$nil;
        var self = Kind$Comp$dependency_sort$go$(_term$3, _defs$2, _seen$4, _list$5);
        switch (self._) {
            case 'Pair.new':
                var $12137 = self.snd;
                var $12138 = List$reverse$($12137);
                var $12136 = $12138;
                break;
        };
        return $12136;
    };
    const Kind$Comp$dependency_sort = x0 => x1 => Kind$Comp$dependency_sort$(x0, x1);

    function Kind$Comp$replace$(_str$1, _vars$2) {
        var self = _str$1;
        if (self.length === 0) {
            var $12140 = _str$1;
            var $12139 = $12140;
        } else {
            var $12141 = self.charCodeAt(0);
            var $12142 = self.slice(1);
            var self = $12142;
            if (self.length === 0) {
                var $12144 = _str$1;
                var $12143 = $12144;
            } else {
                var $12145 = self.charCodeAt(0);
                var $12146 = self.slice(1);
                var _a$7 = $12141;
                var _b$8 = $12145;
                var self = ((_a$7 === 36) && ((_b$8 >= 48) && (_b$8 <= 57)));
                if (self) {
                    var $12148 = (Maybe$default$(List$get$(Char$dec_value$(_b$8), _vars$2), "?") + Kind$Comp$replace$($12146, _vars$2));
                    var $12147 = $12148;
                } else {
                    var $12149 = String$cons$(_a$7, Kind$Comp$replace$($12142, _vars$2));
                    var $12147 = $12149;
                };
                var $12143 = $12147;
            };
            var $12139 = $12143;
        };
        return $12139;
    };
    const Kind$Comp$replace = x0 => x1 => Kind$Comp$replace$(x0, x1);

    function List$create$go$(_len$2, _create_value$3, _result$4) {
        var List$create$go$ = (_len$2, _create_value$3, _result$4) => ({
            ctr: 'TCO',
            arg: [_len$2, _create_value$3, _result$4]
        });
        var List$create$go = _len$2 => _create_value$3 => _result$4 => List$create$go$(_len$2, _create_value$3, _result$4);
        var arg = [_len$2, _create_value$3, _result$4];
        while (true) {
            let [_len$2, _create_value$3, _result$4] = arg;
            var R = (() => {
                var self = _len$2;
                if (self === 0n) {
                    var $12150 = _result$4;
                    return $12150;
                } else {
                    var $12151 = (self - 1n);
                    var $12152 = List$create$go$($12151, _create_value$3, List$cons$(_create_value$3($12151), _result$4));
                    return $12152;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$create$go = x0 => x1 => x2 => List$create$go$(x0, x1, x2);

    function List$create$(_len$2, _create_value$3) {
        var $12153 = List$create$go$(_len$2, _create_value$3, List$nil);
        return $12153;
    };
    const List$create = x0 => x1 => List$create$(x0, x1);

    function Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, _j$6) {
        var self = _ctor$5;
        switch (self._) {
            case 'Pair.new':
                var $12155 = self.fst;
                var $12156 = self.snd;
                var self = (_j$6 === $12155);
                if (self) {
                    var $12158 = Kind$Comp$replace$($12156, List$create$($12155, (_j$9 => {
                        var $12159 = ("x" + Nat$show$(_j$9));
                        return $12159;
                    })));
                    var $12157 = $12158;
                } else {
                    var self = _lang$1;
                    switch (self._) {
                        case 'Kind.Comp.Language.new':
                            var $12161 = self.gram;
                            var $12162 = $12161;
                            var self = $12162;
                            break;
                    };
                    switch (self._) {
                        case 'Kind.Comp.Grammar.new':
                            var $12163 = self.lambda;
                            var $12164 = $12163;
                            var $12160 = $12164;
                            break;
                    };
                    var $12160 = $12160(("x" + Nat$show$(_j$6)))(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$5, Nat$succ$(_j$6)));
                    var $12157 = $12160;
                };
                var $12154 = $12157;
                break;
        };
        return $12154;
    };
    const Kind$Comp$Prim$instantiator$go = x0 => x1 => x2 => x3 => x4 => x5 => Kind$Comp$Prim$instantiator$go$(x0, x1, x2, x3, x4, x5);

    function Kind$Comp$Prim$instantiator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12166 = self.nati;
                var $12167 = $12166;
                var _shape$5 = $12167;
                break;
        };
        var _shape$5 = _shape$5(_prim$2);
        var self = _shape$5;
        switch (self._) {
            case 'Kind.Comp.Native.new':
                var $12168 = self.inst;
                var _text$8 = "x";
                var _text$9 = (() => {
                    var $12171 = _text$8;
                    var $12172 = $12168;
                    let _text$10 = $12171;
                    let _ctor$9;
                    while ($12172._ === 'List.cons') {
                        _ctor$9 = $12172.head;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12173 = self.gram;
                                var $12174 = $12173;
                                var self = $12174;
                                break;
                        };
                        switch (self._) {
                            case 'Kind.Comp.Grammar.new':
                                var $12175 = self.application;
                                var $12176 = $12175;
                                var $12171 = $12176;
                                break;
                        };
                        var $12171 = $12171(_text$10)(Kind$Comp$Prim$instantiator$go$(_lang$1, _prim$2, _depth$3, _defs$4, _ctor$9, 0n));
                        _text$10 = $12171;
                        $12172 = $12172.tail;
                    }
                    return _text$10;
                })();
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12177 = self.gram;
                        var $12178 = $12177;
                        var self = $12178;
                        break;
                };
                switch (self._) {
                    case 'Kind.Comp.Grammar.new':
                        var $12179 = self.lambda;
                        var $12180 = $12179;
                        var $12169 = $12180;
                        break;
                };
                var $12169 = $12169("x")(_text$9);
                var $12165 = $12169;
                break;
        };
        return $12165;
    };
    const Kind$Comp$Prim$instantiator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$instantiator$(x0, x1, x2, x3);

    function Kind$Comp$get_args$go$(_term$1, _args$2) {
        var Kind$Comp$get_args$go$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$get_args$go = _term$1 => _args$2 => Kind$Comp$get_args$go$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Comp.app':
                        var $12181 = self.func;
                        var $12182 = self.argm;
                        var $12183 = Kind$Comp$get_args$go$($12181, List$cons$($12182, _args$2));
                        return $12183;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.ref':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.eli':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12184 = Pair$new$(_term$1, _args$2);
                        return $12184;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$get_args$go = x0 => x1 => Kind$Comp$get_args$go$(x0, x1);

    function Kind$Comp$get_args$(_term$1) {
        var $12185 = Kind$Comp$get_args$go$(_term$1, List$nil);
        return $12185;
    };
    const Kind$Comp$get_args = x0 => Kind$Comp$get_args$(x0);

    function Kind$Comp$get_arity$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12187 = self.body;
                var $12188 = (1n + Kind$Comp$get_arity$($12187));
                var $12186 = $12188;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12189 = 0n;
                var $12186 = $12189;
                break;
        };
        return $12186;
    };
    const Kind$Comp$get_arity = x0 => Kind$Comp$get_arity$(x0);

    function Kind$Comp$get_vars$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Comp.lam':
                var $12191 = self.name;
                var $12192 = self.body;
                var self = Kind$Comp$get_vars$($12192);
                switch (self._) {
                    case 'Pair.new':
                        var $12194 = self.fst;
                        var $12195 = self.snd;
                        var $12196 = Pair$new$(List$cons$($12191, $12194), $12195);
                        var $12193 = $12196;
                        break;
                };
                var $12190 = $12193;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.ins':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12197 = Pair$new$(List$nil, _term$1);
                var $12190 = $12197;
                break;
        };
        return $12190;
    };
    const Kind$Comp$get_vars = x0 => Kind$Comp$get_vars$(x0);

    function Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) {
        var Kind$Comp$Prim$inst$go$ = (_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7) => ({
            ctr: 'TCO',
            arg: [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7]
        });
        var Kind$Comp$Prim$inst$go = _lang$1 => _name$2 => _inst$3 => _vars$4 => _args$5 => _depth$6 => _defs$7 => Kind$Comp$Prim$inst$go$(_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7);
        var arg = [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7];
        while (true) {
            let [_lang$1, _name$2, _inst$3, _vars$4, _args$5, _depth$6, _defs$7] = arg;
            var R = (() => {
                var self = _inst$3;
                switch (self._) {
                    case 'List.cons':
                        var $12198 = self.head;
                        var $12199 = self.tail;
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.cons':
                                var $12201 = self.head;
                                var $12202 = self.tail;
                                var self = (_name$2 === $12201);
                                if (self) {
                                    var self = $12198;
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12205 = self.fst;
                                            var $12206 = self.snd;
                                            var self = ($12205 === (list_length(_args$5)));
                                            if (self) {
                                                var $12208 = Maybe$some$(Kind$Comp$replace$($12206, List$mapped$(_args$5, (_x$14 => {
                                                    var $12209 = Kind$Comp$transpile$term$(_lang$1, _x$14, _depth$6, _defs$7);
                                                    return $12209;
                                                }))));
                                                var $12207 = $12208;
                                            } else {
                                                var $12210 = Maybe$none;
                                                var $12207 = $12210;
                                            };
                                            var $12204 = $12207;
                                            break;
                                    };
                                    var $12203 = $12204;
                                } else {
                                    var $12211 = Kind$Comp$Prim$inst$go$(_lang$1, _name$2, $12199, $12202, _args$5, _depth$6, _defs$7);
                                    var $12203 = $12211;
                                };
                                var $12200 = $12203;
                                break;
                            case 'List.nil':
                                var $12212 = Maybe$none;
                                var $12200 = $12212;
                                break;
                        };
                        return $12200;
                    case 'List.nil':
                        var self = _vars$4;
                        switch (self._) {
                            case 'List.nil':
                            case 'List.cons':
                                var $12214 = Maybe$none;
                                var $12213 = $12214;
                                break;
                        };
                        return $12213;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$Prim$inst$go = x0 => x1 => x2 => x3 => x4 => x5 => x6 => Kind$Comp$Prim$inst$go$(x0, x1, x2, x3, x4, x5, x6);

    function Kind$Comp$Prim$inst$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = _term$2;
        switch (self._) {
            case 'Kind.Comp.ins':
                var $12216 = self.prim;
                var $12217 = self.expr;
                var self = _lang$1;
                switch (self._) {
                    case 'Kind.Comp.Language.new':
                        var $12219 = self.nati;
                        var $12220 = $12219;
                        var _shape$7 = $12220;
                        break;
                };
                var _shape$7 = _shape$7($12216);
                var self = _shape$7;
                switch (self._) {
                    case 'Kind.Comp.Native.new':
                        var $12221 = self.inst;
                        var self = Kind$Comp$get_vars$($12217);
                        switch (self._) {
                            case 'Pair.new':
                                var $12223 = self.fst;
                                var $12224 = self.snd;
                                var self = ((list_length($12221)) === (list_length($12223)));
                                if (self) {
                                    var self = Kind$Comp$get_args$($12224);
                                    switch (self._) {
                                        case 'Pair.new':
                                            var $12227 = self.fst;
                                            var $12228 = self.snd;
                                            var self = $12227;
                                            switch (self._) {
                                                case 'Kind.Comp.var':
                                                    var $12230 = self.name;
                                                    var $12231 = Kind$Comp$Prim$inst$go$(_lang$1, $12230, $12221, $12223, $12228, _depth$3, _defs$4);
                                                    var $12229 = $12231;
                                                    break;
                                                case 'Kind.Comp.ref':
                                                    var $12232 = self.name;
                                                    var $12233 = Kind$Comp$Prim$inst$go$(_lang$1, $12232, $12221, $12223, $12228, _depth$3, _defs$4);
                                                    var $12229 = $12233;
                                                    break;
                                                case 'Kind.Comp.nil':
                                                case 'Kind.Comp.lam':
                                                case 'Kind.Comp.app':
                                                case 'Kind.Comp.let':
                                                case 'Kind.Comp.eli':
                                                case 'Kind.Comp.ins':
                                                case 'Kind.Comp.nat':
                                                case 'Kind.Comp.chr':
                                                case 'Kind.Comp.str':
                                                case 'Kind.Comp.txt':
                                                    var $12234 = Maybe$none;
                                                    var $12229 = $12234;
                                                    break;
                                            };
                                            var $12226 = $12229;
                                            break;
                                    };
                                    var $12225 = $12226;
                                } else {
                                    var $12235 = Maybe$none;
                                    var $12225 = $12235;
                                };
                                var $12222 = $12225;
                                break;
                        };
                        var $12218 = $12222;
                        break;
                };
                var $12215 = $12218;
                break;
            case 'Kind.Comp.nil':
            case 'Kind.Comp.var':
            case 'Kind.Comp.ref':
            case 'Kind.Comp.lam':
            case 'Kind.Comp.app':
            case 'Kind.Comp.let':
            case 'Kind.Comp.eli':
            case 'Kind.Comp.nat':
            case 'Kind.Comp.chr':
            case 'Kind.Comp.str':
            case 'Kind.Comp.txt':
                var $12236 = Maybe$none;
                var $12215 = $12236;
                break;
        };
        return $12215;
    };
    const Kind$Comp$Prim$inst = x0 => x1 => x2 => x3 => Kind$Comp$Prim$inst$(x0, x1, x2, x3);

    function Word$fold$(_nil$3, _w0$4, _w1$5, _word$6) {
        var self = _word$6;
        switch (self._) {
            case 'Word.o':
                var $12238 = self.pred;
                var $12239 = _w0$4(Word$fold$(_nil$3, _w0$4, _w1$5, $12238));
                var $12237 = $12239;
                break;
            case 'Word.i':
                var $12240 = self.pred;
                var $12241 = _w1$5(Word$fold$(_nil$3, _w0$4, _w1$5, $12240));
                var $12237 = $12241;
                break;
            case 'Word.e':
                var $12242 = _nil$3;
                var $12237 = $12242;
                break;
        };
        return $12237;
    };
    const Word$fold = x0 => x1 => x2 => x3 => Word$fold$(x0, x1, x2, x3);

    function Word$to_nat$(_word$2) {
        var $12243 = Word$fold$(0n, a1 => (2n * a1), (_x$4 => {
            var $12244 = Nat$succ$((2n * _x$4));
            return $12244;
        }), _word$2);
        return $12243;
    };
    const Word$to_nat = x0 => Word$to_nat$(x0);
    const U16$to_nat = a0 => (BigInt(a0));

    function Kind$Comp$transpile$term$(_lang$1, _comp$2, _depth$3, _defs$4) {
        var _go$5 = Kind$Comp$transpile$term(_lang$1);
        var self = Kind$Comp$Prim$inst$(_lang$1, _comp$2, _depth$3, _defs$4);
        switch (self._) {
            case 'Maybe.some':
                var $12246 = self.value;
                var $12247 = $12246;
                var $12245 = $12247;
                break;
            case 'Maybe.none':
                var self = Kind$Comp$Prim$elim$(_lang$1, _comp$2, _depth$3, _defs$4);
                switch (self._) {
                    case 'Maybe.some':
                        var $12249 = self.value;
                        var $12250 = $12249;
                        var $12248 = $12250;
                        break;
                    case 'Maybe.none':
                        var self = _comp$2;
                        switch (self._) {
                            case 'Kind.Comp.var':
                                var $12252 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12254 = self.gram;
                                        var $12255 = $12254;
                                        var self = $12255;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12256 = self.name;
                                        var $12257 = $12256;
                                        var $12253 = $12257;
                                        break;
                                };
                                var $12253 = $12253($12252);
                                var $12251 = $12253;
                                break;
                            case 'Kind.Comp.ref':
                                var $12258 = self.name;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12260 = self.gram;
                                        var $12261 = $12260;
                                        var self = $12261;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12262 = self.name;
                                        var $12263 = $12262;
                                        var $12259 = $12263;
                                        break;
                                };
                                var $12259 = $12259($12258);
                                var $12251 = $12259;
                                break;
                            case 'Kind.Comp.lam':
                                var $12264 = self.name;
                                var $12265 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12267 = self.gram;
                                        var $12268 = $12267;
                                        var self = $12268;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12269 = self.lambda;
                                        var $12270 = $12269;
                                        var $12266 = $12270;
                                        break;
                                };
                                var $12266 = $12266((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12271 = self.gram;
                                            var $12272 = $12271;
                                            var self = $12272;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12273 = self.name;
                                            var $12274 = $12273;
                                            return $12274;
                                    };
                                })()($12264))(_go$5($12265)(Nat$succ$(_depth$3))(_defs$4));
                                var $12251 = $12266;
                                break;
                            case 'Kind.Comp.app':
                                var $12275 = self.func;
                                var $12276 = self.argm;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12278 = self.gram;
                                        var $12279 = $12278;
                                        var self = $12279;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12280 = self.application;
                                        var $12281 = $12280;
                                        var $12277 = $12281;
                                        break;
                                };
                                var $12277 = $12277(_go$5($12275)(_depth$3)(_defs$4))(_go$5($12276)(_depth$3)(_defs$4));
                                var $12251 = $12277;
                                break;
                            case 'Kind.Comp.let':
                                var $12282 = self.name;
                                var $12283 = self.expr;
                                var $12284 = self.body;
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12286 = self.gram;
                                        var $12287 = $12286;
                                        var self = $12287;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12288 = self.local_definition;
                                        var $12289 = $12288;
                                        var $12285 = $12289;
                                        break;
                                };
                                var $12285 = $12285((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12290 = self.gram;
                                            var $12291 = $12290;
                                            var self = $12291;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12292 = self.name;
                                            var $12293 = $12292;
                                            return $12293;
                                    };
                                })()($12282))(_go$5($12283)(_depth$3)(_defs$4))(_go$5($12284)(Nat$succ$(_depth$3))(_defs$4));
                                var $12251 = $12285;
                                break;
                            case 'Kind.Comp.eli':
                                var $12294 = self.prim;
                                var $12295 = self.expr;
                                var self = $12294;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12298 = self.gram;
                                                var $12299 = $12298;
                                                var self = $12299;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12300 = self.application;
                                                var $12301 = $12300;
                                                var $12297 = $12301;
                                                break;
                                        };
                                        var $12297 = $12297((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12302 = self.gram;
                                                    var $12303 = $12302;
                                                    var self = $12303;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12304 = self.inst_name;
                                                    var $12305 = $12304;
                                                    return $12305;
                                            };
                                        })()("Unit"))(_go$5($12295)(_depth$3)(_defs$4));
                                        var $12296 = $12297;
                                        break;
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12307 = self.gram;
                                                var $12308 = $12307;
                                                var self = $12308;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12309 = self.application;
                                                var $12310 = $12309;
                                                var $12306 = $12310;
                                                break;
                                        };
                                        var $12306 = $12306((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12311 = self.gram;
                                                    var $12312 = $12311;
                                                    var self = $12312;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12313 = self.inst_name;
                                                    var $12314 = $12313;
                                                    return $12314;
                                            };
                                        })()("Bool"))(_go$5($12295)(_depth$3)(_defs$4));
                                        var $12296 = $12306;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12316 = self.gram;
                                                var $12317 = $12316;
                                                var self = $12317;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12318 = self.application;
                                                var $12319 = $12318;
                                                var $12315 = $12319;
                                                break;
                                        };
                                        var $12315 = $12315((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12320 = self.gram;
                                                    var $12321 = $12320;
                                                    var self = $12321;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12322 = self.inst_name;
                                                    var $12323 = $12322;
                                                    return $12323;
                                            };
                                        })()("Nat"))(_go$5($12295)(_depth$3)(_defs$4));
                                        var $12296 = $12315;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12325 = self.gram;
                                                var $12326 = $12325;
                                                var self = $12326;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12327 = self.application;
                                                var $12328 = $12327;
                                                var $12324 = $12328;
                                                break;
                                        };
                                        var $12324 = $12324((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12329 = self.gram;
                                                    var $12330 = $12329;
                                                    var self = $12330;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12331 = self.inst_name;
                                                    var $12332 = $12331;
                                                    return $12332;
                                            };
                                        })()("U16"))(_go$5($12295)(_depth$3)(_defs$4));
                                        var $12296 = $12324;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12334 = self.gram;
                                                var $12335 = $12334;
                                                var self = $12335;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12336 = self.application;
                                                var $12337 = $12336;
                                                var $12333 = $12337;
                                                break;
                                        };
                                        var $12333 = $12333((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12338 = self.gram;
                                                    var $12339 = $12338;
                                                    var self = $12339;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12340 = self.inst_name;
                                                    var $12341 = $12340;
                                                    return $12341;
                                            };
                                        })()("String"))(_go$5($12295)(_depth$3)(_defs$4));
                                        var $12296 = $12333;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12342 = _go$5($12295)(_depth$3)(_defs$4);
                                        var $12296 = $12342;
                                        break;
                                };
                                var $12251 = $12296;
                                break;
                            case 'Kind.Comp.ins':
                                var $12343 = self.prim;
                                var $12344 = self.expr;
                                var self = $12343;
                                switch (self._) {
                                    case 'Kind.Comp.Prim.unit':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12347 = self.gram;
                                                var $12348 = $12347;
                                                var self = $12348;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12349 = self.application;
                                                var $12350 = $12349;
                                                var $12346 = $12350;
                                                break;
                                        };
                                        var $12346 = $12346((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12351 = self.gram;
                                                    var $12352 = $12351;
                                                    var self = $12352;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12353 = self.inst_name;
                                                    var $12354 = $12353;
                                                    return $12354;
                                            };
                                        })()("Unit"))(_go$5($12344)(_depth$3)(_defs$4));
                                        var $12345 = $12346;
                                        break;
                                    case 'Kind.Comp.Prim.bool':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12356 = self.gram;
                                                var $12357 = $12356;
                                                var self = $12357;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12358 = self.application;
                                                var $12359 = $12358;
                                                var $12355 = $12359;
                                                break;
                                        };
                                        var $12355 = $12355((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12360 = self.gram;
                                                    var $12361 = $12360;
                                                    var self = $12361;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12362 = self.inst_name;
                                                    var $12363 = $12362;
                                                    return $12363;
                                            };
                                        })()("Bool"))(_go$5($12344)(_depth$3)(_defs$4));
                                        var $12345 = $12355;
                                        break;
                                    case 'Kind.Comp.Prim.nat':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12365 = self.gram;
                                                var $12366 = $12365;
                                                var self = $12366;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12367 = self.application;
                                                var $12368 = $12367;
                                                var $12364 = $12368;
                                                break;
                                        };
                                        var $12364 = $12364((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12369 = self.gram;
                                                    var $12370 = $12369;
                                                    var self = $12370;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12371 = self.inst_name;
                                                    var $12372 = $12371;
                                                    return $12372;
                                            };
                                        })()("Nat"))(_go$5($12344)(_depth$3)(_defs$4));
                                        var $12345 = $12364;
                                        break;
                                    case 'Kind.Comp.Prim.u16':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12374 = self.gram;
                                                var $12375 = $12374;
                                                var self = $12375;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12376 = self.application;
                                                var $12377 = $12376;
                                                var $12373 = $12377;
                                                break;
                                        };
                                        var $12373 = $12373((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12378 = self.gram;
                                                    var $12379 = $12378;
                                                    var self = $12379;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12380 = self.inst_name;
                                                    var $12381 = $12380;
                                                    return $12381;
                                            };
                                        })()("U16"))(_go$5($12344)(_depth$3)(_defs$4));
                                        var $12345 = $12373;
                                        break;
                                    case 'Kind.Comp.Prim.string':
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12383 = self.gram;
                                                var $12384 = $12383;
                                                var self = $12384;
                                                break;
                                        };
                                        switch (self._) {
                                            case 'Kind.Comp.Grammar.new':
                                                var $12385 = self.application;
                                                var $12386 = $12385;
                                                var $12382 = $12386;
                                                break;
                                        };
                                        var $12382 = $12382((() => {
                                            var self = _lang$1;
                                            switch (self._) {
                                                case 'Kind.Comp.Language.new':
                                                    var $12387 = self.gram;
                                                    var $12388 = $12387;
                                                    var self = $12388;
                                                    break;
                                            };
                                            switch (self._) {
                                                case 'Kind.Comp.Grammar.new':
                                                    var $12389 = self.inst_name;
                                                    var $12390 = $12389;
                                                    return $12390;
                                            };
                                        })()("String"))(_go$5($12344)(_depth$3)(_defs$4));
                                        var $12345 = $12382;
                                        break;
                                    case 'Kind.Comp.Prim.data':
                                        var $12391 = _go$5($12344)(_depth$3)(_defs$4);
                                        var $12345 = $12391;
                                        break;
                                };
                                var $12251 = $12345;
                                break;
                            case 'Kind.Comp.nat':
                                var $12392 = self.natx;
                                var $12393 = Nat$show$($12392);
                                var $12251 = $12393;
                                break;
                            case 'Kind.Comp.chr':
                                var $12394 = self.chrx;
                                var $12395 = Nat$show$((BigInt($12394)));
                                var $12251 = $12395;
                                break;
                            case 'Kind.Comp.str':
                                var $12396 = self.strx;
                                var $12397 = ("\"" + ((() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12398 = self.gram;
                                            var $12399 = $12398;
                                            var self = $12399;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12400 = self.string_literal;
                                            var $12401 = $12400;
                                            return $12401;
                                    };
                                })()($12396) + "\""));
                                var $12251 = $12397;
                                break;
                            case 'Kind.Comp.txt':
                                var $12402 = self.text;
                                var $12403 = $12402;
                                var $12251 = $12403;
                                break;
                            case 'Kind.Comp.nil':
                                var self = _lang$1;
                                switch (self._) {
                                    case 'Kind.Comp.Language.new':
                                        var $12405 = self.gram;
                                        var $12406 = $12405;
                                        var self = $12406;
                                        break;
                                };
                                switch (self._) {
                                    case 'Kind.Comp.Grammar.new':
                                        var $12407 = self.null;
                                        var $12408 = $12407;
                                        var $12404 = $12408;
                                        break;
                                };
                                var $12251 = $12404;
                                break;
                        };
                        var $12248 = $12251;
                        break;
                };
                var $12245 = $12248;
                break;
        };
        return $12245;
    };
    const Kind$Comp$transpile$term = x0 => x1 => x2 => x3 => Kind$Comp$transpile$term$(x0, x1, x2, x3);

    function List$map$(_f$3, _as$4) {
        var self = _as$4;
        switch (self._) {
            case 'List.cons':
                var $12410 = self.head;
                var $12411 = self.tail;
                var $12412 = List$cons$(_f$3($12410), List$map$(_f$3, $12411));
                var $12409 = $12412;
                break;
            case 'List.nil':
                var $12413 = List$nil;
                var $12409 = $12413;
                break;
        };
        return $12409;
    };
    const List$map = x0 => x1 => List$map$(x0, x1);

    function List$seq$go$(_n$1, _xs$2) {
        var List$seq$go$ = (_n$1, _xs$2) => ({
            ctr: 'TCO',
            arg: [_n$1, _xs$2]
        });
        var List$seq$go = _n$1 => _xs$2 => List$seq$go$(_n$1, _xs$2);
        var arg = [_n$1, _xs$2];
        while (true) {
            let [_n$1, _xs$2] = arg;
            var R = (() => {
                var self = _n$1;
                if (self === 0n) {
                    var $12414 = _xs$2;
                    return $12414;
                } else {
                    var $12415 = (self - 1n);
                    var $12416 = List$seq$go$($12415, List$cons$($12415, _xs$2));
                    return $12416;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const List$seq$go = x0 => x1 => List$seq$go$(x0, x1);

    function List$seq$(_n$1) {
        var $12417 = List$seq$go$(_n$1, List$nil);
        return $12417;
    };
    const List$seq = x0 => List$seq$(x0);

    function Kind$Comp$txt$(_text$1) {
        var $12418 = ({
            _: 'Kind.Comp.txt',
            'text': _text$1
        });
        return $12418;
    };
    const Kind$Comp$txt = x0 => Kind$Comp$txt$(x0);

    function Kind$Comp$subst$(_name$1, _value$2, _term$3) {
        var self = _term$3;
        switch (self._) {
            case 'Kind.Comp.var':
                var $12420 = self.name;
                var self = (_name$1 === $12420);
                if (self) {
                    var $12422 = _value$2;
                    var $12421 = $12422;
                } else {
                    var $12423 = Kind$Comp$var$($12420);
                    var $12421 = $12423;
                };
                var $12419 = $12421;
                break;
            case 'Kind.Comp.ref':
                var $12424 = self.name;
                var $12425 = Kind$Comp$ref$($12424);
                var $12419 = $12425;
                break;
            case 'Kind.Comp.lam':
                var $12426 = self.name;
                var $12427 = self.body;
                var $12428 = Kind$Comp$lam$($12426, (() => {
                    var self = (_name$1 === $12426);
                    if (self) {
                        var $12429 = $12427;
                        return $12429;
                    } else {
                        var $12430 = Kind$Comp$subst$(_name$1, _value$2, $12427);
                        return $12430;
                    };
                })());
                var $12419 = $12428;
                break;
            case 'Kind.Comp.app':
                var $12431 = self.func;
                var $12432 = self.argm;
                var $12433 = Kind$Comp$app$(Kind$Comp$subst$(_name$1, _value$2, $12431), Kind$Comp$subst$(_name$1, _value$2, $12432));
                var $12419 = $12433;
                break;
            case 'Kind.Comp.let':
                var $12434 = self.name;
                var $12435 = self.expr;
                var $12436 = self.body;
                var $12437 = Kind$Comp$let$($12434, Kind$Comp$subst$(_name$1, _value$2, $12435), (() => {
                    var self = (_name$1 === $12434);
                    if (self) {
                        var $12438 = $12436;
                        return $12438;
                    } else {
                        var $12439 = Kind$Comp$subst$(_name$1, _value$2, $12436);
                        return $12439;
                    };
                })());
                var $12419 = $12437;
                break;
            case 'Kind.Comp.eli':
                var $12440 = self.prim;
                var $12441 = self.expr;
                var $12442 = Kind$Comp$eli$($12440, Kind$Comp$subst$(_name$1, _value$2, $12441));
                var $12419 = $12442;
                break;
            case 'Kind.Comp.ins':
                var $12443 = self.prim;
                var $12444 = self.expr;
                var $12445 = Kind$Comp$ins$($12443, Kind$Comp$subst$(_name$1, _value$2, $12444));
                var $12419 = $12445;
                break;
            case 'Kind.Comp.nat':
                var $12446 = self.natx;
                var $12447 = Kind$Comp$nat$($12446);
                var $12419 = $12447;
                break;
            case 'Kind.Comp.chr':
                var $12448 = self.chrx;
                var $12449 = Kind$Comp$chr$($12448);
                var $12419 = $12449;
                break;
            case 'Kind.Comp.str':
                var $12450 = self.strx;
                var $12451 = Kind$Comp$str$($12450);
                var $12419 = $12451;
                break;
            case 'Kind.Comp.txt':
                var $12452 = self.text;
                var $12453 = Kind$Comp$txt$($12452);
                var $12419 = $12453;
                break;
            case 'Kind.Comp.nil':
                var $12454 = Kind$Comp$nil;
                var $12419 = $12454;
                break;
        };
        return $12419;
    };
    const Kind$Comp$subst = x0 => x1 => x2 => Kind$Comp$subst$(x0, x1, x2);

    function Kind$Comp$apply$(_term$1, _args$2) {
        var Kind$Comp$apply$ = (_term$1, _args$2) => ({
            ctr: 'TCO',
            arg: [_term$1, _args$2]
        });
        var Kind$Comp$apply = _term$1 => _args$2 => Kind$Comp$apply$(_term$1, _args$2);
        var arg = [_term$1, _args$2];
        while (true) {
            let [_term$1, _args$2] = arg;
            var R = (() => {
                var self = _args$2;
                switch (self._) {
                    case 'List.cons':
                        var $12455 = self.head;
                        var $12456 = self.tail;
                        var self = _term$1;
                        switch (self._) {
                            case 'Kind.Comp.lam':
                                var $12458 = self.name;
                                var $12459 = self.body;
                                var $12460 = Kind$Comp$apply$(Kind$Comp$subst$($12458, $12455, $12459), $12456);
                                var $12457 = $12460;
                                break;
                            case 'Kind.Comp.nil':
                            case 'Kind.Comp.var':
                            case 'Kind.Comp.ref':
                            case 'Kind.Comp.app':
                            case 'Kind.Comp.let':
                            case 'Kind.Comp.eli':
                            case 'Kind.Comp.ins':
                            case 'Kind.Comp.nat':
                            case 'Kind.Comp.chr':
                            case 'Kind.Comp.str':
                            case 'Kind.Comp.txt':
                                var $12461 = Kind$Comp$apply$(Kind$Comp$app$(_term$1, $12455), $12456);
                                var $12457 = $12461;
                                break;
                        };
                        return $12457;
                    case 'List.nil':
                        var $12462 = _term$1;
                        return $12462;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Comp$apply = x0 => x1 => Kind$Comp$apply$(x0, x1);

    function Kind$Comp$Prim$elim$(_lang$1, _term$2, _depth$3, _defs$4) {
        var self = Kind$Comp$get_args$(_term$2);
        switch (self._) {
            case 'Pair.new':
                var $12464 = self.fst;
                var $12465 = self.snd;
                var self = $12464;
                switch (self._) {
                    case 'Kind.Comp.ref':
                        var $12467 = self.name;
                        var self = Kind$Map$get$($12467, _defs$4);
                        switch (self._) {
                            case 'Maybe.some':
                                var $12469 = self.value;
                                var _arity$9 = Kind$Comp$get_arity$($12469);
                                var self = ((_arity$9 === (list_length($12465))) && (_arity$9 > 0n));
                                if (self) {
                                    var _inlined_args$10 = List$map$((_arg$10 => {
                                        var $12472 = Kind$Comp$transpile$term$(_lang$1, _arg$10, _depth$3, _defs$4);
                                        return $12472;
                                    }), $12465);
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12473 = self.gram;
                                            var $12474 = $12473;
                                            var self = $12474;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12475 = self.global_application;
                                            var $12476 = $12475;
                                            var _code$11 = $12476;
                                            break;
                                    };
                                    var _code$11 = _code$11($12467)(_inlined_args$10);
                                    var $12471 = Maybe$some$(_code$11);
                                    var $12470 = $12471;
                                } else {
                                    var $12477 = Maybe$none;
                                    var $12470 = $12477;
                                };
                                var $12468 = $12470;
                                break;
                            case 'Maybe.none':
                                var $12478 = Maybe$none;
                                var $12468 = $12478;
                                break;
                        };
                        var $12466 = $12468;
                        break;
                    case 'Kind.Comp.eli':
                        var $12479 = self.prim;
                        var self = _lang$1;
                        switch (self._) {
                            case 'Kind.Comp.Language.new':
                                var $12481 = self.nati;
                                var $12482 = $12481;
                                var _shape$9 = $12482;
                                break;
                        };
                        var _shape$9 = _shape$9($12479);
                        var self = _shape$9;
                        switch (self._) {
                            case 'Kind.Comp.Native.new':
                                var $12483 = self.elim;
                                var self = $12483;
                                switch (self._) {
                                    case 'Pair.new':
                                        var $12485 = self.fst;
                                        var $12486 = self.snd;
                                        var _args_len$14 = (list_length($12465));
                                        var _cses_len$15 = (list_length($12486));
                                        var self = (_args_len$14 > _cses_len$15);
                                        if (self) {
                                            var $12488 = Maybe$none;
                                            var $12487 = $12488;
                                        } else {
                                            var _lams_len$16 = (_cses_len$15 - _args_len$14 <= 0n ? 0n : _cses_len$15 - _args_len$14);
                                            var _args$17 = Nat$for$($12465, 0n, _lams_len$16, (_i$17 => _args$18 => {
                                                var $12490 = List$concat$(_args$18, List$cons$(Kind$Comp$var$(("c" + Nat$show$(_i$17))), List$nil));
                                                return $12490;
                                            }));
                                            var _self$18 = ("self" + Nat$show$(_depth$3));
                                            var _cse_body_list$19 = List$map$((_item$19 => {
                                                var self = _item$19;
                                                switch (self._) {
                                                    case 'Pair.new':
                                                        var $12492 = self.fst;
                                                        var $12493 = self.snd;
                                                        var self = $12492;
                                                        switch (self._) {
                                                            case 'Pair.new':
                                                                var $12495 = self.fst;
                                                                var $12496 = self.snd;
                                                                var _flds_len$24 = (list_length($12496));
                                                                var _let_args_n$25 = List$reverse$(List$seq$(_flds_len$24));
                                                                var _lam_args_n$26 = List$reverse$(List$seq$(_lams_len$16));
                                                                var _keys$27 = List$create$(_flds_len$24, (_k$27 => {
                                                                    var $12498 = Kind$Comp$var$(("f" + Nat$show$((_depth$3 + _k$27))));
                                                                    return $12498;
                                                                }));
                                                                var _argj$28 = Kind$Comp$apply$($12493, _keys$27);
                                                                var _body$29 = Kind$Comp$transpile$term$(_lang$1, _argj$28, ((_depth$3 + _flds_len$24) + _lams_len$16), _defs$4);
                                                                var _body$30 = (() => {
                                                                    var $12500 = _body$29;
                                                                    var $12501 = _lam_args_n$26;
                                                                    let _body$31 = $12500;
                                                                    let _i$30;
                                                                    while ($12501._ === 'List.cons') {
                                                                        _i$30 = $12501.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12502 = self.gram;
                                                                                var $12503 = $12502;
                                                                                var self = $12503;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12504 = self.lambda;
                                                                                var $12505 = $12504;
                                                                                var $12500 = $12505;
                                                                                break;
                                                                        };
                                                                        var $12500 = $12500(("c" + Nat$show$(_i$30)))(_body$31);
                                                                        _body$31 = $12500;
                                                                        $12501 = $12501.tail;
                                                                    }
                                                                    return _body$31;
                                                                })();
                                                                var _text$31 = _body$30;
                                                                var _text$32 = (() => {
                                                                    var $12507 = _text$31;
                                                                    var $12508 = _let_args_n$25;
                                                                    let _text$33 = $12507;
                                                                    let _k$32;
                                                                    while ($12508._ === 'List.cons') {
                                                                        _k$32 = $12508.head;
                                                                        var self = _lang$1;
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Language.new':
                                                                                var $12509 = self.gram;
                                                                                var $12510 = $12509;
                                                                                var self = $12510;
                                                                                break;
                                                                        };
                                                                        switch (self._) {
                                                                            case 'Kind.Comp.Grammar.new':
                                                                                var $12511 = self.local_definition;
                                                                                var $12512 = $12511;
                                                                                var $12507 = $12512;
                                                                                break;
                                                                        };
                                                                        var $12507 = $12507(("f" + Nat$show$((_depth$3 + _k$32))))(Kind$Comp$replace$(Maybe$default$(List$get$(_k$32, $12496), ""), List$cons$(_self$18, List$nil)))(_text$33);
                                                                        _text$33 = $12507;
                                                                        $12508 = $12508.tail;
                                                                    }
                                                                    return _text$33;
                                                                })();
                                                                var $12497 = Pair$new$($12495, _text$32);
                                                                var $12494 = $12497;
                                                                break;
                                                        };
                                                        var $12491 = $12494;
                                                        break;
                                                };
                                                return $12491;
                                            }), List$zip$($12486, _args$17));
                                            var $12489 = Maybe$some$((() => {
                                                var self = _lang$1;
                                                switch (self._) {
                                                    case 'Kind.Comp.Language.new':
                                                        var $12513 = self.gram;
                                                        var $12514 = $12513;
                                                        var self = $12514;
                                                        break;
                                                };
                                                switch (self._) {
                                                    case 'Kind.Comp.Grammar.new':
                                                        var $12515 = self.select;
                                                        var $12516 = $12515;
                                                        return $12516;
                                                };
                                            })()(Kind$Comp$replace$($12485, List$cons$(_self$18, List$nil)))(_cse_body_list$19));
                                            var $12487 = $12489;
                                        };
                                        var $12484 = $12487;
                                        break;
                                };
                                var $12480 = $12484;
                                break;
                        };
                        var $12466 = $12480;
                        break;
                    case 'Kind.Comp.nil':
                    case 'Kind.Comp.var':
                    case 'Kind.Comp.lam':
                    case 'Kind.Comp.app':
                    case 'Kind.Comp.let':
                    case 'Kind.Comp.ins':
                    case 'Kind.Comp.nat':
                    case 'Kind.Comp.chr':
                    case 'Kind.Comp.str':
                    case 'Kind.Comp.txt':
                        var $12517 = Maybe$none;
                        var $12466 = $12517;
                        break;
                };
                var $12463 = $12466;
                break;
        };
        return $12463;
    };
    const Kind$Comp$Prim$elim = x0 => x1 => x2 => x3 => Kind$Comp$Prim$elim$(x0, x1, x2, x3);

    function Kind$Comp$Prim$eliminator$(_lang$1, _prim$2, _depth$3, _defs$4) {
        var _term$5 = Kind$Comp$eli$(_prim$2, Kind$Comp$var$("x"));
        var _text$6 = Maybe$default$(Kind$Comp$Prim$elim$(_lang$1, _term$5, 0n, _defs$4), "");
        var _term$7 = Kind$Comp$lam$("x", Kind$Comp$txt$(_text$6));
        var $12518 = Kind$Comp$transpile$term$(_lang$1, _term$7, _depth$3, _defs$4);
        return $12518;
    };
    const Kind$Comp$Prim$eliminator = x0 => x1 => x2 => x3 => Kind$Comp$Prim$eliminator$(x0, x1, x2, x3);

    function Avl$lookup$(_cmp$3, _key$4, _map$5) {
        var Avl$lookup$ = (_cmp$3, _key$4, _map$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _key$4, _map$5]
        });
        var Avl$lookup = _cmp$3 => _key$4 => _map$5 => Avl$lookup$(_cmp$3, _key$4, _map$5);
        var arg = [_cmp$3, _key$4, _map$5];
        while (true) {
            let [_cmp$3, _key$4, _map$5] = arg;
            var R = (() => {
                var self = _map$5;
                switch (self._) {
                    case 'Avl.bin':
                        var $12519 = self.key;
                        var $12520 = self.val;
                        var $12521 = self.left;
                        var $12522 = self.right;
                        var self = _cmp$3(_key$4)($12519);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12524 = Avl$lookup$(_cmp$3, _key$4, $12521);
                                var $12523 = $12524;
                                break;
                            case 'Cmp.eql':
                                var $12525 = Maybe$some$($12520);
                                var $12523 = $12525;
                                break;
                            case 'Cmp.gtn':
                                var $12526 = Avl$lookup$(_cmp$3, _key$4, $12522);
                                var $12523 = $12526;
                                break;
                        };
                        return $12523;
                    case 'Avl.tip':
                        var $12527 = Maybe$none;
                        return $12527;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Avl$lookup = x0 => x1 => x2 => Avl$lookup$(x0, x1, x2);

    function U16$cmp$(_a$1, _b$2) {
        var self = (_a$1 < _b$2);
        if (self) {
            var $12529 = Cmp$ltn;
            var $12528 = $12529;
        } else {
            var self = (_a$1 === _b$2);
            if (self) {
                var $12531 = Cmp$eql;
                var $12530 = $12531;
            } else {
                var $12532 = Cmp$gtn;
                var $12530 = $12532;
            };
            var $12528 = $12530;
        };
        return $12528;
    };
    const U16$cmp = x0 => x1 => U16$cmp$(x0, x1);

    function String$cmp$(_a$1, _b$2) {
        var String$cmp$ = (_a$1, _b$2) => ({
            ctr: 'TCO',
            arg: [_a$1, _b$2]
        });
        var String$cmp = _a$1 => _b$2 => String$cmp$(_a$1, _b$2);
        var arg = [_a$1, _b$2];
        while (true) {
            let [_a$1, _b$2] = arg;
            var R = (() => {
                var self = _a$1;
                if (self.length === 0) {
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12534 = Cmp$eql;
                        var $12533 = $12534;
                    } else {
                        var $12535 = self.charCodeAt(0);
                        var $12536 = self.slice(1);
                        var $12537 = Cmp$ltn;
                        var $12533 = $12537;
                    };
                    return $12533;
                } else {
                    var $12538 = self.charCodeAt(0);
                    var $12539 = self.slice(1);
                    var self = _b$2;
                    if (self.length === 0) {
                        var $12541 = Cmp$gtn;
                        var $12540 = $12541;
                    } else {
                        var $12542 = self.charCodeAt(0);
                        var $12543 = self.slice(1);
                        var self = U16$cmp$($12538, $12542);
                        switch (self._) {
                            case 'Cmp.ltn':
                                var $12545 = Cmp$ltn;
                                var $12544 = $12545;
                                break;
                            case 'Cmp.eql':
                                var $12546 = String$cmp$($12539, $12543);
                                var $12544 = $12546;
                                break;
                            case 'Cmp.gtn':
                                var $12547 = Cmp$gtn;
                                var $12544 = $12547;
                                break;
                        };
                        var $12540 = $12544;
                    };
                    return $12540;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const String$cmp = x0 => x1 => String$cmp$(x0, x1);

    function Map$get$(_key$2, _map$3) {
        var $12548 = Avl$lookup$(String$cmp, _key$2, _map$3);
        return $12548;
    };
    const Map$get = x0 => x1 => Map$get$(x0, x1);

    function Avl$(_K$1, _V$2) {
        var $12549 = null;
        return $12549;
    };
    const Avl = x0 => x1 => Avl$(x0, x1);

    function Map$(_V$1) {
        var $12550 = null;
        return $12550;
    };
    const Map = x0 => Map$(x0);

    function Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$2, _defs$3) {
        var _code$4 = "";
        var _code$5 = (() => {
            var $12553 = _code$4;
            var $12554 = Kind$Comp$Prim$natives;
            let _code$6 = $12553;
            let _nati$5;
            while ($12554._ === 'List.cons') {
                _nati$5 = $12554.head;
                var self = _nati$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12555 = self.fst;
                        var $12556 = self.snd;
                        var _code$9 = (_code$6 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12558 = self.gram;
                                    var $12559 = $12558;
                                    var self = $12559;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12560 = self.global_function;
                                    var $12561 = $12560;
                                    return $12561;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12562 = self.gram;
                                    var $12563 = $12562;
                                    var self = $12563;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12564 = self.inst_name;
                                    var $12565 = $12564;
                                    return $12565;
                            };
                        })()($12555))(List$nil)(Kind$Comp$Prim$instantiator$(_lang$1, $12556, 0n, _defs$3)));
                        var _code$10 = (_code$9 + (() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12566 = self.gram;
                                    var $12567 = $12566;
                                    var self = $12567;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12568 = self.global_function;
                                    var $12569 = $12568;
                                    return $12569;
                            };
                        })()((() => {
                            var self = _lang$1;
                            switch (self._) {
                                case 'Kind.Comp.Language.new':
                                    var $12570 = self.gram;
                                    var $12571 = $12570;
                                    var self = $12571;
                                    break;
                            };
                            switch (self._) {
                                case 'Kind.Comp.Grammar.new':
                                    var $12572 = self.elim_name;
                                    var $12573 = $12572;
                                    return $12573;
                            };
                        })()($12555))(List$nil)(Kind$Comp$Prim$eliminator$(_lang$1, $12556, 0n, _defs$3)));
                        var $12557 = _code$10;
                        var $12553 = $12557;
                        break;
                };
                _code$6 = $12553;
                $12554 = $12554.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12575 = _code$5;
            var $12576 = _defs_list$2;
            let _code$7 = $12575;
            let _defn$6;
            while ($12576._ === 'List.cons') {
                _defn$6 = $12576.head;
                var self = _defn$6;
                switch (self._) {
                    case 'Pair.new':
                        var $12577 = self.fst;
                        var $12578 = self.snd;
                        var self = Kind$Comp$get_vars$($12578);
                        switch (self._) {
                            case 'Pair.new':
                                var $12580 = self.fst;
                                var $12581 = self.snd;
                                var _code$12 = (_code$7 + (() => {
                                    var self = _lang$1;
                                    switch (self._) {
                                        case 'Kind.Comp.Language.new':
                                            var $12583 = self.gram;
                                            var $12584 = $12583;
                                            var self = $12584;
                                            break;
                                    };
                                    switch (self._) {
                                        case 'Kind.Comp.Grammar.new':
                                            var $12585 = self.global_function;
                                            var $12586 = $12585;
                                            return $12586;
                                    };
                                })()($12577)($12580)((() => {
                                    var self = Map$get$($12577, (() => {
                                        var self = _lang$1;
                                        switch (self._) {
                                            case 'Kind.Comp.Language.new':
                                                var $12587 = self.opts;
                                                var $12588 = $12587;
                                                return $12588;
                                        };
                                    })());
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $12589 = self.value;
                                            var $12590 = Kind$Comp$replace$(Pair$snd$($12589), $12580);
                                            return $12590;
                                        case 'Maybe.none':
                                            var $12591 = Kind$Comp$transpile$term$(_lang$1, $12581, 0n, _defs$3);
                                            return $12591;
                                    };
                                })()));
                                var $12582 = _code$12;
                                var $12579 = $12582;
                                break;
                        };
                        var $12575 = $12579;
                        break;
                };
                _code$7 = $12575;
                $12576 = $12576.tail;
            }
            return _code$7;
        })();
        var $12551 = _code$6;
        return $12551;
    };
    const Kind$Comp$transpile$global_definitions = x0 => x1 => x2 => Kind$Comp$transpile$global_definitions$(x0, x1, x2);

    function Kind$Comp$transpile$(_lang$1, _main$2, _defs$3) {
        var _defs_list$4 = Kind$Comp$dependency_sort$(_main$2, _defs$3);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12593 = self.gram;
                var $12594 = $12593;
                var self = $12594;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12595 = self.program;
                var $12596 = $12595;
                var _code$5 = $12596;
                break;
        };
        var _code$5 = _code$5(_main$2)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12597 = self.base;
                    var $12598 = $12597;
                    return $12598;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$4, _defs$3))));
        var $12592 = _code$5;
        return $12592;
    };
    const Kind$Comp$transpile = x0 => x1 => x2 => Kind$Comp$transpile$(x0, x1, x2);

    function Kind$Comp$Language$new$(_gram$1, _nati$2, _opts$3, _base$4) {
        var $12599 = ({
            _: 'Kind.Comp.Language.new',
            'gram': _gram$1,
            'nati': _nati$2,
            'opts': _opts$3,
            'base': _base$4
        });
        return $12599;
    };
    const Kind$Comp$Language$new = x0 => x1 => x2 => x3 => Kind$Comp$Language$new$(x0, x1, x2, x3);

    function Kind$Comp$Grammar$new$(_null$1, _name$2, _inst_name$3, _elim_name$4, _lambda$5, _application$6, _local_definition$7, _global_function$8, _global_application$9, _select$10, _string_literal$11, _module$12, _program$13) {
        var $12600 = ({
            _: 'Kind.Comp.Grammar.new',
            'null': _null$1,
            'name': _name$2,
            'inst_name': _inst_name$3,
            'elim_name': _elim_name$4,
            'lambda': _lambda$5,
            'application': _application$6,
            'local_definition': _local_definition$7,
            'global_function': _global_function$8,
            'global_application': _global_application$9,
            'select': _select$10,
            'string_literal': _string_literal$11,
            'module': _module$12,
            'program': _program$13
        });
        return $12600;
    };
    const Kind$Comp$Grammar$new = x0 => x1 => x2 => x3 => x4 => x5 => x6 => x7 => x8 => x9 => x10 => x11 => x12 => Kind$Comp$Grammar$new$(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12);
    const Kind$Comp$Target$Scheme$null = "\'()";

    function Kind$Comp$Target$Scheme$name$(_name$1) {
        var self = String$is_empty$(_name$1);
        if (self) {
            var $12602 = "-";
            var $12601 = $12602;
        } else {
            var $12603 = _name$1;
            var $12601 = $12603;
        };
        return $12601;
    };
    const Kind$Comp$Target$Scheme$name = x0 => Kind$Comp$Target$Scheme$name$(x0);

    function Kind$Comp$Target$Scheme$inst_name$(_name$1) {
        var $12604 = (_name$1 + "-inst");
        return $12604;
    };
    const Kind$Comp$Target$Scheme$inst_name = x0 => Kind$Comp$Target$Scheme$inst_name$(x0);

    function Kind$Comp$Target$Scheme$elim_name$(_name$1) {
        var $12605 = (_name$1 + "-elim");
        return $12605;
    };
    const Kind$Comp$Target$Scheme$elim_name = x0 => Kind$Comp$Target$Scheme$elim_name$(x0);

    function Kind$Comp$Target$Scheme$lambda$(_name$1, _body$2) {
        var $12606 = ("(lambda (" + (_name$1 + (") " + (_body$2 + ")"))));
        return $12606;
    };
    const Kind$Comp$Target$Scheme$lambda = x0 => x1 => Kind$Comp$Target$Scheme$lambda$(x0, x1);

    function Kind$Comp$Target$Scheme$application$(_func$1, _argm$2) {
        var $12607 = ("(" + (_func$1 + (" " + (_argm$2 + ")"))));
        return $12607;
    };
    const Kind$Comp$Target$Scheme$application = x0 => x1 => Kind$Comp$Target$Scheme$application$(x0, x1);

    function Kind$Comp$Target$Scheme$local_definition$(_name$1, _expr$2, _body$3) {
        var $12608 = ("(let ((" + (_name$1 + (" " + (_expr$2 + (")) " + (_body$3 + ")"))))));
        return $12608;
    };
    const Kind$Comp$Target$Scheme$local_definition = x0 => x1 => x2 => Kind$Comp$Target$Scheme$local_definition$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$global_application$(_name$1, _args$2) {
        var $12609 = ("($" + (_name$1 + (" " + (String$join$(" ", _args$2) + ")"))));
        return $12609;
    };
    const Kind$Comp$Target$Scheme$global_application = x0 => x1 => Kind$Comp$Target$Scheme$global_application$(x0, x1);

    function Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, _rem_args$3) {
        var self = _rem_args$3;
        switch (self._) {
            case 'List.cons':
                var $12611 = self.head;
                var $12612 = self.tail;
                var $12613 = Kind$Comp$Target$Scheme$lambda$($12611, Kind$Comp$Target$Scheme$nest_lambdas$aux$(_fun$1, _args$2, $12612));
                var $12610 = $12613;
                break;
            case 'List.nil':
                var $12614 = Kind$Comp$Target$Scheme$global_application$(_fun$1, _args$2);
                var $12610 = $12614;
                break;
        };
        return $12610;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas$aux = x0 => x1 => x2 => Kind$Comp$Target$Scheme$nest_lambdas$aux$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2) {
        var _body$3 = Kind$Comp$Target$Scheme$nest_lambdas$aux$(_name$1, _args$2, _args$2);
        var $12615 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
        return $12615;
    };
    const Kind$Comp$Target$Scheme$nest_lambdas = x0 => x1 => Kind$Comp$Target$Scheme$nest_lambdas$(x0, x1);

    function Kind$Comp$Target$Scheme$global_function$(_name$1, _args$2, _body$3) {
        var self = _args$2;
        switch (self._) {
            case 'List.nil':
                var $12617 = ("(define " + (_name$1 + (" " + (_body$3 + ")\u{a}"))));
                var $12616 = $12617;
                break;
            case 'List.cons':
                var $12618 = ("(define ($" + (_name$1 + (" " + (String$join$(" ", _args$2) + (") " + (_body$3 + (")\u{a}" + Kind$Comp$Target$Scheme$nest_lambdas$(_name$1, _args$2))))))));
                var $12616 = $12618;
                break;
        };
        return $12616;
    };
    const Kind$Comp$Target$Scheme$global_function = x0 => x1 => x2 => Kind$Comp$Target$Scheme$global_function$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$select$(_term$1, _cse_body_list$2) {
        var _cses$3 = "";
        var _cses$4 = (() => {
            var $12621 = _cses$3;
            var $12622 = _cse_body_list$2;
            let _cses$5 = $12621;
            let _cse_body$4;
            while ($12622._ === 'List.cons') {
                _cse_body$4 = $12622.head;
                var self = _cse_body$4;
                switch (self._) {
                    case 'Pair.new':
                        var $12623 = self.fst;
                        var $12624 = self.snd;
                        var $12625 = ("(" + ($12623 + (" " + ($12624 + ")"))));
                        var $12621 = $12625;
                        break;
                };
                _cses$5 = $12621;
                $12622 = $12622.tail;
            }
            return _cses$5;
        })();
        var $12619 = ("(case " + (_term$1 + (" " + (_cses$4 + ")"))));
        return $12619;
    };
    const Kind$Comp$Target$Scheme$select = x0 => x1 => Kind$Comp$Target$Scheme$select$(x0, x1);

    function Char$to_string$(_chr$1) {
        var $12626 = String$cons$(_chr$1, String$nil);
        return $12626;
    };
    const Char$to_string = x0 => Char$to_string$(x0);

    function Kind$Comp$Target$Scheme$string_literal$(_str$1) {
        var self = _str$1;
        if (self.length === 0) {
            var $12628 = "";
            var $12627 = $12628;
        } else {
            var $12629 = self.charCodeAt(0);
            var $12630 = self.slice(1);
            var $12631 = ((() => {
                var self = (($12629 === 92) || ($12629 === 34));
                if (self) {
                    var $12632 = ("\\" + Char$to_string$($12629));
                    return $12632;
                } else {
                    var self = (($12629 >= 32) && ($12629 <= 126));
                    if (self) {
                        var $12634 = Char$to_string$($12629);
                        var $12633 = $12634;
                    } else {
                        var $12635 = ("\\x" + (U16$show_hex$($12629) + ";"));
                        var $12633 = $12635;
                    };
                    return $12633;
                };
            })() + Kind$Comp$Target$Scheme$string_literal$($12630));
            var $12627 = $12631;
        };
        return $12627;
    };
    const Kind$Comp$Target$Scheme$string_literal = x0 => Kind$Comp$Target$Scheme$string_literal$(x0);
    const Kind$Comp$Target$Scheme$exports = List$cons$("suffix?", List$cons$("prefix?", List$cons$("run-all", List$cons$("run_io", List$cons$("print-lines", List$cons$("run_kind", List$cons$("make-string-view", List$cons$("string-view?", List$cons$("string-view-end", List$cons$("string-view-start", List$cons$("kstring-length", List$cons$("kstring-head", List$cons$("kstring-tail", List$cons$("string-view-ref", List$cons$("kstring?", List$cons$("kstring->string", List$cons$("kstring-append", List$cons$("kstring-getter", List$cons$("kstring_join", List$nil)))))))))))))))))));

    function Kind$Comp$Target$Scheme$module$(_name$1, _exports$2, _defs$3) {
        var _code$4 = ("#!chezscheme\u{a}(library (" + (_name$1 + ") (export"));
        var _code$5 = (() => {
            var $12638 = _code$4;
            var $12639 = Kind$Comp$Target$Scheme$exports;
            let _code$6 = $12638;
            let _export$5;
            while ($12639._ === 'List.cons') {
                _export$5 = $12639.head;
                var $12638 = (_code$6 + (" " + _export$5));
                _code$6 = $12638;
                $12639 = $12639.tail;
            }
            return _code$6;
        })();
        var _code$6 = (() => {
            var $12641 = _code$5;
            var $12642 = _exports$2;
            let _code$7 = $12641;
            let _export$6;
            while ($12642._ === 'List.cons') {
                _export$6 = $12642.head;
                var $12641 = (_code$7 + (" " + _export$6));
                _code$7 = $12641;
                $12642 = $12642.tail;
            }
            return _code$7;
        })();
        var _code$7 = (_code$6 + ")\u{a}");
        var _code$8 = (_code$7 + "(import (chezscheme))\u{a}");
        var _code$9 = (_code$8 + (_defs$3 + ")"));
        var $12636 = _code$9;
        return $12636;
    };
    const Kind$Comp$Target$Scheme$module = x0 => x1 => x2 => Kind$Comp$Target$Scheme$module$(x0, x1, x2);

    function Kind$Comp$Target$Scheme$program$(_main$1, _defs$2) {
        var _code$3 = (_defs$2 + ("(run_kind " + (_main$1 + ")")));
        var $12643 = _code$3;
        return $12643;
    };
    const Kind$Comp$Target$Scheme$program = x0 => x1 => Kind$Comp$Target$Scheme$program$(x0, x1);
    const Kind$Comp$Target$Scheme$grammar = Kind$Comp$Grammar$new$(Kind$Comp$Target$Scheme$null, Kind$Comp$Target$Scheme$name, Kind$Comp$Target$Scheme$inst_name, Kind$Comp$Target$Scheme$elim_name, Kind$Comp$Target$Scheme$lambda, Kind$Comp$Target$Scheme$application, Kind$Comp$Target$Scheme$local_definition, Kind$Comp$Target$Scheme$global_function, Kind$Comp$Target$Scheme$global_application, Kind$Comp$Target$Scheme$select, Kind$Comp$Target$Scheme$string_literal, Kind$Comp$Target$Scheme$module, Kind$Comp$Target$Scheme$program);

    function Kind$Comp$Native$new$(_inst$1, _elim$2) {
        var $12644 = ({
            _: 'Kind.Comp.Native.new',
            'inst': _inst$1,
            'elim': _elim$2
        });
        return $12644;
    };
    const Kind$Comp$Native$new = x0 => x1 => Kind$Comp$Native$new$(x0, x1);

    function Kind$Comp$Target$Scheme$natives$(_prim$1) {
        var self = _prim$1;
        switch (self._) {
            case 'Kind.Comp.Prim.data':
                var $12646 = self.name;
                var $12647 = self.ctrs;
                var $12648 = Kind$Comp$Native$new$(List$fold$($12647, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12650 = self.fst;
                            var $12651 = self.snd;
                            var _fields_size$8 = (list_length($12651));
                            var _fields_vars$9 = String$join$("", List$create$(_fields_size$8, (_x$9 => {
                                var $12653 = (" $" + Nat$show$(_x$9));
                                return $12653;
                            })));
                            var $12652 = List$cons$(Pair$new$(_fields_size$8, ("(vector \'" + ($12646 + ("." + ($12650 + (_fields_vars$9 + ")")))))), _result$5);
                            var $12649 = $12652;
                            break;
                    };
                    return $12649;
                })), Pair$new$("(get $0 0)", List$fold$($12647, List$nil, (_ctr$4 => _result$5 => {
                    var self = _ctr$4;
                    switch (self._) {
                        case 'Pair.new':
                            var $12655 = self.fst;
                            var $12656 = self.snd;
                            var _fields_size$8 = (list_length($12656));
                            var _fields_gets$9 = List$create$(_fields_size$8, (_i$9 => {
                                var $12658 = ("(get $0 " + (Nat$show$(Nat$succ$(_i$9)) + ")"));
                                return $12658;
                            }));
                            var $12657 = List$cons$(Pair$new$(("\'" + ($12646 + ("." + $12655))), _fields_gets$9), _result$5);
                            var $12654 = $12657;
                            break;
                    };
                    return $12654;
                }))));
                var $12645 = $12648;
                break;
            case 'Kind.Comp.Prim.unit':
                var $12659 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$nil), List$nil)));
                var $12645 = $12659;
                break;
            case 'Kind.Comp.Prim.bool':
                var $12660 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "#t"), List$cons$(Pair$new$(0n, "#f"), List$nil)), Pair$new$("$0", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$nil), List$nil))));
                var $12645 = $12660;
                break;
            case 'Kind.Comp.Prim.nat':
                var $12661 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "0"), List$cons$(Pair$new$(1n, "(+ $0 1)"), List$nil)), Pair$new$("(= $0 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(- $0 1)", List$nil)), List$nil))));
                var $12645 = $12661;
                break;
            case 'Kind.Comp.Prim.u16':
                var $12662 = Kind$Comp$Native$new$(List$cons$(Pair$new$(1n, "(word-to-u16 $0)"), List$nil), Pair$new$("#t", List$cons$(Pair$new$("#t", List$cons$("(u16-to-word $0)", List$nil)), List$nil)));
                var $12645 = $12662;
                break;
            case 'Kind.Comp.Prim.string':
                var $12663 = Kind$Comp$Native$new$(List$cons$(Pair$new$(0n, "\"\""), List$cons$(Pair$new$(2n, "(kstring-append (make-string 1 (integer->char $0)) $1)"), List$nil)), Pair$new$("(<= (kstring-length $0) 0)", List$cons$(Pair$new$("#t", List$nil), List$cons$(Pair$new$("#f", List$cons$("(char->integer (kstring-head $0))", List$cons$("(kstring-tail $0)", List$nil))), List$nil))));
                var $12645 = $12663;
                break;
        };
        return $12645;
    };
    const Kind$Comp$Target$Scheme$natives = x0 => Kind$Comp$Target$Scheme$natives$(x0);

    function Avl$bin$(_size$3, _key$4, _val$5, _left$6, _right$7) {
        var $12664 = ({
            _: 'Avl.bin',
            'size': _size$3,
            'key': _key$4,
            'val': _val$5,
            'left': _left$6,
            'right': _right$7
        });
        return $12664;
    };
    const Avl$bin = x0 => x1 => x2 => x3 => x4 => Avl$bin$(x0, x1, x2, x3, x4);

    function U32$new$(_value$1) {
        var $12665 = word_to_u32(_value$1);
        return $12665;
    };
    const U32$new = x0 => U32$new$(x0);
    const Nat$to_u32 = a0 => (Number(a0) >>> 0);
    const Avl$tip = ({
        _: 'Avl.tip'
    });

    function Avl$singleton$(_key$3, _val$4) {
        var $12666 = Avl$bin$(1, _key$3, _val$4, Avl$tip, Avl$tip);
        return $12666;
    };
    const Avl$singleton = x0 => x1 => Avl$singleton$(x0, x1);

    function Avl$size$(_map$3) {
        var self = _map$3;
        switch (self._) {
            case 'Avl.bin':
                var $12668 = self.size;
                var $12669 = $12668;
                var $12667 = $12669;
                break;
            case 'Avl.tip':
                var $12670 = 0;
                var $12667 = $12670;
                break;
        };
        return $12667;
    };
    const Avl$size = x0 => Avl$size$(x0);
    const U32$add = a0 => a1 => ((a0 + a1) >>> 0);
    const U32$mul = a0 => a1 => ((a0 * a1) >>> 0);
    const Avl$w = 3;
    const U32$ltn = a0 => a1 => (a0 < a1);
    const U32$from_nat = a0 => (Number(a0) >>> 0);

    function Avl$node$(_key$3, _val$4, _left$5, _right$6) {
        var _size_left$7 = Avl$size$(_left$5);
        var _size_right$8 = Avl$size$(_right$6);
        var _new_size$9 = ((1 + ((_size_left$7 + _size_right$8) >>> 0)) >>> 0);
        var $12671 = Avl$bin$(_new_size$9, _key$3, _val$4, _left$5, _right$6);
        return $12671;
    };
    const Avl$node = x0 => x1 => x2 => x3 => Avl$node$(x0, x1, x2, x3);

    function Cmp$as_gtn$(_cmp$1) {
        var self = _cmp$1;
        switch (self._) {
            case 'Cmp.ltn':
            case 'Cmp.eql':
                var $12673 = Bool$false;
                var $12672 = $12673;
                break;
            case 'Cmp.gtn':
                var $12674 = Bool$true;
                var $12672 = $12674;
                break;
        };
        return $12672;
    };
    const Cmp$as_gtn = x0 => Cmp$as_gtn$(x0);

    function Word$gtn$(_a$2, _b$3) {
        var $12675 = Cmp$as_gtn$(Word$cmp$(_a$2, _b$3));
        return $12675;
    };
    const Word$gtn = x0 => x1 => Word$gtn$(x0, x1);
    const U32$gtn = a0 => a1 => (a0 > a1);

    function Avl$balance$(_k$3, _v$4, _l$5, _r$6) {
        var _size_l$7 = Avl$size$(_l$5);
        var _size_r$8 = Avl$size$(_r$6);
        var _size_l_plus_size_r$9 = ((_size_l$7 + _size_r$8) >>> 0);
        var _w_x_size_l$10 = ((Avl$w * _size_l$7) >>> 0);
        var _w_x_size_r$11 = ((Avl$w * _size_r$8) >>> 0);
        var self = (_size_l_plus_size_r$9 < 2);
        if (self) {
            var $12677 = Avl$node$(_k$3, _v$4, _l$5, _r$6);
            var $12676 = $12677;
        } else {
            var self = (_size_r$8 > _w_x_size_l$10);
            if (self) {
                var self = _r$6;
                switch (self._) {
                    case 'Avl.bin':
                        var $12680 = self.key;
                        var $12681 = self.val;
                        var $12682 = self.left;
                        var $12683 = self.right;
                        var _size_rl$17 = Avl$size$($12682);
                        var _size_rr$18 = Avl$size$($12683);
                        var self = (_size_rl$17 < _size_rr$18);
                        if (self) {
                            var _new_key$19 = $12680;
                            var _new_val$20 = $12681;
                            var _new_left$21 = Avl$node$(_k$3, _v$4, _l$5, $12682);
                            var _new_right$22 = $12683;
                            var $12685 = Avl$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                            var $12684 = $12685;
                        } else {
                            var self = $12682;
                            switch (self._) {
                                case 'Avl.bin':
                                    var $12687 = self.key;
                                    var $12688 = self.val;
                                    var $12689 = self.left;
                                    var $12690 = self.right;
                                    var _new_key$24 = $12687;
                                    var _new_val$25 = $12688;
                                    var _new_left$26 = Avl$node$(_k$3, _v$4, _l$5, $12689);
                                    var _new_right$27 = Avl$node$($12680, $12681, $12690, $12683);
                                    var $12691 = Avl$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                    var $12686 = $12691;
                                    break;
                                case 'Avl.tip':
                                    var $12692 = Avl$node$(_k$3, _v$4, _l$5, _r$6);
                                    var $12686 = $12692;
                                    break;
                            };
                            var $12684 = $12686;
                        };
                        var $12679 = $12684;
                        break;
                    case 'Avl.tip':
                        var $12693 = Avl$node$(_k$3, _v$4, _l$5, _r$6);
                        var $12679 = $12693;
                        break;
                };
                var $12678 = $12679;
            } else {
                var self = (_size_l$7 > _w_x_size_r$11);
                if (self) {
                    var self = _l$5;
                    switch (self._) {
                        case 'Avl.bin':
                            var $12696 = self.key;
                            var $12697 = self.val;
                            var $12698 = self.left;
                            var $12699 = self.right;
                            var _size_ll$17 = Avl$size$($12698);
                            var _size_lr$18 = Avl$size$($12699);
                            var self = (_size_lr$18 < _size_ll$17);
                            if (self) {
                                var _new_key$19 = $12696;
                                var _new_val$20 = $12697;
                                var _new_left$21 = $12698;
                                var _new_right$22 = Avl$node$(_k$3, _v$4, $12699, _r$6);
                                var $12701 = Avl$node$(_new_key$19, _new_val$20, _new_left$21, _new_right$22);
                                var $12700 = $12701;
                            } else {
                                var self = $12699;
                                switch (self._) {
                                    case 'Avl.bin':
                                        var $12703 = self.key;
                                        var $12704 = self.val;
                                        var $12705 = self.left;
                                        var $12706 = self.right;
                                        var _new_key$24 = $12703;
                                        var _new_val$25 = $12704;
                                        var _new_left$26 = Avl$node$($12696, $12697, $12698, $12705);
                                        var _new_right$27 = Avl$node$(_k$3, _v$4, $12706, _r$6);
                                        var $12707 = Avl$node$(_new_key$24, _new_val$25, _new_left$26, _new_right$27);
                                        var $12702 = $12707;
                                        break;
                                    case 'Avl.tip':
                                        var $12708 = Avl$node$(_k$3, _v$4, _l$5, _r$6);
                                        var $12702 = $12708;
                                        break;
                                };
                                var $12700 = $12702;
                            };
                            var $12695 = $12700;
                            break;
                        case 'Avl.tip':
                            var $12709 = Avl$node$(_k$3, _v$4, _l$5, _r$6);
                            var $12695 = $12709;
                            break;
                    };
                    var $12694 = $12695;
                } else {
                    var $12710 = Avl$node$(_k$3, _v$4, _l$5, _r$6);
                    var $12694 = $12710;
                };
                var $12678 = $12694;
            };
            var $12676 = $12678;
        };
        return $12676;
    };
    const Avl$balance = x0 => x1 => x2 => x3 => Avl$balance$(x0, x1, x2, x3);

    function Avl$insert$(_cmp$3, _key$4, _val$5, _map$6) {
        var self = _map$6;
        switch (self._) {
            case 'Avl.bin':
                var $12712 = self.key;
                var $12713 = self.val;
                var $12714 = self.left;
                var $12715 = self.right;
                var self = _cmp$3(_key$4)($12712);
                switch (self._) {
                    case 'Cmp.ltn':
                        var _new_key$12 = $12712;
                        var _new_val$13 = $12713;
                        var _new_left$14 = Avl$insert$(_cmp$3, _key$4, _val$5, $12714);
                        var _new_right$15 = $12715;
                        var $12717 = Avl$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $12716 = $12717;
                        break;
                    case 'Cmp.eql':
                        var $12718 = Avl$node$(_key$4, _val$5, $12714, $12715);
                        var $12716 = $12718;
                        break;
                    case 'Cmp.gtn':
                        var _new_key$12 = $12712;
                        var _new_val$13 = $12713;
                        var _new_left$14 = $12714;
                        var _new_right$15 = Avl$insert$(_cmp$3, _key$4, _val$5, $12715);
                        var $12719 = Avl$balance$(_new_key$12, _new_val$13, _new_left$14, _new_right$15);
                        var $12716 = $12719;
                        break;
                };
                var $12711 = $12716;
                break;
            case 'Avl.tip':
                var $12720 = Avl$singleton$(_key$4, _val$5);
                var $12711 = $12720;
                break;
        };
        return $12711;
    };
    const Avl$insert = x0 => x1 => x2 => x3 => Avl$insert$(x0, x1, x2, x3);

    function Avl$from_list$go$(_cmp$3, _acc$4, _xs$5) {
        var Avl$from_list$go$ = (_cmp$3, _acc$4, _xs$5) => ({
            ctr: 'TCO',
            arg: [_cmp$3, _acc$4, _xs$5]
        });
        var Avl$from_list$go = _cmp$3 => _acc$4 => _xs$5 => Avl$from_list$go$(_cmp$3, _acc$4, _xs$5);
        var arg = [_cmp$3, _acc$4, _xs$5];
        while (true) {
            let [_cmp$3, _acc$4, _xs$5] = arg;
            var R = (() => {
                var self = _xs$5;
                switch (self._) {
                    case 'List.cons':
                        var $12721 = self.head;
                        var $12722 = self.tail;
                        var _key$8 = Pair$fst$($12721);
                        var _val$9 = Pair$snd$($12721);
                        var _new_acc$10 = Avl$insert$(_cmp$3, _key$8, _val$9, _acc$4);
                        var $12723 = Avl$from_list$go$(_cmp$3, _new_acc$10, $12722);
                        return $12723;
                    case 'List.nil':
                        var $12724 = _acc$4;
                        return $12724;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Avl$from_list$go = x0 => x1 => x2 => Avl$from_list$go$(x0, x1, x2);

    function Avl$from_list$(_cmp$3, _xs$4) {
        var $12725 = Avl$from_list$go$(_cmp$3, Avl$tip, _xs$4);
        return $12725;
    };
    const Avl$from_list = x0 => x1 => Avl$from_list$(x0, x1);

    function Map$from_list$(_xs$2) {
        var $12726 = Avl$from_list$(String$cmp, _xs$2);
        return $12726;
    };
    const Map$from_list = x0 => Map$from_list$(x0);
    const Kind$Comp$Target$Scheme$optimizeds = Map$from_list$(List$cons$(Pair$new$("Bool.not", Pair$new$(1n, "(not $0)")), List$cons$(Pair$new$("Bool.and", Pair$new$(2n, "(and $0 $1)")), List$cons$(Pair$new$("Bool.if", Pair$new$(3n, "(if $0 $1 $2)")), List$cons$(Pair$new$("Bool.or", Pair$new$(2n, "(or $0 $1)")), List$cons$(Pair$new$("Nat.add", Pair$new$(2n, "(+ $0 $1)")), List$cons$(Pair$new$("Nat.sub", Pair$new$(2n, "(max (- $0 $1) 0)")), List$cons$(Pair$new$("Nat.mul", Pair$new$(2n, "(* $0 $1)")), List$cons$(Pair$new$("Nat.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("Nat.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("Nat.pow", Pair$new$(2n, "(expt $0 $1)")), List$cons$(Pair$new$("Nat.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("Nat.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("Nat.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("Nat.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("Nat.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("Nat.to_u16", Pair$new$(1n, "$0")), List$cons$(Pair$new$("Nat.show", Pair$new$(1n, "(number->string $0)")), List$cons$(Pair$new$("U16.add", Pair$new$(2n, "(mod (+ $0 $1) 65536)")), List$cons$(Pair$new$("U16.sub", Pair$new$(2n, "(mod (- $0 $1) 65536)")), List$cons$(Pair$new$("U16.mul", Pair$new$(2n, "(mod (* $0 $1) 65536)")), List$cons$(Pair$new$("U16.div", Pair$new$(2n, "(div $0 $1)")), List$cons$(Pair$new$("U16.mod", Pair$new$(2n, "(mod $0 $1)")), List$cons$(Pair$new$("U16.pow", Pair$new$(2n, "(mod (expt $0 $1) 65536)")), List$cons$(Pair$new$("U16.ltn", Pair$new$(2n, "(< $0 $1)")), List$cons$(Pair$new$("U16.lte", Pair$new$(2n, "(<= $0 $1)")), List$cons$(Pair$new$("U16.eql", Pair$new$(2n, "(= $0 $1)")), List$cons$(Pair$new$("U16.gte", Pair$new$(2n, "(>= $0 $1)")), List$cons$(Pair$new$("U16.gtn", Pair$new$(2n, "(> $0 $1)")), List$cons$(Pair$new$("U16.inc", Pair$new$(2n, "(+ $0 1)")), List$cons$(Pair$new$("U16.to_nat", Pair$new$(1n, "$0")), List$cons$(Pair$new$("String.eql", Pair$new$(2n, "(string=? (kstring->string $0) (kstring->string $1))")), List$cons$(Pair$new$("String.concat", Pair$new$(2n, "(kstring-append $0 $1)")), List$nil)))))))))))))))))))))))))))))))));
    const Kind$Comp$Target$Scheme$basics = "; string-view record type (fast way to get a tail)\u{a}(define-record string-view\u{a}  ((immutable data)  ; underlying string\u{a}   (immutable start) ; start position (inclusive)\u{a}   (immutable end))) ; end position (exclusive)\u{a}\u{a}(define string-view-ref\u{a}  (lambda (x y)\u{a}    (string-ref (string-view-data x) (+ (string-view-start x) y))))\u{a}\u{a}(define kstring-tail\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (make-string-view\u{a}        (string-view-data x)\u{a}        (+ (string-view-start x) 1)\u{a}        (string-view-end x))\u{a}      (make-string-view\u{a}        x\u{a}        1\u{a}        (string-length x)))))\u{a}\u{a}(define kstring-head\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (string-ref (string-view-data x) (string-view-start x))\u{a}      (string-ref x 0))))\u{a}\u{a}(define kstring-length\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (- (string-view-end x) (string-view-start x))\u{a}      (string-length x))))\u{a}\u{a}(define kstring?\u{a}  (lambda (x)\u{a}    (or (string-view? x) (string? x))))\u{a}\u{a}(define kstring->string\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      (substring (string-view-data x) (string-view-start x) (string-view-end x))\u{a}      x)))\u{a}\u{a}; TODO depending on x, we could safely append data at the end\u{a}(define kstring-append\u{a}  (lambda (x y)\u{a}    (string-append (kstring->string x) (kstring->string y))))\u{a}\u{a}(define kstring-getter\u{a}  (lambda (x)\u{a}    (if (string-view? x)\u{a}      string-view-ref\u{a}      string-ref)))\u{a}\u{a}; Joins a list of strings with an intercalated separator\u{a}(define (kstring_join sep strs fst)\u{a}  (if (null? strs) \u{a}    \"\"\u{a}    (kstring-append\u{a}      (if fst \"\" sep)\u{a}      (car strs)\u{a}      (kstring_join sep (cdr strs) #f))))\u{a}\u{a}; Short alias to vector-ref\u{a}(define get vector-ref)\u{a}\u{a}; Converts a Kind word to a native integer\u{a}(define (word-to-u16 w)\u{a}  (define (word-to-u16-go i w x)\u{a}    (cond ((= 16 i) x)\u{a}      ((symbol=? \'Word.e (get w 0)) (word-to-u16-go (+ i 1) (vector \'Word.e) x))\u{a}      ((symbol=? \'Word.o (get w 0)) (word-to-u16-go (+ i 1) (get w 1) x))\u{a}      ((symbol=? \'Word.i (get w 0)) (word-to-u16-go (+ i 1) (get w 1) (fxior x (fxarithmetic-shift-left 1 i))))))\u{a}  (word-to-u16-go 0 w 0))\u{a}\u{a}; Converts a native integer to a Kind word\u{a}(define (u16-to-word x)\u{a}  (define (u16-to-word-go i x w)\u{a}    (if (= 16 i) w (u16-to-word-go (+ i 1) x\u{a}      (if (= (fxand (fxarithmetic-shift-right x (- 15 i)) 1) 0)\u{a}        (vector \'Word.o w)\u{a}        (vector \'Word.i w)))))\u{a}  (u16-to-word-go 0 x (vector \'Word.e)))\u{a}\u{a}(define suffix?\u{a}  (lambda (str suff)\u{a}    (let ((suff_length (string-length suff))\u{a}          (str_length (string-length str)))\u{a}      (if (<= suff_length str_length)\u{a}        (string=?\u{a}          (substring str (- str_length suff_length) str_length)\u{a}          suff)\u{a}        #f))))\u{a}\u{a}(define prefix?\u{a}  (lambda (str pref)\u{a}    (let ((pref_length (string-length pref))\u{a}          (str_length (string-length str)))\u{a}      (if (<= pref_length str_length)\u{a}        (string=?\u{a}          (substring str 0 pref_length)\u{a}          pref)\u{a}        #f))))\u{a}\u{a}; Returns the last index that chr occurs in str, -1 otherwise\u{a}(define (last_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (kstring-length str))\u{a}      -1\u{a}      (let ((rest (last_index_of chr str (+ idx 1))))\u{a}        (if (char=? (string-ref str idx) chr)\u{a}          (max idx rest)\u{a}          rest)))))\u{a}\u{a}; Returns the first index that chr occurs in str, -1 otherwise\u{a}(define (first_index_of chr kstr idx)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (if (= idx (string-length str))\u{a}      -1\u{a}      (if (char=? (string-ref str idx) chr)\u{a}        idx\u{a}        (first_index_of chr str (+ idx 1))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_first chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (first_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Splits a string using an identifier\u{a}(define (split_at_last chr kstr)\u{a}  (let ((str (kstring->string kstr)))\u{a}    (let ((split_idx (last_index_of chr str 0)))\u{a}      (if (= split_idx -1)\u{a}        str\u{a}        (cons\u{a}          (substring str 0 split_idx)\u{a}          (substring str (+ split_idx 1) (string-length str)))))))\u{a}\u{a}; Converts a date to a string, in milliseconds\u{a}(define (time_to_string time)\u{a}  (number->string\u{a}    (+ (* (time-second time) 1000)\u{a}      (div (time-nanosecond time) 1000000))))\u{a}\u{a}; Prints a text with a newline\u{a}(define (print txt)\u{a}  (display (kstring->string txt))\u{a}  (display \"\u{a}\"))\u{a}\u{a}; Gets a line from stdin\u{a}(define (get_line)\u{a}  (let ((port (current-input-port)))\u{a}    (get-line port)))\u{a}\u{a}; Deletes a file\u{a}(define (del_file file)\u{a}  (delete-file (kstring->string file)))\u{a}\u{a}; Gets the contents of a file as a string\u{a}; If it doesn\'t exist, returns empty\u{a}(define (get_file ifile)\u{a}  (let ((file (kstring->string ifile)))\u{a}    (if (file-exists? file)\u{a}      (let ((port (open-input-file file)))\u{a}        (let ((text (get-string-all port)))\u{a}          (begin\u{a}            (close-input-port port)\u{a}            text)))\u{a}      \"\")))\u{a}\u{a}; Sets the contents of a file\u{a}(define (set_file file text)\u{a}  (system (string-append \"mkdir -p \" (car (split_at_last #\\/ file))))\u{a}  (if (file-exists? file) (delete-file file))\u{a}  (let ((port (open-output-file file)))\u{a}    (begin\u{a}      (display text port)\u{a}      (close-output-port port))))\u{a}\u{a}; Returns a list of files in a directory\u{a}(define (get_dir path)\u{a}  (directory-list path)) \u{a}\u{a}; Returns the time a file was modified. TODO: test on Windows/Linux\u{a}(define (get_file_mtime file)\u{a}  (time_to_string (file-modification-time (kstring->string file))))\u{a}\u{a}; Returns the current time\u{a}(define (get_time)\u{a}  (time_to_string (current-time)))\u{a}\u{a}; Performs a single Kind IO action\u{a}(define (io_action iname)\u{a}  (let ((name (kstring->string iname)))\u{a}  (case name\u{a}    (\"print\" (lambda (x) (print x)))\u{a}    (\"put_string\" (lambda (x) (display x)))\u{a}    (\"get_line\" (lambda (x) (get_line)))\u{a}    (\"del_file\" (lambda (x) (del_file x)))\u{a}    (\"get_file\" (lambda (x) (get_file x)))\u{a}    (\"set_file\" (lambda (x) (let ((file_text (split_at_first #\\= (kstring->string x)))) (set_file (car file_text) (cdr file_text)))))\u{a}    (\"get_dir\" (lambda (x) (get_dir x)))\u{a}    (\"get_file_mtime\" (lambda (x) (get_file_mtime x)))\u{a}    (\"get_time\" (lambda (x) (get_time)))\u{a}    (\"request\" (lambda (x) \"\"))\u{a}    (else (display (string-append \"IO action not found: \" name))))))\u{a}\u{a}; Runs a Kind IO program\u{a}(define (run_io io)\u{a}  (case (vector-ref io 0)\u{a}    (\'IO.end (vector-ref io 1))\u{a}    (\'IO.ask (let (\u{a}      (io_query (vector-ref io 1))\u{a}      (io_param (vector-ref io 2))\u{a}      (io_then (vector-ref io 3)))\u{a}      (run_io (io_then ((io_action io_query) io_param)))))))\u{a}\u{a}(define (run_kind term)\u{a}  (if\u{a}    (and\u{a}      (vector? term)\u{a}      (or\u{a}        (eq? (vector-ref term 0) \'IO.ask)\u{a}        (eq? (vector-ref term 0) \'IO.end)))\u{a}    (run_io term)\u{a}    (print term)))\u{a}\u{a}(define (print-lines args)\u{a}  (unless (null? args)\u{a}    (display (car args))\u{a}    (newline)\u{a}    (print-lines (cdr args))))\u{a}\u{a}(define run-all\u{a}    (lambda (p)\u{a}      (let ((code (get-datum p)))\u{a}        (unless (eq? code #!eof)\u{a}          (compile code)\u{a}          (run-all p)))))\u{a}";
    const Kind$Comp$Target$Scheme$Language = Kind$Comp$Language$new$(Kind$Comp$Target$Scheme$grammar, Kind$Comp$Target$Scheme$natives, Kind$Comp$Target$Scheme$optimizeds, Kind$Comp$Target$Scheme$basics);

    function Kind$api$io$term_to_scheme$(_name$1) {
        var $12727 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $12728 = _m$bind$2;
            return $12728;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var _defs$3 = Maybe$default$(_defs$2, Kind$Map$new);
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$(Kind$Comp$Target$Scheme$Language, _name$1, _compiled$4);
            var $12729 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $12730 = _m$pure$7;
                return $12730;
            }))(_schemed$5);
            return $12729;
        }));
        return $12727;
    };
    const Kind$api$io$term_to_scheme = x0 => Kind$api$io$term_to_scheme$(x0);

    function Kind$Synth$many$(_names$1, _defs$2) {
        var self = _names$1;
        switch (self._) {
            case 'List.cons':
                var $12732 = self.head;
                var $12733 = self.tail;
                var $12734 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $12735 = _m$bind$5;
                    return $12735;
                }))(Kind$Synth$one$($12732, _defs$2))((_new_defs$5 => {
                    var self = _new_defs$5;
                    switch (self._) {
                        case 'Maybe.some':
                            var $12737 = self.value;
                            var $12738 = Kind$Synth$many$($12733, $12737);
                            var $12736 = $12738;
                            break;
                        case 'Maybe.none':
                            var $12739 = Kind$Synth$many$($12733, _defs$2);
                            var $12736 = $12739;
                            break;
                    };
                    return $12736;
                }));
                var $12731 = $12734;
                break;
            case 'List.nil':
                var $12740 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $12741 = _m$pure$4;
                    return $12741;
                }))(_defs$2);
                var $12731 = $12740;
                break;
        };
        return $12731;
    };
    const Kind$Synth$many = x0 => x1 => Kind$Synth$many$(x0, x1);

    function Kind$Comp$dependency_sort$module$(_exports$1, _defs$2) {
        var _ret$3 = Pair$new$(Kind$Map$new, List$nil);
        var _ret$4 = (() => {
            var $12744 = _ret$3;
            var $12745 = _exports$1;
            let _ret$5 = $12744;
            let _export$4;
            while ($12745._ === 'List.cons') {
                _export$4 = $12745.head;
                var _term$6 = Kind$Comp$ref$(_export$4);
                var self = _ret$5;
                switch (self._) {
                    case 'Pair.new':
                        var $12746 = self.fst;
                        var $12747 = self.snd;
                        var $12748 = Kind$Comp$dependency_sort$go$(_term$6, _defs$2, $12746, $12747);
                        var $12744 = $12748;
                        break;
                };
                _ret$5 = $12744;
                $12745 = $12745.tail;
            }
            return _ret$5;
        })();
        var self = _ret$4;
        switch (self._) {
            case 'Pair.new':
                var $12749 = self.snd;
                var $12750 = List$reverse$($12749);
                var $12742 = $12750;
                break;
        };
        return $12742;
    };
    const Kind$Comp$dependency_sort$module = x0 => x1 => Kind$Comp$dependency_sort$module$(x0, x1);

    function Kind$Comp$transpile$module$(_lang$1, _name$2, _exports$3, _defs$4) {
        var _defs_list$5 = Kind$Comp$dependency_sort$module$(_exports$3, _defs$4);
        var self = _lang$1;
        switch (self._) {
            case 'Kind.Comp.Language.new':
                var $12752 = self.gram;
                var $12753 = $12752;
                var self = $12753;
                break;
        };
        switch (self._) {
            case 'Kind.Comp.Grammar.new':
                var $12754 = self.module;
                var $12755 = $12754;
                var _code$6 = $12755;
                break;
        };
        var _code$6 = _code$6(_name$2)(_exports$3)(((() => {
            var self = _lang$1;
            switch (self._) {
                case 'Kind.Comp.Language.new':
                    var $12756 = self.base;
                    var $12757 = $12756;
                    return $12757;
            };
        })() + ("\u{a}\u{a}" + Kind$Comp$transpile$global_definitions$(_lang$1, _defs_list$5, _defs$4))));
        var $12751 = _code$6;
        return $12751;
    };
    const Kind$Comp$transpile$module = x0 => x1 => x2 => x3 => Kind$Comp$transpile$module$(x0, x1, x2, x3);

    function Kind$api$io$terms_to_scheme_lib$(_name$1, _exports$2) {
        var $12758 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $12759 = _m$bind$3;
            return $12759;
        }))(Kind$Synth$many$(_exports$2, Kind$Map$new))((_defs$3 => {
            var _compiled$4 = Kind$Comp$Defs$compile$(_defs$3);
            var _schemed$5 = Kind$Comp$transpile$module$(Kind$Comp$Target$Scheme$Language, _name$1, _exports$2, _compiled$4);
            var $12760 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $12761 = _m$pure$7;
                return $12761;
            }))(_schemed$5);
            return $12760;
        }));
        return $12758;
    };
    const Kind$api$io$terms_to_scheme_lib = x0 => x1 => Kind$api$io$terms_to_scheme_lib$(x0, x1);

    function BitsMap$keys$go$(_xs$2, _key$3, _list$4) {
        var self = _xs$2;
        switch (self._) {
            case 'BitsMap.tie':
                var $12763 = self.val;
                var $12764 = self.lft;
                var $12765 = self.rgt;
                var self = $12763;
                switch (self._) {
                    case 'Maybe.none':
                        var $12767 = _list$4;
                        var _list0$8 = $12767;
                        break;
                    case 'Maybe.some':
                        var $12768 = List$cons$(Bits$reverse$(_key$3), _list$4);
                        var _list0$8 = $12768;
                        break;
                };
                var _list1$9 = BitsMap$keys$go$($12764, (_key$3 + '0'), _list0$8);
                var _list2$10 = BitsMap$keys$go$($12765, (_key$3 + '1'), _list1$9);
                var $12766 = _list2$10;
                var $12762 = $12766;
                break;
            case 'BitsMap.new':
                var $12769 = _list$4;
                var $12762 = $12769;
                break;
        };
        return $12762;
    };
    const BitsMap$keys$go = x0 => x1 => x2 => BitsMap$keys$go$(x0, x1, x2);

    function BitsMap$keys$(_xs$2) {
        var $12770 = List$reverse$(BitsMap$keys$go$(_xs$2, Bits$e, List$nil));
        return $12770;
    };
    const BitsMap$keys = x0 => BitsMap$keys$(x0);

    function Kind$Synth$file$(_file$1, _defs$2) {
        var $12771 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $12772 = _m$bind$3;
            return $12772;
        }))(IO$get_file$(_file$1))((_code$3 => {
            var _read$4 = Kind$Defs$read$(_file$1, _code$3, _defs$2);
            var self = _read$4;
            switch (self._) {
                case 'Either.left':
                    var $12774 = self.value;
                    var $12775 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                        var $12776 = _m$pure$7;
                        return $12776;
                    }))(Either$left$($12774));
                    var $12773 = $12775;
                    break;
                case 'Either.right':
                    var $12777 = self.value;
                    var _file_defs$6 = $12777;
                    var _file_keys$7 = BitsMap$keys$(_file_defs$6);
                    var _file_nams$8 = List$mapped$(_file_keys$7, Kind$Name$from_bits);
                    var $12778 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                        var $12779 = _m$bind$9;
                        return $12779;
                    }))(Kind$Synth$many$(_file_nams$8, _file_defs$6))((_defs$9 => {
                        var $12780 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                            var $12781 = _m$pure$11;
                            return $12781;
                        }))(Either$right$(Pair$new$(_file_nams$8, _defs$9)));
                        return $12780;
                    }));
                    var $12773 = $12778;
                    break;
            };
            return $12773;
        }));
        return $12771;
    };
    const Kind$Synth$file = x0 => x1 => Kind$Synth$file$(x0, x1);

    function IO$put_string$(_text$1) {
        var $12782 = IO$ask$("put_string", _text$1, (_skip$2 => {
            var $12783 = IO$end$(Unit$new);
            return $12783;
        }));
        return $12782;
    };
    const IO$put_string = x0 => IO$put_string$(x0);

    function IO$print$(_text$1) {
        var $12784 = IO$put_string$((_text$1 + "\u{a}"));
        return $12784;
    };
    const IO$print = x0 => IO$print$(x0);

    function Kind$Term$show$as_nat$go$(_term$1) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12786 = self.name;
                var self = ($12786 === "Nat.zero");
                if (self) {
                    var $12788 = Maybe$some$(0n);
                    var $12787 = $12788;
                } else {
                    var $12789 = Maybe$none;
                    var $12787 = $12789;
                };
                var $12785 = $12787;
                break;
            case 'Kind.Term.app':
                var $12790 = self.func;
                var $12791 = self.argm;
                var self = $12790;
                switch (self._) {
                    case 'Kind.Term.ref':
                        var $12793 = self.name;
                        var self = ($12793 === "Nat.succ");
                        if (self) {
                            var $12795 = Maybe$monad$((_m$bind$5 => _m$pure$6 => {
                                var $12796 = _m$bind$5;
                                return $12796;
                            }))(Kind$Term$show$as_nat$go$($12791))((_pred$5 => {
                                var $12797 = Maybe$monad$((_m$bind$6 => _m$pure$7 => {
                                    var $12798 = _m$pure$7;
                                    return $12798;
                                }))(Nat$succ$(_pred$5));
                                return $12797;
                            }));
                            var $12794 = $12795;
                        } else {
                            var $12799 = Maybe$none;
                            var $12794 = $12799;
                        };
                        var $12792 = $12794;
                        break;
                    case 'Kind.Term.var':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.app':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                    case 'Kind.Term.ori':
                        var $12800 = Maybe$none;
                        var $12792 = $12800;
                        break;
                };
                var $12785 = $12792;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12801 = Maybe$none;
                var $12785 = $12801;
                break;
        };
        return $12785;
    };
    const Kind$Term$show$as_nat$go = x0 => Kind$Term$show$as_nat$go$(x0);

    function Kind$Term$show$as_nat$(_term$1) {
        var $12802 = Maybe$mapped$(Kind$Term$show$as_nat$go$(_term$1), Nat$show);
        return $12802;
    };
    const Kind$Term$show$as_nat = x0 => Kind$Term$show$as_nat$(x0);

    function Kind$Term$show$is_ref$(_term$1, _name$2) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.ref':
                var $12804 = self.name;
                var $12805 = (_name$2 === $12804);
                var $12803 = $12805;
                break;
            case 'Kind.Term.var':
            case 'Kind.Term.typ':
            case 'Kind.Term.all':
            case 'Kind.Term.lam':
            case 'Kind.Term.app':
            case 'Kind.Term.let':
            case 'Kind.Term.def':
            case 'Kind.Term.ann':
            case 'Kind.Term.gol':
            case 'Kind.Term.hol':
            case 'Kind.Term.nat':
            case 'Kind.Term.chr':
            case 'Kind.Term.str':
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
            case 'Kind.Term.ori':
                var $12806 = Bool$false;
                var $12803 = $12806;
                break;
        };
        return $12803;
    };
    const Kind$Term$show$is_ref = x0 => x1 => Kind$Term$show$is_ref$(x0, x1);

    function Kind$Term$show$app$done$(_term$1, _path$2, _args$3) {
        var _arity$4 = (list_length(_args$3));
        var self = (Kind$Term$show$is_ref$(_term$1, "Equal") && (_arity$4 === 3n));
        if (self) {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var _eq_lft$6 = Maybe$default$(List$at$(1n, _args$3), "?");
            var _eq_rgt$7 = Maybe$default$(List$at$(2n, _args$3), "?");
            var $12808 = String$flatten$(List$cons$(_eq_lft$6, List$cons$(" == ", List$cons$(_eq_rgt$7, List$nil))));
            var $12807 = $12808;
        } else {
            var _func$5 = Kind$Term$show$go$(_term$1, _path$2);
            var self = _func$5;
            if (self.length === 0) {
                var $12810 = Bool$false;
                var _wrap$6 = $12810;
            } else {
                var $12811 = self.charCodeAt(0);
                var $12812 = self.slice(1);
                var $12813 = ($12811 === 40);
                var _wrap$6 = $12813;
            };
            var _args$7 = String$join$(",", _args$3);
            var self = _wrap$6;
            if (self) {
                var $12814 = String$flatten$(List$cons$("(", List$cons$(_func$5, List$cons$(")", List$nil))));
                var _func$8 = $12814;
            } else {
                var $12815 = _func$5;
                var _func$8 = $12815;
            };
            var $12809 = String$flatten$(List$cons$(_func$8, List$cons$("(", List$cons$(_args$7, List$cons$(")", List$nil)))));
            var $12807 = $12809;
        };
        return $12807;
    };
    const Kind$Term$show$app$done = x0 => x1 => x2 => Kind$Term$show$app$done$(x0, x1, x2);

    function Kind$Term$show$app$(_term$1, _path$2, _args$3) {
        var Kind$Term$show$app$ = (_term$1, _path$2, _args$3) => ({
            ctr: 'TCO',
            arg: [_term$1, _path$2, _args$3]
        });
        var Kind$Term$show$app = _term$1 => _path$2 => _args$3 => Kind$Term$show$app$(_term$1, _path$2, _args$3);
        var arg = [_term$1, _path$2, _args$3];
        while (true) {
            let [_term$1, _path$2, _args$3] = arg;
            var R = (() => {
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.app':
                        var $12816 = self.func;
                        var $12817 = self.argm;
                        var $12818 = Kind$Term$show$app$($12816, Kind$MPath$o$(_path$2), List$cons$(Kind$Term$show$go$($12817, Kind$MPath$i$(_path$2)), _args$3));
                        return $12818;
                    case 'Kind.Term.ori':
                        var $12819 = self.expr;
                        var $12820 = Kind$Term$show$app$($12819, _path$2, _args$3);
                        return $12820;
                    case 'Kind.Term.var':
                    case 'Kind.Term.ref':
                    case 'Kind.Term.typ':
                    case 'Kind.Term.all':
                    case 'Kind.Term.lam':
                    case 'Kind.Term.let':
                    case 'Kind.Term.def':
                    case 'Kind.Term.ann':
                    case 'Kind.Term.gol':
                    case 'Kind.Term.hol':
                    case 'Kind.Term.nat':
                    case 'Kind.Term.chr':
                    case 'Kind.Term.str':
                    case 'Kind.Term.num':
                    case 'Kind.Term.cse':
                    case 'Kind.Term.new':
                    case 'Kind.Term.get':
                    case 'Kind.Term.set':
                    case 'Kind.Term.ope':
                        var $12821 = Kind$Term$show$app$done$(_term$1, _path$2, _args$3);
                        return $12821;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const Kind$Term$show$app = x0 => x1 => x2 => Kind$Term$show$app$(x0, x1, x2);

    function BitsMap$to_list$(_xs$2) {
        var $12822 = List$reverse$(BitsMap$to_list$go$(_xs$2, Bits$e, List$nil));
        return $12822;
    };
    const BitsMap$to_list = x0 => BitsMap$to_list$(x0);

    function Kind$Term$show$go$(_term$1, _path$2) {
        var self = Kind$Term$show$as_nat$(_term$1);
        switch (self._) {
            case 'Maybe.some':
                var $12824 = self.value;
                var $12825 = $12824;
                var $12823 = $12825;
                break;
            case 'Maybe.none':
                var self = _term$1;
                switch (self._) {
                    case 'Kind.Term.var':
                        var $12827 = self.name;
                        var $12828 = Kind$Name$show$($12827);
                        var $12826 = $12828;
                        break;
                    case 'Kind.Term.ref':
                        var $12829 = self.name;
                        var _name$4 = Kind$Name$show$($12829);
                        var self = _path$2;
                        switch (self._) {
                            case 'Maybe.some':
                                var $12831 = self.value;
                                var _path_val$6 = ((Bits$e + '1') + Kind$Path$to_bits$($12831));
                                var _path_str$7 = Nat$show$(Bits$to_nat$(_path_val$6));
                                var $12832 = String$flatten$(List$cons$(_name$4, List$cons$(Kind$Code$color$("2", ("-" + _path_str$7)), List$nil)));
                                var $12830 = $12832;
                                break;
                            case 'Maybe.none':
                                var $12833 = _name$4;
                                var $12830 = $12833;
                                break;
                        };
                        var $12826 = $12830;
                        break;
                    case 'Kind.Term.all':
                        var $12834 = self.eras;
                        var $12835 = self.self;
                        var $12836 = self.name;
                        var $12837 = self.xtyp;
                        var $12838 = self.body;
                        var _eras$8 = $12834;
                        var _self$9 = Kind$Name$show$($12835);
                        var _name$10 = Kind$Name$show$($12836);
                        var _type$11 = Kind$Term$show$go$($12837, Kind$MPath$o$(_path$2));
                        var self = _eras$8;
                        if (self) {
                            var $12840 = "<";
                            var _open$12 = $12840;
                        } else {
                            var $12841 = "(";
                            var _open$12 = $12841;
                        };
                        var self = _eras$8;
                        if (self) {
                            var $12842 = ">";
                            var _clos$13 = $12842;
                        } else {
                            var $12843 = ")";
                            var _clos$13 = $12843;
                        };
                        var _body$14 = Kind$Term$show$go$($12838(Kind$Term$var$($12835, 0n))(Kind$Term$var$($12836, 0n)), Kind$MPath$i$(_path$2));
                        var $12839 = String$flatten$(List$cons$(_self$9, List$cons$(_open$12, List$cons$(_name$10, List$cons$(":", List$cons$(_type$11, List$cons$(_clos$13, List$cons$(" ", List$cons$(_body$14, List$nil)))))))));
                        var $12826 = $12839;
                        break;
                    case 'Kind.Term.lam':
                        var $12844 = self.name;
                        var $12845 = self.body;
                        var _name$5 = Kind$Name$show$($12844);
                        var _body$6 = Kind$Term$show$go$($12845(Kind$Term$var$($12844, 0n)), Kind$MPath$o$(_path$2));
                        var $12846 = String$flatten$(List$cons$("(", List$cons$(_name$5, List$cons$(") ", List$cons$(_body$6, List$nil)))));
                        var $12826 = $12846;
                        break;
                    case 'Kind.Term.let':
                        var $12847 = self.name;
                        var $12848 = self.expr;
                        var $12849 = self.body;
                        var _name$6 = Kind$Name$show$($12847);
                        var _expr$7 = Kind$Term$show$go$($12848, Kind$MPath$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($12849(Kind$Term$var$($12847, 0n)), Kind$MPath$i$(_path$2));
                        var $12850 = String$flatten$(List$cons$("let ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $12826 = $12850;
                        break;
                    case 'Kind.Term.def':
                        var $12851 = self.name;
                        var $12852 = self.expr;
                        var $12853 = self.body;
                        var _name$6 = Kind$Name$show$($12851);
                        var _expr$7 = Kind$Term$show$go$($12852, Kind$MPath$o$(_path$2));
                        var _body$8 = Kind$Term$show$go$($12853(Kind$Term$var$($12851, 0n)), Kind$MPath$i$(_path$2));
                        var $12854 = String$flatten$(List$cons$("def ", List$cons$(_name$6, List$cons$(" = ", List$cons$(_expr$7, List$cons$("; ", List$cons$(_body$8, List$nil)))))));
                        var $12826 = $12854;
                        break;
                    case 'Kind.Term.ann':
                        var $12855 = self.term;
                        var $12856 = self.type;
                        var _term$6 = Kind$Term$show$go$($12855, Kind$MPath$o$(_path$2));
                        var _type$7 = Kind$Term$show$go$($12856, Kind$MPath$i$(_path$2));
                        var $12857 = String$flatten$(List$cons$(_term$6, List$cons$("::", List$cons$(_type$7, List$nil))));
                        var $12826 = $12857;
                        break;
                    case 'Kind.Term.gol':
                        var $12858 = self.name;
                        var _name$6 = Kind$Name$show$($12858);
                        var $12859 = String$flatten$(List$cons$("?", List$cons$(_name$6, List$nil)));
                        var $12826 = $12859;
                        break;
                    case 'Kind.Term.nat':
                        var $12860 = self.natx;
                        var $12861 = String$flatten$(List$cons$(Nat$show$($12860), List$nil));
                        var $12826 = $12861;
                        break;
                    case 'Kind.Term.chr':
                        var $12862 = self.chrx;
                        var $12863 = String$flatten$(List$cons$("\'", List$cons$(Kind$Code$escape$char$($12862), List$cons$("\'", List$nil))));
                        var $12826 = $12863;
                        break;
                    case 'Kind.Term.str':
                        var $12864 = self.strx;
                        var $12865 = String$flatten$(List$cons$("\"", List$cons$(Kind$Code$escape$($12864), List$cons$("\"", List$nil))));
                        var $12826 = $12865;
                        break;
                    case 'Kind.Term.num':
                        var $12866 = self.sign;
                        var $12867 = self.numb;
                        var $12868 = self.frac;
                        var $12869 = String$flatten$(List$cons$((() => {
                            var self = $12866;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $12870 = self.value;
                                    var self = $12870;
                                    if (self) {
                                        var $12872 = "+";
                                        var $12871 = $12872;
                                    } else {
                                        var $12873 = "-";
                                        var $12871 = $12873;
                                    };
                                    return $12871;
                                case 'Maybe.none':
                                    var $12874 = "";
                                    return $12874;
                            };
                        })(), List$cons$(Nat$show$($12867), List$cons$((() => {
                            var self = $12868;
                            switch (self._) {
                                case 'Maybe.some':
                                    var $12875 = self.value;
                                    var $12876 = ("." + Nat$show$($12875));
                                    return $12876;
                                case 'Maybe.none':
                                    var $12877 = "";
                                    return $12877;
                            };
                        })(), List$nil))));
                        var $12826 = $12869;
                        break;
                    case 'Kind.Term.cse':
                        var $12878 = self.expr;
                        var $12879 = self.name;
                        var $12880 = self.with;
                        var $12881 = self.cses;
                        var $12882 = self.moti;
                        var _expr$9 = Kind$Term$show$go$($12878, Kind$MPath$o$(_path$2));
                        var _name$10 = Kind$Name$show$($12879);
                        var _wyth$11 = String$join$("; ", List$mapped$($12880, (_with_var$11 => {
                            var self = _with_var$11;
                            switch (self._) {
                                case 'Kind.Ann.new':
                                    var $12885 = self.name;
                                    var $12886 = self.type;
                                    var self = $12886;
                                    switch (self._) {
                                        case 'Maybe.some':
                                            var $12888 = self.value;
                                            var $12889 = ($12885 + (": " + Kind$Term$show$go$($12888, Maybe$none)));
                                            var $12887 = $12889;
                                            break;
                                        case 'Maybe.none':
                                            var $12890 = $12885;
                                            var $12887 = $12890;
                                            break;
                                    };
                                    var $12884 = $12887;
                                    break;
                            };
                            return $12884;
                        })));
                        var _cses$12 = BitsMap$to_list$($12881);
                        var _cses$13 = String$join$("", List$mapped$(_cses$12, (_x$13 => {
                            var _name$14 = Kind$Name$from_bits$(Pair$fst$(_x$13));
                            var _term$15 = Kind$Term$show$go$(Pair$snd$(_x$13), Maybe$none);
                            var $12891 = String$flatten$(List$cons$(_name$14, List$cons$(": ", List$cons$(_term$15, List$cons$(", ", List$nil)))));
                            return $12891;
                        })));
                        var self = $12882;
                        switch (self._) {
                            case 'Maybe.some':
                                var $12892 = self.value;
                                var $12893 = String$flatten$(List$cons$(": ", List$cons$(Kind$Term$show$go$($12892, Maybe$none), List$nil)));
                                var _moti$14 = $12893;
                                break;
                            case 'Maybe.none':
                                var $12894 = "";
                                var _moti$14 = $12894;
                                break;
                        };
                        var $12883 = String$flatten$(List$cons$("case ", List$cons$(_expr$9, List$cons$(" as ", List$cons$(_name$10, List$cons$(_wyth$11, List$cons$(" { ", List$cons$(_cses$13, List$cons$("}", List$cons$(_moti$14, List$nil))))))))));
                        var $12826 = $12883;
                        break;
                    case 'Kind.Term.new':
                        var $12895 = self.args;
                        var _args$4 = List$fold$($12895, (_path$4 => {
                            var $12897 = List$nil;
                            return $12897;
                        }), (_arg$4 => _res$5 => _path$6 => {
                            var $12898 = List$cons$(Kind$Term$show$go$(_arg$4, _path$6), _res$5(Kind$MPath$o$(_path$6)));
                            return $12898;
                        }))(_path$2);
                        var $12896 = String$flatten$(List$cons$("{", List$cons$(String$join$(",", _args$4), List$cons$("}", List$nil))));
                        var $12826 = $12896;
                        break;
                    case 'Kind.Term.get':
                        var $12899 = self.expr;
                        var $12900 = self.fkey;
                        var _expr$5 = Kind$Term$show$go$($12899, Kind$MPath$o$(_path$2));
                        var $12901 = String$flatten$(List$cons$(_expr$5, List$cons$("@", List$cons$($12900, List$nil))));
                        var $12826 = $12901;
                        break;
                    case 'Kind.Term.set':
                        var $12902 = self.expr;
                        var $12903 = self.fkey;
                        var $12904 = self.fval;
                        var _expr$6 = Kind$Term$show$go$($12902, Kind$MPath$o$(_path$2));
                        var _fval$7 = Kind$Term$show$go$($12904, Kind$MPath$i$(_path$2));
                        var $12905 = String$flatten$(List$cons$(_expr$6, List$cons$("@", List$cons$($12903, List$cons$(" <- ", List$cons$(_fval$7, List$nil))))));
                        var $12826 = $12905;
                        break;
                    case 'Kind.Term.ope':
                        var $12906 = self.name;
                        var $12907 = self.arg0;
                        var $12908 = self.arg1;
                        var _arg0$6 = Kind$Term$show$go$($12907, Kind$MPath$o$(_path$2));
                        var _arg1$7 = Kind$Term$show$go$($12908, Kind$MPath$i$(_path$2));
                        var $12909 = String$flatten$(List$cons$("(", List$cons$(_arg0$6, List$cons$(" ", List$cons$($12906, List$cons$(" ", List$cons$(_arg1$7, List$cons$(")", List$nil))))))));
                        var $12826 = $12909;
                        break;
                    case 'Kind.Term.ori':
                        var $12910 = self.expr;
                        var $12911 = Kind$Term$show$go$($12910, _path$2);
                        var $12826 = $12911;
                        break;
                    case 'Kind.Term.typ':
                        var $12912 = "Type";
                        var $12826 = $12912;
                        break;
                    case 'Kind.Term.app':
                        var $12913 = Kind$Term$show$app$(_term$1, _path$2, List$nil);
                        var $12826 = $12913;
                        break;
                    case 'Kind.Term.hol':
                        var $12914 = "_";
                        var $12826 = $12914;
                        break;
                };
                var $12823 = $12826;
                break;
        };
        return $12823;
    };
    const Kind$Term$show$go = x0 => x1 => Kind$Term$show$go$(x0, x1);

    function Kind$Term$show$(_term$1) {
        var $12915 = Kind$Term$show$go$(_term$1, Maybe$none);
        return $12915;
    };
    const Kind$Term$show = x0 => Kind$Term$show$(x0);

    function Kind$Defs$report$types$(_defs$1, _names$2) {
        var _types$3 = "";
        var _types$4 = (() => {
            var $12918 = _types$3;
            var $12919 = _names$2;
            let _types$5 = $12918;
            let _name$4;
            while ($12919._ === 'List.cons') {
                _name$4 = $12919.head;
                var self = Kind$Map$get$(_name$4, _defs$1);
                switch (self._) {
                    case 'Maybe.some':
                        var $12920 = self.value;
                        var self = $12920;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $12922 = self.type;
                                var $12923 = (_types$5 + (_name$4 + (": " + (Kind$Term$show$($12922) + "\u{a}"))));
                                var $12921 = $12923;
                                break;
                        };
                        var $12918 = $12921;
                        break;
                    case 'Maybe.none':
                        var $12924 = _types$5;
                        var $12918 = $12924;
                        break;
                };
                _types$5 = $12918;
                $12919 = $12919.tail;
            }
            return _types$5;
        })();
        var $12916 = _types$4;
        return $12916;
    };
    const Kind$Defs$report$types = x0 => x1 => Kind$Defs$report$types$(x0, x1);

    function List$filter$(_f$2, _xs$3) {
        var self = _xs$3;
        switch (self._) {
            case 'List.cons':
                var $12926 = self.head;
                var $12927 = self.tail;
                var self = _f$2($12926);
                if (self) {
                    var $12929 = List$cons$($12926, List$filter$(_f$2, $12927));
                    var $12928 = $12929;
                } else {
                    var $12930 = List$filter$(_f$2, $12927);
                    var $12928 = $12930;
                };
                var $12925 = $12928;
                break;
            case 'List.nil':
                var $12931 = List$nil;
                var $12925 = $12931;
                break;
        };
        return $12925;
    };
    const List$filter = x0 => x1 => List$filter$(x0, x1);

    function Kind$Error$is_undef$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.cant_infer':
                var $12933 = Bool$false;
                var $12932 = $12933;
                break;
            case 'Kind.Error.undefined_reference':
                var $12934 = Bool$true;
                var $12932 = $12934;
                break;
        };
        return $12932;
    };
    const Kind$Error$is_undef = x0 => Kind$Error$is_undef$(x0);

    function Kind$Error$is_mistake$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.cant_infer':
                var $12936 = Bool$true;
                var $12935 = $12936;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
                var $12937 = Bool$false;
                var $12935 = $12937;
                break;
        };
        return $12935;
    };
    const Kind$Error$is_mistake = x0 => Kind$Error$is_mistake$(x0);

    function Kind$Error$is_goal$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
            case 'Kind.Error.undefined_reference':
            case 'Kind.Error.cant_infer':
                var $12939 = Bool$false;
                var $12938 = $12939;
                break;
            case 'Kind.Error.show_goal':
                var $12940 = Bool$true;
                var $12938 = $12940;
                break;
        };
        return $12938;
    };
    const Kind$Error$is_goal = x0 => Kind$Error$is_goal$(x0);

    function Kind$Error$relevant$(_errors$1) {
        var _undefs$2 = List$filter$(Kind$Error$is_undef, _errors$1);
        var _mistakes$3 = List$filter$(Kind$Error$is_mistake, _errors$1);
        var _goals$4 = List$filter$(Kind$Error$is_goal, _errors$1);
        var self = _undefs$2;
        switch (self._) {
            case 'List.nil':
                var self = _mistakes$3;
                switch (self._) {
                    case 'List.cons':
                        var $12943 = self.head;
                        var $12944 = List$concat$(List$cons$($12943, List$nil), _goals$4);
                        var $12942 = $12944;
                        break;
                    case 'List.nil':
                        var $12945 = _goals$4;
                        var $12942 = $12945;
                        break;
                };
                var $12941 = $12942;
                break;
            case 'List.cons':
                var $12946 = List$concat$(_undefs$2, _goals$4);
                var $12941 = $12946;
                break;
        };
        return $12941;
    };
    const Kind$Error$relevant = x0 => Kind$Error$relevant$(x0);

    function Kind$Context$show$(_context$1) {
        var self = _context$1;
        switch (self._) {
            case 'List.cons':
                var $12948 = self.head;
                var $12949 = self.tail;
                var self = $12948;
                switch (self._) {
                    case 'Pair.new':
                        var $12951 = self.fst;
                        var $12952 = self.snd;
                        var _name$6 = Kind$Name$show$($12951);
                        var _type$7 = Kind$Term$show$(Kind$Term$normalize$($12952, Kind$Map$new));
                        var _rest$8 = Kind$Context$show$($12949);
                        var $12953 = (_rest$8 + ("- " + (_name$6 + (": " + (_type$7 + "\u{a}")))));
                        var $12950 = $12953;
                        break;
                };
                var $12947 = $12950;
                break;
            case 'List.nil':
                var $12954 = "";
                var $12947 = $12954;
                break;
        };
        return $12947;
    };
    const Kind$Context$show = x0 => Kind$Context$show$(x0);

    function Kind$Term$expand_at$(_path$1, _term$2, _defs$3) {
        var $12955 = Kind$Term$patch_at$(_path$1, _term$2, (_term$4 => {
            var self = _term$4;
            switch (self._) {
                case 'Kind.Term.ref':
                    var $12957 = self.name;
                    var self = Kind$Map$get$($12957, _defs$3);
                    switch (self._) {
                        case 'Maybe.some':
                            var $12959 = self.value;
                            var self = $12959;
                            switch (self._) {
                                case 'Kind.Def.new':
                                    var $12961 = self.term;
                                    var $12962 = $12961;
                                    var $12960 = $12962;
                                    break;
                            };
                            var $12958 = $12960;
                            break;
                        case 'Maybe.none':
                            var $12963 = Kind$Term$ref$($12957);
                            var $12958 = $12963;
                            break;
                    };
                    var $12956 = $12958;
                    break;
                case 'Kind.Term.var':
                case 'Kind.Term.typ':
                case 'Kind.Term.all':
                case 'Kind.Term.lam':
                case 'Kind.Term.app':
                case 'Kind.Term.let':
                case 'Kind.Term.def':
                case 'Kind.Term.ann':
                case 'Kind.Term.gol':
                case 'Kind.Term.hol':
                case 'Kind.Term.nat':
                case 'Kind.Term.chr':
                case 'Kind.Term.str':
                case 'Kind.Term.num':
                case 'Kind.Term.cse':
                case 'Kind.Term.new':
                case 'Kind.Term.get':
                case 'Kind.Term.set':
                case 'Kind.Term.ope':
                case 'Kind.Term.ori':
                    var $12964 = _term$4;
                    var $12956 = $12964;
                    break;
            };
            return $12956;
        }));
        return $12955;
    };
    const Kind$Term$expand_at = x0 => x1 => x2 => Kind$Term$expand_at$(x0, x1, x2);

    function Kind$Term$expand_ct$(_term$1, _defs$2, _arity$3) {
        var self = _term$1;
        switch (self._) {
            case 'Kind.Term.var':
                var $12966 = self.name;
                var $12967 = self.indx;
                var $12968 = Kind$Term$var$($12966, $12967);
                var $12965 = $12968;
                break;
            case 'Kind.Term.ref':
                var $12969 = self.name;
                var self = Kind$Map$get$($12969, _defs$2);
                switch (self._) {
                    case 'Maybe.some':
                        var $12971 = self.value;
                        var self = $12971;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $12973 = self.term;
                                var $12974 = self.isct;
                                var $12975 = self.arit;
                                var self = ($12974 && (_arity$3 > $12975));
                                if (self) {
                                    var $12977 = $12973;
                                    var $12976 = $12977;
                                } else {
                                    var $12978 = Kind$Term$ref$($12969);
                                    var $12976 = $12978;
                                };
                                var $12972 = $12976;
                                break;
                        };
                        var $12970 = $12972;
                        break;
                    case 'Maybe.none':
                        var $12979 = Kind$Term$ref$($12969);
                        var $12970 = $12979;
                        break;
                };
                var $12965 = $12970;
                break;
            case 'Kind.Term.all':
                var $12980 = self.eras;
                var $12981 = self.self;
                var $12982 = self.name;
                var $12983 = self.xtyp;
                var $12984 = self.body;
                var $12985 = Kind$Term$all$($12980, $12981, $12982, Kind$Term$expand_ct$($12983, _defs$2, 0n), (_s$9 => _x$10 => {
                    var $12986 = Kind$Term$expand_ct$($12984(_s$9)(_x$10), _defs$2, 0n);
                    return $12986;
                }));
                var $12965 = $12985;
                break;
            case 'Kind.Term.lam':
                var $12987 = self.name;
                var $12988 = self.body;
                var $12989 = Kind$Term$lam$($12987, (_x$6 => {
                    var $12990 = Kind$Term$expand_ct$($12988(_x$6), _defs$2, 0n);
                    return $12990;
                }));
                var $12965 = $12989;
                break;
            case 'Kind.Term.app':
                var $12991 = self.func;
                var $12992 = self.argm;
                var $12993 = Kind$Term$app$(Kind$Term$expand_ct$($12991, _defs$2, Nat$succ$(_arity$3)), Kind$Term$expand_ct$($12992, _defs$2, 0n));
                var $12965 = $12993;
                break;
            case 'Kind.Term.let':
                var $12994 = self.name;
                var $12995 = self.expr;
                var $12996 = self.body;
                var $12997 = Kind$Term$let$($12994, Kind$Term$expand_ct$($12995, _defs$2, 0n), (_x$7 => {
                    var $12998 = Kind$Term$expand_ct$($12996(_x$7), _defs$2, 0n);
                    return $12998;
                }));
                var $12965 = $12997;
                break;
            case 'Kind.Term.def':
                var $12999 = self.name;
                var $13000 = self.expr;
                var $13001 = self.body;
                var $13002 = Kind$Term$def$($12999, Kind$Term$expand_ct$($13000, _defs$2, 0n), (_x$7 => {
                    var $13003 = Kind$Term$expand_ct$($13001(_x$7), _defs$2, 0n);
                    return $13003;
                }));
                var $12965 = $13002;
                break;
            case 'Kind.Term.ann':
                var $13004 = self.done;
                var $13005 = self.term;
                var $13006 = self.type;
                var $13007 = Kind$Term$ann$($13004, Kind$Term$expand_ct$($13005, _defs$2, 0n), Kind$Term$expand_ct$($13006, _defs$2, 0n));
                var $12965 = $13007;
                break;
            case 'Kind.Term.gol':
                var $13008 = self.name;
                var $13009 = self.dref;
                var $13010 = self.verb;
                var $13011 = Kind$Term$gol$($13008, $13009, $13010);
                var $12965 = $13011;
                break;
            case 'Kind.Term.hol':
                var $13012 = self.path;
                var $13013 = Kind$Term$hol$($13012);
                var $12965 = $13013;
                break;
            case 'Kind.Term.nat':
                var $13014 = self.natx;
                var $13015 = Kind$Term$nat$($13014);
                var $12965 = $13015;
                break;
            case 'Kind.Term.chr':
                var $13016 = self.chrx;
                var $13017 = Kind$Term$chr$($13016);
                var $12965 = $13017;
                break;
            case 'Kind.Term.str':
                var $13018 = self.strx;
                var $13019 = Kind$Term$str$($13018);
                var $12965 = $13019;
                break;
            case 'Kind.Term.ori':
                var $13020 = self.orig;
                var $13021 = self.expr;
                var $13022 = Kind$Term$ori$($13020, $13021);
                var $12965 = $13022;
                break;
            case 'Kind.Term.typ':
                var $13023 = Kind$Term$typ;
                var $12965 = $13023;
                break;
            case 'Kind.Term.num':
            case 'Kind.Term.cse':
            case 'Kind.Term.new':
            case 'Kind.Term.get':
            case 'Kind.Term.set':
            case 'Kind.Term.ope':
                var $13024 = _term$1;
                var $12965 = $13024;
                break;
        };
        return $12965;
    };
    const Kind$Term$expand_ct = x0 => x1 => x2 => Kind$Term$expand_ct$(x0, x1, x2);

    function Kind$Term$expand$(_dref$1, _term$2, _defs$3) {
        var _term$4 = Kind$Term$normalize$(_term$2, Kind$Map$new);
        var _term$5 = (() => {
            var $13027 = _term$4;
            var $13028 = _dref$1;
            let _term$6 = $13027;
            let _path$5;
            while ($13028._ === 'List.cons') {
                _path$5 = $13028.head;
                var _term$7 = Kind$Term$expand_at$(_path$5, _term$6, _defs$3);
                var _term$8 = Kind$Term$normalize$(_term$7, Kind$Map$new);
                var _term$9 = Kind$Term$expand_ct$(_term$8, _defs$3, 0n);
                var _term$10 = Kind$Term$normalize$(_term$9, Kind$Map$new);
                var $13027 = _term$10;
                _term$6 = $13027;
                $13028 = $13028.tail;
            }
            return _term$6;
        })();
        var $13025 = _term$5;
        return $13025;
    };
    const Kind$Term$expand = x0 => x1 => x2 => Kind$Term$expand$(x0, x1, x2);

    function Kind$Error$show$(_error$1, _defs$2) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13030 = self.expected;
                var $13031 = self.detected;
                var $13032 = self.context;
                var self = $13030;
                switch (self._) {
                    case 'Either.left':
                        var $13034 = self.value;
                        var $13035 = $13034;
                        var _expected$7 = $13035;
                        break;
                    case 'Either.right':
                        var $13036 = self.value;
                        var $13037 = Kind$Term$show$(Kind$Term$normalize$($13036, BitsMap$new));
                        var _expected$7 = $13037;
                        break;
                };
                var self = $13031;
                switch (self._) {
                    case 'Either.left':
                        var $13038 = self.value;
                        var $13039 = $13038;
                        var _detected$8 = $13039;
                        break;
                    case 'Either.right':
                        var $13040 = self.value;
                        var $13041 = Kind$Term$show$(Kind$Term$normalize$($13040, BitsMap$new));
                        var _detected$8 = $13041;
                        break;
                };
                var $13033 = ("Type mismatch.\u{a}" + ("- Expected: " + (_expected$7 + ("\u{a}" + ("- Detected: " + (_detected$8 + ("\u{a}" + (() => {
                    var self = $13032;
                    switch (self._) {
                        case 'List.nil':
                            var $13042 = "";
                            return $13042;
                        case 'List.cons':
                            var $13043 = ("With context:\u{a}" + Kind$Context$show$($13032));
                            return $13043;
                    };
                })())))))));
                var $13029 = $13033;
                break;
            case 'Kind.Error.show_goal':
                var $13044 = self.name;
                var $13045 = self.dref;
                var $13046 = self.verb;
                var $13047 = self.goal;
                var $13048 = self.context;
                var _goal_name$8 = ("Goal ?" + (Kind$Name$show$($13044) + ":\u{a}"));
                var self = $13047;
                switch (self._) {
                    case 'Maybe.some':
                        var $13050 = self.value;
                        var _goal$10 = Kind$Term$expand$($13045, $13050, _defs$2);
                        var $13051 = ("With type: " + ((() => {
                            var self = $13046;
                            if (self) {
                                var $13052 = Kind$Term$show$go$(_goal$10, Maybe$some$((_x$11 => {
                                    var $13053 = _x$11;
                                    return $13053;
                                })));
                                return $13052;
                            } else {
                                var $13054 = Kind$Term$show$(_goal$10);
                                return $13054;
                            };
                        })() + "\u{a}"));
                        var _with_type$9 = $13051;
                        break;
                    case 'Maybe.none':
                        var $13055 = "";
                        var _with_type$9 = $13055;
                        break;
                };
                var self = $13048;
                switch (self._) {
                    case 'List.nil':
                        var $13056 = "";
                        var _with_ctxt$10 = $13056;
                        break;
                    case 'List.cons':
                        var $13057 = ("With context:\u{a}" + Kind$Context$show$($13048));
                        var _with_ctxt$10 = $13057;
                        break;
                };
                var $13049 = String$flatten$(List$cons$(_goal_name$8, List$cons$(_with_type$9, List$cons$(_with_ctxt$10, List$nil))));
                var $13029 = $13049;
                break;
            case 'Kind.Error.waiting':
                var $13058 = self.name;
                var $13059 = ("Waiting for \'" + ($13058 + "\'."));
                var $13029 = $13059;
                break;
            case 'Kind.Error.indirect':
                var $13060 = self.name;
                var $13061 = ("Error on dependency \'" + ($13060 + "\'."));
                var $13029 = $13061;
                break;
            case 'Kind.Error.patch':
                var $13062 = self.term;
                var $13063 = ("Patching: " + Kind$Term$show$($13062));
                var $13029 = $13063;
                break;
            case 'Kind.Error.undefined_reference':
                var $13064 = self.name;
                var $13065 = ("Undefined reference: " + (Kind$Name$show$($13064) + "\u{a}"));
                var $13029 = $13065;
                break;
            case 'Kind.Error.cant_infer':
                var $13066 = self.term;
                var $13067 = self.context;
                var _term$6 = Kind$Term$show$($13066);
                var _context$7 = Kind$Context$show$($13067);
                var $13068 = ("Can\'t infer type of: " + (_term$6 + ("\u{a}" + ("With context:\u{a}" + _context$7))));
                var $13029 = $13068;
                break;
        };
        return $13029;
    };
    const Kind$Error$show = x0 => x1 => Kind$Error$show$(x0, x1);

    function Kind$Error$origin$(_error$1) {
        var self = _error$1;
        switch (self._) {
            case 'Kind.Error.type_mismatch':
                var $13070 = self.origin;
                var $13071 = $13070;
                var $13069 = $13071;
                break;
            case 'Kind.Error.undefined_reference':
                var $13072 = self.origin;
                var $13073 = $13072;
                var $13069 = $13073;
                break;
            case 'Kind.Error.cant_infer':
                var $13074 = self.origin;
                var $13075 = $13074;
                var $13069 = $13075;
                break;
            case 'Kind.Error.show_goal':
            case 'Kind.Error.waiting':
            case 'Kind.Error.indirect':
            case 'Kind.Error.patch':
                var $13076 = Maybe$none;
                var $13069 = $13076;
                break;
        };
        return $13069;
    };
    const Kind$Error$origin = x0 => Kind$Error$origin$(x0);

    function Kind$Defs$report$errors$(_defs$1) {
        var _errors$2 = "";
        var _errors$3 = (() => {
            var $13079 = _errors$2;
            var $13080 = BitsMap$keys$(_defs$1);
            let _errors$4 = $13079;
            let _key$3;
            while ($13080._ === 'List.cons') {
                _key$3 = $13080.head;
                var _name$5 = Kind$Name$from_bits$(_key$3);
                var _defn$6 = Kind$Map$get$(_name$5, _defs$1);
                var self = _defn$6;
                switch (self._) {
                    case 'Maybe.some':
                        var $13081 = self.value;
                        var self = $13081;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13083 = self.file;
                                var $13084 = self.code;
                                var $13085 = self.name;
                                var $13086 = self.stat;
                                var self = $13086;
                                switch (self._) {
                                    case 'Kind.Status.fail':
                                        var $13088 = self.errors;
                                        var self = $13088;
                                        switch (self._) {
                                            case 'List.nil':
                                                var $13090 = _errors$4;
                                                var $13089 = $13090;
                                                break;
                                            case 'List.cons':
                                                var _name_str$20 = $13085;
                                                var _rel_errs$21 = Kind$Error$relevant$($13088);
                                                var _errors$22 = (() => {
                                                    var $13093 = _errors$4;
                                                    var $13094 = _rel_errs$21;
                                                    let _errors$23 = $13093;
                                                    let _err$22;
                                                    while ($13094._ === 'List.cons') {
                                                        _err$22 = $13094.head;
                                                        var _err_msg$24 = Kind$Error$show$(_err$22, _defs$1);
                                                        var _ori_val$25 = Kind$Error$origin$(_err$22);
                                                        var self = _ori_val$25;
                                                        switch (self._) {
                                                            case 'Maybe.some':
                                                                var $13095 = self.value;
                                                                var self = $13095;
                                                                switch (self._) {
                                                                    case 'Pair.new':
                                                                        var $13097 = self.fst;
                                                                        var $13098 = self.snd;
                                                                        var _inside$29 = ("Inside \'" + ($13083 + "\':\u{a}"));
                                                                        var _source$30 = Kind$Code$highlight$($13084, $13097, $13097, $13098);
                                                                        var $13099 = (_errors$23 + (_err_msg$24 + (_inside$29 + (_source$30 + ("\u{a}" + "\u{a}")))));
                                                                        var $13096 = $13099;
                                                                        break;
                                                                };
                                                                var $13093 = $13096;
                                                                break;
                                                            case 'Maybe.none':
                                                                var $13100 = (_errors$23 + (_err_msg$24 + "\u{a}"));
                                                                var $13093 = $13100;
                                                                break;
                                                        };
                                                        _errors$23 = $13093;
                                                        $13094 = $13094.tail;
                                                    }
                                                    return _errors$23;
                                                })();
                                                var $13091 = _errors$22;
                                                var $13089 = $13091;
                                                break;
                                        };
                                        var $13087 = $13089;
                                        break;
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.done':
                                        var $13101 = _errors$4;
                                        var $13087 = $13101;
                                        break;
                                };
                                var $13082 = $13087;
                                break;
                        };
                        var $13079 = $13082;
                        break;
                    case 'Maybe.none':
                        var $13102 = _errors$4;
                        var $13079 = $13102;
                        break;
                };
                _errors$4 = $13079;
                $13080 = $13080.tail;
            }
            return _errors$4;
        })();
        var $13077 = _errors$3;
        return $13077;
    };
    const Kind$Defs$report$errors = x0 => Kind$Defs$report$errors$(x0);

    function Kind$Defs$report$(_defs$1, _names$2) {
        var _types$3 = Kind$Defs$report$types$(_defs$1, _names$2);
        var _errors$4 = Kind$Defs$report$errors$(_defs$1);
        var self = _errors$4;
        if (self.length === 0) {
            var $13104 = "All terms check.";
            var _errors$5 = $13104;
        } else {
            var $13105 = self.charCodeAt(0);
            var $13106 = self.slice(1);
            var $13107 = _errors$4;
            var _errors$5 = $13107;
        };
        var $13103 = (_types$3 + ("\u{a}" + _errors$5));
        return $13103;
    };
    const Kind$Defs$report = x0 => x1 => Kind$Defs$report$(x0, x1);

    function IO$set_file$(_name$1, _content$2) {
        var $13108 = IO$ask$("set_file", (_name$1 + ("=" + _content$2)), (_ok$3 => {
            var $13109 = IO$end$(Unit$new);
            return $13109;
        }));
        return $13108;
    };
    const IO$set_file = x0 => x1 => IO$set_file$(x0, x1);

    function Bool$show$(_b$1) {
        var self = _b$1;
        if (self) {
            var $13111 = "Bool.true";
            var $13110 = $13111;
        } else {
            var $13112 = "Bool.false";
            var $13110 = $13112;
        };
        return $13110;
    };
    const Bool$show = x0 => Bool$show$(x0);

    function Kind$Defs$cache$go$(_kvs$1) {
        var self = _kvs$1;
        switch (self._) {
            case 'List.cons':
                var $13114 = self.head;
                var $13115 = self.tail;
                var self = $13114;
                switch (self._) {
                    case 'Pair.new':
                        var $13117 = self.fst;
                        var $13118 = self.snd;
                        var self = $13118;
                        switch (self._) {
                            case 'Kind.Def.new':
                                var $13120 = self.file;
                                var $13121 = self.term;
                                var $13122 = self.type;
                                var $13123 = self.isct;
                                var $13124 = self.arit;
                                var $13125 = self.stat;
                                var self = $13125;
                                switch (self._) {
                                    case 'Kind.Status.init':
                                    case 'Kind.Status.wait':
                                    case 'Kind.Status.fail':
                                        var $13127 = Kind$Defs$cache$go$($13115);
                                        var $13126 = $13127;
                                        break;
                                    case 'Kind.Status.done':
                                        var $13128 = IO$monad$((_m$bind$16 => _m$pure$17 => {
                                            var $13129 = _m$bind$16;
                                            return $13129;
                                        }))(IO$get_file_mtime$($13120))((_time$16 => {
                                            var $13130 = IO$monad$((_m$bind$17 => _m$pure$18 => {
                                                var $13131 = _m$bind$17;
                                                return $13131;
                                            }))(IO$set_file$(String$to_lower$((".cache/" + ($13117 + ".term"))), Kind$Core$show$($13121)))((_$17 => {
                                                var $13132 = IO$monad$((_m$bind$18 => _m$pure$19 => {
                                                    var $13133 = _m$bind$18;
                                                    return $13133;
                                                }))(IO$set_file$(String$to_lower$((".cache/" + ($13117 + ".type"))), Kind$Core$show$($13122)))((_$18 => {
                                                    var $13134 = IO$monad$((_m$bind$19 => _m$pure$20 => {
                                                        var $13135 = _m$bind$19;
                                                        return $13135;
                                                    }))(IO$set_file$(String$to_lower$((".cache/" + ($13117 + ".isct"))), Bool$show$($13123)))((_$19 => {
                                                        var $13136 = IO$monad$((_m$bind$20 => _m$pure$21 => {
                                                            var $13137 = _m$bind$20;
                                                            return $13137;
                                                        }))(IO$set_file$(String$to_lower$((".cache/" + ($13117 + ".arit"))), Nat$show$($13124)))((_$20 => {
                                                            var $13138 = IO$monad$((_m$bind$21 => _m$pure$22 => {
                                                                var $13139 = _m$bind$21;
                                                                return $13139;
                                                            }))(IO$set_file$(String$to_lower$((".cache/" + ($13117 + ".file"))), $13120))((_$21 => {
                                                                var $13140 = IO$monad$((_m$bind$22 => _m$pure$23 => {
                                                                    var $13141 = _m$bind$22;
                                                                    return $13141;
                                                                }))(IO$set_file$(String$to_lower$((".cache/" + ($13117 + ".time"))), _time$16))((_$22 => {
                                                                    var $13142 = Kind$Defs$cache$go$($13115);
                                                                    return $13142;
                                                                }));
                                                                return $13140;
                                                            }));
                                                            return $13138;
                                                        }));
                                                        return $13136;
                                                    }));
                                                    return $13134;
                                                }));
                                                return $13132;
                                            }));
                                            return $13130;
                                        }));
                                        var $13126 = $13128;
                                        break;
                                };
                                var $13119 = $13126;
                                break;
                        };
                        var $13116 = $13119;
                        break;
                };
                var $13113 = $13116;
                break;
            case 'List.nil':
                var $13143 = IO$monad$((_m$bind$2 => _m$pure$3 => {
                    var $13144 = _m$pure$3;
                    return $13144;
                }))(Unit$new);
                var $13113 = $13143;
                break;
        };
        return $13113;
    };
    const Kind$Defs$cache$go = x0 => Kind$Defs$cache$go$(x0);

    function Kind$Defs$cache$(_defs$1) {
        var $13145 = Kind$Defs$cache$go$(Kind$Map$to_list$(_defs$1));
        return $13145;
    };
    const Kind$Defs$cache = x0 => Kind$Defs$cache$(x0);

    function Kind$api$io$check_file$(_file$1) {
        var $13146 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13147 = _m$bind$2;
            return $13147;
        }))(Kind$Synth$file$(_file$1, Kind$Map$new))((_loaded$2 => {
            var self = _loaded$2;
            switch (self._) {
                case 'Either.left':
                    var $13149 = self.value;
                    var $13150 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13151 = _m$bind$4;
                        return $13151;
                    }))(IO$print$(String$flatten$(List$cons$("On \'", List$cons$(_file$1, List$cons$("\':", List$nil))))))((_$4 => {
                        var $13152 = IO$print$($13149);
                        return $13152;
                    }));
                    var $13148 = $13150;
                    break;
                case 'Either.right':
                    var $13153 = self.value;
                    var self = $13153;
                    switch (self._) {
                        case 'Pair.new':
                            var $13155 = self.fst;
                            var $13156 = self.snd;
                            var _nams$6 = $13155;
                            var _defs$7 = $13156;
                            var self = _nams$6;
                            switch (self._) {
                                case 'List.nil':
                                    var $13158 = IO$print$(("File not found or empty: \'" + (_file$1 + "\'.")));
                                    var $13157 = $13158;
                                    break;
                                case 'List.cons':
                                    var $13159 = IO$monad$((_m$bind$10 => _m$pure$11 => {
                                        var $13160 = _m$bind$10;
                                        return $13160;
                                    }))(IO$print$(Kind$Defs$report$(_defs$7, _nams$6)))((_$10 => {
                                        var $13161 = Kind$Defs$cache$(_defs$7);
                                        return $13161;
                                    }));
                                    var $13157 = $13159;
                                    break;
                            };
                            var $13154 = $13157;
                            break;
                    };
                    var $13148 = $13154;
                    break;
            };
            return $13148;
        }));
        return $13146;
    };
    const Kind$api$io$check_file = x0 => Kind$api$io$check_file$(x0);

    function Kind$Synth$files$go$(_files$1, _defs$2) {
        var self = _files$1;
        switch (self._) {
            case 'List.cons':
                var $13163 = self.head;
                var $13164 = self.tail;
                var $13165 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                    var $13166 = _m$bind$5;
                    return $13166;
                }))(Kind$Synth$file$($13163, _defs$2))((_file_synth$5 => {
                    var self = _file_synth$5;
                    switch (self._) {
                        case 'Either.right':
                            var $13168 = self.value;
                            var _nams$7 = Pair$fst$($13168);
                            var _defs$8 = Pair$snd$($13168);
                            var $13169 = IO$monad$((_m$bind$9 => _m$pure$10 => {
                                var $13170 = _m$bind$9;
                                return $13170;
                            }))(Kind$Synth$files$go$($13164, _defs$8))((_rest$9 => {
                                var _nams$10 = List$concat$(_nams$7, Pair$fst$(_rest$9));
                                var _defs$11 = Pair$snd$(_rest$9);
                                var $13171 = IO$monad$((_m$bind$12 => _m$pure$13 => {
                                    var $13172 = _m$pure$13;
                                    return $13172;
                                }))(Pair$new$(_nams$10, _defs$11));
                                return $13171;
                            }));
                            var $13167 = $13169;
                            break;
                        case 'Either.left':
                            var $13173 = Kind$Synth$files$go$($13164, _defs$2);
                            var $13167 = $13173;
                            break;
                    };
                    return $13167;
                }));
                var $13162 = $13165;
                break;
            case 'List.nil':
                var $13174 = IO$monad$((_m$bind$3 => _m$pure$4 => {
                    var $13175 = _m$pure$4;
                    return $13175;
                }))(Pair$new$(List$nil, _defs$2));
                var $13162 = $13174;
                break;
        };
        return $13162;
    };
    const Kind$Synth$files$go = x0 => x1 => Kind$Synth$files$go$(x0, x1);

    function Kind$Synth$remove_duplicate_names$(_names$1) {
        var _map$2 = List$fold$(_names$1, Kind$Map$new, (_name$2 => {
            var $13177 = Kind$Map$set(_name$2)(Unit$new);
            return $13177;
        }));
        var $13176 = List$mapped$(BitsMap$keys$(_map$2), Kind$Name$from_bits);
        return $13176;
    };
    const Kind$Synth$remove_duplicate_names = x0 => Kind$Synth$remove_duplicate_names$(x0);

    function Kind$Synth$files$(_files$1, _defs$2) {
        var $13178 = IO$monad$((_m$bind$3 => _m$pure$4 => {
            var $13179 = _m$bind$3;
            return $13179;
        }))(Kind$Synth$files$go$(_files$1, _defs$2))((_got$3 => {
            var _nams$4 = Kind$Synth$remove_duplicate_names$(Pair$fst$(_got$3));
            var _defs$5 = Pair$snd$(_got$3);
            var $13180 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                var $13181 = _m$pure$7;
                return $13181;
            }))(Pair$new$(_nams$4, _defs$5));
            return $13180;
        }));
        return $13178;
    };
    const Kind$Synth$files = x0 => x1 => Kind$Synth$files$(x0, x1);

    function Kind$api$io$check_files$(_files$1) {
        var $13182 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13183 = _m$bind$2;
            return $13183;
        }))(Kind$Synth$files$(_files$1, Kind$Map$new))((_loaded$2 => {
            var _nams$3 = Pair$fst$(_loaded$2);
            var _defs$4 = Pair$snd$(_loaded$2);
            var self = _nams$3;
            switch (self._) {
                case 'List.nil':
                    var $13185 = IO$print$("No valid Kind file found.");
                    var $13184 = $13185;
                    break;
                case 'List.cons':
                    var $13186 = IO$monad$((_m$bind$7 => _m$pure$8 => {
                        var $13187 = _m$bind$7;
                        return $13187;
                    }))(IO$print$(Kind$Defs$report$(_defs$4, _nams$3)))((_$7 => {
                        var $13188 = Kind$Defs$cache$(_defs$4);
                        return $13188;
                    }));
                    var $13184 = $13186;
                    break;
            };
            return $13184;
        }));
        return $13182;
    };
    const Kind$api$io$check_files = x0 => Kind$api$io$check_files$(x0);

    function Kind$api$io$check_term$(_name$1) {
        var $13189 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13190 = _m$bind$2;
            return $13190;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_defs$2 => {
            var self = _defs$2;
            switch (self._) {
                case 'Maybe.some':
                    var $13192 = self.value;
                    var $13193 = IO$monad$((_m$bind$4 => _m$pure$5 => {
                        var $13194 = _m$bind$4;
                        return $13194;
                    }))(IO$print$(Kind$Defs$report$($13192, List$cons$(_name$1, List$nil))))((_$4 => {
                        var $13195 = Kind$Defs$cache$($13192);
                        return $13195;
                    }));
                    var $13191 = $13193;
                    break;
                case 'Maybe.none':
                    var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                    var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                        var $13197 = ("\'" + (_x$4 + "\'"));
                        return $13197;
                    }));
                    var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                    var $13196 = IO$print$((_notfound$3 + ("\u{a}" + _searched$5)));
                    var $13191 = $13196;
                    break;
            };
            return $13191;
        }));
        return $13189;
    };
    const Kind$api$io$check_term = x0 => Kind$api$io$check_term$(x0);

    function Kind$api$io$show_term$(_name$1) {
        var $13198 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13199 = _m$bind$2;
            return $13199;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13200 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13201 = self.value;
                        var _defs$4 = $13201;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13203 = self.value;
                                var self = $13203;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13205 = self.term;
                                        var _term$16 = $13205;
                                        var $13206 = Kind$Term$show$(_term$16);
                                        var $13204 = $13206;
                                        break;
                                };
                                var $13202 = $13204;
                                break;
                            case 'Maybe.none':
                                var $13207 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13202 = $13207;
                                break;
                        };
                        return $13202;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13209 = ("\'" + (_x$4 + "\'"));
                            return $13209;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13208 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13208;
                };
            })());
            return $13200;
        }));
        return $13198;
    };
    const Kind$api$io$show_term = x0 => Kind$api$io$show_term$(x0);

    function Kind$api$io$show_term_normal$(_name$1) {
        var $13210 = IO$monad$((_m$bind$2 => _m$pure$3 => {
            var $13211 = _m$bind$2;
            return $13211;
        }))(Kind$Synth$one$(_name$1, Kind$Map$new))((_new_defs$2 => {
            var $13212 = IO$print$((() => {
                var self = _new_defs$2;
                switch (self._) {
                    case 'Maybe.some':
                        var $13213 = self.value;
                        var _defs$4 = $13213;
                        var _defn$5 = Kind$Map$get$(_name$1, _defs$4);
                        var self = _defn$5;
                        switch (self._) {
                            case 'Maybe.some':
                                var $13215 = self.value;
                                var self = $13215;
                                switch (self._) {
                                    case 'Kind.Def.new':
                                        var $13217 = self.term;
                                        var _term$16 = $13217;
                                        var _norm$17 = Kind$Term$normalize$(_term$16, _defs$4);
                                        var $13218 = Kind$Term$show$(_norm$17);
                                        var $13216 = $13218;
                                        break;
                                };
                                var $13214 = $13216;
                                break;
                            case 'Maybe.none':
                                var $13219 = ("Term not found: \'" + (_name$1 + "\'."));
                                var $13214 = $13219;
                                break;
                        };
                        return $13214;
                    case 'Maybe.none':
                        var _notfound$3 = ("Term not found: \'" + (_name$1 + "\'."));
                        var _filelist$4 = List$mapped$(Kind$Synth$files_of$(_name$1), (_x$4 => {
                            var $13221 = ("\'" + (_x$4 + "\'"));
                            return $13221;
                        }));
                        var _searched$5 = ("Searched on: " + (String$join$(", ", _filelist$4) + "."));
                        var $13220 = (_notfound$3 + ("\u{a}" + _searched$5));
                        return $13220;
                };
            })());
            return $13212;
        }));
        return $13210;
    };
    const Kind$api$io$show_term_normal = x0 => Kind$api$io$show_term_normal$(x0);

    function IO$purify$(_io$2) {
        var IO$purify$ = (_io$2) => ({
            ctr: 'TCO',
            arg: [_io$2]
        });
        var IO$purify = _io$2 => IO$purify$(_io$2);
        var arg = [_io$2];
        while (true) {
            let [_io$2] = arg;
            var R = (() => {
                var self = _io$2;
                switch (self._) {
                    case 'IO.end':
                        var $13222 = self.value;
                        var $13223 = $13222;
                        return $13223;
                    case 'IO.ask':
                        var $13224 = self.then;
                        var $13225 = IO$purify$($13224(""));
                        return $13225;
                };
            })();
            if (R.ctr === 'TCO') arg = R.arg;
            else return R;
        }
    };
    const IO$purify = x0 => IO$purify$(x0);

    function Kind$api$check_code$(_code$1) {
        var self = Kind$Defs$read$("Main.kind", _code$1, Kind$Map$new);
        switch (self._) {
            case 'Either.left':
                var $13227 = self.value;
                var $13228 = $13227;
                var $13226 = $13228;
                break;
            case 'Either.right':
                var $13229 = self.value;
                var $13230 = IO$purify$((() => {
                    var _defs$3 = $13229;
                    var _nams$4 = List$mapped$(BitsMap$keys$(_defs$3), Kind$Name$from_bits);
                    var $13231 = IO$monad$((_m$bind$5 => _m$pure$6 => {
                        var $13232 = _m$bind$5;
                        return $13232;
                    }))(Kind$Synth$many$(_nams$4, _defs$3))((_defs$5 => {
                        var $13233 = IO$monad$((_m$bind$6 => _m$pure$7 => {
                            var $13234 = _m$pure$7;
                            return $13234;
                        }))(Kind$Defs$report$(_defs$5, _nams$4));
                        return $13233;
                    }));
                    return $13231;
                })());
                var $13226 = $13230;
                break;
        };
        return $13226;
    };
    const Kind$api$check_code = x0 => Kind$api$check_code$(x0);

    function Kind$Term$read$(_code$1) {
        var self = Kind$Parser$term(Parser$State$new$(Maybe$none, "", 0n, 0n, _code$1));
        switch (self._) {
            case 'Parser.Reply.value':
                var $13236 = self.val;
                var $13237 = Maybe$some$($13236);
                var $13235 = $13237;
                break;
            case 'Parser.Reply.error':
                var $13238 = Maybe$none;
                var $13235 = $13238;
                break;
        };
        return $13235;
    };
    const Kind$Term$read = x0 => Kind$Term$read$(x0);
    const Kind$api$export = (() => {
        var _e$1 = Kind$api$io$term_to_core;
        var _e$2 = Kind$api$io$term_to_scheme;
        var _e$3 = Kind$api$io$terms_to_scheme_lib;
        var _e$4 = Kind$api$io$check_file;
        var _e$5 = Kind$api$io$check_files;
        var _e$6 = Kind$api$io$check_term;
        var _e$7 = Kind$api$io$show_term;
        var _e$8 = Kind$api$io$show_term_normal;
        var _e$9 = Kind$api$check_code;
        var _e$10 = Kind$Term$read;
        var $13239 = IO$monad$((_m$bind$11 => _m$pure$12 => {
            var $13240 = _m$pure$12;
            return $13240;
        }))(Unit$new);
        return $13239;
    })();
    return {
        '$main$': () => run(Kind$api$export),
        'run': run,
        'IO': IO,
        'IO.ask': IO$ask,
        'IO.bind': IO$bind,
        'IO.end': IO$end,
        'IO.monad': IO$monad,
        'Maybe': Maybe,
        'BitsMap': BitsMap,
        'Maybe.none': Maybe$none,
        'BitsMap.get': BitsMap$get,
        'Bits.e': Bits$e,
        'Bits.o': Bits$o,
        'Bits.i': Bits$i,
        'Bool.true': Bool$true,
        'Bool.false': Bool$false,
        'Cmp.as_ltn': Cmp$as_ltn,
        'Cmp.ltn': Cmp$ltn,
        'Cmp.gtn': Cmp$gtn,
        'Word.cmp.go': Word$cmp$go,
        'Cmp.eql': Cmp$eql,
        'Word.cmp': Word$cmp,
        'Word.ltn': Word$ltn,
        'Nat.succ': Nat$succ,
        'Nat.zero': Nat$zero,
        'U16.ltn': U16$ltn,
        'U16.new': U16$new,
        'Nat.apply': Nat$apply,
        'Word': Word,
        'Word.e': Word$e,
        'Word.i': Word$i,
        'Word.o': Word$o,
        'Word.inc': Word$inc,
        'Word.zero': Word$zero,
        'Nat.to_word': Nat$to_word,
        'Nat.to_u16': Nat$to_u16,
        'Kind.Name.to_bits': Kind$Name$to_bits,
        'Kind.Map.get': Kind$Map$get,
        'Maybe.default': Maybe$default,
        'Parser.State.new': Parser$State$new,
        'Maybe.some': Maybe$some,
        'Parser.run': Parser$run,
        'Parser.Reply': Parser$Reply,
        'List': List,
        'Parser.Reply.error': Parser$Reply$error,
        'Nat.gtn': Nat$gtn,
        'Parser.Error.combine': Parser$Error$combine,
        'Parser.Error.maybe_combine': Parser$Error$maybe_combine,
        'Parser.Reply.value': Parser$Reply$value,
        'List.nil': List$nil,
        'List.cons': List$cons,
        'Parser.many.go': Parser$many$go,
        'Parser.many': Parser$many,
        'Parser.many1': Parser$many1,
        'Parser.Error.new': Parser$Error$new,
        'Parser.Reply.fail': Parser$Reply$fail,
        'Cmp.as_eql': Cmp$as_eql,
        'Word.eql': Word$eql,
        'U16.eql': U16$eql,
        'Parser.digit': Parser$digit,
        'Nat.add': Nat$add,
        'Nat.mul': Nat$mul,
        'Nat.from_base.go': Nat$from_base$go,
        'List.reverse.go': List$reverse$go,
        'List.reverse': List$reverse,
        'Nat.from_base': Nat$from_base,
        'Parser.nat': Parser$nat,
        'Nat.read': Nat$read,
        'IO.get_time': IO$get_time,
        'Kind.Synth.load.cached.is_loop': Kind$Synth$load$cached$is_loop,
        'IO.get_file': IO$get_file,
        'String.nil': String$nil,
        'String.cons': String$cons,
        'String.map': String$map,
        'Bool.and': Bool$and,
        'Cmp.as_gte': Cmp$as_gte,
        'Word.gte': Word$gte,
        'U16.gte': U16$gte,
        'Cmp.as_lte': Cmp$as_lte,
        'Word.lte': Word$lte,
        'U16.lte': U16$lte,
        'Word.adder': Word$adder,
        'Word.add': Word$add,
        'U16.add': U16$add,
        'Char.to_lower': Char$to_lower,
        'String.to_lower': String$to_lower,
        'String.concat': String$concat,
        'Bool.not': Bool$not,
        'String.is_empty': String$is_empty,
        'IO.get_file_mtime': IO$get_file_mtime,
        'String.eql': String$eql,
        'Pair.new': Pair$new,
        'Maybe.bind': Maybe$bind,
        'Maybe.monad': Maybe$monad,
        'Pair': Pair,
        'Unit.new': Unit$new,
        'Bool.or': Bool$or,
        'Kind.Core.read.spaces': Kind$Core$read$spaces,
        'Kind.Term.ref': Kind$Term$ref,
        'Char.eql': Char$eql,
        'Kind.Term.typ': Kind$Term$typ,
        'Kind.Core.read.is_name': Kind$Core$read$is_name,
        'Kind.Core.read.name': Kind$Core$read$name,
        'Kind.Core.read.char': Kind$Core$read$char,
        'Kind.Term.all': Kind$Term$all,
        'Kind.Term.lam': Kind$Term$lam,
        'Kind.Term.app': Kind$Term$app,
        'Kind.Term.let': Kind$Term$let,
        'Kind.Term.def': Kind$Term$def,
        'Kind.Term.ann': Kind$Term$ann,
        'String.starts_with': String$starts_with,
        'String.drop': String$drop,
        'Char.is_hex': Char$is_hex,
        'Word.shift_left.one.go': Word$shift_left$one$go,
        'Word.shift_left.one': Word$shift_left$one,
        'Word.shift_left': Word$shift_left,
        'Word.mul.go': Word$mul$go,
        'Word.to_zero': Word$to_zero,
        'Word.mul': Word$mul,
        'U16.mul': U16$mul,
        'U16.inc': U16$inc,
        'Word.subber': Word$subber,
        'Word.sub': Word$sub,
        'U16.sub': U16$sub,
        'U16.zero': U16$zero,
        'Char.hex_value16': Char$hex_value16,
        'Kind.Core.read.u16': Kind$Core$read$u16,
        'Kind.Core.read.chrx': Kind$Core$read$chrx,
        'Kind.Term.chr': Kind$Term$chr,
        'Kind.Core.read.strx': Kind$Core$read$strx,
        'Kind.Term.str': Kind$Term$str,
        'Char.dec_value': Char$dec_value,
        'Kind.Core.read.natx': Kind$Core$read$natx,
        'Kind.Term.nat': Kind$Term$nat,
        'Pair.fst': Pair$fst,
        'Nat.eql': Nat$eql,
        'Nat.pred': Nat$pred,
        'Kind.Core.read.find': Kind$Core$read$find,
        'Pair.snd': Pair$snd,
        'Kind.Core.read.term': Kind$Core$read$term,
        'Kind.Core.read': Kind$Core$read,
        'Bool.read': Bool$read,
        'Kind.Status.done': Kind$Status$done,
        'Kind.Def.new': Kind$Def$new,
        'Kind.Synth.load.cached.def': Kind$Synth$load$cached$def,
        'BitsMap.tie': BitsMap$tie,
        'BitsMap.new': BitsMap$new,
        'BitsMap.set': BitsMap$set,
        'Kind.Map.set': Kind$Map$set,
        'Kind.Map.new': Kind$Map$new,
        'Kind.Map': Kind$Map,
        'Kind.Core.dependencies.go': Kind$Core$dependencies$go,
        'List.mapped': List$mapped,
        'Bits.reverse.tco': Bits$reverse$tco,
        'Bits.reverse': Bits$reverse,
        'BitsMap.to_list.go': BitsMap$to_list$go,
        'Kind.Name.from_bits': Kind$Name$from_bits,
        'Kind.Map.to_list': Kind$Map$to_list,
        'Kind.Map.keys': Kind$Map$keys,
        'Kind.Synth.load.cached': Kind$Synth$load$cached,
        'IO.request': IO$request,
        'Kind.Synth.get_kind_code': Kind$Synth$get_kind_code,
        'Parser.is_eof': Parser$is_eof,
        'Parser': Parser,
        'Parser.choice': Parser$choice,
        'Parser.text.go': Parser$text$go,
        'Parser.text': Parser$text,
        'Parser.eof': Parser$eof,
        'Parser.until.go': Parser$until$go,
        'Parser.until': Parser$until,
        'Parser.one': Parser$one,
        'Kind.Parser.comment': Kind$Parser$comment,
        'Kind.Parser.spaces': Kind$Parser$spaces,
        'Parser.get_idx': Parser$get_idx,
        'U16.btw': U16$btw,
        'Kind.Name.is_letter': Kind$Name$is_letter,
        'Kind.Parser.letter': Kind$Parser$letter,
        'List.fold': List$fold,
        'Parser.fail': Parser$fail,
        'String.head': String$head,
        'Kind.Parser.name1': Kind$Parser$name1,
        'Parser.until1': Parser$until1,
        'Parser.wrap1': Parser$wrap1,
        'Kind.Parser.text': Kind$Parser$text,
        'Parser.maybe': Parser$maybe,
        'Kind.Parser.items1': Kind$Parser$items1,
        'Kind.Parser.name': Kind$Parser$name,
        'Kind.Term.ori': Kind$Term$ori,
        'Kind.Parser.block': Kind$Parser$block,
        'Kind.Parser.dom.prop': Kind$Parser$dom$prop,
        'Kind.Term.hol': Kind$Term$hol,
        'Kind.Parser.dom.gen_prop.go': Kind$Parser$dom$gen_prop$go,
        'Kind.Parser.dom.gen_prop': Kind$Parser$dom$gen_prop,
        'Kind.Parser.dom.for': Kind$Parser$dom$for,
        'Kind.Parser.dom.dynamic': Kind$Parser$dom$dynamic,
        'Kind.Parser.dom.text': Kind$Parser$dom$text,
        'Kind.Parser.dom.leaf': Kind$Parser$dom$leaf,
        'Kind.Parser.dom.transform_children': Kind$Parser$dom$transform_children,
        'Kind.Parser.dom.node': Kind$Parser$dom$node,
        'Kind.Parser.dom': Kind$Parser$dom,
        'Kind.Parser.forall': Kind$Parser$forall,
        'Parser.wrap': Parser$wrap,
        'Kind.Parser.items': Kind$Parser$items,
        'Kind.Parser.lambda.make': Kind$Parser$lambda$make,
        'Kind.Parser.lambda.make.start': Kind$Parser$lambda$make$start,
        'Kind.Parser.lambda': Kind$Parser$lambda,
        'Kind.Parser.lambda.erased': Kind$Parser$lambda$erased,
        'Kind.Parser.parenthesis': Kind$Parser$parenthesis,
        'Kind.Parser.letforrange.u32': Kind$Parser$letforrange$u32,
        'Kind.Parser.letforrange.u32.with': Kind$Parser$letforrange$u32$with,
        'Kind.Parser.letforrange.nat': Kind$Parser$letforrange$nat,
        'Kind.Parser.letforrange.nat.with': Kind$Parser$letforrange$nat$with,
        'Kind.Parser.letforin': Kind$Parser$letforin,
        'Kind.Parser.letforin.with': Kind$Parser$letforin$with,
        'Kind.Parser.letwhile': Kind$Parser$letwhile,
        'Kind.Parser.letwhile.with': Kind$Parser$letwhile$with,
        'Kind.Parser.let': Kind$Parser$let,
        'Kind.Parser.let.omit': Kind$Parser$let$omit,
        'Kind.Parser.getwhile': Kind$Parser$getwhile,
        'Kind.Parser.getwhile.with': Kind$Parser$getwhile$with,
        'Kind.Parser.get': Kind$Parser$get,
        'Kind.Parser.get.omit': Kind$Parser$get$omit,
        'Kind.Parser.def': Kind$Parser$def,
        'Kind.Parser.goal_rewrite': Kind$Parser$goal_rewrite,
        'Kind.Parser.if': Kind$Parser$if,
        'Kind.Code.backslash': Kind$Code$backslash,
        'Kind.Code.escapes': Kind$Code$escapes,
        'Kind.Parser.char.single': Kind$Parser$char$single,
        'Kind.Parser.char': Kind$Parser$char,
        'String.reverse.go': String$reverse$go,
        'String.reverse': String$reverse,
        'Kind.Parser.string.go': Kind$Parser$string$go,
        'Kind.Parser.string': Kind$Parser$string,
        'Kind.Term.new': Kind$Term$new,
        'Kind.Parser.new': Kind$Parser$new,
        'Kind.Parser.sigma.type': Kind$Parser$sigma$type,
        'Kind.Parser.some': Kind$Parser$some,
        'Kind.Parser.not': Kind$Parser$not,
        'Kind.Parser.left': Kind$Parser$left,
        'Kind.Parser.right': Kind$Parser$right,
        'Kind.Parser.apply': Kind$Parser$apply,
        'Kind.Parser.chain': Kind$Parser$chain,
        'Kind.Parser.mirror': Kind$Parser$mirror,
        'Kind.Name.read': Kind$Name$read,
        'Kind.Parser.list': Kind$Parser$list,
        'Kind.Parser.map': Kind$Parser$map,
        'Kind.Parser.log': Kind$Parser$log,
        'Char.to_upper': Char$to_upper,
        'String.to_upper': String$to_upper,
        'String.is_upper': String$is_upper,
        'String.take': String$take,
        'Nat.sub': Nat$sub,
        'String.slice': String$slice,
        'Kind.Term.unroll_nat': Kind$Term$unroll_nat,
        'Word.to_bits': Word$to_bits,
        'U16.to_bits': U16$to_bits,
        'Kind.Term.unroll_chr.bits': Kind$Term$unroll_chr$bits,
        'Kind.Term.unroll_chr': Kind$Term$unroll_chr,
        'Kind.Term.unroll_str': Kind$Term$unroll_str,
        'Kind.Term.reduce': Kind$Term$reduce,
        'Kind.Term.cse': Kind$Term$cse,
        'Kind.Parser.open': Kind$Parser$open,
        'Kind.Parser.do.statements': Kind$Parser$do$statements,
        'Kind.Parser.do': Kind$Parser$do,
        'Parser.try': Parser$try,
        'Parser.avoiding': Parser$avoiding,
        'Kind.Term.extract_name': Kind$Term$extract_name,
        'Kind.Ann.new': Kind$Ann$new,
        'Kind.Parser.case.with': Kind$Parser$case$with,
        'Kind.Parser.case.case': Kind$Parser$case$case,
        'Parser.append_error': Parser$append_error,
        'Kind.Parser.case.group': Kind$Parser$case$group,
        'BitsMap.map': BitsMap$map,
        'Kind.Map.map': Kind$Map$map,
        'Kind.Parser.case.build': Kind$Parser$case$build,
        'Kind.Parser.case': Kind$Parser$case,
        'Kind.Parser.without': Kind$Parser$without,
        'Kind.Parser.switch.case': Kind$Parser$switch$case,
        'Kind.Parser.switch': Kind$Parser$switch,
        'Bits.tail': Bits$tail,
        'Bits.inc': Bits$inc,
        'Nat.to_bits': Nat$to_bits,
        'Maybe.is_some': Maybe$is_some,
        'Kind.Term.gol': Kind$Term$gol,
        'Kind.Parser.goal': Kind$Parser$goal,
        'Kind.Parser.hole': Kind$Parser$hole,
        'Kind.Parser.float.sign': Kind$Parser$float$sign,
        'List.any': List$any,
        'Kind.Parser.float.str_digit': Kind$Parser$float$str_digit,
        'String.from_list': String$from_list,
        'Kind.Parser.float.64': Kind$Parser$float$64,
        'Kind.Parser.float.32': Kind$Parser$float$32,
        'Either': Either,
        'Either.left': Either$left,
        'Either.right': Either$right,
        'Nat.sub_rem': Nat$sub_rem,
        'Nat.div_mod.go': Nat$div_mod$go,
        'Nat.div_mod': Nat$div_mod,
        'Nat.to_base.go': Nat$to_base$go,
        'Nat.to_base': Nat$to_base,
        'Nat.mod.go': Nat$mod$go,
        'Nat.mod': Nat$mod,
        'Nat.lte': Nat$lte,
        'List.at': List$at,
        'Nat.show_digit': Nat$show_digit,
        'Nat.to_string_base': Nat$to_string_base,
        'Nat.show': Nat$show,
        'Kind.Parser.int_pos': Kind$Parser$int_pos,
        'Kind.Parser.int_neg': Kind$Parser$int_neg,
        'Kind.Parser.machine_integer.signed': Kind$Parser$machine_integer$signed,
        'Parser.hex_digit': Parser$hex_digit,
        'Parser.hex_nat': Parser$hex_nat,
        'Kind.Parser.nat': Kind$Parser$nat,
        'Kind.Parser.machine_integer.unsigned': Kind$Parser$machine_integer$unsigned,
        'Kind.Parser.u64': Kind$Parser$u64,
        'Kind.Parser.u32': Kind$Parser$u32,
        'Kind.Parser.u16': Kind$Parser$u16,
        'Kind.Parser.u8': Kind$Parser$u8,
        'Parser.Number.new': Parser$Number$new,
        'Parser.num': Parser$num,
        'Kind.Term.num': Kind$Term$num,
        'Kind.Parser.num': Kind$Parser$num,
        'Kind.Parser.reference': Kind$Parser$reference,
        'Kind.Parser.text_now': Kind$Parser$text_now,
        'Kind.Parser.items_now': Kind$Parser$items_now,
        'List.for': List$for,
        'Kind.Parser.application': Kind$Parser$application,
        'Kind.Parser.application.erased': Kind$Parser$application$erased,
        'Kind.Parser.list_set': Kind$Parser$list_set,
        'Kind.Parser.list_get': Kind$Parser$list_get,
        'Kind.Parser.map_set': Kind$Parser$map_set,
        'Kind.Parser.map_get': Kind$Parser$map_get,
        'Kind.Term.set': Kind$Term$set,
        'Kind.Parser.field_set': Kind$Parser$field_set,
        'Kind.Term.get': Kind$Term$get,
        'Kind.Parser.field_get': Kind$Parser$field_get,
        'Kind.Parser.arrow': Kind$Parser$arrow,
        'Kind.Parser.concat': Kind$Parser$concat,
        'Kind.Parser.equality': Kind$Parser$equality,
        'Kind.Term.ope': Kind$Term$ope,
        'Kind.Parser.op': Kind$Parser$op,
        'Kind.Parser.add': Kind$Parser$add,
        'Kind.Parser.sub': Kind$Parser$sub,
        'Kind.Parser.mul': Kind$Parser$mul,
        'Kind.Parser.div': Kind$Parser$div,
        'Kind.Parser.mod': Kind$Parser$mod,
        'Kind.Parser.ltn': Kind$Parser$ltn,
        'Kind.Parser.lte': Kind$Parser$lte,
        'Kind.Parser.eql': Kind$Parser$eql,
        'Kind.Parser.gte': Kind$Parser$gte,
        'Kind.Parser.gtn': Kind$Parser$gtn,
        'Kind.Parser.and': Kind$Parser$and,
        'Kind.Parser.or': Kind$Parser$or,
        'Kind.Parser.default': Kind$Parser$default,
        'Kind.Parser.cons': Kind$Parser$cons,
        'Kind.Parser.string_concat': Kind$Parser$string_concat,
        'Kind.Parser.sigma': Kind$Parser$sigma,
        'Kind.Parser.inequality': Kind$Parser$inequality,
        'Kind.Parser.rewrite': Kind$Parser$rewrite,
        'Kind.Parser.annotation': Kind$Parser$annotation,
        'Kind.Parser.application.hole': Kind$Parser$application$hole,
        'Kind.Parser.term.suffix': Kind$Parser$term$suffix,
        'Kind.Parser.term': Kind$Parser$term,
        'Kind.Parser.name_term': Kind$Parser$name_term,
        'Kind.Binder.new': Kind$Binder$new,
        'Kind.Parser.binder.homo': Kind$Parser$binder$homo,
        'List.concat': List$concat,
        'List.flatten': List$flatten,
        'Kind.Parser.binder': Kind$Parser$binder,
        'List.length': List$length,
        'Kind.Parser.forall.make': Kind$Parser$forall$make,
        'List.at_last': List$at_last,
        'Kind.Term.var': Kind$Term$var,
        'Kind.Context.get_name_skips': Kind$Context$get_name_skips,
        'Kind.Name.eql': Kind$Name$eql,
        'Kind.Context.find.go': Kind$Context$find$go,
        'Kind.Context.find': Kind$Context$find,
        'Kind.Path.o': Kind$Path$o,
        'Kind.Path.i': Kind$Path$i,
        'Kind.Path.to_bits': Kind$Path$to_bits,
        'Kind.Term.bind': Kind$Term$bind,
        'Trampoline.call': Trampoline$call,
        'Trampoline': Trampoline,
        'Trampoline.wrap': Trampoline$wrap,
        'BitsMap.set_if_empty.cps.go': BitsMap$set_if_empty$cps$go,
        'Trampoline.done': Trampoline$done,
        'BitsMap.set_if_empty.cps': BitsMap$set_if_empty$cps,
        'BitsMap.set_if_empty': BitsMap$set_if_empty,
        'Kind.Map.set_if_empty': Kind$Map$set_if_empty,
        'Kind.Status.init': Kind$Status$init,
        'Kind.Map.def': Kind$Map$def,
        'Kind.Parser.file.def': Kind$Parser$file$def,
        'Kind.Parser.ADT.Constructor.new': Kind$Parser$ADT$Constructor$new,
        'Kind.Parser.ADT.ctor': Kind$Parser$ADT$ctor,
        'Kind.Parser.ADT.Datatype.new': Kind$Parser$ADT$Datatype$new,
        'Kind.Parser.ADT.adt': Kind$Parser$ADT$adt,
        'Kind.Parser.ADT.Datatype.build_term.motive.go': Kind$Parser$ADT$Datatype$build_term$motive$go,
        'Kind.Parser.ADT.Datatype.build_term.motive': Kind$Parser$ADT$Datatype$build_term$motive,
        'String.flatten.go': String$flatten$go,
        'String.flatten': String$flatten,
        'Kind.Parser.ADT.Datatype.build_term.constructor.go': Kind$Parser$ADT$Datatype$build_term$constructor$go,
        'Kind.Parser.ADT.Datatype.build_term.constructor': Kind$Parser$ADT$Datatype$build_term$constructor,
        'Kind.Parser.ADT.Datatype.build_term.constructors.go': Kind$Parser$ADT$Datatype$build_term$constructors$go,
        'Kind.Parser.ADT.Datatype.build_term.constructors': Kind$Parser$ADT$Datatype$build_term$constructors,
        'Kind.Parser.ADT.Datatype.build_term.go': Kind$Parser$ADT$Datatype$build_term$go,
        'Kind.Parser.ADT.Datatype.build_term': Kind$Parser$ADT$Datatype$build_term,
        'Kind.Parser.ADT.Datatype.build_type.go': Kind$Parser$ADT$Datatype$build_type$go,
        'Kind.Parser.ADT.Datatype.build_type': Kind$Parser$ADT$Datatype$build_type,
        'Kind.Parser.ADT.Constructor.build_term.opt.go': Kind$Parser$ADT$Constructor$build_term$opt$go,
        'Kind.Parser.ADT.Constructor.build_term.opt': Kind$Parser$ADT$Constructor$build_term$opt,
        'Kind.Parser.ADT.Constructor.build_term.go': Kind$Parser$ADT$Constructor$build_term$go,
        'Kind.Parser.ADT.Constructor.build_term': Kind$Parser$ADT$Constructor$build_term,
        'Kind.Parser.ADT.Constructor.build_type.go': Kind$Parser$ADT$Constructor$build_type$go,
        'Kind.Parser.ADT.Constructor.build_type': Kind$Parser$ADT$Constructor$build_type,
        'List.is_empty': List$is_empty,
        'Kind.Term.get_args.go': Kind$Term$get_args$go,
        'Kind.Term.get_args': Kind$Term$get_args,
        'Kind.Parser.ADT.Derive.stringifier.term.cont': Kind$Parser$ADT$Derive$stringifier$term$cont,
        'Kind.Parser.ADT.Derive.stringifier.term.args': Kind$Parser$ADT$Derive$stringifier$term$args,
        'Kind.Parser.ADT.Derive.stringifier.ctr': Kind$Parser$ADT$Derive$stringifier$ctr,
        'Kind.Parser.ADT.Derive.stringifier.term.ctrs': Kind$Parser$ADT$Derive$stringifier$term$ctrs,
        'Kind.Parser.ADT.Derive.stringifier.term': Kind$Parser$ADT$Derive$stringifier$term,
        'Kind.Parser.ADT.Derive.stringifier.type': Kind$Parser$ADT$Derive$stringifier$type,
        'Kind.Parser.ADT.Derived.new': Kind$Parser$ADT$Derived$new,
        'Kind.Parser.ADT.Derive.parser.term.cont': Kind$Parser$ADT$Derive$parser$term$cont,
        'Kind.Parser.ADT.Derive.parser.term.args': Kind$Parser$ADT$Derive$parser$term$args,
        'Kind.Parser.ADT.Derive.parser.term.cses': Kind$Parser$ADT$Derive$parser$term$cses,
        'Kind.Parser.ADT.Derive.parser.term': Kind$Parser$ADT$Derive$parser$term,
        'Kind.Parser.ADT.Derive.parser.type': Kind$Parser$ADT$Derive$parser$type,
        'Kind.Parser.ADT.Derive.serializer.term.cont': Kind$Parser$ADT$Derive$serializer$term$cont,
        'Kind.Parser.ADT.Derive.serializer.term.args': Kind$Parser$ADT$Derive$serializer$term$args,
        'Kind.Parser.ADT.Derive.serializer.ctr.bits': Kind$Parser$ADT$Derive$serializer$ctr$bits,
        'Kind.Parser.ADT.Derive.serializer.ctr': Kind$Parser$ADT$Derive$serializer$ctr,
        'Kind.Parser.ADT.Derive.serializer.term.ctrs': Kind$Parser$ADT$Derive$serializer$term$ctrs,
        'Bits.zeros': Bits$zeros,
        'Nat.div': Nat$div,
        'Nat.bitlen': Nat$bitlen,
        'Kind.Parser.ADT.Derive.serializer.term': Kind$Parser$ADT$Derive$serializer$term,
        'Kind.Parser.ADT.Derive.serializer.type': Kind$Parser$ADT$Derive$serializer$type,
        'Kind.Parser.ADT.Derive.serializer.term.bits': Kind$Parser$ADT$Derive$serializer$term$bits,
        'Kind.Parser.ADT.Derive.deserializer.term.cont': Kind$Parser$ADT$Derive$deserializer$term$cont,
        'Kind.Parser.ADT.Derive.deserializer.term.args': Kind$Parser$ADT$Derive$deserializer$term$args,
        'Kind.Parser.ADT.Derive.deserializer.term.cses': Kind$Parser$ADT$Derive$deserializer$term$cses,
        'Kind.Parser.ADT.Derive.deserializer.term': Kind$Parser$ADT$Derive$deserializer$term,
        'Kind.Parser.ADT.Derive.deserializer.type': Kind$Parser$ADT$Derive$deserializer$type,
        'Kind.Parser.ADT.Derive.by_name': Kind$Parser$ADT$Derive$by_name,
        'Kind.Parser.file.adt': Kind$Parser$file$adt,
        'Kind.Parser.file.end': Kind$Parser$file$end,
        'Kind.Parser.file': Kind$Parser$file,
        'String.join.go': String$join$go,
        'String.join': String$join,
        'Kind.Code.highlight.end': Kind$Code$highlight$end,
        'Maybe.extract': Maybe$extract,
        'Nat.is_zero': Nat$is_zero,
        'Nat.double': Nat$double,
        'String.pad_right': String$pad_right,
        'String.pad_left': String$pad_left,
        'Kind.Code.color': Kind$Code$color,
        'List.take': List$take,
        'Kind.Code.highlight.go': Kind$Code$highlight$go,
        'Kind.Code.highlight': Kind$Code$highlight,
        'Kind.Defs.read': Kind$Defs$read,
        'Kind.Synth.load.go': Kind$Synth$load$go,
        'Kind.Synth.files_of.make': Kind$Synth$files_of$make,
        'String.length.go': String$length$go,
        'String.length': String$length,
        'String.split.go': String$split$go,
        'String.split': String$split,
        'Kind.Synth.files_of': Kind$Synth$files_of,
        'Kind.Synth.load': Kind$Synth$load,
        'Kind.Status.wait': Kind$Status$wait,
        'Kind.Check': Kind$Check,
        'Kind.Check.result': Kind$Check$result,
        'Kind.Error.undefined_reference': Kind$Error$undefined_reference,
        'Kind.Error.waiting': Kind$Error$waiting,
        'Kind.Error.indirect': Kind$Error$indirect,
        'Maybe.mapped': Maybe$mapped,
        'Kind.MPath.o': Kind$MPath$o,
        'Kind.MPath.i': Kind$MPath$i,
        'Kind.Error.patch': Kind$Error$patch,
        'Kind.MPath.to_bits': Kind$MPath$to_bits,
        'Kind.Term.check.patch': Kind$Term$check$patch,
        'Kind.Error.type_mismatch': Kind$Error$type_mismatch,
        'Kind.Error.show_goal': Kind$Error$show_goal,
        'Kind.Path.nil': Kind$Path$nil,
        'Kind.MPath.nil': Kind$MPath$nil,
        'Kind.Term.check.direct': Kind$Term$check$direct,
        'Kind.Term.check.get_name_of_self_type.slice': Kind$Term$check$get_name_of_self_type$slice,
        'Kind.Term.check.get_name_of_self_type': Kind$Term$check$get_name_of_self_type,
        'Kind.Term.check.expand.num.nat': Kind$Term$check$expand$num$nat,
        'Kind.Term.check.expand.num.int': Kind$Term$check$expand$num$int,
        'Kind.Term.check.expand.num.other': Kind$Term$check$expand$num$other,
        'Kind.Term.check.expand.num': Kind$Term$check$expand$num,
        'Kind.Term.check.infer_types_of_with': Kind$Term$check$infer_types_of_with,
        'Kind.Term.normalize': Kind$Term$normalize,
        'Kind.Term.check.expand.cse.motive.go': Kind$Term$check$expand$cse$motive$go,
        'List.tail': List$tail,
        'Kind.Term.SmartMotive.vals.cont': Kind$Term$SmartMotive$vals$cont,
        'Kind.Term.SmartMotive.vals': Kind$Term$SmartMotive$vals,
        'Kind.Term.SmartMotive.nams.cont': Kind$Term$SmartMotive$nams$cont,
        'Kind.Term.SmartMotive.nams': Kind$Term$SmartMotive$nams,
        'List.zip': List$zip,
        'Nat.gte': Nat$gte,
        'Bits.concat': Bits$concat,
        'Kind.Term.serialize.go': Kind$Term$serialize$go,
        'Kind.Term.serialize': Kind$Term$serialize,
        'Bits.eql': Bits$eql,
        'Kind.Term.identical': Kind$Term$identical,
        'Kind.Term.SmartMotive.replace': Kind$Term$SmartMotive$replace,
        'Kind.Term.SmartMotive.make': Kind$Term$SmartMotive$make,
        'Kind.Term.check.expand.cse.motive': Kind$Term$check$expand$cse$motive,
        'Kind.Term.check.expand.cse.argument': Kind$Term$check$expand$cse$argument,
        'Maybe.or': Maybe$or,
        'Kind.Term.check.expand.cse.cases': Kind$Term$check$expand$cse$cases,
        'Kind.Term.check.expand.cse': Kind$Term$check$expand$cse,
        'Kind.Error.cant_infer': Kind$Error$cant_infer,
        'Kind.Term.check.cant_infer': Kind$Term$check$cant_infer,
        'Kind.Term.get_bnds': Kind$Term$get_bnds,
        'List.last.go': List$last$go,
        'List.last': List$last,
        'Kind.Term.check.expand.set.count_params': Kind$Term$check$expand$set$count_params,
        'Nat.for': Nat$for,
        'List.get': List$get,
        'Kind.Term.check.expand.new.pair': Kind$Term$check$expand$new$pair,
        'Kind.Term.check.expand.new': Kind$Term$check$expand$new,
        'Kind.Term.check.expand.get.selector': Kind$Term$check$expand$get$selector,
        'Kind.Term.check.expand.get': Kind$Term$check$expand$get,
        'Kind.Term.check.expand.set.selector': Kind$Term$check$expand$set$selector,
        'Kind.Term.check.expand.set': Kind$Term$check$expand$set,
        'String.at': String$at,
        'String.last': String$last,
        'Kind.Term.check.expand.ope': Kind$Term$check$expand$ope,
        'BitsSet.has': BitsSet$has,
        'BitsSet.mut.has': BitsSet$mut$has,
        'Kind.Term.equal.extra_holes.funari': Kind$Term$equal$extra_holes$funari,
        'Kind.Term.has_holes': Kind$Term$has_holes,
        'Kind.Term.equal.hole': Kind$Term$equal$hole,
        'Kind.Term.equal.extra_holes.filler': Kind$Term$equal$extra_holes$filler,
        'Kind.Term.equal.extra_holes': Kind$Term$equal$extra_holes,
        'BitsSet.set': BitsSet$set,
        'BitsSet.mut.set': BitsSet$mut$set,
        'Bool.eql': Bool$eql,
        'Kind.Term.equal.go': Kind$Term$equal$go,
        'BitsSet.new': BitsSet$new,
        'BitsSet.mut.new': BitsSet$mut$new,
        'Kind.Term.check': Kind$Term$check,
        'Kind.Term.patch_at': Kind$Term$patch_at,
        'Kind.Synth.fix': Kind$Synth$fix,
        'Kind.Status.fail': Kind$Status$fail,
        'Kind.Synth.one': Kind$Synth$one,
        'BitsMap.from_list': BitsMap$from_list,
        'Kind.Term.inline.names': Kind$Term$inline$names,
        'Kind.Term.inline.reduce': Kind$Term$inline$reduce,
        'Kind.Term.inline': Kind$Term$inline,
        'BitsMap.values.go': BitsMap$values$go,
        'BitsMap.values': BitsMap$values,
        'Kind.Core.var_name': Kind$Core$var_name,
        'Kind.Name.show': Kind$Name$show,
        'Bits.to_nat': Bits$to_nat,
        'U16.show_hex': U16$show_hex,
        'Kind.Code.escape.char': Kind$Code$escape$char,
        'Kind.Code.escape.go': Kind$Code$escape$go,
        'Kind.Code.escape': Kind$Code$escape,
        'Kind.Core.show.go': Kind$Core$show$go,
        'Kind.Core.show': Kind$Core$show,
        'Kind.Defs.core': Kind$Defs$core,
        'Kind.api.io.term_to_core': Kind$api$io$term_to_core,
        'Kind.Comp.Defs.compile.defn.adjust': Kind$Comp$Defs$compile$defn$adjust,
        'Kind.Comp.var': Kind$Comp$var,
        'Kind.Comp.nil': Kind$Comp$nil,
        'Kind.Comp.ref': Kind$Comp$ref,
        'Kind.Comp.Prim.bool': Kind$Comp$Prim$bool,
        'Kind.Comp.Prim.nat': Kind$Comp$Prim$nat,
        'Kind.Comp.Prim.u16': Kind$Comp$Prim$u16,
        'Kind.Comp.Prim.string': Kind$Comp$Prim$string,
        'Kind.Comp.Prim.natives': Kind$Comp$Prim$natives,
        'Kind.Term.equal': Kind$Term$equal,
        'Kind.Comp.compile.prim_of': Kind$Comp$compile$prim_of,
        'String.ends_with': String$ends_with,
        'Kind.Comp.compile.adt.get_fields': Kind$Comp$compile$adt$get_fields,
        'Kind.Comp.compile.adt.get_constructors': Kind$Comp$compile$adt$get_constructors,
        'Kind.Comp.Prim.data': Kind$Comp$Prim$data,
        'Kind.Comp.compile.adt': Kind$Comp$compile$adt,
        'Kind.Comp.eli': Kind$Comp$eli,
        'Kind.Comp.app': Kind$Comp$app,
        'Kind.Comp.let': Kind$Comp$let,
        'Kind.Comp.nat': Kind$Comp$nat,
        'Kind.Comp.chr': Kind$Comp$chr,
        'Kind.Comp.str': Kind$Comp$str,
        'Kind.Comp.lam': Kind$Comp$lam,
        'Kind.Comp.ins': Kind$Comp$ins,
        'Kind.Comp.compile': Kind$Comp$compile,
        'Kind.Comp.Defs.compile.defn': Kind$Comp$Defs$compile$defn,
        'Kind.Comp.Defs.compile': Kind$Comp$Defs$compile,
        'Kind.Comp.dependency_sort.go': Kind$Comp$dependency_sort$go,
        'Kind.Comp.dependency_sort': Kind$Comp$dependency_sort,
        'Kind.Comp.replace': Kind$Comp$replace,
        'List.create.go': List$create$go,
        'List.create': List$create,
        'Kind.Comp.Prim.instantiator.go': Kind$Comp$Prim$instantiator$go,
        'Kind.Comp.Prim.instantiator': Kind$Comp$Prim$instantiator,
        'Kind.Comp.get_args.go': Kind$Comp$get_args$go,
        'Kind.Comp.get_args': Kind$Comp$get_args,
        'Kind.Comp.get_arity': Kind$Comp$get_arity,
        'Kind.Comp.get_vars': Kind$Comp$get_vars,
        'Kind.Comp.Prim.inst.go': Kind$Comp$Prim$inst$go,
        'Kind.Comp.Prim.inst': Kind$Comp$Prim$inst,
        'Word.fold': Word$fold,
        'Word.to_nat': Word$to_nat,
        'U16.to_nat': U16$to_nat,
        'Kind.Comp.transpile.term': Kind$Comp$transpile$term,
        'List.map': List$map,
        'List.seq.go': List$seq$go,
        'List.seq': List$seq,
        'Kind.Comp.txt': Kind$Comp$txt,
        'Kind.Comp.subst': Kind$Comp$subst,
        'Kind.Comp.apply': Kind$Comp$apply,
        'Kind.Comp.Prim.elim': Kind$Comp$Prim$elim,
        'Kind.Comp.Prim.eliminator': Kind$Comp$Prim$eliminator,
        'Avl.lookup': Avl$lookup,
        'U16.cmp': U16$cmp,
        'String.cmp': String$cmp,
        'Map.get': Map$get,
        'Avl': Avl,
        'Map': Map,
        'Kind.Comp.transpile.global_definitions': Kind$Comp$transpile$global_definitions,
        'Kind.Comp.transpile': Kind$Comp$transpile,
        'Kind.Comp.Language.new': Kind$Comp$Language$new,
        'Kind.Comp.Grammar.new': Kind$Comp$Grammar$new,
        'Kind.Comp.Target.Scheme.null': Kind$Comp$Target$Scheme$null,
        'Kind.Comp.Target.Scheme.name': Kind$Comp$Target$Scheme$name,
        'Kind.Comp.Target.Scheme.inst_name': Kind$Comp$Target$Scheme$inst_name,
        'Kind.Comp.Target.Scheme.elim_name': Kind$Comp$Target$Scheme$elim_name,
        'Kind.Comp.Target.Scheme.lambda': Kind$Comp$Target$Scheme$lambda,
        'Kind.Comp.Target.Scheme.application': Kind$Comp$Target$Scheme$application,
        'Kind.Comp.Target.Scheme.local_definition': Kind$Comp$Target$Scheme$local_definition,
        'Kind.Comp.Target.Scheme.global_application': Kind$Comp$Target$Scheme$global_application,
        'Kind.Comp.Target.Scheme.nest_lambdas.aux': Kind$Comp$Target$Scheme$nest_lambdas$aux,
        'Kind.Comp.Target.Scheme.nest_lambdas': Kind$Comp$Target$Scheme$nest_lambdas,
        'Kind.Comp.Target.Scheme.global_function': Kind$Comp$Target$Scheme$global_function,
        'Kind.Comp.Target.Scheme.select': Kind$Comp$Target$Scheme$select,
        'Char.to_string': Char$to_string,
        'Kind.Comp.Target.Scheme.string_literal': Kind$Comp$Target$Scheme$string_literal,
        'Kind.Comp.Target.Scheme.exports': Kind$Comp$Target$Scheme$exports,
        'Kind.Comp.Target.Scheme.module': Kind$Comp$Target$Scheme$module,
        'Kind.Comp.Target.Scheme.program': Kind$Comp$Target$Scheme$program,
        'Kind.Comp.Target.Scheme.grammar': Kind$Comp$Target$Scheme$grammar,
        'Kind.Comp.Native.new': Kind$Comp$Native$new,
        'Kind.Comp.Target.Scheme.natives': Kind$Comp$Target$Scheme$natives,
        'Avl.bin': Avl$bin,
        'U32.new': U32$new,
        'Nat.to_u32': Nat$to_u32,
        'Avl.tip': Avl$tip,
        'Avl.singleton': Avl$singleton,
        'Avl.size': Avl$size,
        'U32.add': U32$add,
        'U32.mul': U32$mul,
        'Avl.w': Avl$w,
        'U32.ltn': U32$ltn,
        'U32.from_nat': U32$from_nat,
        'Avl.node': Avl$node,
        'Cmp.as_gtn': Cmp$as_gtn,
        'Word.gtn': Word$gtn,
        'U32.gtn': U32$gtn,
        'Avl.balance': Avl$balance,
        'Avl.insert': Avl$insert,
        'Avl.from_list.go': Avl$from_list$go,
        'Avl.from_list': Avl$from_list,
        'Map.from_list': Map$from_list,
        'Kind.Comp.Target.Scheme.optimizeds': Kind$Comp$Target$Scheme$optimizeds,
        'Kind.Comp.Target.Scheme.basics': Kind$Comp$Target$Scheme$basics,
        'Kind.Comp.Target.Scheme.Language': Kind$Comp$Target$Scheme$Language,
        'Kind.api.io.term_to_scheme': Kind$api$io$term_to_scheme,
        'Kind.Synth.many': Kind$Synth$many,
        'Kind.Comp.dependency_sort.module': Kind$Comp$dependency_sort$module,
        'Kind.Comp.transpile.module': Kind$Comp$transpile$module,
        'Kind.api.io.terms_to_scheme_lib': Kind$api$io$terms_to_scheme_lib,
        'BitsMap.keys.go': BitsMap$keys$go,
        'BitsMap.keys': BitsMap$keys,
        'Kind.Synth.file': Kind$Synth$file,
        'IO.put_string': IO$put_string,
        'IO.print': IO$print,
        'Kind.Term.show.as_nat.go': Kind$Term$show$as_nat$go,
        'Kind.Term.show.as_nat': Kind$Term$show$as_nat,
        'Kind.Term.show.is_ref': Kind$Term$show$is_ref,
        'Kind.Term.show.app.done': Kind$Term$show$app$done,
        'Kind.Term.show.app': Kind$Term$show$app,
        'BitsMap.to_list': BitsMap$to_list,
        'Kind.Term.show.go': Kind$Term$show$go,
        'Kind.Term.show': Kind$Term$show,
        'Kind.Defs.report.types': Kind$Defs$report$types,
        'List.filter': List$filter,
        'Kind.Error.is_undef': Kind$Error$is_undef,
        'Kind.Error.is_mistake': Kind$Error$is_mistake,
        'Kind.Error.is_goal': Kind$Error$is_goal,
        'Kind.Error.relevant': Kind$Error$relevant,
        'Kind.Context.show': Kind$Context$show,
        'Kind.Term.expand_at': Kind$Term$expand_at,
        'Kind.Term.expand_ct': Kind$Term$expand_ct,
        'Kind.Term.expand': Kind$Term$expand,
        'Kind.Error.show': Kind$Error$show,
        'Kind.Error.origin': Kind$Error$origin,
        'Kind.Defs.report.errors': Kind$Defs$report$errors,
        'Kind.Defs.report': Kind$Defs$report,
        'IO.set_file': IO$set_file,
        'Bool.show': Bool$show,
        'Kind.Defs.cache.go': Kind$Defs$cache$go,
        'Kind.Defs.cache': Kind$Defs$cache,
        'Kind.api.io.check_file': Kind$api$io$check_file,
        'Kind.Synth.files.go': Kind$Synth$files$go,
        'Kind.Synth.remove_duplicate_names': Kind$Synth$remove_duplicate_names,
        'Kind.Synth.files': Kind$Synth$files,
        'Kind.api.io.check_files': Kind$api$io$check_files,
        'Kind.api.io.check_term': Kind$api$io$check_term,
        'Kind.api.io.show_term': Kind$api$io$show_term,
        'Kind.api.io.show_term_normal': Kind$api$io$show_term_normal,
        'IO.purify': IO$purify,
        'Kind.api.check_code': Kind$api$check_code,
        'Kind.Term.read': Kind$Term$read,
        'Kind.api.export': Kind$api$export,
    };
})();