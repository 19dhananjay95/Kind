Kind.Synth.load.go(name: String, files: List(String), defs: Kind.Defs): IO(Maybe(Kind.Defs))
  case files {
    nil: do IO {
      return none
    }
    cons: do IO {
      var code = IO.get_file(files.head)
      let read = Kind.Defs.read(files.head, code, defs)
      case read {
        left: Kind.Synth.load.go(name, files.tail, defs)
        right: do IO {
          let defs = read.value
          case Kind.get!(name, defs) as got {
            none: Kind.Synth.load.go(name, files.tail, defs),
            some: do IO {
              return some(defs)
            }
          }
        }
      }
    }
  }