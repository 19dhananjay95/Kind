#errors #got (((errors #errors (List Fm.Error)) (List.nil Fm.Error)) #errors.head #errors.tail !keep = ((((((((errors.head #errors.head Bool) #errors.head.origin #errors.head.expected #errors.head.detected #errors.head.context (Bool.not got)) #errors.head.name #errors.head.dref #errors.head.verb #errors.head.goal #errors.head.context Bool.true) #errors.head.name Bool.false) #errors.head.name Bool.false) #errors.head.path #errors.head.term Bool.false) #errors.head.origin #errors.head.name (Bool.not got)) #errors.head.origin #errors.head.term #errors.head.context (Bool.not got)); !got = ((((((((errors.head #errors.head Bool) #errors.head.origin #errors.head.expected #errors.head.detected #errors.head.context Bool.true) #errors.head.name #errors.head.dref #errors.head.verb #errors.head.goal #errors.head.context got) #errors.head.name got) #errors.head.name got) #errors.head.path #errors.head.term got) #errors.head.origin #errors.head.name Bool.true) #errors.head.origin #errors.head.term #errors.head.context got); !tail = ((Fm.Error.relevant errors.tail) got); (((keep # (List Fm.Error)) (((List.cons Fm.Error) errors.head) tail)) tail))