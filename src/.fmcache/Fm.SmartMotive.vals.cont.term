#expr #term #args #defs (((((((((((((((((((Fm.Term.reduce term) defs) #term (List Fm.Term)) #term.name #term.indx (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.name (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.eras #term.self #term.name #term.xtyp #term.body (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.name #term.body (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.func #term.argm ((((Fm.SmartMotive.vals.cont expr) term.func) (((List.cons Fm.Term) term.argm) args)) defs)) #term.name #term.expr #term.body (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.name #term.expr #term.body (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.done #term.term #term.type (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.name #term.dref #term.verb (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.path (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.natx (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.chrx (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.strx (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.path #term.expr #term.name #term.with #term.cses #term.moti (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args)))) #term.orig #term.expr (((List.cons Fm.Term) expr) ((List.tail Fm.Term) ((List.reverse Fm.Term) args))))