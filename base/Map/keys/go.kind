Map.keys.go<A: Type>(xs: Map(A), key: Bits, list: List(Bits)): List(Bits)
  case xs {
    new:
      list,
    tie: 
      let list0 = case xs.val { none: list, some: List.cons!(Bits.reverse(key), list) };
      let list1 = Map.keys.go!(xs.lft, Bits.o(key), list0);
      let list2 = Map.keys.go!(xs.rgt, Bits.i(key), list1);
      list2
  }