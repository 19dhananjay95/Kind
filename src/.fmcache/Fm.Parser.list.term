((((((Monad.bind Parser) Parser.monad) Nat) Fm.Term) Fm.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "[")) # ((((((Monad.bind Parser) Parser.monad) (List Fm.Term)) Fm.Term) (((Parser.until Fm.Term) (Fm.Parser.text "]")) ((Fm.Parser.item Fm.Term) Fm.Parser.term))) #vals ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Fm.Term) (Fm.Parser.stop init)) #orig ((((Monad.pure Parser) Parser.monad) Fm.Term) (((((List.fold Fm.Term) vals) Fm.Term) ((Fm.Term.app (Fm.Term.ref (Fm.Name.read "List.nil"))) (Fm.Term.hol Bits.e))) #x #xs !term = (Fm.Term.ref (Fm.Name.read "List.cons")); !term = ((Fm.Term.app term) (Fm.Term.hol Bits.e)); !term = ((Fm.Term.app term) x); !term = ((Fm.Term.app term) xs); ((Fm.Term.ori orig) term)))))))