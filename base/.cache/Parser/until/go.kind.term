#V #until #parse #values #idx #code !until_reply = ((until idx) code); (((until_reply #until_reply (Parser.Reply (List V))) #until_reply.idx #until_reply.code #until_reply.err !reply = ((parse idx) code); (((reply #reply (Parser.Reply (List V))) #reply.idx #reply.code #reply.err ((((Parser.Reply.error (List V)) reply.idx) reply.code) reply.err)) #reply.idx #reply.code #reply.val $values = (((List.cons V) reply.val) values); ((((((Parser.until.go V) until) parse) values) reply.idx) reply.code))) #until_reply.idx #until_reply.code #until_reply.val ((((Parser.Reply.value (List V)) until_reply.idx) until_reply.code) ((List.reverse V) values)))