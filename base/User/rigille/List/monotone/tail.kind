User.rigille.List.monotone.tail<A: Type, after: A -> A -> Type, O: User.rigille.Order<A>(after)>(x: A, ys: List<A>,
  Hyp: User.rigille.List.monotone<A, after, O>(List.cons<A>(x, ys))): User.rigille.List.monotone<A, after, O>(ys)
  case ys with Hyp {
    nil: ?a
    cons: let ind = User.rigille.List.monotone.tail<A, after, O>(ys.head, ys.tail)
          ?a
  } 
