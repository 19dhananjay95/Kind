App.GG.Effect.ai.update(
  mod: App.GG.AI -> App.GG.AI
): App.GG.Effect<Unit>
  (center, origin, grid)

  let new_grid = App.GG.Creature.modify_at(App.GG.AI.update(mod), center, grid)
  App.GG.Effect.Result.new!(unit, center, origin, new_grid, (img) img, 0, "")


App.GG.Effect.ai.get: App.GG.Effect<Maybe<App.GG.AI>>
  (center, origin, grid)

  let new_AI = App.GG.AI.get(center, grid)
  App.GG.Effect.Result.new!(new_AI, center, origin, grid, (img) img, 0, "")

App.GG.Effect.ai.inc: App.GG.Effect<Unit>
  App.GG.Effect { 
    get center = App.GG.Effect.coord.get_center
    get creature = App.GG.Effect.creature.get
    get grid = App.GG.Effect.grid.get
    without creature: App.GG.Effect.pass
    let coords = App.GG.Coord.front_all(center, creature@team, grid)
    let target = false
    for coord in coords with target:
      target || App.GG.Coord.has_enemy(coord, creature@team, grid)
    App.GG.Effect.ai.update(App.GG.AI.inc(target))
  }

  
App.GG.Effect.ai.cast(
  projectile: App.GG.Projectile,
  spawn_coord: App.GG.Coord,
  animation: App.GG.Animation
  frame: U64
): App.GG.Effect<Unit>
  
  App.GG.Effect { 
    get AI = App.GG.Effect.ai.get
    get center = App.GG.Effect.coord.get_center
    get creature = App.GG.Effect.creature.get
    get grid = App.GG.Effect.grid.get
    without creature: App.GG.Effect.pass
    without AI: App.GG.Effect.pass
    let spotted = AI@spotted
    let unspotted = AI@unspotted
    ?a
  }
  

//App.GG.Effect.ai.generic_shoot(
  //projectile: App.GG.Projectile,
  //spawn_coord: App.GG.Coord,
  //animation: App.GG.Animation
//): App.GG.Effect<Unit>

  //App.GG.Effect {
    //get creature = App.GG.Effect.creature.get
    //get center = App.GG.Effect.coord.get_center
    //get frame = App.GG.Effect.frame.get
    //App.GG.Effect.animation.update(animation) // Sets animation for creature
    //App.GG.Effect.frame.inc // Increases action's frame by 1
    //without creature: App.GG.Effect.pass
    //without frame: App.GG.Effect.pass
    //App.GG.Effect {
      //if frame =? 16 then // At 16th frame
        //App.GG.Effect {
          //App.GG.Effect.actions.del // Delete action from creature
          //App.GG.Effect.animation.update(App.GG.Animation.idle)
          //App.GG.Effect.projectile.add_at(spawn_coord, projectile)
        //}
      //else
        //App.GG.Effect.pass
      //if frame =? 0 then 
        //App.GG.Effect.chip.waste
      //else
        //App.GG.Effect.pass
    //}
  //}
