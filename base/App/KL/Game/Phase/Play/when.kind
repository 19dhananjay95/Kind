App.KL.Game.Phase.Play.when(
  local: App.KL.Game.State.Local
  game: App.KL.Game
  event: App.Event,
): IO<Maybe<App.State.local<App.KL.State>>>
  open game
  case event {
    frame:
      let picks = App.KL.Game.Cast.picks_of(local@user, game)
      let preview = local@preview <- (local@preview@picks <- picks)
      //log("ue " | Nat.show(List.length!(Hexagonal.Axial.BBT.to_list!(local@preview@picks))))
      App.set_local!(App.KL.State.Local.game(preview))
    mouse_move:
      if String.eql("game_screen", event.id) then
        let {x,y} = event.mouse_pos
        App.set_local!(App.KL.State.Local.game(local@mouse <- {x / 2, y / 2}))
      else
        App.pass!
    key_down:
      // only allow preview in preparation mode
      case game.moment {
        preparation:
          App.set_local!(App.KL.State.Local.game(Maybe {
            let coord = Hexagonal.Axial.from_screen_xy(local@mouse, App.KL.Constants.hexagon_radius, App.KL.Constants.center_x, App.KL.Constants.center_y)
            get caster_coord = App.KL.Game.Board.find_player_coord(local@user, game@board)
            // get caster_coord = App.KL.Game.Cast.estimate_position(local@user, ...delay..., game)
            get casted_skill = App.KL.Game.Skill.get(local@user, event.code, game)
            let casted_range = Nat.to_i32(U64.to_nat(casted_skill@range))
            let indicators = List.mapped!(Hexagonal.Axial.range(caster_coord, casted_range))!((coord) {coord, App.KL.Game.Indicator.blue})
            let preview = local@preview
            let preview = preview@areas <- Hexagonal.Axial.BBT.from_list!(indicators)
            return local@preview <- preview
          } <> local))
        execution: App.pass!
      }
    key_up: 
      // only allow cast skill in preparation mode
      case game.moment {
        preparation:
          IO {
            //log("Key up " | Char.to_string(event.code))
            let coord = Hexagonal.Axial.from_screen_xy(local@mouse, App.KL.Constants.hexagon_radius, App.KL.Constants.center_x, App.KL.Constants.center_y)
            let preview = local@preview
            let preview = preview@areas <- Hexagonal.Axial.BBT.from_list!([])
            App.new_post!(local@room, App.KL.Game.Phase.Play.Event.cast.serial(event.code, coord))
            App.set_local!(App.KL.State.Local.game(local@preview <- preview))
          }
        execution: App.pass!
      }
  } default App.pass!
