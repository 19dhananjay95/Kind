#type #ctor #args (((args #args Fm.Term) ((type #type Fm.Term) #type.name #type.pars #type.inds #type.ctrs ((ctor #ctor Fm.Term) #ctor.name #ctor.args #ctor.inds !ret = (Fm.Term.ref (Fm.Name.read "P")); !ret = (((((List.for Fm.Binder) ctor.inds) Fm.Term) ret) #var #ret ((Fm.Term.app ret) ((var #var Fm.Term) #var.eras #var.name #var.term var.term))); !ctr = (String.flatten (((List.cons String) type.name) (((List.cons Fm.Name) (Fm.Name.read ".")) (((List.cons Fm.Name) ctor.name) (List.nil Fm.Name))))); !slf = (Fm.Term.ref ctr); !slf = (((((List.for Fm.Binder) type.pars) Fm.Term) slf) #var #slf ((Fm.Term.app slf) (Fm.Term.ref ((var #var Fm.Name) #var.eras #var.name #var.term var.name)))); !slf = (((((List.for Fm.Binder) ctor.args) Fm.Term) slf) #var #slf ((Fm.Term.app slf) (Fm.Term.ref ((var #var Fm.Name) #var.eras #var.name #var.term var.name)))); ((Fm.Term.app ret) slf)))) #args.head #args.tail ((args.head #args.head Fm.Term) #args.head.eras #args.head.name #args.head.term !eras = args.head.eras; !name = args.head.name; !xtyp = args.head.term; !body = (((Fm.Datatype.build_term.constructor.go type) ctor) args.tail); (((((Fm.Term.all eras) "") name) xtyp) #s #x body)))