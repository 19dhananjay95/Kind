((((((Monad.bind Parser) Parser.monad) Nat) Kind.Term) Kind.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text "[")) # ((((((Monad.bind Parser) Parser.monad) Kind.Name) Kind.Term) Kind.Parser.name1) #name ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text ":")) # ((((((Monad.bind Parser) Parser.monad) Kind.Term) Kind.Term) Kind.Parser.term) #typ0 ((((((Monad.bind Parser) Parser.monad) Unit) Kind.Term) (Kind.Parser.text "]")) # ((((((Monad.bind Parser) Parser.monad) Kind.Term) Kind.Term) Kind.Parser.term) #typ1 ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Kind.Term) (Kind.Parser.stop init)) #orig !term = (Kind.Term.ref "Sigma"); !term = ((Kind.Term.app term) typ0); !term = ((Kind.Term.app term) ((Kind.Term.lam name) #x typ1)); ((((Monad.pure Parser) Parser.monad) Kind.Term) ((Kind.Term.ori orig) term))))))))))