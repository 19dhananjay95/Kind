#term #defs (((((((((((((((((((Fm.Term.inline.reduce term) defs) #term Fm.Term) #term.name #term.indx ((Fm.Term.var term.name) term.indx)) #term.name (Fm.Term.ref term.name)) Fm.Term.typ) #term.eras #term.self #term.name #term.xtyp #term.body $xtyp = ((Fm.Term.inline term.xtyp) defs); $body = {#s #x ((Fm.Term.inline ((term.body s) x)) defs):@(:Fm.Term) @(:Fm.Term) Fm.Term}; (((((Fm.Term.all term.eras) term.self) term.name) xtyp) body)) #term.name #term.body $body = {#x ((Fm.Term.inline (term.body x)) defs):@(:Fm.Term) Fm.Term}; ((Fm.Term.lam term.name) body)) #term.func #term.argm $func = ((Fm.Term.inline term.func) defs); $argm = ((Fm.Term.inline term.argm) defs); ((Fm.Term.app func) argm)) #term.name #term.expr #term.body $expr = ((Fm.Term.inline term.expr) defs); $body = {#x ((Fm.Term.inline (term.body x)) defs):@(:Fm.Term) Fm.Term}; (((Fm.Term.let term.name) expr) body)) #term.name #term.expr #term.body $expr = ((Fm.Term.inline term.expr) defs); $body = {#x ((Fm.Term.inline (term.body x)) defs):@(:Fm.Term) Fm.Term}; (((Fm.Term.def term.name) expr) body)) #term.done #term.term #term.type $term = ((Fm.Term.inline term.term) defs); $type = ((Fm.Term.inline term.type) defs); (((Fm.Term.ann term.done) term) type)) #term.name #term.dref #term.verb (((Fm.Term.gol term.name) term.dref) term.verb)) #term.path (Fm.Term.hol term.path)) #term.natx (Fm.Term.nat term.natx)) #term.chrx (Fm.Term.chr term.chrx)) #term.strx (Fm.Term.str term.strx)) #term.path #term.expr #term.name #term.with #term.cses #term.moti term) #term.orig #term.expr ((Fm.Term.inline term.expr) defs))