// LOBBY
// =====

// Lobby.State
// -----------

type App.KL.Lobby.State.Local {
  new(
    user: String
    page: App.KL.Lobby.State.Local.Page
  )
}

type App.KL.Lobby.State.Local.Page {
  front(room_input: String)
  heroes
} 

// Lobby.Draw
// ----------

App.KL.Lobby.draw(local: App.KL.Lobby.State.Local, global: App.KL.Global.State): DOM
  open local
  case local.page as page{
    front: App.KL.Lobby.draw.front(local@user, page.room_input, global)
    heroes: App.KL.Lobby.draw.heroes
  }

App.KL.Lobby.draw.heroes: DOM
  let style = {
    "width": "100%", 
    "height": "100%", 
    "display": "flex", 
    "flex-direction": "column", 
    "justify-content": "center", 
    "align-items": "center",
    "font-size": "2rem"
  }

  main_style = 
  {
    "width": "70%",
    "height": "100%"
    "display": "flex"
    "justify-content": "center"
    "align-items": "center"
  }
  
  display_style = 
  { 
    
    "display": "flex",
    "flex-wrap": "wrap",
    "justify-content": "center", 
    "width": "100%"
  }

  hero_list = List.map!!(App.KL.Game.Phase.Draft.draw.selection, App.KL.Game.Hero.list)

  <div style=style>
    <div style=main_style>
      <div style=display_style>
        for div in hero_list: div
      </div>
    </div> 
  </div>


App.KL.Lobby.draw.front.button(id: String, content: String): DOM
  let style = {
    "font-size": "2rem",
    "font-family": "monospace",
    "margin-left": "10px",
    "padding": "2px"
  }
  <button id=id style=style>
    content
  </button>

App.KL.Lobby.draw.front.input(id: String, value: String): DOM
  let style = {
    "font-size": "2rem",
    "font-family": "monospace",
    "outline": "transparent",
    "margin-bottom": "15px"
  }
  <input id=id value=value style=style>
  </input>

App.KL.Lobby.draw.front(user: String, room_input: String, global: App.KL.Global.State): DOM
  let style = {
    "width": "100%", 
    "height": "100%", 
    "display": "flex", 
    "flex-direction": "column", 
    "justify-content": "center", 
    "align-items": "center",
    "font-size": "2rem"
  }
  <div style=style>
    <h1 style={"margin-bottom": "10px", "text-align": "center"}>
      "Welcome to Kaelin"
    </h1>
    <div style={
      "display": "flex",
      "justify-content": "center", 
      "flex-wrap": "wrap",
      "text-align": "center"
    }>
      "Enter a room number: "
      {App.KL.Lobby.draw.front.input("text", room_input)}
      <div>
        {App.KL.Lobby.draw.front.button("ready", "Enter")}
        {App.KL.Lobby.draw.front.button("random", "Random")}
      </div>
    </div>
  </div>

// Lobby.When
// ----------

App.KL.Lobby.when(
  local: App.KL.Lobby.State.Local,
  global: App.KL.Global.State,
  event: App.Event
): IO<Maybe<App.KL.State.Local>>
  let page = local@page
  case event {
    init:
      let new_local = local@user <- String.to_lower(event.user)
      App.set_local<App.KL.State>(App.KL.State.Local.lobby(new_local))

    input:
      case page {
        front:
          let new_page = App.KL.Lobby.State.Local.Page.front(event.text)
          let new_local = local@page <- new_page
          App.set_local<App.KL.State>(App.KL.State.Local.lobby(new_local))
        heroes:
          App.pass!
      }
    

    mouse_click:
      case page{
        front:
          switch String.eql(event.id) {
            "random": IO {
              get rnd = IO.random(10000000000)
              let str = Nat.show(rnd)
              let room = "4b4c494e" | String.take(8, str)
              let new_page = App.KL.Lobby.State.Local.Page.front(room)
              let new_local = local@page <- new_page
              App.set_local!(App.KL.State.Local.lobby(new_local))
            }
            "ready": IO {
              App.watch!(page.room_input)
              App.new_post!(page.room_input, App.KL.Game.Phase.Draft.Event.join_room.serial)
              App.set_local!(App.KL.State.Local.game(App.KL.Game.State.Local.init(local@user, page.room_input)))
              //App.set_local!(App.KL.State.Local.game(App.KL.Game.State.Local.new(local@user, page.room_input, none, {0,0})))
            }
          }default App.pass!
        heroes:
          App.pass!
      }
  }default App.pass!
