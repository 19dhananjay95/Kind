((((((Monad.bind Parser) Parser.monad) Nat) Fm.Term) Fm.Parser.init) #init ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "let ")) # ((((((Monad.bind Parser) Parser.monad) Fm.Name) Fm.Term) Fm.Parser.name1) #name ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "=")) # ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "for ")) # ((((((Monad.bind Parser) Parser.monad) Fm.Name) Fm.Term) Fm.Parser.name1) #elem ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text ":")) # ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "U32")) # ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "=")) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #idx0 ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text "..")) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #idx1 ((((((Monad.bind Parser) Parser.monad) Unit) Fm.Term) (Fm.Parser.text ":")) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #loop ((((((Monad.bind Parser) Parser.monad) (Maybe Unit)) Fm.Term) ((Parser.maybe Unit) (Fm.Parser.text ";"))) # ((((((Monad.bind Parser) Parser.monad) Fm.Term) Fm.Term) Fm.Parser.term) #body ((((((Monad.bind Parser) Parser.monad) ((Pair Nat) Nat)) Fm.Term) (Fm.Parser.stop init)) #orig !term = (Fm.Term.ref "U32.for"); !term = ((Fm.Term.app term) (Fm.Term.hol Bits.e)); !term = ((Fm.Term.app term) (Fm.Term.ref name)); !term = ((Fm.Term.app term) idx0); !term = ((Fm.Term.app term) idx1); !lamb = ((Fm.Term.lam elem) #e ((Fm.Term.lam name) #s loop)); !term = ((Fm.Term.app term) lamb); !term = (((Fm.Term.let name) term) #x body); ((((Monad.pure Parser) Parser.monad) Fm.Term) ((Fm.Term.ori orig) term)))))))))))))))))))