App.KL.Game.Phase.Play.when(
  local: App.KL.Game.State.Local
  game: App.KL.Game
  event: App.Event,
): IO<Maybe<App.State.local<App.KL.State>>>
  case event {
    frame:
      let picks = App.KL.Game.Cast.picks_of(local@user, game@casts)
      let preview = local@preview <- (local@preview@picks <- picks)
      //log("ue " | Nat.show(List.length!(Hexagonal.Axial.BBL.to_list!(local@preview@picks))))
      App.set_local!(App.KL.State.Local.game(preview))
    mouse_move:
      if String.eql("game_screen", event.id) then
        let {x,y} = event.mouse_pos
        App.set_local!(App.KL.State.Local.game(local@mouse <- {x / 2, y / 2}))
      else
        App.pass!
    key_down:
      //log("Key down " | Char.to_string(event.code))
      //log("Setting casts.")
      let coord = Hexagonal.Axial.from_screen_xy(local@mouse, App.KL.Constants.hexagon_radius, App.KL.Constants.center_x, App.KL.Constants.center_y)
      let preview = local@preview
      let preview = preview@areas <- Hexagonal.Axial.BBL.from_list!([{coord, App.KL.Game.Indicator.blue}])
      App.set_local!(App.KL.State.Local.game(local@preview <- preview))
    key_up: IO {
      //log("Key up " | Char.to_string(event.code))
      let coord = Hexagonal.Axial.from_screen_xy(local@mouse, App.KL.Constants.hexagon_radius, App.KL.Constants.center_x, App.KL.Constants.center_y)
      let preview = local@preview
      let preview = preview@areas <- Hexagonal.Axial.BBL.from_list!([])
      App.new_post!(local@room, App.KL.Game.Phase.Play.Event.cast.serial(event.code, coord))
      App.set_local!(App.KL.State.Local.game(local@preview <- preview))
    }
  } default App.pass!

