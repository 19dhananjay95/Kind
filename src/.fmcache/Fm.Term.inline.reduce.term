#term #defs (((((((((((((((((term #term Fm.Term) #term.name #term.indx term) #term.name !inli = ((Set.has (Fm.Name.to_bits term.name)) Fm.Term.inline.names); (((inli # Fm.Term) ((((((Fm.get Fm.Def) term.name) defs) #got Fm.Term) (Fm.Term.ref term.name)) #got.value ((got.value #got.value Fm.Term) #got.value.file #got.value.code #got.value.orig #got.value.name #got.value.term #got.value.type #got.value.isct #got.value.stat ((Fm.Term.inline.reduce got.value.term) defs)))) term)) term) #term.eras #term.self #term.name #term.xtyp #term.body term) #term.name #term.body term) #term.func #term.argm !func = ((Fm.Term.inline.reduce term.func) defs); (((((((((((((((((func #func Fm.Term) #func.name #func.indx term) #func.name term) term) #func.eras #func.self #func.name #func.xtyp #func.body term) #func.name #func.body ((Fm.Term.inline.reduce (func.body term.argm)) defs)) #func.func #func.argm term) #func.name #func.expr #func.body (((Fm.Term.let func.name) func.expr) #x ((Fm.Term.inline.reduce ((Fm.Term.app (func.body x)) term.argm)) defs))) #func.name #func.expr #func.body term) #func.done #func.term #func.type term) #func.name #func.dref #func.verb term) #func.path term) #func.natx term) #func.chrx term) #func.strx term) #func.path #func.expr #func.name #func.with #func.cses #func.moti term) #func.orig #func.expr term)) #term.name #term.expr #term.body term) #term.name #term.expr #term.body term) #term.done #term.term #term.type term) #term.name #term.dref #term.verb term) #term.path term) #term.natx term) #term.chrx term) #term.strx term) #term.path #term.expr #term.name #term.with #term.cses #term.moti term) #term.orig #term.expr ((Fm.Term.inline.reduce term.expr) defs))