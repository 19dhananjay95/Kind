// The 'Arena' board
App.KL.Game.Board.arena: App.KL.Game.Board
  board_size = App.KL.Constants.board_size
  
  board  = App.KL.Game.Map.new<App.KL.Game.Tile>
  
  width  = (board_size * 2) + 1
  width  = I32.to_u32(width)
  
  height = (board_size * 2) + 1
  height = I32.to_u32(height)
  // TODO: Define this elsewhere?
  // Defines all possible images inside a tile
  // terrain_img = App.KL.Game.Resources.terrains

  new_terrain = App.KL.Game.Terrain.new(0)
  new_terrain = App.KL.Game.Entity.terrain(new_terrain)

  //// loops through the half of the board_size
  for j : U32 from 0 to height with board:
    for i : U32 from 0 to width with board: 
      // generate int axial coordinate
      coord_i = I32.sub(U32.to_i32(i),  board_size) // i - board_size
      coord_j = I32.sub(U32.to_i32(j),  board_size) // j - board_size
      coord = App.KL.Game.Coord.new(coord_i, coord_j)
      fit = App.KL.Game.Coord.fit(coord)
      
      case fit {
        true:
          App.KL.Game.Board.push(coord, new_terrain, board)
        false:
          board
      }
    board
  board


// get tile from board
App.KL.Game.Board.get(
  coord: App.KL.Game.Coord,
  board: App.KL.Game.Board
): Maybe<App.KL.Game.Tile>
  App.KL.Game.Map.find!(coord, board)

// set tile in some coord on board
App.KL.Game.Board.set(
  coord: App.KL.Game.Coord,
  tile: App.KL.Game.Tile,
  board:App.KL.Game.Board
): App.KL.Game.Board
  App.KL.Game.Map.insert!(coord, tile, board)


// push entity to board
App.KL.Game.Board.push(
  coord : App.KL.Game.Coord,
  entity: App.KL.Game.Entity
  board : App.KL.Game.Board
): App.KL.Game.Board

  tile = App.KL.Game.Board.get(coord, board)
  case tile { 
    none: 
      case entity {
        terrain:
          new_tile = App.KL.Game.Tile.new(entity.value, none)
          App.KL.Game.Board.set(coord, new_tile, board)
      } default board
    some:
      open tile.value as tile
      case entity {
        terrain:
          background_tile = tile.value@background <- entity.value
          App.KL.Game.Board.set(coord, background_tile, board)
        creature:
          creature_tile = tile.value@creature <- some(entity.value)
          App.KL.Game.Board.set(coord, creature_tile, board)
        animation :
          animation_tile = tile.value@animation <- some(entity.value)
          App.KL.Game.Board.set(coord, animation_tile, board)
      }
    }