Test<A: Type, B: Type>(
  f: A -> B,
  Hyp: (
    C: Type
    g: B -> C
    h: B -> C
    a: A
    HHyp: g(f(a)) == h(f(a))
    b: B
  ) -> g(b) == h(b)
  target: B
): [a: A] f(a) == target
  let g = ((b) true) :: B -> Bool
  let h = ((b) Decidable([a: A] f(a) == b)) :: B -> Bool
  let hmm = Hyp(Type, g, h)
  ?test
