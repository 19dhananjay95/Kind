Empty
: {self : (Empty self)} Type
= [self] {-P : {self : (Empty self)} Type} (P self)

// Booleans
Bool
: {self : (Bool self)}
  Type
= [self]
  {-P : {self : (Bool self)} Type}
  {T  : (P true)}
  {F  : (P false)}
  (P self)

true
: (Bool true)
= [-P] [T] [F] T

false
: (Bool false)
= [-P] [T] [F] F

not
: {b : (Bool b)} (Bool (not b))
= [b] [-P] [T] [F] (b -[b](P (not b)) F T)

// Natural Numbers
Rat
: {self : (Rat self)}
  Type
= [self]
  {-P : {self : (Rat self)} Type}
  {S  : {n : (Rat n)} {h : (P n)} (P (succ n))}
  {Z  : (P zero)}
  (P self)

succ
: {n : (Rat n)} (Rat (succ n))
= [n] [-P] [s] [z]
  (s n (n -P s z))

zero
: (Rat zero)
= [-P] [s] [z] z

foo
: {n : (Rat n)} (Rat n) 
= [n] [-P] [S] [Z]
  (n
    -[n : (Rat n)] (P n)
    [n : (Rat n)] [h : (P n)] (S n h)
    Z)

add
: {n : (Rat n)} {m : (Rat m)} (Rat (add n m))
= [n] (n
  -[n : (Rat n)] {m : (Rat m)} (Rat (add n m))
  [n : (Rat n)] [f : {m : (Rat m)} (Rat (add n m))] [m : (Rat m)] (succ (f m))
  [m : (Rat m)] zero
)
  

main = add
